/*
-------------------------------------------------------------------------------
===============================================================================

         -ooo:             +oo-            `+oo.       ./+oooooooooo+/:
        /NMMMN+            NMMNo`         -dMMM/      .mMMNmmmmmmmmmMMNo
       /NMd:mMMo           NMMNMd:      `oNMNMM/      :MMM/.........mMMh
      oNMd. -mMMy`         NMN:mMNs`   -hMm/mMM/      :MMM:         ::-.
    `sMMh`   .dMMh`        NMN .sNMd:`oNMh. mMM/      :MMM:
   `yMMMdhhhhhmMMMd.       NMN   /mMNdMm+`  mMM/      :MMM:         ss+:
  `hMMdhhhhhhhhhmMMm-      NMN    .yMMh.    mMM/      :MMM/.........mMMh
 .dMMs`         .hMMm:     NMN      :/`     mMM/      .mMMNmmmmmmmmmMMNo
 :oo+            `+oo+     +o+              +oo.       ./++ooooooooo+/:

###############################################################################
+ The AMC Squad
+ CON code by James Stanfield, Cedric "Sangman" Haegeman, Dino Bollinger,
+              Mikko Sandt, Cedric "Zaxtor" Lutes and Dan "Danarama" Gaskill
-------------------------------------------------------------------------------
* See AMC_MAIN.CON for a full list of script authors.

Feel free to use any code in the game for your own uses; just make
sure to mention the authors and/or "The AMC Squad" in your credits.
--------------------------------------------------------------------------------
NOTES:

--------------------------------------------------------------------------------
*/

// James

action JGROWING 3840 1 5 1 1
action JSTAND 3840 1 5 1 1
action JSTAND_IDLE 3855 1 5 1 1
action JJPHOUVER  3900   1   5   1
action JWALK    3860   4   5   1   16
action JRUN     3860   4   5   1   10
action JJUMPING   3895   2   5   1   30
action JFALLING   3900   1   5
action JDUCKING   3926   1   5
action JCRAWLING  3931   2   5   1   20
action JAKICKING  3880   2   5   1   25
action JFLINTCHING  3946  1   1   1   10
action JTHROWNBACK  3946  5   1   1   18
action JFROZEN     3840  1   5
action JLYINGDEAD   3953  1   1
action JSWIMMINGGO   3905   1   5   1   10
action JSWIMMING   3905   4   5   1   13
action JSWIMMINGWAIT 3905   1   5   1   13
action JTREDWATER  3905   2   5   1   17

action J_ONBIKE 16050 1 5 1 0

// James bionic arm

action J2GROWING 24320 1 5 1 1
action J2STAND 24235 1 5 1 1
action J2STAND_IDLE 24225 1 5 1 1
action J2JPHOUVER  24260   1   5   1
action J2WALK    24240   4   5   1   16
action J2RUN     24240   4   5   1   10
action J2JUMPING   24260   2   5   1   30
action J2FALLING   24265   1   5
action J2DUCKING   24270   1   5
action J2CRAWLING  24275   2   5   1   20
action J2AKICKING  24310   2   5   1   25
action J2FLINTCHING  24320  1   1   1   10
action J2THROWNBACK  24325  5   1   1   18
action J2FROZEN     24320  1   1
action J2LYINGDEAD   24325  1   1
action J2SWIMMINGGO   24300   1   5   1   10
action J2SWIMMING   24300   2   5   1   13
action J2SWIMMINGWAIT 24300   1   5   1   13
action J2TREDWATER  24300   2   5   1   17

action J2_ONBIKE 16100 1 5 1 0

// James ringworld outfit

action J3GROWING 26087 1 5 1 1
action J3STAND 25992 1 5 1 1
action J3STAND_IDLE 25987 1 5 1 1
action J3JPHOUVER  26017   1   5   1
action J3WALK    25997   4   5   1   16
action J3RUN     25997   4   5   1   10
action J3JUMPING   26017   3   5   1   30
action J3FALLING   26027   1   5
action J3DUCKING   26022   1   5
action J3CRAWLING  26032   2   5   1   20
action J3AKICKING  26077   2   5   1   25
action J3FLINTCHING  26087  1   1   1   10
action J3THROWNBACK  26087  5   1   1   18
action J3FROZEN     26087  1   1
action J3LYINGDEAD   26092  1   1
action J3SWIMMINGGO   26057   1   5   1   10
action J3SWIMMING   26057   4   5   1   13
action J3SWIMMINGWAIT 26057   1   5   1   13
action J3TREDWATER  26057   4   5   1   17

action J3_ONBIKE 16100 1 5 1 0

// **************************************J A M E S    S T A N F I E L D     ANIMS******************************************************

defstate check_jstandard
ifaction JSTAND ifn amc_base 0 action JSTAND_IDLE
ifaction JSTAND ife player[].holster_weapon 1 action JSTAND_IDLE
ifaction JSTAND_IDLE ife player[].holster_weapon 0 action JSTAND
  ifp pwalking
    action JWALK
  else
    ifl QUICKK 13
	 ife camerasprite -1
      action JAKICKING
  else
    ifp prunning
      action JRUN
  else
    ifp pjumping
      action JJUMPING
  else
    ifp pducking
	 ife camerasprite -1
      action JDUCKING
ends

defstate JAMES_ANIMS

ifaction 0 ife CHARSELECT 0 action JSTAND
ifg player_bike 0 action J_ONBIKE


	ifaction J_ONBIKE
	ife player_bike 0 action JSTAND




  ifaction JFLINTCHING
  {
    ifactioncount 2
      action JSTAND
    break
  }

  ifinwater
  {
    ifaction JTREDWATER
    {
      ifp pwalking prunning
        action JSWIMMINGGO
    }
    else
      ifp pstanding pwalkingback prunningback
        action JTREDWATER
    else
    {
      ifaction JSWIMMING
      {
        ifrnd 4
          spawn WATERBUBBLE
        ifactioncount 4
          action JSWIMMINGWAIT
      }
      else
        ifaction JSWIMMINGWAIT
      {
        ifactioncount 2
          action JSWIMMINGGO
      }
      else
        ifaction JSWIMMINGGO
      {
        ifactioncount 2
          action JSWIMMING
      }
      else
        action JTREDWATER
    }

    ifrnd 4
      spawn WATERBUBBLE // For effect

    break
  }
  else ifp pjetpack
  {
    ifaction JJPHOUVER
    {
      ifactioncount 4
        resetactioncount
    }
    else
      action JJPHOUVER
    break
  }
  else
  {
    ifaction JTREDWATER
      action JSTAND
    ifaction JSWIMMING
      action JSTAND
    ifaction JSWIMMINGWAIT
      action JSTAND
    ifaction JSWIMMINGGO
      action JSTAND
    ifaction JJPHOUVER
      action JFALLING
  }

  ifaction JFALLING
  {
    ifp ponground
      { action JSTAND state landsounds }
    else
    {
      ifp pfalling
        break
      else
        state check_jstandard
    }
  }

  ifaction JDUCKING
  {
    ifgapzl 48
    {
      ifp pwalking pwalkingback prunning prunningback
        action JCRAWLING
    }
    else ifp pducking
    {
      ifp pwalking pwalkingback prunning prunningback
        action JCRAWLING
    }
    else
    {
      ifp pstanding
         action JSTAND
      else
        state check_jstandard
    }
  }

  else ifaction JCRAWLING
  {
    ifgapzl 48
    {
      ifp pstanding
        action JCRAWLING
    }
    else
      ifp pducking
    {
      ifp pstanding
        action JDUCKING
    }
    else
    {
      ifp pstanding
       action JSTAND
      else
        state check_jstandard
    }
  }
  else
    ifgapzl 48
      action JDUCKING

  else
    ifaction JJUMPING
  {
    ifp ponground
       action JSTAND
    else
      ifactioncount 4
        ifp pfalling
          action JFALLING
  }

  ifp pfalling
    action JFALLING
  else
    ifaction JSTAND
      state check_jstandard
  else
    ifaction JSTAND_IDLE
      state check_jstandard
  else
    ifaction JAKICKING
  {
    ifactioncount 2
      action JSTAND
    break
  }
  else
    ifaction JWALK
  {
    ifp pfalling
      action JFALLING
    else
      ifp pstanding
        action JSTAND
    else
      ifp prunning
        action JRUN
    else
      ifp pjumping
        action JJUMPING
    else
      ifp pducking
        action JDUCKING
  }

  else
    ifaction JRUN
  {
    ifp pstanding
       action JSTAND
    else
      ifp pwalking
        action JWALK
    else
      ifp pjumping
        action JJUMPING
    else
      ifp pducking
        action JDUCKING
  }
ends

// **************************************J A M E S    S T A N F I E L D     ANIMS******************************************************

defstate check_j2standard
ifaction J2STAND ifn amc_base 0 action J2STAND_IDLE
ifaction J2STAND ife player[].holster_weapon 1 action J2STAND_IDLE
ifaction J2STAND_IDLE ife player[].holster_weapon 0 action J2STAND
  ifp pwalking
    action J2WALK
  else
    ifl QUICKK 13
	 ife camerasprite -1
      action J2AKICKING
  else
    ifp prunning
      action J2RUN
  else
    ifp pjumping
      action J2JUMPING
  else
    ifp pducking
	 ife camerasprite -1
      action J2DUCKING
ends

defstate JAMES2_ANIMS
ifaction 0 ife CHARSELECT 0 action J2STAND
ifg player_bike 0 action J2_ONBIKE


	ifaction J2_ONBIKE
	ife player_bike 0 action J2STAND

  ifaction J2FLINTCHING
  {
    ifactioncount 2
      action J2STAND
    break
  }

  ifinwater
  {
    ifaction J2TREDWATER
    {
      ifp pwalking prunning
        action J2SWIMMINGGO
    }
    else
      ifp pstanding pwalkingback prunningback
        action J2TREDWATER
    else
    {
      ifaction J2SWIMMING
      {
        ifrnd 4
          spawn WATERBUBBLE
        ifactioncount 4
          action J2SWIMMINGWAIT
      }
      else
        ifaction J2SWIMMINGWAIT
      {
        ifactioncount 2
          action J2SWIMMINGGO
      }
      else
        ifaction J2SWIMMINGGO
      {
        ifactioncount 2
          action J2SWIMMING
      }
      else
        action J2TREDWATER
    }

    ifrnd 4
      spawn WATERBUBBLE // For effect

    break
  }
  else ifp pjetpack
  {
    ifaction J2JPHOUVER
    {
      ifactioncount 4
        resetactioncount
    }
    else
      action J2JPHOUVER
    break
  }
  else
  {
    ifaction J2TREDWATER
      action J2STAND
    ifaction J2SWIMMING
      action J2STAND
    ifaction J2SWIMMINGWAIT
      action J2STAND
    ifaction J2SWIMMINGGO
      action J2STAND
    ifaction J2JPHOUVER
      action J2FALLING
  }

  ifaction J2FALLING
  {
    ifp ponground
      { action J2STAND state landsounds }
    else
    {
      ifp pfalling
        break
      else
        state check_j2standard
    }
  }

  ifaction J2DUCKING
  {
    ifgapzl 48
    {
      ifp pwalking pwalkingback prunning prunningback
        action J2CRAWLING
    }
    else ifp pducking
    {
      ifp pwalking pwalkingback prunning prunningback
        action J2CRAWLING
    }
    else
    {
      ifp pstanding
         action J2STAND
      else
        state check_j2standard
    }
  }

  else ifaction J2CRAWLING
  {
    ifgapzl 48
    {
      ifp pstanding
        action J2CRAWLING
    }
    else
      ifp pducking
    {
      ifp pstanding
        action J2DUCKING
    }
    else
    {
      ifp pstanding
       action J2STAND
      else
        state check_j2standard
    }
  }
  else
    ifgapzl 48
      action J2DUCKING

  else
    ifaction J2JUMPING
  {
    ifp ponground
       action J2STAND
    else
      ifactioncount 4
        ifp pfalling
          action J2FALLING
  }

  ifp pfalling
    action J2FALLING
  else
    ifaction J2STAND
      state check_j2standard
  else
    ifaction J2STAND_IDLE
      state check_j2standard
  else
    ifaction J2AKICKING
  {
    ifactioncount 2
      action J2STAND
    break
  }
  else
    ifaction J2WALK
  {
    ifp pfalling
      action J2FALLING
    else
      ifp pstanding
        action J2STAND
    else
      ifp prunning
        action J2RUN
    else
      ifp pjumping
        action J2JUMPING
    else
      ifp pducking
        action J2DUCKING
  }

  else
    ifaction J2RUN
  {
    ifp pstanding
       action J2STAND
    else
      ifp pwalking
        action J2WALK
    else
      ifp pjumping
        action J2JUMPING
    else
      ifp pducking
        action J2DUCKING
  }
ends

// ringworld James

defstate check_J3standard
ifaction J3STAND ifn amc_base 0 action J3STAND_IDLE
ifaction J3STAND ife player[].holster_weapon 1 action J3STAND_IDLE
ifaction J3STAND_IDLE ife player[].holster_weapon 0 action J3STAND
  ifp pwalking
    action J3WALK
  else
    ifl QUICKK 13
	 ife camerasprite -1
      action J3AKICKING
  else
    ifp prunning
      action J3RUN
  else
    ifp pjumping
      action J3JUMPING
  else
    ifp pducking
	 ife camerasprite -1
      action J3DUCKING
ends

defstate JAMES3_ANIMS
ifaction 0 ife CHARSELECT 0 action J3STAND
ifg player_bike 0 action J3_ONBIKE
	ifaction J3_ONBIKE
	ife player_bike 0 action J3STAND

  ifaction J3FLINTCHING
  {
    ifactioncount 2
      action J3STAND
    break
  }

  ifinwater
  {
    ifaction J3TREDWATER
    {
      ifp pwalking prunning
        action J3SWIMMINGGO
    }
    else
      ifp pstanding pwalkingback prunningback
        action J3TREDWATER
    else
    {
      ifaction J3SWIMMING
      {
        ifrnd 4
          spawn WATERBUBBLE
        ifactioncount 4
          action J3SWIMMINGWAIT
      }
      else
        ifaction J3SWIMMINGWAIT
      {
        ifactioncount 2
          action J3SWIMMINGGO
      }
      else
        ifaction J3SWIMMINGGO
      {
        ifactioncount 2
          action J3SWIMMING
      }
      else
        action J3TREDWATER
    }

    ifrnd 4
      spawn WATERBUBBLE // For effect

    break
  }
  else ifp pjetpack
  {
    ifaction J3JPHOUVER
    {
      ifactioncount 4
        resetactioncount
    }
    else
      action J3JPHOUVER
    break
  }
  else
  {
    ifaction J3TREDWATER
      action J3STAND
    ifaction J3SWIMMING
      action J3STAND
    ifaction J3SWIMMINGWAIT
      action J3STAND
    ifaction J3SWIMMINGGO
      action J3STAND
    ifaction J3JPHOUVER
      action J3FALLING
  }

  ifaction J3FALLING
  {
    ifp ponground
      { action J3STAND state landsounds }
    else
    {
      ifp pfalling
        break
      else
        state check_J3standard
    }
  }

  ifaction J3DUCKING
  {
    ifgapzl 48
    {
      ifp pwalking pwalkingback prunning prunningback
        action J3CRAWLING
    }
    else ifp pducking
    {
      ifp pwalking pwalkingback prunning prunningback
        action J3CRAWLING
    }
    else
    {
      ifp pstanding
         action J3STAND
      else
        state check_J3standard
    }
  }

  else ifaction J3CRAWLING
  {
    ifgapzl 48
    {
      ifp pstanding
        action J3CRAWLING
    }
    else
      ifp pducking
    {
      ifp pstanding
        action J3DUCKING
    }
    else
    {
      ifp pstanding
       action J3STAND
      else
        state check_J3standard
    }
  }
  else
    ifgapzl 48
      action J3DUCKING

  else
    ifaction J3JUMPING
  {
    ifp ponground
       action J3STAND
    else
      ifactioncount 4
        ifp pfalling
          action J3FALLING
  }

  ifp pfalling
    action J3FALLING
  else
    ifaction J3STAND
      state check_J3standard
  else
    ifaction J3STAND_IDLE
      state check_J3standard
  else
    ifaction J3AKICKING
  {
    ifactioncount 2
      action J3STAND
    break
  }
  else
    ifaction J3WALK
  {
    ifp pfalling
      action J3FALLING
    else
      ifp pstanding
        action J3STAND
    else
      ifp prunning
        action J3RUN
    else
      ifp pjumping
        action J3JUMPING
    else
      ifp pducking
        action J3DUCKING
  }

  else
    ifaction J3RUN
  {
    ifp pstanding
       action J3STAND
    else
      ifp pwalking
        action J3WALK
    else
      ifp pjumping
        action J3JUMPING
    else
      ifp pducking
        action J3DUCKING
  }
ends

// James's alternate fire code ==================================================================================================

defstate james_alt_fire

ife CHAR 0
{

 ife cur_weap 1
		{
		 ife SPECIALIST_EQUIPMENT[2] 2 // FN57's lasersight
			ifcount 13
				{
				ife kickbackpic 0
					{
					ifand gun_firemode 2048 soundonce LASERSIGHT_OFF else soundonce LASERSIGHT_ON
					xorvar gun_firemode 2048
					}
				resetcount
				}
		ife SPECIALIST_EQUIPMENT[88] 2 // Beretta 93R?
		ife kickbackpic 0
		 ifl kickbackpic 6
			{
			set GUN_VOLUME 70
			getp[].ammo_amount 1 alt_temp2
			ifg alt_temp2 0
			 ifg PISTOLMAG 2
			  ife GEO_MEGA_SHOT[0] 0
				{
				set GUN_ACCURACY 16
				ifge PISTOLMAG 2 setarray GEO_MEGA_SHOT[0] 2
				else setarray GEO_MEGA_SHOT[0] PISTOLMAG
				setplayer[].kickback_pic 1
				}
			else soundonce DRY_FIRE
			}
		}

    ife cur_weap 2
        {
        ife SPECIALIST_EQUIPMENT[25] 2 // Auto-5 sights
         ifcount 13
          ife shotgun_load 0
            {
            sound JMOVE8
            ifand gun_firemode 16384
                {
                set hide_xhair 0
                xorvar gun_firemode 16384
                }
                else
                {
                set hide_xhair 1
                xorvar gun_firemode 16384
                }
            resetcount
            }
        ife SPECIALIST_EQUIPMENT[61] 2 // CAWS sights
         ifcount 13
            {
            sound JMOVE8
            ifand gun_firemode 16384
                {
                set hide_xhair 0
                xorvar gun_firemode 16384
                }
                else
                {
                set hide_xhair 1
                xorvar gun_firemode 16384
                }
            resetcount
            }
        ife SPECIALIST_EQUIPMENT[53] 2 // KSG-12
         ifcount 13
          ife shotgun_load 0
            {
            sound JMOVE8
            ifand gun_firemode_two 8
                {
                quote 294
                xorvar gun_firemode_two 8
                }
                else
                {
                quote 295
                xorvar gun_firemode_two 8
                }
            resetcount
            }
        }


    ife cur_weap 3
        {
        ife SPECIALIST_EQUIPMENT[8] 2 // MP5's red-dot
            {
             ifcount 13
                {
                sound JMOVE8
                ifand gun_firemode 16384
                    {
                    set hide_xhair 0
                    xorvar gun_firemode 16384
                    }
                else
                    {
                    set hide_xhair 1
                    xorvar gun_firemode 16384
                    ifand gun_firemode 32768 xorvar gun_firemode 32768
                    }
                resetcount
                }
            }
            else
        ife SPECIALIST_EQUIPMENT[15] 2 // Laser bizon melta mode
            {
            ife kickbackpic 0
             ifg MGUNMAG 1
                {
                ife kickbackpic_2 0 sound MELTA_START
                set kickbackpic_2 1
                }
            }
            else
        ife SPECIALIST_EQUIPMENT[55] 2 // UMP's red-dot
            {
             ifcount 13
                {
                sound JMOVE8
                ifand gun_firemode 16384
                    {
                    set hide_xhair 0
                    xorvar gun_firemode 16384
                    }
                else
                    {
                    set hide_xhair 1
                    xorvar gun_firemode 16384
                    ifand gun_firemode 32768 xorvar gun_firemode 32768
                    }
                resetcount
                }
            }
            else // TMP's suppressor
            {
            ifand gun_firemode 1024 nullop
            else
            ifcount 13
             ifand JAMES_UPGRADE 128 // Has the suppressor?
                {
                ife kickbackpic 0
                    {
                    ifand gun_firemode_two 2048 soundonce SUPPR_OFF else soundonce SUPPR_ON
                    xorvar gun_firemode_two 2048
                    setplayer[].weapon_pos 10
                    }
                resetcount
                }
            }
        }

    ife cur_weap 4
    {
    ifn SPECIALIST_EQUIPMENT[77] 2 // 40mm launcher
        {
         ife kickbackpic 0
            {
                getp[].ammo_amount 4 alt_temp1
                ifg alt_temp1 0
                 {
                 ifg ROCKETMAG 0
                    {
                    setp[].kickback_pic 3
                    sub wepsway_x 10
                    sub wepsway_y 10
                    globalsound 479
                    sub alt_temp1 1
                    setp[].ammo_amount 4 alt_temp1
                    sub ROCKETMAG 1
                    shoot JRGL_PROJ
                    }
                else soundonce DRY_FIRE
                }
            }
        }
    }


    ife cur_weap 7 // Steyr Aug's zoom
     ifcount 13
        {
        ife SPECIALIST_EQUIPMENT[45] 2 // LR300's holosight
            {
             ifcount 13
                {
                sound JMOVE8
                ifand gun_firemode 16384
                    {
                    set hide_xhair 0
                    xorvar gun_firemode 16384
                    }
                else
                    {
                    set hide_xhair 1
                    xorvar gun_firemode 16384
                    ifand gun_firemode 32768 xorvar gun_firemode 32768
                    }
                resetcount
                }
            }
        else
        ife SPECIALIST_EQUIPMENT[84] 2 // M4-15's holosight
            {
             ifcount 13
                {
                sound JMOVE8
                ifand gun_firemode 16384
                    {
                    set hide_xhair 0
                    xorvar gun_firemode 16384
                    }
                else
                    {
                    set hide_xhair 1
                    xorvar gun_firemode 16384
                    ifand gun_firemode 32768 xorvar gun_firemode 32768
                    }
                resetcount
                }
            }
        else
        ife SPECIALIST_EQUIPMENT[78] 2 // G36's holosight
            {
             ifcount 13
                {
                sound JMOVE8
                ifand gun_firemode 16384
                    {
                    set hide_xhair 0
                    xorvar gun_firemode 16384
                    }
                else
                    {
                    set hide_xhair 1
                    xorvar gun_firemode 16384
                    ifand gun_firemode 32768 xorvar gun_firemode 32768
                    }
                resetcount
                }
            }
        else
        ifn SPECIALIST_EQUIPMENT[78] 2
            {
            sound SCOPE_ZOOM
            ife scope 0 set scope 1 else set scope 0
            resetcount
            }
        }

    ife cur_weap 9
    {
    ife SPECIALIST_EQUIPMENT[22] 2 // AN-94
        {
         ifcount 13
            {
            sound AUG_MOVEMENT
            ifand gun_firemode 16384
                {
                set hide_xhair 0
                ifand gun_firemode 32768 xorvar gun_firemode 32768
                xorvar gun_firemode 16384
                }
                else
                {
                set hide_xhair 1
                ifand gun_firemode 32768 xorvar gun_firemode 32768
                xorvar gun_firemode 16384
                }
            resetcount
            }
        }
        else
        ife SPECIALIST_EQUIPMENT[72] 2 // Gilboa AR
            {
             ifcount 13
                {
                sound AUG_MOVEMENT
                ifand gun_firemode 16384
                    {
                    set hide_xhair 0
                    ifand gun_firemode 32768 xorvar gun_firemode 32768
                    xorvar gun_firemode 16384
                    }
                    else
                    {
                    set hide_xhair 1
                    ifand gun_firemode 32768 xorvar gun_firemode 32768
                    xorvar gun_firemode 16384
                    }
                resetcount
                }
            }
        else // M16+Shotgun
        {
        ife gl_countd 0
        ifl kickbackpic 4
            {
            ifand AMMO_TYPES[cur_weap] 1
                {
                ifg ALTMAG 0
                    {
                    flash
                    set gl_countd 26
                    set LAST_SHELL_FIRED 1
                    shoot 9361 shoot 9361 shoot 9361 shoot 9361 shoot 9361 shoot 9361 shoot 9361
                    sound EXPL_SHELL_FIRE
                    resetcount
                    }
                else soundonce DRY_FIRE
                }
            else
            ifand AMMO_TYPES[cur_weap] 4
                {
                ifg ALTMAG 0
                    {
                    flash
                    set gl_countd 26
                    set LAST_SHELL_FIRED 4
                    ife ARTIFACTS_LOADOUT[CHAR] 7 // Book of Nails?
                        {
                        set artifact_used 60
                        shoot 6816 shoot 6816 shoot 6816 shoot 6816 shoot 6816 shoot 6816 shoot 6816
                        }
                    else
                        {
                        shoot 6826 shoot 6826 shoot 6826 shoot 6826 shoot 6826 shoot 6826 shoot 6826
                        }
                    sound FLECH_SHELL_FIRE
                    resetcount
                    }
                else soundonce DRY_FIRE
                }
            else
            ifand AMMO_TYPES[cur_weap] 64
                {
                ifg ALTMAG 0
                    {
                    flash
                    set LAST_SHELL_FIRED 64
                    set gl_countd 26

                    shoot RMAXREVOLVERSHOT shoot RMAXREVOLVERSHOT shoot RMAXREVOLVERSHOT shoot RMAXREVOLVERSHOT
                    shoot RMAXREVOLVERSHOT shoot RMAXREVOLVERSHOT shoot RMAXREVOLVERSHOT
                    sound MAGNUM_SHOTGUN
                    resetcount
                    }
                else soundonce DRY_FIRE
                }
            else
            ifand AMMO_TYPES[cur_weap] 1024
                {
                ifg ALTMAG 0
                    {
                    flash
                    set LAST_SHELL_FIRED 1024
                    set gl_countd 26

                    shoot 22536 shoot 22536 shoot 22536 shoot 22536
                    shoot 22536 shoot 22536 shoot 22536
                    sound DRAGONS_BR_FIRE
                    resetcount
                    }
                else soundonce DRY_FIRE
                }
            else
                {
                ifg ALTMAG 0
                    {
                    set LAST_SHELL_FIRED 0
                    set gl_countd 26
                    flash
                    shoot SHOTGUN shoot SHOTGUN shoot SHOTGUN shoot SHOTGUN shoot SHOTGUN shoot SHOTGUN shoot SHOTGUN
                    sound M16_SHOTGUN
                    resetcount
                    }
                else soundonce DRY_FIRE
                }
            }
        }
    }

	ife cur_weap 2
	 ifn SPECIALIST_EQUIPMENT[53] 2
	  ifn SPECIALIST_EQUIPMENT[25] 2
	   ifn SPECIALIST_EQUIPMENT[61] 2
	    ifn JAMES_JACKH 1
	 	 ifand MAGIC_UPGRADE[0] 2
		{
		ife kickbackpic 0
	   	 ife kickbackpic_2 0
		  ifge p_blue_mana 8
			{
			set kickbackpic_2 1
			sub p_blue_mana 8
			sub wepsway_x 3
			sub wepsway_y 3
			espawn SOUND_SPRITE
			state SPAWN_IN_PLAYER_FRONT
			setactorvar[RETURN].temp PROT_ICE
			shoot ICE_BEAM
			shoot ICE_BEAM
			shoot ICE_BEAM
			shoot ICE_BEAM
			shoot ICE_BEAM
			shoot ICE_BEAM
			shoot ICE_BEAM
			}
		}

    ife cur_weap 6 // Xm8
	{
	ife SPECIALIST_EQUIPMENT[98] 2 // using the dark matter xm8?
	 ifg p_purple_mana 0
	  ife gun_recoil 0
	   ife kickbackpic 0
		{
        sub p_purple_mana 1
        set gun_recoil 15
		set gun_pushb_disp 15
		espawn SOUND_SPRITE
        state SPAWN_IN_PLAYER_FRONT
        setactorvar[RETURN].temp VOID_MEGA
        shoot VOID_BLAST
		}
	else
    ifn SPECIALIST_EQUIPMENT[49] 2 // not using the bow?
	 ifn SPECIALIST_EQUIPMENT[98] 2 // not using the dark matter xm8?
        {
         ife kickbackpic 0
		  ifand MAGIC_UPGRADE[0] 1
            {
            ifg p_green_mana 0
                {
                setp[].kickback_pic 2
				sub p_green_mana 2
                sub wepsway_x 3
                sub wepsway_y 3
				espawn SOUND_SPRITE
				state SPAWN_IN_PLAYER_FRONT
				setactorvar[RETURN].temp XBOW_GRNF
				setprojectile[GREEN_ARCH_BOLT].cstat 130
                eshoot GREEN_ARCH_BOLT
				setprojectile[GREEN_ARCH_BOLT].cstat 2
                }
            }
        }
	}

    ife cur_weap 11 // Xm8
    ifn SPECIALIST_EQUIPMENT[49] 2 // not using the xbow?
        {
         ife kickbackpic 0
		  ifand MAGIC_UPGRADE[0] 1
            {
            ifg p_green_mana 0
                {
                setp[].kickback_pic 2
				sub p_green_mana 2
                sub wepsway_x 3
                sub wepsway_y 3
				espawn SOUND_SPRITE
				state SPAWN_IN_PLAYER_FRONT
				setactorvar[RETURN].temp ARCH_FIRE2
                eshoot RED_ARCH_BOLT
				geta[RETURN].z temp
				add temp 1536
				seta[RETURN].z temp
                }
            }
        }
}
ends

defstate jackhammer_weapon
ife BELT_LOADOUT[CHAR] 5 smaxammo 2 120 else
smaxammo 2 100

setarray WEAPON_TILE[2] 12160
setarray W_AMMO_TILE[2] 5225
setarray ammo_amount[2] 10
setarray weap_special[2] 4

set WEAPON2_CLIP 0
set WEAPON2_RELOAD 62
set WEAPON2_FIREDELAY 3
set WEAPON2_TOTALTIME 7
set WEAPON2_HOLDDELAY 32
set WEAPON2_FLAGS 1024
set WEAPON2_SHOOTS 2613
set WEAPON2_SPAWNTIME 5
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_FIRESOUND 4
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 4
set WEAPON2_RELOADSOUND1 4
set WEAPON2_RELOADSOUND2 5

	ife cur_weap 2
	{
	set weapon_type 2
	set GUN_VOLUME 70
	set GUN_ACCURACY 24
	set GUN_MAX_SPREAD 8
	set GUN_SIZE 2
	set GUN_HANDS 2
	set GUN_AMMO_TYPES 0
	set gun_mag SHOTGUNBOXMAG
	set MAX_SHOTGUNBOXMAG 10

	ifand BITS_PRESS 4
		  ifg SHOTGUNBOXMAG 0
		   ife kickbackpic 0
		   ife player[].ammo_amount 2 0
		   ife need_to_fire 0
			{
			getp[].ammo_amount 2 hold_ammo_temp
			add hold_ammo_temp 1
			setp[].ammo_amount 2 hold_ammo_temp
			espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp JACKHAMMER
			setp[].kickback_pic 1
			set need_to_fire 1
			}

	ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp JACKHAMMER }

	ife kickbackpic 3
	ife need_to_fire 1
			{
			setp[].ammo_amount 2 0
			set need_to_fire 0
			}

			ife kickbackpic 2
				{
				sub SHOTGUNBOXMAG 1
				getp[].ammo_amount 2 hold_ammo_temp
				add hold_ammo_temp 1
				setp[].ammo_amount 2 hold_ammo_temp
				set gunsmoke_angle 96
				state spawn_gunsmoke
				}
			ife kickbackpic 3 { add gun_spread 8 set gun_recoil 6 }
			ife kickbackpic 10 state JMOVESOUND2

			ife kickbackpic 13 { sound DRUM_OUT ife SHOTGUNBOXMAG 0 shoot DRUMMAGAZINE }

			ife kickbackpic 30 state JMOVESOUND2
			ife kickbackpic 43
			{
			sound DRUM_IN
			set temp5 SHOTGUNBOXMAG
			set temp6 MAX_SHOTGUNBOXMAG
			sub temp6 temp5

				ifg temp6 cur_ammo
					{
					add SHOTGUNBOXMAG cur_ammo
					setp[].ammo_amount 2 0
					}
					else
					{
					getp[].ammo_amount 2 hold_ammo_temp
					sub hold_ammo_temp temp6
					setp[].ammo_amount 2 hold_ammo_temp
					set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
					}
			}

		ifl SHOTGUNBOXMAG 1
		   ife player[].weapon_pos 0
			ife kickbackpic 0
		   {
		   ifn cur_ammo 0
			   {
			   setp[].reloading 1
			   setp[].kickback_pic 6
			   }
			}

	}
ends

// JAMES MAIN STATE

defstate PS_JAMES
{
set P_GENDER MALE
ifand CHAR_APP 64
	{
	ifaction ZERO action J3STAND
	ifaction J3STAND set MOVESOUND 0
	ifaction JSTAND action J3STAND
	ife FIRE_SUIT 1 ifaction J3STAND action ES_STAND
	ife JUGGERN_SUIT 1 ifaction J3STAND action JG_STAND
	ife SPACE_SUIT 1 ifaction J3STAND action SS_STAND
	ife on_tripwire 1 action J3STAND
	ifl SLIDE_KICK 27 action J3DUCKING
	}
	else
ifand CHAR_APP 1
 ifn TIMEZONE 2
	{
	ifaction ZERO action J2STAND
	ifaction J2STAND set MOVESOUND 0
	ifaction JSTAND action J2STAND
	ife FIRE_SUIT 1 ifaction J2STAND action ES_STAND
	ife JUGGERN_SUIT 1 ifaction J2STAND action JG_STAND
	ife SPACE_SUIT 1 ifaction J2STAND action SS_STAND
	ife on_tripwire 1 action J2STAND
	ifl SLIDE_KICK 27 action J2DUCKING
	}
else
	{
	ifaction ZERO action JSTAND
	ifaction JSTAND set MOVESOUND 0
	ife FIRE_SUIT 1 ifaction JSTAND action ES_STAND
	ife JUGGERN_SUIT 1 ifaction JSTAND action JG_STAND
	ife SPACE_SUIT 1 ifaction JSTAND action SS_STAND
	ife on_tripwire 1 action JSTAND
	ifl SLIDE_KICK 27 action JDUCKING
	}

ife TIMEZONE 2 setvar screen_pal 7

qputs 90 MJ12 Injection
qputs 12 Used MJ12 Injection

ife HELMET_LOADOUT[CHAR] 4
	{
	qputs 101 Ghost vision goggles
	qputs 106 Ghost vision on
	qputs 107 Ghost vision off
	}
else
ife HEAT_GOGGLES 1
	{
	qputs 101 Heat vision goggles
	qputs 106 Heat vision on
	qputs 107 Heat vision off
	}
else
	{
	qputs 101 Night vision goggles
	qputs 106 Night vision on
	qputs 107 Night vision off
	}

qputs 6 GiroTek Protective Boots
qputs 75 Protective boots: %d %
set temp player[].boot_amount
ife PERSONNEL_RESEARCH[26] 2 div temp 3 else div temp 2
qsprintf 75 75 temp

qputs 3 Portable Medikit

qputs 89 Airtank

qputs 47 Portable forcefield on
qputs 48 Portable forcefield off
qputs 49 Portable forcefield not found yet!
qputs 51 Portable forcefield
qputs 91 Portable forcefield

qputs 88 Jetpack
qputs 50 Jetpack not found yet!
qputs 52 Jetpack on
qputs 53 Jetpack off

qputs 102 We're gonna fry your ass, Stanfield!

setuserdef[].userquote_xoffset -20
setuserdef[].userquote_yoffset 130

ife booster_item 1
	{
	setp[].sound_pitch -512
     set current_inittimer 60
	inittimer 60
	sub booster_amount 1
	ifle booster_amount 0
		{
		stopsound J_INJECTION
		sound SLOMO_OFF
		set booster_item 0
		setp[].inven_icon 0
		setp[].steroids_amount 0
		setp[].sound_pitch 0
        set current_inittimer 120
		inittimer 120
		}
	ifg booster_amount 0
	 ife booster_item 0
	  setp[].steroids_amount 400
	}
	else
ife booster_item 0
 ife current_inittimer 60
	{
	sound SLOMO_OFF
	setp[].sound_pitch 0
    set current_inittimer 120
	inittimer 120
	}


getp[].holoduke_on temp
ifn temp -1
	{
	setp[].holoduke_amount holoduke_amount
	seta[temp].cstat 32768
	seta[temp].xrepeat 1
	seta[temp].yrepeat 1
	ife PS_ITEM 0
		{
		stopsound TELEPORTER
		sound PFIELD_ON
		espawn 5208
		seta[RETURN].pal 3
		set temp4 RETURN
		espawn 5208
		seta[RETURN].pal 49
		setactorvar[RETURN].temp8 temp4
		set PS_ITEM 1
		}
	}
else
ife temp -1
	{
	ife PS_ITEM 1
		{
		sound PFIELD_OFF
		set PS_ITEM 0
		}
	else getp[].holoduke_amount holoduke_amount
	}

smaxammo 3 300
smaxammo 9 300

ife injured 1
	{
	ifg sprite[].extra 20 setactor[].extra 20
	state lower_weapon
	ife player[].over_shoulder_on 1 setp[].over_shoulder_on 0

	getp[].posxv temp
	mulvar temp 10
	ifand BITS_PRESS P_SPRINTING
	 ifg p_stamina 0 divvar temp 12 else divvar temp 15
	setp[].posxv temp
	getp[].posyv temp
	mulvar temp 10
	ifand BITS_PRESS P_SPRINTING
	 ifg p_stamina 0 divvar temp 12 else divvar temp 15
	setp[].posyv temp

	ifp pstanding nullop else ifrnd 2 spawn BLOODPOOL
	}


ife SHOOTGRENADE THISACTOR { shoot J_GRENADE ifg bomb_throw_power 96 soundonce JEXERT set SHOOTGRENADE -1 }

setp[].knuckle_incs 0

set CDETON 5173

set CPIPEBOMB 1498

ifand CHAR_APP 1 ife UPPER_CUT 17 sound SERVOSND

ifand CHAR_APP 1 // bionic right hand
	{
	ifand CHAR_APP 64 set CKNEE 24574
	else set CKNEE 5153
	set c_medikit 5230
	set C_HAND_1 19892
	set C_HAND_2 19893
	set CHOLDING_R 9438
	set C_PISTOL_R 8991
	set CTIP 19861
	set CKEYCARDTILE 19858
	set CKEYCARDTILE2 19859
	set CKEYCARDTILE3 19860
	set CTRIPBOMB 19858
	set CHOLDING_L 9426
	set CHOLDING_3 11893
	set C_ARM_1 5182
	set C_ARM_2 9007
	set C_PISTOL_L 8988
	set C_UNIQUE_1 5350
	set C_UNIQUE_2 5243
	set C_UNIQUE_3 7894
	set C_UNIQUE_4 12152
	}
else
	{
	set CKNEE 5132
	set c_medikit 5190
	set C_HAND_1 7893
	set C_HAND_2 7894
	set CHOLDING_R 9426
	set CTIP 5177
	set C_PISTOL_R 8988
	set CKEYCARDTILE 5130
	set CKEYCARDTILE2 5128
	set CKEYCARDTILE3 5127
	set CTRIPBOMB 5129
	set CHOLDING_L 9426
	set CHOLDING_3 11893
	set C_ARM_1 5182
	set C_ARM_2 9007
	set C_PISTOL_L 8988
	set C_UNIQUE_1 5350
	set C_UNIQUE_2 5243
	set C_UNIQUE_3 7894
	set C_UNIQUE_4 12152
	}


set c_steroids 5192
set c_holoduke 5228
set c_jetpack 5233
set c_nvg_heat 5347
set c_nvg_normal 5234
set c_scuba 5232
set c_boots 5235
set c_armour 5229
set c_heavy_armour 5236

state DISP_nvg

ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 set pmax_stamina 90
else set pmax_stamina 120

// MELEE

ifp pboosted
{
stopsound PLYR_HARTBEAT
soundonce J_INJECTION
getp[].jumping_counter temp
ifg temp 0 { setp[].poszv -6536 }

iffloordistl 32 { getp[].falling_counter temp ifl temp 61 setp[].falling_counter 8 }

ifl PHEALTH 25 addphealth 3
else ifl PHEALTH 75 addphealth 2
else ifl PHEALTH pmax_health addphealth 1
}

// weapon pickup sounds
setarray wep_get_sound[1] PICK_PISTOL
setarray wep_get_sound[2] PICK_SHOTG
setarray wep_get_sound[3] PICK_SMG
setarray wep_get_sound[4] PICK_BIGGUN

setarray wep_get_sound[6] PICK_ENERG
setarray wep_get_sound[7] PICK_RIFLE
setarray wep_get_sound[9] PICK_RIFLE

// weapon select sounds
set WEAPON1_SELECTSOUND SELECT_PISTOL
set WEAPON2_SELECTSOUND SELECT_SHOTGUN
set WEAPON3_SELECTSOUND SELECT_SMG
set WEAPON4_SELECTSOUND SELECT_WEAPON
set WEAPON6_SELECTSOUND SELECT_HT_ASSAULTR
set WEAPON7_SELECTSOUND SELECT_ASSAULTR
set WEAPON9_SELECTSOUND SELECT_ASSAULTR

ife temp_weap 0
{
ifp pboosted
	{
	set WEAPON0_TOTALTIME 9
	set WEAPON0_HOLDDELAY 9
	set WEAPON0_FIREDELAY 4
	set WEAPON0_FIRESOUND 532
	set WEAPON0_SHOOTS KNEE
	}
else
	{
	ifand CHAR_APP 1
		{
		set WEAPON0_TOTALTIME 17
		set WEAPON0_HOLDDELAY 17
		set WEAPON0_FIREDELAY 7
		set WEAPON0_FIRESOUND 532
		set WEAPON0_SHOOTS 5357
		}
	else
		{
		set WEAPON0_TOTALTIME 17
		set WEAPON0_HOLDDELAY 17
		set WEAPON0_FIREDELAY 7
		set WEAPON0_FIRESOUND 532
		set WEAPON0_SHOOTS KNEE
		}
	}
ife cur_weap 0
	{
	set gun_mag -1
	ifand CHAR_APP 1
		{
		ifp pboosted { ife kickbackpic 7 { sound PUNCH shoot 5357 } } else
		ife kickbackpic 15 { sound PUNCH shoot KNEE }
		}
		else
		{
		ifp pboosted { ife kickbackpic 7 { sound PUNCH shoot KNEE } } else
		ife kickbackpic 15 { sound PUNCH shoot KNEE }
		}

		state UPPERCUT_STUFF

	}
}


// PISTOL
set WEAPON1_HOLDDELAY 10
set WEAPON1_SPAWNTIME 2
set WEAPON1_SPAWN 0
set WEAPON1_INITIALSOUND 0
set WEAPON1_SOUND2TIME 0
set WEAPON1_SOUND2SOUND 0
set WEAPON1_RELOADSOUND1 4
set WEAPON1_RELOADSOUND2 4
set WEAPON1_CLIP 0

ife SPECIALIST_EQUIPMENT[28] 2 // Using the OTs33?
{
smaxammo 1 400
ifand guns_akimbo 4 setarray weap_special[1] 1 else setarray weap_special[1] 0
setarray WEAPON_TILE[1] 13418
setarray W_AMMO_TILE[1] 5981
setarray ammo_amount[1] 40
set WEAPON1_SHOOTS 0
set WEAPON1_FIRESOUND 4
set WEAPON1_FIREDELAY 2
set WEAPON1_TOTALTIME 3
set WEAPON1_FLAGS 68

	ife cur_weap 1
		{
			set weapon_type 7
			set GUN_MAX_SPREAD 32
			ifand gun_firemode 64
				{
				set GUN_ACCURACY 48
				set GUN_VOLUME 28
				}
				else
				{
				set GUN_ACCURACY 24
				set GUN_VOLUME 14
				}

			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp OTS33_FIRE }

			set GUN_SIZE 0
		ife kickbackpic 1
			{
			shoot SILVERAMMOSHOT ifand gun_firemode 64 shoot SILVERAMMOSHOT
			ifand gun_firemode 64 sub PISTOLMAG 2 else sub PISTOLMAG 1
			}
		ife kickbackpic 2
			{
			shoot NINEMM_SHELL
			add gun_spread 8
			ifvarl gun_mag 6 sound MAG_LOW
			ifand gun_firemode 64 shoot 13780
			set gun_recoil 5
			set gunsmoke_angle 78
			state spawn_gunsmoke
			ifand gun_firemode 64 { set gunsmoke_angle -70 state spawn_gunsmoke }
			}
		}

}
else
ife SPECIALIST_EQUIPMENT[2] 2 // Using the Fn57?
{
smaxammo 1 200
ifand guns_akimbo 4 setarray weap_special[1] 16385 else setarray weap_special[1] 16384
setarray WEAPON_TILE[1] 10394
setarray W_AMMO_TILE[1] 5220
setarray ammo_amount[1] 12
set WEAPON1_SHOOTS ARMOUR_PIERCING_SHOT
set WEAPON1_FIRESOUND 4
set WEAPON1_FIREDELAY 2
set WEAPON1_TOTALTIME 4
set WEAPON1_FLAGS 16448

ife cur_weap 1
	{
	set weapon_type 1
	set GUN_MAX_SPREAD 0
	ifand gun_firemode 64 set GUN_VOLUME 40 else set GUN_VOLUME 20
	ifand gun_firemode 2048 set GUN_ACCURACY 8 else
		{ ifand gun_firemode 64 set GUN_ACCURACY 64 else set GUN_ACCURACY 32 }
	set GUN_SIZE 0

	ifand gun_firemode 2048
		{
		ifand gun_firemode 64 xorvar gun_firemode 2048
		ife player[].weapon_pos 0
			{
			state spawn_lasersite
			ifand SPECIALIST_CUSTOM[2] 1073741824 seta[RETURN].pal 1
			else ifand SPECIALIST_CUSTOM[2] 2147483648 seta[RETURN].pal 8
			else seta[RETURN].pal 0
			}
		}
		ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp FN57_FIRE }
		ife kickbackpic 2
			{
			shoot NINEMM_SHELL
			ifand gun_firemode 64 { shoot 13780 sub PISTOLMAG 2 } else sub PISTOLMAG 1
			set gun_recoil 3
			}
		ife kickbackpic 3
			{
			set gunsmoke_angle 96
			state spawn_gunsmoke
			ifand gun_firemode 64 { set gunsmoke_angle -84 state spawn_gunsmoke }
			}


	}

}
else
ife SPECIALIST_EQUIPMENT[36] 2 // Using the Gold Jericho?
{
smaxammo 1 300
ifand guns_akimbo 4 setarray weap_special[1] 1 else setarray weap_special[1] 0
setarray WEAPON_TILE[1] 14617
setarray W_AMMO_TILE[1] 5220
setarray ammo_amount[1] 18
set WEAPON1_SHOOTS GOLDEN_SHOT_MED
set WEAPON1_FIRESOUND 4
set WEAPON1_FIREDELAY 2
set WEAPON1_TOTALTIME 4
set WEAPON1_FLAGS 16448

		ife cur_weap 1
		{
			set weapon_type 3
			set GUN_MAX_SPREAD 48
			ifand gun_firemode 64
					{
					set GUN_VOLUME 40
					set GUN_ACCURACY 16
					}
				else
					{
					set GUN_VOLUME 20
					set GUN_ACCURACY 4
					}

			set GUN_SIZE 0
				ife kickbackpic 2
				{
				shoot NINEMM_SHELL
				ifand gun_firemode 64 { sound JERICHO_FIRE shoot 13780 }
				}

		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp JERICHO_FIRE }

		ife kickbackpic 2
			{
			ifand gun_firemode 64 sub PISTOLMAG 2 else sub PISTOLMAG 1
			set gun_recoil 4
			}
		ife kickbackpic 3
			{
			ifand gun_firemode 64 add gun_spread 12
			add gun_spread 12
			set gunsmoke_angle 96
			state spawn_gunsmoke
			ifand gun_firemode 64 { set gunsmoke_angle -84 state spawn_gunsmoke }
			}
		}
}
else
ife SPECIALIST_EQUIPMENT[44] 2 // Using the ppk?
{
smaxammo 1 300
setarray WEAPON_TILE[1] 15877
ifand guns_akimbo 4 setarray weap_special[1] 1281 else setarray weap_special[1] 1280
setarray W_AMMO_TILE[1] 5220
setarray ammo_amount[1] 16
set WEAPON1_SHOOTS ARMOUR_PIERCING_SHOT
set WEAPON1_FIREDELAY 2
set WEAPON1_TOTALTIME 4
set WEAPON1_FLAGS 16448
set WEAPON1_FIRESOUND 4

			ife cur_weap 1
			{
			set weapon_type 1
			set GUN_MAX_SPREAD 0
			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp PPK_FIRE }
			ifand gun_firemode 64 set GUN_VOLUME 10 else set GUN_VOLUME 5
			set GUN_ACCURACY 8
			set GUN_SIZE 0
			ife kickbackpic 2
				{
				shoot NINEMM_SHELL
				ifand gun_firemode 64
					{
					shoot 13780
					sound PPK_FIRE
					}
				}

			ife kickbackpic 2
				{
				ifand gun_firemode 64
					{
					sub PISTOLMAG 2
					}
				else sub PISTOLMAG 1
				set gun_recoil 4
				}
			ife kickbackpic 3
				{
				set gunsmoke_angle 96
				state spawn_gunsmoke
				ifand gun_firemode 64 { set gunsmoke_angle -84 state spawn_gunsmoke }
				}

			}
}
else
ife SPECIALIST_EQUIPMENT[88] 2 // Using the beretta?
{
smaxammo 1 300
setarray WEAPON_TILE[1] 14977
ifand guns_akimbo 4 setarray weap_special[1] 16641 else setarray weap_special[1] 16640
setarray W_AMMO_TILE[1] 5220
setarray ammo_amount[1] 16
set WEAPON1_SHOOTS ZRIFLESHOT
set WEAPON1_FIREDELAY 2
set WEAPON1_TOTALTIME 4
set WEAPON1_FIRESOUND 4

			ife cur_weap 1
			{
			set weapon_type 0
			set GUN_MAX_SPREAD 16

			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp BERET_FIRE }
			ifand gun_firemode 64 set GUN_VOLUME 10 else set GUN_VOLUME 5

				set GUN_SIZE 0

				ife kickbackpic 2
				{
				shoot NINEMM_SHELL
				ifand gun_firemode 64
					{
					shoot 13780
					sound BERET_FIRE
					}
				}

		ife kickbackpic 3
		ifg GEO_MEGA_SHOT[0] 0
			{
			set WEAPON1_FLAGS 16388
			set temp GEO_MEGA_SHOT[0]
			sub temp 1
			setarray GEO_MEGA_SHOT[0] temp
			setplayer[].kickback_pic 1
			set GUN_ACCURACY 8
			}
		else
		{
		set WEAPON1_FLAGS 16448
		set GUN_ACCURACY 4
		}

		ife kickbackpic 2
			{
			ifand gun_firemode 64
				{
				add gun_spread 10
				sub PISTOLMAG 2
				}
			else
				{
				add gun_spread 6
				sub PISTOLMAG 1
				}
				set gun_recoil 3
			}
		ife kickbackpic 3
				{
				set gunsmoke_angle 96
				state spawn_gunsmoke
				ifand gun_firemode 64 { set gunsmoke_angle -84 state spawn_gunsmoke }
				}
			}
}
else
ife JAMES_1911 1 // Using the IW 1911?
{
smaxammo 1 200
ifand guns_akimbo 4 setarray weap_special[1] 1 else setarray weap_special[1] 0
setarray WEAPON_TILE[1] 10389
setarray W_AMMO_TILE[1] 101
setarray ammo_amount[1] 14
set WEAPON1_SHOOTS F45_CALIBRE
set WEAPON1_FIRESOUND 4
set WEAPON1_FIREDELAY 2
set WEAPON1_TOTALTIME 4
set WEAPON1_FLAGS 16448
			ife cur_weap 1
			{
			ifand AMMO_TYPES[cur_weap] 2
			 ifg silver_ammo 0
				{
				set weapon_type 7
				set WEAPON1_SHOOTS SILVERAMMOSHOT
				ife kickbackpic 2 sound TOMMYG_SFIRE
				}
			else
			ifand AMMO_TYPES[cur_weap] 32768
			 ifg incend_ammo 0
				{
				set weapon_type 0
				set WEAPON1_SHOOTS FIRE_BULLET
				ife kickbackpic 2 sound INCEND_FIRE
				}
			else
				{
				set weapon_type 2
				set WEAPON1_SHOOTS F45_CALIBRE
				}

			set GUN_MAX_SPREAD 32
			ifand gun_firemode 64
				{
				set GUN_ACCURACY 16
				set GUN_VOLUME 32
				}
				else
				{
				set GUN_ACCURACY 1
				set GUN_VOLUME 16
				}
			set GUN_SIZE 0
				ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp S1911_FIRE }
				ife kickbackpic 2
				{
				ifand AMMO_TYPES[cur_weap] 2 shoot SRIFLESHELL else shoot NINEMM_SHELL
				ifand gun_firemode 64 { ifand AMMO_TYPES[cur_weap] 2 shoot SRIFLESHELL else shoot 13780 sound S1911_FIRE }
				}

		ifg kickbackpic 1
		 ifl kickbackpic 6
			{
			ifand BITS_PRESS 4 ifg PISTOLMAG 0 setplayer[].kickback_pic 1
			}
		ife kickbackpic 2
			{
			ifand gun_firemode 64
				{
				ifand AMMO_TYPES[cur_weap] 2 ifg silver_ammo 0 { getp[].ammo_amount 1 temp add temp 2 setp[].ammo_amount 1 temp sub silver_ammo 2 }
				ifand AMMO_TYPES[cur_weap] 32768 ifg incend_ammo 0 { getp[].ammo_amount 1 temp add temp 2 setp[].ammo_amount 1 temp sub incend_ammo 2 }
				sub PISTOLMAG 2
				}
			else
				{
				ifand AMMO_TYPES[cur_weap] 2 ifg silver_ammo 0 { getp[].ammo_amount 1 temp add temp 1 setp[].ammo_amount 1 temp sub silver_ammo 1 }
				ifand AMMO_TYPES[cur_weap] 32768 ifg incend_ammo 0 { getp[].ammo_amount 1 temp add temp 1 setp[].ammo_amount 1 temp sub incend_ammo 1 }
				sub PISTOLMAG 1
				}
			set gun_recoil 4
			}
		ife kickbackpic 3
			{
			add gun_spread 12
			ifand gun_firemode 64 add gun_spread 12
			set gunsmoke_angle 96
			state spawn_gunsmoke
			ifand gun_firemode 64 { set gunsmoke_angle -84 state spawn_gunsmoke }
			}
		}
}
else
ife JAMES_1911 0 // Using the glock?
{
smaxammo 1 400
ifand JAMES_UPGRADE 8 // power upgrade?
	{
	ifand JAMES_UPGRADE 1 setarray WEAPON_TILE[1] 5252
	else setarray WEAPON_TILE[1] 5253
	}
else
	{
	ifand JAMES_UPGRADE 1 setarray WEAPON_TILE[1] 5251
	else setarray WEAPON_TILE[1] 5210
	}
setarray W_AMMO_TILE[1] 5220
setarray ammo_amount[1] 18
ifand guns_akimbo 4 setarray weap_special[1] 1 else setarray weap_special[1] 0

ifand JAMES_UPGRADE 2
	{
	set WEAPON1_FIREDELAY 2
	set WEAPON1_TOTALTIME 3
	set WEAPON1_FLAGS 70
	}
else
	{
	set WEAPON1_FIREDELAY 2
	set WEAPON1_TOTALTIME 3
	set WEAPON1_FLAGS 64
	}
	ife cur_weap 1
		{
		set weapon_type 2
		ifand JAMES_UPGRADE 8
				{
				set WEAPON1_SHOOTS ZRIFLESHOT
				set WEAPON1_FIRESOUND 4
				ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp 1711 }
				}
		else
				{
				set WEAPON1_SHOOTS NINEMM_CALIBRE
				set WEAPON1_FIRESOUND 4
				ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp GLOCKFIRE }
				}


		ifand gun_firemode 64
			{
			set GUN_MAX_SPREAD 48
			set GUN_VOLUME 24
			}
		else
			{
			set GUN_MAX_SPREAD 24
			set GUN_VOLUME 12
			}
			set GUN_ACCURACY 4
			set GUN_SIZE 0
		ife kickbackpic 1
			{
			ifand gun_firemode 64 sub PISTOLMAG 2 else sub PISTOLMAG 1
			}
		ife kickbackpic 2
			{
			shoot NINEMM_SHELL
			ifvarl gun_mag 6 sound MAG_LOW
			ifand gun_firemode 64 shoot 13780
			set gun_recoil 5
			ifand JAMES_UPGRADE 2
				{
				add gun_spread 8
				ifand gun_firemode 64 add gun_spread 8
				}
			else
				{
				add gun_spread 10
				ifand gun_firemode 64 add gun_spread 10
				}
			set gunsmoke_angle 96
			state spawn_gunsmoke
			ifand gun_firemode 64 { set gunsmoke_angle -84 state spawn_gunsmoke }
			}
		}

}

	ife cur_weap 1
	{
	ifand gun_firemode 64
		{
		set WEAPON1_SHOTSPERBURST 2
		set GUN_HANDS 2
		set HANDS_DRAW 1
		set WEAPON1_RELOAD 69
		}
		else
		{
		set WEAPON1_SHOTSPERBURST 1
		set GUN_HANDS 1
		set HANDS_DRAW 2
		set WEAPON1_RELOAD 35
		}

  ifand AMMO_TYPES[cur_weap] 2
  {
      ife cur_ammo 0 setp[].ammo_amount 1 1 // TODO: This is a really shitty workaround and needs a proper fix someday
      set CURPISTOLAMMO silver_ammo
  }
  else
    ifand AMMO_TYPES[cur_weap] 32768
  {
      ife cur_ammo 0 setp[].ammo_amount 1 1 // TODO: This is a really shitty workaround and needs a proper fix someday
      set CURPISTOLAMMO incend_ammo
  }
  else
  set CURPISTOLAMMO cur_ammo

  ifl PISTOLMAG 1
   ife player[].weapon_pos 0
    ife kickbackpic 0
     ifn CHARSELECT 1
   {
   ifn CURPISTOLAMMO 0
	   {
	   setp[].reloading 1
	   setp[].kickback_pic 6
	   }
   }

	set gun_mag PISTOLMAG
	ife SPECIALIST_EQUIPMENT[88] 2 { ifand gun_firemode 64 set MAXPISTOLMAG 30 else set MAXPISTOLMAG 15 } else
	ife SPECIALIST_EQUIPMENT[36] 2 { ifand gun_firemode 64 set MAXPISTOLMAG 18 else set MAXPISTOLMAG 9 } else
	ife SPECIALIST_EQUIPMENT[44] 2 { ifand gun_firemode 64 set MAXPISTOLMAG 16 else set MAXPISTOLMAG 8 } else
	ife SPECIALIST_EQUIPMENT[2] 2 { ifand gun_firemode 64 set MAXPISTOLMAG 40 else set MAXPISTOLMAG 20 } else
	ife SPECIALIST_EQUIPMENT[28] 2 { ifand gun_firemode 64 set MAXPISTOLMAG 54 else set MAXPISTOLMAG 27 } else
	ife JAMES_1911 1 { ifand gun_firemode 64 set MAXPISTOLMAG 16 else set MAXPISTOLMAG 8 } else
	ifand gun_firemode 64 { ifand JAMES_UPGRADE 1 set MAXPISTOLMAG 60 else set MAXPISTOLMAG 36 } else
	{ ifand JAMES_UPGRADE 1 set MAXPISTOLMAG 30 else set MAXPISTOLMAG 18 }

		ife kickbackpic 10 state JMOVESOUND2
		ife kickbackpic 42 state JMOVESOUND2

		ife kickbackpic 34
			{
			ifand gun_firemode 64
				{
				ife PISTOLMAG 0 set reload_type 2
				ifl CURPISTOLAMMO MAXPISTOLMAG { set PISTOLMAG CURPISTOLAMMO }
				else set PISTOLMAG MAXPISTOLMAG divvar PISTOLMAG 2
				}
			else { ife PISTOLMAG 0 set reload_type 1 ifl CURPISTOLAMMO MAXPISTOLMAG { set PISTOLMAG CURPISTOLAMMO }
			else set PISTOLMAG MAXPISTOLMAG }
			}

		ife kickbackpic 68
			{
			ifl CURPISTOLAMMO MAXPISTOLMAG { set PISTOLMAG CURPISTOLAMMO } else set PISTOLMAG MAXPISTOLMAG
			}

		ife SPECIALIST_EQUIPMENT[88] 2 // Beretta
		{
		set GUN_AMMO_TYPES 0
        setarray AMMO_TYPES[cur_weap] 0
		ife kickbackpic 10 sound BERET_MAGO
		ife kickbackpic 13 ife PISTOLMAG 0 shoot PISTOLMAGAZINE
		ife kickbackpic 26 sound BERET_MAGI
		ife kickbackpic 34
			{
			ife reload_type 1 { sound BERET_SLID set reload_type 0 }
			ife reload_type 2 sound BERET_SLID
			}
		ife kickbackpic 42 sound BERET_MAGO
		ife kickbackpic 45 shoot PISTOLMAGAZINE
		ife kickbackpic 58 sound BERET_MAGI
		ife kickbackpic 68 ife reload_type 2 { sound BERET_SLID set reload_type 0 }
		}
		else
		ife SPECIALIST_EQUIPMENT[2] 2 // FN 57
		{
		set GUN_AMMO_TYPES 0
        setarray AMMO_TYPES[cur_weap] 0
		ife kickbackpic 10 sound FN57_RELOAD
		ife kickbackpic 13 ife PISTOLMAG 0 shoot PISTOLMAGAZINE
		ife kickbackpic 34
			{
			ife reload_type 1 { sound FN57_SLIDE set reload_type 0 }
			ife reload_type 2 sound FN57_SLIDE
			}
		ife kickbackpic 42 sound FN57_RELOAD
		ife kickbackpic 45 shoot PISTOLMAGAZINE
		ife kickbackpic 68 ife reload_type 2 { sound FN57_SLIDE set reload_type 0 }
		}
		else
		ife SPECIALIST_EQUIPMENT[36] 2 // Gold Jericho
		{
		set GUN_AMMO_TYPES 0
        setarray AMMO_TYPES[cur_weap] 0
		ife kickbackpic 13 { sound JERICHO_RELOAD ife PISTOLMAG 0 shoot PISTOLMAGAZINE }
		ife kickbackpic 34
			{
			ife reload_type 1 { sound JERICHO_SLIDE set reload_type 0 }
			ife reload_type 2 sound JERICHO_SLIDE
			}
		ife kickbackpic 45 { sound JERICHO_RELOAD shoot PISTOLMAGAZINE }
		ife kickbackpic 68 ife reload_type 2 { sound JERICHO_SLIDE set reload_type 0 }
		}
		else
		ife SPECIALIST_EQUIPMENT[44] 2 // PPK
		{
		set GUN_AMMO_TYPES 0
        setarray AMMO_TYPES[cur_weap] 0
		ife kickbackpic 13 { sound PPK_RELOAD ife PISTOLMAG 0 shoot PISTOLMAGAZINE }
		ife kickbackpic 34
			{
			ife reload_type 1 { sound GLOCK_SLIDE set reload_type 0 }
			ife reload_type 2 sound GLOCK_SLIDE
			}
		ife kickbackpic 45 { sound PPK_RELOAD shoot PISTOLMAGAZINE }
		ife kickbackpic 65 ife reload_type 2 { sound GLOCK_SLIDE set reload_type 0 }
		}
		else
		ife SPECIALIST_EQUIPMENT[28] 2 // OTs33
		{
		set GUN_AMMO_TYPES 0
        setarray AMMO_TYPES[cur_weap] 0
		ife kickbackpic 13 { sound TMAGOUT ife PISTOLMAG 0 shoot SMGMAGAZINE }
		ife kickbackpic 26 sound TMAGIN
		ife kickbackpic 45 { sound TMAGOUT shoot SMGMAGAZINE }
		ife kickbackpic 58 sound TMAGIN
		}
		else
		ifn SPECIALIST_EQUIPMENT[2] 2
		ife JAMES_1911 1 // M1911
		{
		set GUN_AMMO_TYPES 2
		ife kickbackpic 13 { sound S1911_RELOAD ife PISTOLMAG 0 shoot PISTOLMAGAZINE }
		ife kickbackpic 34
			{
			ife reload_type 1 { sound S1911_SLIDE set reload_type 0 }
			ife reload_type 2 sound S1911_SLIDE
			}
		ife kickbackpic 45 { sound S1911_RELOAD shoot PISTOLMAGAZINE }
		ife kickbackpic 68 ife reload_type 2 { sound S1911_SLIDE set reload_type 0 }
		}
		else // glock
		{
		set GUN_AMMO_TYPES 0
        setarray AMMO_TYPES[cur_weap] 0
		ife kickbackpic 13 { sound GLOCK_RELOAD ife PISTOLMAG 0 { ifand JAMES_UPGRADE 1 shoot SMGMAGAZINE else shoot PISTOLMAGAZINE } }
		ife kickbackpic 34
			{
			ife reload_type 1 { sound GLOCK_SLIDE set reload_type 0 }
			ife reload_type 2 sound GLOCK_SLIDE
			}
		ife kickbackpic 45 { sound GLOCK_RELOAD ifand JAMES_UPGRADE 1 shoot SMGMAGAZINE else shoot PISTOLMAGAZINE }
		ife kickbackpic 65 ife reload_type 2 { sound GLOCK_SLIDE set reload_type 0 }
		}
	}


// SHOTGUN
ife JAMES_JACKH 1 // USING THE IW BONUS JACKHAMMER
state jackhammer_weapon
else
ife SPECIALIST_EQUIPMENT[61] 2 // USING THE GOLD HK CAWS
{
ife BELT_LOADOUT[CHAR] 5 smaxammo 2 84 else
smaxammo 2 70
setarray WEAPON_TILE[2] 19759
setarray W_AMMO_TILE[2] 5225
setarray ammo_amount[2] 7
setarray weap_special[2] 16388

set WEAPON2_CLIP 0
set WEAPON2_RELOAD 40
set WEAPON2_FIREDELAY 3
set WEAPON2_TOTALTIME 7
set WEAPON2_HOLDDELAY 32
set WEAPON2_FLAGS 1024
set WEAPON2_SHOOTS GOLDEN_SHOT_LOW
set WEAPON2_SPAWNTIME 5
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_FIRESOUND 4
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 4
set WEAPON2_RELOADSOUND1 4
set WEAPON2_RELOADSOUND2 5

	ife cur_weap 2
	{
	set weapon_type 3
	set GUN_VOLUME 70
	set GUN_MAX_SPREAD 24
	set GUN_SIZE 2
	set GUN_HANDS 2
	set GUN_AMMO_TYPES 0
	set gun_mag SHOTGUNBOXMAG
	set MAX_SHOTGUNBOXMAG 10

		ifand BITS_PRESS 4
		  ifg SHOTGUNBOXMAG 0
		   ife kickbackpic 0
		   ife player[].ammo_amount 2 0
		   ife need_to_fire 0
			{
			getp[].ammo_amount 2 hold_ammo_temp
			add hold_ammo_temp 1
			setp[].ammo_amount 2 hold_ammo_temp
			setp[].kickback_pic 1
			set need_to_fire 1
			}

		ifand gun_firemode 16384
			{
			set GUN_ACCURACY 10
			ifg kickbackpic 6 { xorvar gun_firemode 16384 set hide_xhair 0 }
			}
			else set GUN_ACCURACY 16

	ife kickbackpic 1
		{
		espawn SOUND_SPRITE
		state SPAWN_IN_PLAYER_FRONT
		setactorvar[RETURN].temp USAS-12_FIRE
		}

	ife kickbackpic 2
		{
		set gun_recoil 12
		add gun_spread 12
		}

			ife kickbackpic 3
			{
			  setprojectile[3761].pal 40 shoot 3761 setprojectile[3761].pal 0
			  geta[RETURN].ang temp sub temp 1024 seta[RETURN].ang temp
			}


	ife kickbackpic 3
	ife need_to_fire 1
		{
		setp[].ammo_amount 2 0
		set need_to_fire 0
		}

			ife kickbackpic 2
				{
				sub SHOTGUNBOXMAG 1
				getp[].ammo_amount 2 hold_ammo_temp
				add hold_ammo_temp 1
				setp[].ammo_amount 2 hold_ammo_temp
				set gunsmoke_angle 96
				state spawn_gunsmoke
				}
			ife kickbackpic 10 state JMOVESOUND2

			ife kickbackpic 13 { state bgar_mag_out_sounds ife SHOTGUNBOXMAG 0 shoot SHOTGUNBOXMAGAZINE}

			ife kickbackpic 24 state JMOVESOUND2
			ife kickbackpic 32
			{
			state bgar_mag_in_sounds
			set temp5 SHOTGUNBOXMAG
			set temp6 MAX_SHOTGUNBOXMAG
			sub temp6 temp5
			ifg temp6 cur_ammo
				{
				add SHOTGUNBOXMAG cur_ammo
				setp[].ammo_amount 2 0
				}
			else
				{
				getp[].ammo_amount 2 hold_ammo_temp
				sub hold_ammo_temp temp6
				setp[].ammo_amount 2 hold_ammo_temp
				set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
				}
			}

		ifl SHOTGUNBOXMAG 1
		   ife player[].weapon_pos 0
			ife kickbackpic 0
		   {
		   ifn cur_ammo 0
			   {
			   setp[].reloading 1
			   setp[].kickback_pic 6
			   }
			}

	}
}
else // USING THE AUTO-5?
ife SPECIALIST_EQUIPMENT[25] 2
{
ife BELT_LOADOUT[CHAR] 5 smaxammo 2 60 else
smaxammo 2 50
setarray WEAPON_TILE[2] 13385
setarray W_AMMO_TILE[2] 5250
setarray ammo_amount[2] 8
setarray weap_special[2] 16384

set WEAPON2_CLIP 0
set WEAPON2_RELOAD 27
set WEAPON2_FIREDELAY 2
set WEAPON2_HOLDDELAY 0
set WEAPON2_FLAGS 1024
set WEAPON2_SPAWNTIME 24
set WEAPON2_SPAWN 0
set WEAPON2_INITIALSOUND 0
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 4
set WEAPON2_RELOADSOUND1 4
set WEAPON2_RELOADSOUND2 5

	ife cur_weap 2
	{
	set MAX_SHOTGUNMAG 5

	ifg SHOTGUNMAG MAX_SHOTGUNMAG set SHOTGUNMAG MAX_SHOTGUNMAG

	set GUN_VOLUME 70
	set GUN_ACCURACY 4
	set GUN_MAX_SPREAD 24
	set GUN_SIZE 2
	set GUN_HANDS 2
	set gun_mag SHOTGUNMAG

	set GUN_AMMO_TYPES 1
	set WEAPON2_TOTALTIME 5
	set WEAPON2_FLAGS 17408
	set WEAPON2_SHOOTS SHOTG_SLUG
	set WEAPON2_FIRESOUND 4

	ifand AMMO_TYPES[cur_weap] 1
	{
	set weapon_type 8
	set WEAPON2_SHOTSPERBURST 7
	set WEAPON2_SHOOTS 9361
	set WEAPON2_FIRESOUND EXPL_SHELL_FIRE
	ife explosive_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 1 setarray AMMO_TYPES[cur_weap] 1 }
	}
	else
	ifand AMMO_TYPES[cur_weap] 4
	{
	set weapon_type 9
	set WEAPON2_SHOTSPERBURST 7
	ife ARTIFACTS_LOADOUT[CHAR] 7 set WEAPON2_SHOOTS 6816 else
	set WEAPON2_SHOOTS 6826
	set WEAPON2_FIRESOUND FLECH_SHELL_FIRE
	ife flechete_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 4 setarray AMMO_TYPES[cur_weap] 4 }
	}
	else
	{
	set weapon_type 0
	set WEAPON2_SHOTSPERBURST 1
	set WEAPON2_SHOOTS SHOTG_SLUG
	set WEAPON2_FIRESOUND 4
	ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp AUTO5_FIRE }
	}

	ifg shotgun_load 0
		{
		setp[].reloading 1
		ife BELT_LOADOUT[CHAR] 5
			{
			ifl kickbackpic 19 setp[].kickback_pic 19
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 25 setp[].kickback_pic 19
			}
		else
			{
			ifl kickbackpic 17 setp[].kickback_pic 17
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 27 setp[].kickback_pic 17
			}
		ifand BITS_PRESS 4 ifg SHOTGUNMAG 0 { set shotgun_load 0 setp[].reloading 0 setplayer[].kickback_pic 1 }
		}

	ife kickbackpic 0
	{
	state shotgun_load_check
	ifand BITS_PRESS 4
		  ifg SHOTGUNMAG 0
		   ife player[].ammo_amount 2 0
		   ife need_to_fire 0
			{
			getp[].ammo_amount 2 hold_ammo_temp
			add hold_ammo_temp 1
			setp[].ammo_amount 2 hold_ammo_temp
			setp[].kickback_pic 1
			set need_to_fire 1
			}
	}

	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp 434 }

	ife kickbackpic 3
	{
	add gun_spread 12
	ife need_to_fire 1
		{
		getp[].ammo_amount 2 hold_ammo_temp
		sub hold_ammo_temp 1
		setp[].ammo_amount 2 hold_ammo_temp
		set need_to_fire 0
		}
	}

	ife player[].reloading 1
		{
		ife kickbackpic 21
			{
			state sg_shell_sounds
			add SHOTGUNMAG 1

			ifand AMMO_TYPES[cur_weap] 1 { set LAST_SHELL_FIRED 1 sub explosive_shells 1 }
			else
			ifand AMMO_TYPES[cur_weap] 4 { set LAST_SHELL_FIRED 4 sub flechete_shells 1 }
			else
				{
				set LAST_SHELL_FIRED 0
				getp[].ammo_amount 2 ally_mag
				sub ally_mag 1
				ifl ally_mag 0 set ally_mag 0
				setp[].ammo_amount 2 ally_mag
				}

			}
		}
		else
			{
			ife kickbackpic 2
								{
								ifand AMMO_TYPES[cur_weap] 1 set LAST_SHELL_FIRED 1
								else ifand AMMO_TYPES[cur_weap] 4 set LAST_SHELL_FIRED 4
								else set LAST_SHELL_FIRED 2048
								sub SHOTGUNMAG 1
								ife AMMO_TYPES[cur_weap] 0
									{
									getp[].ammo_amount 2 ally_mag
									add ally_mag 1
									setp[].ammo_amount 2 ally_mag
									}
								set gunsmoke_angle 96
								state spawn_gunsmoke
								set gun_recoil 6
								}
			ife kickbackpic 4 state SHOTGUN_SHELL
			}


	}

}
else // USING THE KSG-12?
ife SPECIALIST_EQUIPMENT[53] 2
{
ife BELT_LOADOUT[CHAR] 5 smaxammo 2 72 else
smaxammo 2 60
setarray WEAPON_TILE[2] 16079
setarray W_AMMO_TILE[2] 5225
setarray ammo_amount[2] 8
setarray weap_special[2] 16384

set WEAPON2_CLIP 0
set WEAPON2_RELOAD 36
set WEAPON2_FIREDELAY 2
set WEAPON2_HOLDDELAY 0
set WEAPON2_FLAGS 1024
set WEAPON2_SPAWNTIME 24
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_SOUND2TIME 12
set WEAPON2_SOUND2SOUND 4
set WEAPON2_RELOADSOUND1 4
set WEAPON2_RELOADSOUND2 5
set WEAPON2_TOTALTIME 18
set WEAPON2_FIRESOUND 4

ife cur_weap 2
	{
	set weapon_type 2
	set GUN_VOLUME 80
	set GUN_AMMO_TYPES 5
	set GUN_ACCURACY 24
	set GUN_MAX_SPREAD 48
	set GUN_SIZE 2
	set GUN_HANDS 2
		set gun_mag SHOTGUNMAG

	ifl SHOTGUNMAG 0 set SHOTGUNMAG 0
	ifl SHOTGUNBOXMAG 0 set SHOTGUNBOXMAG 0

	ife kickbackpic 3 add gun_spread 24

	ifand gun_firemode_two 8 // Using KSG-12's second tube?
		{
		ifand AMMO_TYPES[15] 1
		{
		set weapon_type 8
		set WEAPON2_SHOOTS 9361
		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp EXPL_SHELL_FIRE }
		ife explosive_shells 0 ife SHOTGUNBOXMAG 0 { xorvar AMMO_TYPE_2 1 setarray AMMO_TYPES[15] AMMO_TYPE_2 }
		}
		else
		ifand AMMO_TYPES[15] 4
		{
		set weapon_type 9
		ife ARTIFACTS_LOADOUT[CHAR] 7 set WEAPON2_SHOOTS 6816 else
		set WEAPON2_SHOOTS 6826
		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp FLECH_SHELL_FIRE }
		ife flechete_shells 0 ife SHOTGUNBOXMAG 0 { xorvar AMMO_TYPE_2 4 setarray AMMO_TYPES[15] AMMO_TYPE_2 }
		}
		else
		ifand AMMO_TYPES[15] 64
		{
		set weapon_type 0
		set WEAPON2_SHOOTS RMAXREVOLVERSHOT
		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp MAGNUM_SHOTGUN }
		ife magnum_shells 0 ife SHOTGUNBOXMAG 0 { xorvar AMMO_TYPE_2 64 setarray AMMO_TYPES[15] AMMO_TYPE_2 }
		}
		else
		ifand AMMO_TYPES[15] 1024
		{
		set weapon_type 8
		set WEAPON2_SHOOTS 22536
		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp DRAGONS_BR_FIRE }
		ife dragon_shells 0 ife SHOTGUNBOXMAG 0 { xorvar AMMO_TYPE_2 1024 setarray AMMO_TYPES[15] AMMO_TYPE_2 }
		}
		else
		{
		set weapon_type 2
		set WEAPON2_SHOOTS 2613
		ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp KSG_12_FIRE }
		}

	ifg shotgun_load 0
		{
		setp[].reloading 1
		ife BELT_LOADOUT[CHAR] 5
			{
			ifl kickbackpic 19 setp[].kickback_pic 19
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 25 setp[].kickback_pic 19
			}
		else
			{
			ifl kickbackpic 19 setp[].kickback_pic 19
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 27 setp[].kickback_pic 19
			}
		ifand BITS_PRESS 4 ifg SHOTGUNBOXMAG 0 ifg kickbackpic 21 { set shotgun_load 0 setp[].reloading 0 setplayer[].kickback_pic 1 espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp KSG_12_FIRE }
		}

	ife kickbackpic 0
		{
		state shotgun_dual_load_check
		ifand BITS_PRESS 4
			{
			getp[].ammo_amount 2 hold_ammo_temp
			  ifg SHOTGUNBOXMAG 0
			   ife hold_ammo_temp 0
				{
				add hold_ammo_temp 1
				espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp KSG_12_FIRE
				setp[].ammo_amount 2 hold_ammo_temp
				set need_to_fire 1
				}
			}
		}

ife kickbackpic 5
ife need_to_fire 1
	{
	getp[].ammo_amount 2 hold_ammo_temp
	sub hold_ammo_temp 1
	ifl hold_ammo_temp 0 set hold_ammo_temp 0
	setp[].ammo_amount 2 hold_ammo_temp
	set need_to_fire 0
	}

		ife needs_pump[cur_weap] 1 set MAX_SHOTGUNBOXMAG 7 else set MAX_SHOTGUNBOXMAG 8
		ifg SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
		ife SHOTGUNBOXMAG 0 ife kickbackpic 0 setarray needs_pump[cur_weap] 1
		ife player[].reloading 1
			{
			ife kickbackpic 22
				{
				state sg2_shell_sounds
				add SHOTGUNBOXMAG 1

				ifand AMMO_TYPES[15] 1
					{
					set LAST_SHELL_FIRED_2 1
					sub explosive_shells 1
					}
				else
				ifand AMMO_TYPES[15] 4
					{
					set LAST_SHELL_FIRED_2 4
					sub flechete_shells 1
					}
				else
				ifand AMMO_TYPES[15] 64
				    {
					set LAST_SHELL_FIRED_2 64
					sub magnum_shells 1
					}
				else
				ifand AMMO_TYPES[15] 1024
				    {
					set LAST_SHELL_FIRED_2 1024
					sub dragon_shells 1
					}
				else
					{
					set LAST_SHELL_FIRED_2 0
					getp[].ammo_amount 2 hold_ammo_temp
					sub hold_ammo_temp 1
					setp[].ammo_amount 2 hold_ammo_temp
					}
				}
			}
		else ife player[].reloading 0
			{
			ife kickbackpic 9 sound KSG_12_PUMP
			ife kickbackpic 0 ifg SHOTGUNBOXMAG 0 ife needs_pump[cur_weap] 1 setp[].kickback_pic 6
			}

			ife kickbackpic 2
				{
				sub SHOTGUNBOXMAG 1
					ife AMMO_TYPES[15] 0
					{
					getp[].ammo_amount 2 hold_ammo_temp
					add hold_ammo_temp 1
					setp[].ammo_amount 2 hold_ammo_temp
					}
				}
			ife kickbackpic 3
				{
				ifand gun_firemode_two 8
					{
					ifand AMMO_TYPES[15] 64 { set gun_pushback_power -128 state gun_pushback }
					else set gun_pushback_power -32 state gun_pushback
					}
				else
					{
					ifand AMMO_TYPES[15] 64 { set gun_pushback_power -128 state gun_pushback }
					else set gun_pushback_power -32 state gun_pushback
					}
				set gun_recoil 16
				}
			ife kickbackpic 4 { set gunsmoke_angle 96 state spawn_gunsmoke }
			ife kickbackpic 16
			 ife player[].reloading 0
				{
				ife needs_pump[cur_weap] 1 setarray needs_pump[cur_weap] 0
				else // If it didn't need pumping, eject a shell
					state SHOTGUN_SHELL2
				}
		}
	else // using first tube
		{
		ifand AMMO_TYPES[cur_weap] 1
			{
			set weapon_type 8
			set WEAPON2_SHOOTS 9361
			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp EXPL_SHELL_FIRE }
			ife explosive_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 1 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		else
		ifand AMMO_TYPES[cur_weap] 4
			{
			set weapon_type 9
			ife ARTIFACTS_LOADOUT[CHAR] 7 set WEAPON2_SHOOTS 6816 else
			set WEAPON2_SHOOTS 6826
			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp FLECH_SHELL_FIRE }
			ife flechete_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 4 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		else
		ifand AMMO_TYPES[cur_weap] 64
			{
			set weapon_type 0
			set WEAPON2_SHOOTS RMAXREVOLVERSHOT
			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp MAGNUM_SHOTGUN }
			ife magnum_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 64 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		else
		ifand AMMO_TYPES[cur_weap] 1024
			{
			set weapon_type 8
			set WEAPON2_SHOOTS 22536
			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp DRAGONS_BR_FIRE }
			ife dragon_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 1024 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		else
			{
			set weapon_type 2
			set WEAPON2_SHOOTS 2613
			ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp KSG_12_FIRE }
			}

	ifg shotgun_load 0
		{
		setp[].reloading 1
		ife BELT_LOADOUT[CHAR] 5
			{
			ifl kickbackpic 19 setp[].kickback_pic 19
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 25 setp[].kickback_pic 19
			}
		else
			{
			ifl kickbackpic 19 setp[].kickback_pic 19
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 27 setp[].kickback_pic 19
			}
		ifand BITS_PRESS 4 ifg SHOTGUNMAG 0 ifg kickbackpic 21 { set shotgun_load 0 setp[].reloading 0 setplayer[].kickback_pic 1 espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp KSG_12_FIRE }
		}

	ife kickbackpic 0
	{
	state shotgun_load_check
	ifand BITS_PRESS 4
		{
		getp[].ammo_amount 2 hold_ammo_temp
		  ifg SHOTGUNMAG 0
		   ife hold_ammo_temp 0
			{
			add hold_ammo_temp 1
			setp[].ammo_amount 2 hold_ammo_temp
			set need_to_fire 1
			setp[].kickback_pic 1
			}
		}
	}

	ife kickbackpic 5
	ife need_to_fire 1
		{
		getp[].ammo_amount 2 hold_ammo_temp
		sub hold_ammo_temp 1
		ifl hold_ammo_temp 0 set hold_ammo_temp 0
		setp[].ammo_amount 2 hold_ammo_temp
		set need_to_fire 0
		}

		ife needs_pump[cur_weap] 1 set MAX_SHOTGUNMAG 7 else set MAX_SHOTGUNMAG 8
		ifg SHOTGUNMAG MAX_SHOTGUNMAG set SHOTGUNMAG MAX_SHOTGUNMAG
		ife SHOTGUNMAG 0 ife kickbackpic 0 setarray needs_pump[cur_weap] 1
		ife player[].reloading 1
			{
			ife kickbackpic 22
				{
				state sg_shell_sounds
				add SHOTGUNMAG 1

				ifand AMMO_TYPES[2] 1
					{
					set LAST_SHELL_FIRED 1
					sub explosive_shells 1
					}
				else
				ifand AMMO_TYPES[2] 4
					{
					set LAST_SHELL_FIRED 4
					sub flechete_shells 1
					}
				else
				ifand AMMO_TYPES[2] 64
					{
					set LAST_SHELL_FIRED 64
					sub magnum_shells 1
					}
				else
				ifand AMMO_TYPES[2] 1024
					{
					set LAST_SHELL_FIRED 1024
					sub dragon_shells 1
					}
				else
					{
					set LAST_SHELL_FIRED 0
					getp[].ammo_amount 2 hold_ammo_temp
					sub hold_ammo_temp 1
					setp[].ammo_amount 2 hold_ammo_temp
					}
				}
			}
		else ife player[].reloading 0
			{
			ife kickbackpic 9 sound KSG_12_PUMP
			ife kickbackpic 0 ifg SHOTGUNMAG 0 ife needs_pump[cur_weap] 1 setp[].kickback_pic 6
			}
			ife kickbackpic 2
				{
				sub SHOTGUNMAG 1

				ifand AMMO_TYPES[2] 1 set LAST_SHELL_FIRED 1
				else
				ifand AMMO_TYPES[2] 4 set LAST_SHELL_FIRED 4
				else
				ifand AMMO_TYPES[2] 64 set LAST_SHELL_FIRED 64
				else
				ifand AMMO_TYPES[2] 1024 set LAST_SHELL_FIRED 1024
				else set LAST_SHELL_FIRED 0

								ife AMMO_TYPE 0
									{
									getp[].ammo_amount 2 hold_ammo_temp
									add hold_ammo_temp 1
									setp[].ammo_amount 2 hold_ammo_temp
									}
				}
			ife kickbackpic 3
				{
				ifand gun_firemode_two 8
					{
					ifand AMMO_TYPES[15] 64 { set gun_pushback_power -128 state gun_pushback }
					else set gun_pushback_power -32 state gun_pushback
					}
				else
					{
					ifand AMMO_TYPES[cur_weap] 64 { set gun_pushback_power -128 state gun_pushback }
					else set gun_pushback_power -32 state gun_pushback
					}
				set gun_recoil 16
				}
			ife kickbackpic 4 { set gunsmoke_angle 96 state spawn_gunsmoke }
			ife kickbackpic 16
			 ife player[].reloading 0
				{
				ife needs_pump[cur_weap] 1 setarray needs_pump[cur_weap] 0
				else // If it didn't need pumping, eject a shell
				state SHOTGUN_SHELL
				}
			}
		}
}
else // USING THE PROTECTA-12
{
ife BELT_LOADOUT[CHAR] 5 smaxammo 2 72 else
smaxammo 2 60
setarray WEAPON_TILE[2] 5216
setarray W_AMMO_TILE[2] 5225
setarray ammo_amount[2] 8

ifand MAGIC_UPGRADE[0] 2 setarray weap_special[2] 16384 else
setarray weap_special[2] 0

set WEAPON2_CLIP 0
set WEAPON2_RELOAD 27
set WEAPON2_FIREDELAY 2
set WEAPON2_HOLDDELAY 0
set WEAPON2_TOTALTIME 5
set WEAPON2_FLAGS 1024
set WEAPON2_SPAWNTIME 24
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 4
set WEAPON2_RELOADSOUND1 4
set WEAPON2_RELOADSOUND2 5
	ife cur_weap 2
	{
	set weapon_type 2
	ifand JAMES_UPGRADE 1024 set MAX_SHOTGUNMAG 16
	else set MAX_SHOTGUNMAG 12
	ifg SHOTGUNMAG MAX_SHOTGUNMAG set SHOTGUNMAG MAX_SHOTGUNMAG

	set GUN_VOLUME 70
	set GUN_ACCURACY 24
	set GUN_MAX_SPREAD 32
	set GUN_SIZE 1
	set GUN_HANDS 2
	set gun_mag SHOTGUNMAG

	ifand MAGIC_UPGRADE[0] 2 set GUN_AMMO_TYPES 8193
	else set GUN_AMMO_TYPES 1
	set WEAPON2_TOTALTIME 5
	set WEAPON2_FLAGS 17408
	set WEAPON2_SHOOTS 2613
	set WEAPON2_FIRESOUND 4

	ifg kickbackpic_2 0
		{
		add kickbackpic_2 1
		ifg kickbackpic_2 6 set kickbackpic_2 0
		}

	ifand AMMO_TYPES[cur_weap] 1
	{
	set weapon_type 8
	set WEAPON2_SHOOTS 9361
	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp EXPL_SHELL_FIRE }
	ife explosive_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 1 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
	}
	else
	ifand AMMO_TYPES[cur_weap] 4
	{
	set weapon_type 9
	ife ARTIFACTS_LOADOUT[CHAR] 7 set WEAPON2_SHOOTS 6816 else
	set WEAPON2_SHOOTS 6826
	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp FLECH_SHELL_FIRE }
	ife flechete_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 4 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
	}
	else
	{
	set weapon_type 2
	set WEAPON2_SHOOTS 2613
	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp PROTECTA_FIRE }
	}

	ifg shotgun_load 0
		{
		setp[].reloading 1
		ife BELT_LOADOUT[CHAR] 5
			{
			ifl kickbackpic 19 setp[].kickback_pic 19
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 25 setp[].kickback_pic 19
			}
		else
			{
			ifl kickbackpic 17 setp[].kickback_pic 17
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 27 setp[].kickback_pic 17
			}
		ifand BITS_PRESS 4 ifg SHOTGUNMAG 0 ifg kickbackpic 21 { set shotgun_load 0 setp[].reloading 0 setplayer[].kickback_pic 1  }
		}

	ife kickbackpic 0
		{
		state shotgun_load_check

		ifand BITS_PRESS 4
			  ifg SHOTGUNMAG 0
			   ife player[].ammo_amount 2 0
				ife need_to_fire 0
				{
				getp[].ammo_amount 2 hold_ammo_temp
				add hold_ammo_temp 1
				setp[].ammo_amount 2 hold_ammo_temp
				setp[].kickback_pic 1
				set need_to_fire 1
				}
		}

	ife kickbackpic 3
		{
		add gun_spread 24
		ife need_to_fire 1
			{
			getp[].ammo_amount 2 hold_ammo_temp
			sub hold_ammo_temp 1
			setp[].ammo_amount 2 hold_ammo_temp
			set need_to_fire 0
			}
		}

	ife player[].reloading 1
		{
		ife kickbackpic 21
			{
			state sg_shell_sounds
			add SHOTGUNMAG 1

			ifand AMMO_TYPES[cur_weap] 1 { set LAST_SHELL_FIRED 1 sub explosive_shells 1 }
			else
			ifand AMMO_TYPES[cur_weap] 4 { set LAST_SHELL_FIRED 4 sub flechete_shells 1 }
			else
				{
				set LAST_SHELL_FIRED 0
				getp[].ammo_amount 2 hold_ammo_temp
				sub hold_ammo_temp 1
				setp[].ammo_amount 2 hold_ammo_temp
				}
			}
		ife kickbackpic 29 soundonce WINCHUP
		}
		else
			{
			ifand AMMO_TYPES[cur_weap] 1 set LAST_SHELL_FIRED 1
			else ifand AMMO_TYPES[cur_weap] 4 set LAST_SHELL_FIRED 4
			else set LAST_SHELL_FIRED 0

			ife kickbackpic 2
				{
				sub SHOTGUNMAG 1
				ife AMMO_TYPES[cur_weap] 0
					{
					getp[].ammo_amount 2 hold_ammo_temp
					add hold_ammo_temp 1
					setp[].ammo_amount 2 hold_ammo_temp
					}
				set gunsmoke_angle 96
				state spawn_gunsmoke
				set gun_recoil 6
				}
			ife kickbackpic 4 state SHOTGUN_SHELL
			}
	}

}


// MACHINEGUN
ife SPECIALIST_EQUIPMENT[8] 2 // using the MP5SD+M203?
{
setarray WEAPON_TILE[3] 11886
setarray weap_special[3] 17408
setarray W_AMMO_TILE[3] 5362
setarray ammo_amount[3] 50

set WEAPON3_SPAWN 0
set WEAPON3_SHOOTS CHAINGUN
set WEAPON3_INITIALSOUND 4
set WEAPON3_RELOADSOUND1 4
set WEAPON3_RELOADSOUND2 5
set WEAPON3_CLIP 0
set WEAPON3_TOTALTIME 3
set WEAPON3_FIREDELAY 2
set WEAPON3_FIRESOUND 4
set WEAPON3_SHOTSPERBURST 1
set WEAPON3_FLAGS 4

	ife cur_weap 3
	{
	set weapon_type 0
	set GUN_SIZE 1
	set GUN_VOLUME 2
	set GUN_HANDS 2

	ifand gun_firemode 32768
	set GUN_AMMO_TYPES 2048
	else
	set GUN_AMMO_TYPES 32

	ifg gl_countd 0 sub gl_countd 1

	state check_cased_grenades_avail

	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp MP5_FIRE }

	set gun_mag MGUNMAG
	// set MAXMGUNMAG 30

		ifand gun_firemode 16384
			{
			set GUN_MAX_SPREAD 8
			set GUN_ACCURACY 8
			ife kickbackpic 2
				{
				set gun_recoil 3
				add gun_spread 6
				set gunsmoke_angle 0
				state spawn_gunsmoke
				}
			ifg kickbackpic 6 { set hide_xhair 0  xorvar gun_firemode 16384 }
			}
			else
			{
			set GUN_MAX_SPREAD 16
			set GUN_ACCURACY 16
			ife kickbackpic 2
				{
				set gun_recoil 5
				set gunsmoke_angle 72
				state spawn_gunsmoke
				}
			ife kickbackpic 2 add gun_spread 8
			}

			ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }
			ife gl_countd 34 soundonce GL_OPEN2
			ife gl_countd 30 state shoot_empty_40mmshell
			ife gl_countd 16 soundonce GL_INSERT2
			ife gl_countd 8 soundonce GL_CLOSE2
			ifg gl_countd 44
				{
				sub wepsway_x 5
				sub wepsway_y 5
				}

		ife reload_type 0
		{
		ife kickbackpic 17 state smg_mag_out_sounds
		ife kickbackpic 10 state JMOVESOUND2

		ife kickbackpic 30
			{
			state smg_mag_in_sounds
			set MAXMGUNMAG 31
			ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
			}
		}
		else
		ife reload_type 1
		{
		ife kickbackpic 17 sound UMP_BOLT
		ife kickbackpic 27 { state smg_mag_in_sounds ife MGUNMAG 0 shoot SMGMAGAZINE }
		ife kickbackpic 30 state JMOVESOUND2

		ife kickbackpic 40
			{
			state smg_mag_in_sounds
			set MAXMGUNMAG 30
			ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
			}
		}

	  ifl MGUNMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
		ifn cur_ammo 0
			{
			setp[].reloading 1
			setp[].kickback_pic 6
			set WEAPON3_RELOAD 62
			set reload_type 1
			}
		}
  }
}
else
ife SPECIALIST_EQUIPMENT[55] 2 // using the UMP45?
{
setarray WEAPON_TILE[3] 16107
setarray weap_special[3] 16384
setarray W_AMMO_TILE[3] 5362
setarray ammo_amount[3] 40

set WEAPON3_SPAWN 0

set WEAPON3_INITIALSOUND 4
set WEAPON3_RELOADSOUND1 4
set WEAPON3_RELOADSOUND2 5
set WEAPON3_CLIP 0
set WEAPON3_TOTALTIME 3
set WEAPON3_FIREDELAY 2
set WEAPON3_FIRESOUND 4
set WEAPON3_SHOTSPERBURST 1
set WEAPON3_FLAGS 0

	ife cur_weap 3
	{
	set GUN_AMMO_TYPES 2
	set GUN_SIZE 1
	set GUN_VOLUME 6
	set GUN_HANDS 2
	ifand gun_firemode 1024 xorvar gun_firemode 1024

	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp UMP_FIRE }

	ifand AMMO_TYPES[cur_weap] 2
		{
		set weapon_type 7
		set WEAPON3_SHOOTS SILVERAMMOSHOT
		ife kickbackpic 2 sound TOMMYG_SFIRE
		ife silver_ammo 0 ife MGUNMAG 0 xorvar AMMO_TYPE 2
		}
		else
	ifand AMMO_TYPES[cur_weap] 32768
		{
		set weapon_type 1
		set WEAPON3_SHOOTS FIRE_BULLET
		ife kickbackpic 2 sound INCEND_FIRE
		ife incend_ammo 0 ife MGUNMAG 0 xorvar AMMO_TYPE 2
		}
		else
		{
		set weapon_type 2
		set WEAPON3_SHOOTS F45_CALIBRE
		}

	set gun_mag MGUNMAG

		ifand gun_firemode 16384
			{
			set GUN_MAX_SPREAD 16
			set GUN_ACCURACY 8
			ife kickbackpic 2
				{
				add gun_spread 8
				set gun_recoil 3
				set gunsmoke_angle 0
				state spawn_gunsmoke
				}
			ifg kickbackpic 6 { set hide_xhair 0 xorvar gun_firemode 16384 }
			}
			else
			{
			set GUN_MAX_SPREAD 32
			set GUN_ACCURACY 12
			ife kickbackpic 2
				{
				add gun_spread 14
				set gun_recoil 4
				set gunsmoke_angle 72
				state spawn_gunsmoke
				}
			}

		ife reload_type 0
		{
		ife kickbackpic 17 state smg_mag_out_sounds
		ife kickbackpic 10
			{
			ifand AMMO_TYPES[cur_weap] 2 ife silver_ammo 0 { xorvar AMMO_TYPE 2 setarray AMMO_TYPES[cur_weap] 0 }
			ifand AMMO_TYPES[cur_weap] 32768 ife incend_ammo 0 { xorvar AMMO_TYPE 32768 setarray AMMO_TYPES[cur_weap] 0 }
			state JMOVESOUND2
			}

		ife kickbackpic 30
			{
			state smg_mag_in_sounds
			set MAXMGUNMAG 26
			ifand AMMO_TYPES[cur_weap] 2 // using silver ammo?
				{
				ifl silver_ammo MAXMGUNMAG set MGUNMAG silver_ammo else set MGUNMAG MAXMGUNMAG
				}
			else
			ifand AMMO_TYPES[cur_weap] 32768 // using incend ammo?
				{
				ifl incend_ammo MAXMGUNMAG set MGUNMAG incend_ammo else set MGUNMAG MAXMGUNMAG
				}
			else
				{
				ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
				}
			}
		}
		else
		ife reload_type 1
		{
		ife kickbackpic 17 sound UMP_BOLT
		ife kickbackpic 27 { state smg_mag_out_sounds ife MGUNMAG 0 shoot SMGMAGAZINE }
		ife kickbackpic 30
			{
			ifand AMMO_TYPES[cur_weap] 2 ife silver_ammo 0 { xorvar AMMO_TYPE 2 setarray AMMO_TYPES[cur_weap] 0 }
			ifand AMMO_TYPES[cur_weap] 32768 ife incend_ammo 0 { xorvar AMMO_TYPE 32768 setarray AMMO_TYPES[cur_weap] 0 }
			state JMOVESOUND2
			}

		// ife kickbackpic 58 sound UMP_BOLT
		ife kickbackpic 40
			{
			state smg_mag_in_sounds
			set MAXMGUNMAG 25
			ifand AMMO_TYPES[cur_weap] 2 // using silver ammo?
				{
				ifl silver_ammo MAXMGUNMAG set MGUNMAG silver_ammo else set MGUNMAG MAXMGUNMAG
				}
			else
			ifand AMMO_TYPES[cur_weap] 32768 // using incend ammo?
				{
				ifl incend_ammo MAXMGUNMAG set MGUNMAG incend_ammo else set MGUNMAG MAXMGUNMAG
				}
			else
				{
				ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
				}
			}
		}

  ifl MGUNMAG 1
   ife player[].weapon_pos 0
    ife kickbackpic 0
   {
   	ifn cur_ammo 0
   		{
   		setp[].reloading 1
   		setp[].kickback_pic 6
		set WEAPON3_RELOAD 62
		set reload_type 1
		}
	}
  }
}
else
ife SPECIALIST_EQUIPMENT[15] 2 // using the PP-19 Energy Bizon?
{
setarray WEAPON_TILE[3] 12067
setarray W_AMMO_TILE[3] 12062
setarray weap_special[3] 16384
setarray ammo_amount[3] 32

set WEAPON3_SPAWN 0
set WEAPON3_SHOOTS REDLASERSHOT
set WEAPON3_INITIALSOUND 4
set WEAPON3_RELOADSOUND1 4
set WEAPON3_RELOADSOUND2 5
set WEAPON3_CLIP 0
set WEAPON3_FIRESOUND 4
set WEAPON3_SHOTSPERBURST 1

	ife cur_weap 3
	{
	set weapon_type 1
	set GUN_VOLUME 12
	ifand MAGIC_UPGRADE[0] 8
	set GUN_AMMO_TYPES 8192
	else
	set GUN_AMMO_TYPES 0
	set GUN_HANDS 2

	set WEAPON3_FIREDELAY 2
	set WEAPON3_TOTALTIME 3

	set WEAPON3_FLAGS 68

		set GUN_SIZE 1
		set GUN_ACCURACY 8
		set GUN_MAX_SPREAD 32
		ife kickbackpic_2 0 ifsound MELTA_FIRE { stopsound MELTA_FIRE soundonce MELTA_STOP }
		ifg kickbackpic_2 0
			{
			soundonce MELTA_FIRE
			add kickbackpic_2 1
			ife kickbackpic_2 2
			 ifg player[].ammo_amount 3 1
				{
				shoot MELTA_BEAM
				ifand MAGIC_UPGRADE[0] 8
				 ifg p_blue_mana 0
					{
					set gun_recoil 2
					add gun_spread 0
					sub p_blue_mana 1
					}
				else
					{
					set gun_recoil 3
					add gun_spread 6
					sub MGUNMAG 2
					getp[].ammo_amount 3 temp
					sub temp 2
					setp[].ammo_amount 3 temp
					}
				}
			ife kickbackpic_2 3 set kickbackpic_2 0
			}

		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp PP19_FIRE }

		ife kickbackpic 2
			{
			add gun_spread 3
			set gun_recoil 1
			set gunsmoke_angle 72
			state spawn_gunsmoke
			}

	set gun_mag MGUNMAG
	set MAXMGUNMAG 64

		ife kickbackpic 7 sound PP19_RELOAD
		ife kickbackpic 15 ife MGUNMAG 0 shoot SMG_MAG2
		ife kickbackpic 46 sound ENG_SLID

		ife kickbackpic 30
			{
			ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
			}


  ifl MGUNMAG 1
   ife player[].weapon_pos 0
    ife kickbackpic 0
	 ife kickbackpic_2 0
	   {
		ifn cur_ammo 0
			{
			set WEAPON3_RELOAD 58
			setp[].reloading 1
			setp[].kickback_pic 6
			}
		}

  }

}
else // Using the MP7?
{
ifand JAMES_UPGRADE 128 setarray WEAPON_TILE[3] 5365
else setarray WEAPON_TILE[3] 5211
setarray W_AMMO_TILE[3] 5221

ifand guns_akimbo 2 // has two?
	{
	ifand JAMES_UPGRADE 128 // Suppressor upgrade?
		{
		ifand gun_firemode_two 2048 setarray weap_special[3] 17409 else
		setarray weap_special[3] 16385
		}
	else
	setarray weap_special[3] 1
	}
	else
	{
	ifand JAMES_UPGRADE 128 // Suppressor upgrade?
		{
		ifand gun_firemode_two 2048 setarray weap_special[3] 17408 else
		setarray weap_special[3] 16384
		}
	else
	setarray weap_special[3] 0
	}

setarray ammo_amount[3] 50

set WEAPON3_HOLDDELAY 2
set WEAPON3_SPAWN 0
set WEAPON3_SHOOTS ZRIFLESHOT
set WEAPON3_INITIALSOUND 4
set WEAPON3_RELOADSOUND1 4
set WEAPON3_RELOADSOUND2 5
set WEAPON3_CLIP 0
set WEAPON3_FIRESOUND 4


	ife cur_weap 3
	{
	set weapon_type 0
	set GUN_AMMO_TYPES 0
	set GUN_SIZE 0

	ifand gun_firemode 1024 // Are they doubled up?
		{
		set GUN_ACCURACY 16
		set GUN_MAX_SPREAD 64
		set WEAPON3_FIREDELAY 2
		set WEAPON3_TOTALTIME 3
		set WEAPON3_FLAGS 68
		set WEAPON3_SHOTSPERBURST 2
		set WEAPON3_RELOAD 70
		set GUN_HANDS 2
		}
	else
		{
		set WEAPON3_SHOTSPERBURST 1
		set WEAPON3_RELOAD 35
		set WEAPON3_FIREDELAY 2
		set WEAPON3_TOTALTIME 3
		set WEAPON3_FLAGS 68
		set GUN_HANDS 1
		set GUN_ACCURACY 8
		set GUN_MAX_SPREAD 32
		}

	ifand JAMES_UPGRADE 128 // Suppressed?
	 ifand gun_firemode_two 2048
		{
		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp SUP_TMP }
		ifand gun_firemode 1024 set GUN_VOLUME 8 else set GUN_VOLUME 4
		}
		else
		{
		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp TMPFIRE }
		ifand gun_firemode 1024 set GUN_VOLUME 28 else set GUN_VOLUME 14
		}

	 ife player[].weapon_pos 0
		{
		ifand gun_firemode 1024 nullop else
			{
			state spawn_lasersite
			seta[RETURN].x hitx
			seta[RETURN].y hity
			seta[RETURN].z hitz
			ifand SPECIALIST_CUSTOM[3] 1073741824 seta[RETURN].pal 1
			else ifand SPECIALIST_CUSTOM[3] 2147483648 seta[RETURN].pal 8
			else seta[RETURN].pal 0
			}
		}

	set gun_mag MGUNMAG
	ifand gun_firemode 1024
	{ ifand JAMES_UPGRADE 16 set MAXMGUNMAG 100 else set MAXMGUNMAG 60 }
	else
	{ ifand JAMES_UPGRADE 16 set MAXMGUNMAG 50 else set MAXMGUNMAG 30 }
		ife kickbackpic 1 { ifand gun_firemode 1024 set gun_recoil 3 else set gun_recoil 2 }
		ife kickbackpic 2
			{
			ifand gun_firemode 1024 add gun_spread 8
			else add gun_spread 4

			set gunsmoke_angle 72
			state spawn_gunsmoke
			ifand gun_firemode 1024 { set gunsmoke_angle -72 state spawn_gunsmoke }

			}
		ife kickbackpic 8 { state smg_mag_out_sounds ife MGUNMAG 0 shoot SMGMAGAZINE }
		ife kickbackpic 10 state JMOVESOUND2

		ife kickbackpic 44 { state smg_mag_out_sounds shoot SMGMAGAZINE }
		ife kickbackpic 46 state JMOVESOUND2

		ife kickbackpic 22
		{
		state smg_mag_in_sounds
		ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
		ifand gun_firemode 1024 divvar MGUNMAG 2
		}
		ife kickbackpic 60
		{
		state smg_mag_in_sounds
		ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
		}


  ifl MGUNMAG 1
   ife player[].weapon_pos 0
    ife kickbackpic 0
   {
   	ifn cur_ammo 0
   		{
   		setp[].reloading 1
   		setp[].kickback_pic 6
		}
	}
  }
 }

// RPG

/*
ife SPECIALIST_EQUIPMENT[77] 2 // Ranger missile launcher
{
smaxammo 4 100
setarray WEAPON_TILE[4] 22538
setarray W_AMMO_TILE[4] 22537
setarray ammo_amount[4] 10

set WEAPON4_FIRESOUND Z_MISSILE_FIRE
set WEAPON4_SHOOTS 0
set WEAPON4_RELOAD 44
set WEAPON4_FIREDELAY 2
set WEAPON4_TOTALTIME 8
set WEAPON4_HOLDDELAY 0
set WEAPON4_FLAGS 0


ife cur_weap 4
	{
	set GUN_AMMO_TYPES 512
	set GUN_ACCURACY 32
	set GUN_MAX_SPREAD 0
	set GUN_VOLUME 25
	set GUN_SIZE 2
	set GUN_HANDS 2
	set gun_mag ROCKETMAG
	set WEAPON4_FIRESOUND 4

		ifand BITS_PRESS 4
		   ife player[].ammo_amount 4 0
		   ife player[].kickback_pic 0
		   {
		   ifand gun_firemode_two 4
			 ifg DUP_missile_ammo 0
				{
				setp[].kickback_pic 1
				}
		   ifand gun_firemode_two 2
			 ifg atomic_bomb 0
			  ife GEO_MEGA_SHOT[1] 1
				{
				setp[].kickback_pic 1
				}
			}

	set gunsmoke_angle 96
	ife kickbackpic 5 state spawn_gunsmoke
	ife kickbackpic 2
		{

		sub wepsway_x 10
		sub wepsway_y 10
		espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT
		setactorvar[RETURN].temp XM8_FIRE

		ifand gun_firemode_two 2 setactorvar[RETURN].temp  Z_MISSILE_FIRE
		else ifand gun_firemode_two 4 setactorvar[RETURN].temp  DUP_FIRE
		else setactorvar[RETURN].temp RANGER_FIRE
		}

		ife kickbackpic 3 { getp[].horiz temp add temp 5 setp[].horiz temp }
		ife kickbackpic 4 { sound RANGER_ROTATE getp[].horiz temp sub temp 5 setp[].horiz temp }

		ife kickbackpic 2
			{
			ife GEO_MEGA_SHOT[1] 1
			 ifand gun_firemode_two 2
			  ifg atomic_bomb 0
				{
				globalsound Z_WARNING
				shoot ATOM_BOMB
				sub atomic_bomb 1
				setarray GEO_MEGA_SHOT[1] 0
				getp[].ammo_amount 4 temp
				ifg temp 0
					{
					add temp 1
					setp[].ammo_amount 4 temp
					}
				}
			else
			 ifand gun_firemode_two 1
			  ifg heat_seek_card 0
				{
				ifand gun_firemode_two 4
				 ifg DUP_missile_ammo 0
					{
					setprojectile[HOMING_MISSILE].userdata 32
					setprojectile[HOMING_MISSILE].pal 10
					eshoot HOMING_MISSILE // userdata has to be changed before firing
					setprojectile[HOMING_MISSILE].userdata 64
					setprojectile[HOMING_MISSILE].pal 21
					sound HEAT_SEEK
					setthisprojectile[RETURN].hitradius 4500
					setthisprojectile[RETURN].workslike 65538
					setthisprojectile[RETURN].pal 14
					setthisprojectile[RETURN].vel 975
					setthisprojectile[RETURN].xrepeat 20
					setthisprojectile[RETURN].yrepeat 20
					setthisprojectile[RETURN].extra 275
					setthisprojectile[RETURN].extra_rand 275
					setthisprojectile[RETURN].userdata 512
					setthisprojectile[RETURN].isound EXPLOSION_BIG
					setthisprojectile[RETURN].spawns BIG_EXPLOSION
					sub DUP_missile_ammo 1
					getp[].ammo_amount 4 temp
					ifg temp 0
						{
						add temp 1
						setp[].ammo_amount 4 temp
						}
					}
					else
					{
					eshoot HOMING_MISSILE
					ife kickbackpic 2 sub ROCKETMAG 1
					sound HEAT_SEEK
					setthisprojectile[RETURN].hitradius 2250
					setthisprojectile[RETURN].workslike 65538
					setthisprojectile[RETURN].vel 775
					setthisprojectile[RETURN].extra 125
					setthisprojectile[RETURN].extra_rand 25
					}
				sub heat_seek_card 1
				}
			else
				{
				ifand gun_firemode_two 4
				 ifg DUP_missile_ammo 0
					{
					setprojectile[MICRO_MISSILE].userdata 32
					setprojectile[MICRO_MISSILE].pal 14
					eshoot MICRO_MISSILE  // userdata has to be changed before firing
					setprojectile[MICRO_MISSILE].userdata 64
					setprojectile[MICRO_MISSILE].pal 0
					setthisprojectile[RETURN].hitradius 4500
					setthisprojectile[RETURN].workslike 65538
					setthisprojectile[RETURN].vel 975
					setthisprojectile[RETURN].xrepeat 20
					setthisprojectile[RETURN].yrepeat 20
					setthisprojectile[RETURN].extra 275
					setthisprojectile[RETURN].extra_rand 275
					setthisprojectile[RETURN].isound EXPLOSION_BIG
					setthisprojectile[RETURN].spawns BIG_EXPLOSION
					sub DUP_missile_ammo 1
					getp[].ammo_amount 4 temp
					ifg temp 0
						{
						add temp 1
						setp[].ammo_amount 4 temp
						}
					}
					else
					{
					eshoot MICRO_MISSILE
					ife kickbackpic 2 sub ROCKETMAG 1
					setthisprojectile[RETURN].hitradius 2250
					setthisprojectile[RETURN].workslike 65538
					setthisprojectile[RETURN].vel 675
					setthisprojectile[RETURN].velmult 2
					setthisprojectile[RETURN].extra 125
					setthisprojectile[RETURN].extra_rand 25
					}
				}
			}

		set weapon_type 4
		ifand gun_firemode_two 1 // heat
			{
			ifg nuke_countd 0 set nuke_countd 0
			ife heat_seek_card 0 xorvar gun_firemode_two 1 // take off heat mode if no heat card
			}
		ifand gun_firemode_two 4 // DUP missiles
			{
			set weapon_type 9
			ifg nuke_countd 0 set nuke_countd 0
			ifg DUP_missile_ammo 10 set DUP_missile_ammo 10 // fail safe to make sure they have a limit of 10
			ife DUP_missile_ammo 0 xorvar gun_firemode_two 4 // take off DUP mod if no DUP missiles left
			}
		ifand gun_firemode_two 2 // nuke
			{
			set weapon_type 10
			ifg atomic_bomb 1 set atomic_bomb 1 // fail safe to make sure they have a limit of 1
			ife atomic_bomb 0 ife kickbackpic 0 xorvar gun_firemode_two 2 // take off atomic mode if no atomic
			}

		ifand gun_firemode_two 2
		 ife kickbackpic 0
		 {
		 ife GEO_MEGA_SHOT[1] 1 set GUN_ACCURACY 0
		  ife GEO_MEGA_SHOT[1] 0
			{
			set GUN_ACCURACY nuke_countd
			ife nuke_countd 0 set nuke_countd 221
			ifg nuke_countd 0 sub nuke_countd 1
			ife nuke_countd 220 soundonce Z_STANDBY
			ife nuke_countd 180 soundonce Z_COUNTD
			ife nuke_countd 95 soundonce Z_SYSREADY
			ife nuke_countd 5 state NUKE_TAUNTS
			ife nuke_countd 1 { setarray GEO_MEGA_SHOT[1] 1 set nuke_countd 0 }
			}
		  }


	ife kickbackpic 10 state JMOVESOUND2
	ife kickbackpic 15 sound RANGER_RELOAD
	ife kickbackpic 22 state JMOVESOUND2
	ife kickbackpic 40 sound RANGER_ROTATE
	ife kickbackpic 26 { ifl cur_ammo 6 set ROCKETMAG cur_ammo else set ROCKETMAG 6 }

	  ifl ROCKETMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
		    {
			ifn cur_ammo 0
				{
				setp[].reloading 1
				setp[].kickback_pic 13
				}
			}
	}
}
*/

ife SPECIALIST_EQUIPMENT[77] 2 // 40mm launcher
{
smaxammo 4 50
setarray WEAPON_TILE[4] 22538
setarray W_AMMO_TILE[4] 22537
setarray ammo_amount[4] 5
setarray weap_special[4] 0

set fortymm_grenades player[].ammo_amount 4

set WEAPON4_FIRESOUND M203_GL
set WEAPON4_SHOTSPERBURST 1
set WEAPON4_RELOAD 58
set WEAPON4_FIREDELAY 2
set WEAPON4_TOTALTIME 30
set WEAPON4_HOLDDELAY 0
set WEAPON4_FLAGS 0

	ife cur_weap 4
		{
		set weapon_type 4
		set GUN_AMMO_TYPES 2048
		set GUN_ACCURACY 32
		set GUN_MAX_SPREAD 0
		set GUN_VOLUME 25
		set GUN_SIZE 2
		set GUN_HANDS 2
		set gun_mag -1
		set gunsmoke_angle 96


			ife kickbackpic 0
			{
			ifand BITS_PRESS 4
				  ifn AMMO_TYPES[cur_weap] 0
				   ife player[].ammo_amount 4 0
					ife need_to_fire 0
					{
					getp[].ammo_amount 4 hold_ammo_temp
					add hold_ammo_temp 1
					setp[].ammo_amount 4 hold_ammo_temp
					setp[].kickback_pic 1
					set need_to_fire 1
					}
			}

			ife kickbackpic 3
			{
			add gun_spread 24
			ife need_to_fire 1
				{
				getp[].ammo_amount 4 hold_ammo_temp
				sub hold_ammo_temp 1
				setp[].ammo_amount 4 hold_ammo_temp
				set need_to_fire 0
				}
			}

		ife kickbackpic 5 state spawn_gunsmoke

		ife kickbackpic 3 set gun_recoil 6

		ifand AMMO_TYPES[cur_weap] 32 ifg fortymm_shells 0 set WEAPON4_SHOOTS 16005
		else ifand AMMO_TYPES[cur_weap] 128 ifg fortymm_MIA_shells 0 set WEAPON4_SHOOTS 9376
		else ifand AMMO_TYPES[cur_weap] 256 ifg fortymm_plasma 0 set WEAPON4_SHOOTS CYCLOID_PLASMA
		else set WEAPON4_SHOOTS FORTYMM_NADE

		ife kickbackpic 2
		{
		sub wepsway_x 10
		sub wepsway_y 10
		ifand AMMO_TYPES[cur_weap] 32
		ifg fortymm_shells 0
			{
			sub fortymm_shells 1
			getp[].ammo_amount 4 hold_ammo_temp
			add hold_ammo_temp 1
			setp[].ammo_amount 4 hold_ammo_temp
			resetcount
			}
		else
		ifand AMMO_TYPES[cur_weap] 128
		ifg fortymm_MIA_shells 0
			{
			sub fortymm_MIA_shells 1
			getp[].ammo_amount 4 hold_ammo_temp
			add hold_ammo_temp 1
			setp[].ammo_amount 4 hold_ammo_temp
			resetcount
			}
		else
		ifand AMMO_TYPES[cur_weap] 256
		ifg fortymm_plasma 0
			{
			sub fortymm_plasma 1
			getp[].ammo_amount 4 hold_ammo_temp
			add hold_ammo_temp 1
			setp[].ammo_amount 4 hold_ammo_temp
			resetcount
			}
		}

		ife kickbackpic 10 state JMOVESOUND2
		ife kickbackpic 17 state shoot_empty_40mmshell
		ife kickbackpic 6 sound GL_OPEN2

		ife kickbackpic 14
			{
			 ifand AMMO_TYPES[cur_weap] 32 // shells
			 {
			  ife fortymm_shells 0
				{
				ifand AMMO_TYPE 32 xorvar AMMO_TYPE 32 setarray AMMO_TYPES[cur_weap] AMMO_TYPE
				}
			  }
			else
			 ifand AMMO_TYPES[cur_weap] 128 // mia shells
			 {
			  ife fortymm_MIA_shells 0
				{
				ifand AMMO_TYPE 128 xorvar AMMO_TYPE 128 setarray AMMO_TYPES[cur_weap] AMMO_TYPE
				}
			 }
			else
			 ifand AMMO_TYPES[cur_weap] 256 // plasma
			 {
			  ife fortymm_plasma 0
				{
				ifand AMMO_TYPE 256 xorvar AMMO_TYPE 256 setarray AMMO_TYPES[cur_weap] AMMO_TYPE
				}
			 }
			}

		ife kickbackpic 20 sound GL_INSERT2
		ife kickbackpic 23 sound GL_CLOSE2

		}
}
else
{
smaxammo 4 50
setarray WEAPON_TILE[4] 5212
setarray W_AMMO_TILE[4] 5223
setarray ammo_amount[4] 6
setarray weap_special[4] 16384

set WEAPON4_FIRESOUND 4
set WEAPON4_SHOOTS 2698
set WEAPON4_SHOTSPERBURST 1
set WEAPON4_RELOAD 58
set WEAPON4_FIREDELAY 2
set WEAPON4_TOTALTIME 8
set WEAPON4_HOLDDELAY 0
set WEAPON4_FLAGS 0

ife cur_weap 4
	{
	set weapon_type 4
	set GUN_AMMO_TYPES 0
	set GUN_ACCURACY 32
	set GUN_MAX_SPREAD 0
	set GUN_VOLUME 25
	set GUN_SIZE 2
	set GUN_HANDS 2
	set gun_mag ROCKETMAG
	set gunsmoke_angle 96
	ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp GRENADELFIRE }
	ife kickbackpic 2
		{
		sub ROCKETMAG 1
		sub wepsway_x 10
		sub wepsway_y 10
		}
	ife kickbackpic 3 set gun_recoil 5
	ife kickbackpic 5 state spawn_gunsmoke

	ife kickbackpic 10 state JMOVESOUND2
	ife kickbackpic 16 sound J_GL_OPEN
	ife kickbackpic 30
		{
		sound DRUM_OUT
		set temp4 6
		sub temp4 ROCKETMAG
		clamp temp4 0 6
		set temp5 0
		whilevarvarn temp5 temp4
			{
			shoot TWENTY_SHELL
			add temp5 1
			}
		}

	ife kickbackpic 40 { ifl cur_ammo 6 set ROCKETMAG cur_ammo else set ROCKETMAG 6 }
	ife kickbackpic 47 sound DRUM_IN
	ife kickbackpic 57 sound J_GL_CLOSE

	  ifl ROCKETMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
		ifn cur_ammo 0
			{
			setp[].reloading 1
			setp[].kickback_pic 13
			}
		}
	}
}

ife cur_weap 10 set gun_mag -1
ife cur_weap 8 { set weapon_type 4 set gun_mag -1 }

// PIPEBOMB
setarray WEAPON_TILE[5] 5215
setarray W_AMMO_TILE[5] 5209
setarray ammo_amount[5] 3

set WEAPON5_FIREDELAY 18
set WEAPON5_TOTALTIME 29
set WEAPON5_HOLDDELAY 22
set PIPEBOMB_CONTROL 2

ife cur_weap 5
	{
	set weapon_type 6
	set gun_mag -1
	set GUN_AMMO_TYPES 0
	set GUN_ACCURACY 32
	set GUN_MAX_SPREAD 0
	set GUN_VOLUME 0
	set GUN_HANDS 2
	set GUN_SIZE 0
	}

// SHRINKER
ife SPECIALIST_EQUIPMENT[49] 2 // Explosive crossbow
{
setarray WEAPON_TILE[6] 15918
setarray W_AMMO_TILE[6] 15927
setarray W_AMMO_TILE[11] 15927
setarray weap_special[6] 512
setarray ammo_amount[6] 3

// quiver research?
ife PERSONNEL_RESEARCH[35] 2 smaxammo 6 45 else
smaxammo 6 30

set WEAPON6_CLIP 0
set WEAPON6_RELOAD 0
set WEAPON6_FIREDELAY 2
set WEAPON6_TOTALTIME 30
set WEAPON6_HOLDDELAY 0
set WEAPON6_FLAGS 4
set WEAPON6_SHOOTS EXP_CROSSBOW
set WEAPON6_SPAWNTIME -1
set WEAPON6_SPAWN 0
set WEAPON6_SHOTSPERBURST 1
set WEAPON6_INITIALSOUND 0
set WEAPON6_FIRESOUND 4
set WEAPON6_SOUND2TIME 15
set WEAPON6_SOUND2SOUND 4
set WEAPON6_RELOADSOUND1 4
set WEAPON6_RELOADSOUND2 4
set WEAPON6_SELECTSOUND SELECT_BIG_WEAPON
setplayer[THISACTOR].gotweapon 11 0

	ife cur_weap 6
	{
	set weapon_type 5
	set GUN_VOLUME 3
	set GUN_ACCURACY 8
	set GUN_AMMO_TYPES 0
	set GUN_MAX_SPREAD 0
	set GUN_SIZE 2
	set GUN_HANDS 2
	set gun_mag -1

		ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp EXBOW }
		ife kickbackpic 3 set gun_recoil 6

			ife player[].ammo_amount 6 0 ifg player[].kickback_pic 4 { setp[].kickback_pic 0 setarray needs_pump[6] 1 }

			ife needs_pump[6] 1
			 ifg player[].ammo_amount 6 0
				{
				setp[].kickback_pic 5
				setarray needs_pump[6] 0
				}

		ife kickbackpic 10 sound JMOVE7
		ife kickbackpic 14 sound GL_INSERT2
		ife kickbackpic 18 sound CROSSBOW_DRAWBACK

	}
}
else ife SPECIALIST_EQUIPMENT[98] 2 // Dark Matter Xm8
	{
	setarray WEAPON_TILE[6] 29118
	setarray W_AMMO_TILE[6] 29119
	setarray W_AMMO_TILE[11] 29119
	setarray weap_special[6] 16896
	setarray ammo_amount[6] 30
	smaxammo 6 200

	set WEAPON6_CLIP 0
	set WEAPON6_RELOAD 52
	set WEAPON6_FIREDELAY 2
	set WEAPON6_TOTALTIME 4
	set WEAPON6_HOLDDELAY 0
	set WEAPON6_FLAGS 4
	set WEAPON6_SHOOTS VOID_PLAYER_BOLT
	set WEAPON6_SPAWNTIME -1
	set WEAPON6_SPAWN 0
	set WEAPON6_SHOTSPERBURST 1
	set WEAPON6_INITIALSOUND 0
	set WEAPON6_FIRESOUND 4
	set WEAPON6_SOUND2TIME 15
	set WEAPON6_SOUND2SOUND 4
	set WEAPON6_RELOADSOUND1 4

	setplayer[THISACTOR].gotweapon 11 0

	set WEAPON6_RELOADSOUND2 4

		ife cur_weap 6
		{
		set weapon_type 2
		set GUN_VOLUME 15
		set GUN_AMMO_TYPES 65536
		set GUN_SIZE 1
		set GUN_HANDS 2
		set gun_mag slot6_mag
		ife kickbackpic 2 { sub slot6_mag 1 espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp DARKMATTER_XM8 }
		ife kickbackpic 3 { set gunsmoke_angle 64 state spawn_gunsmoke set gun_pushback_power -4 state gun_pushback set gun_recoil 5 }

		ifl kickbackpic 4
		 ife player[].weapon_pos 0
			{
			state spawn_lasersite
			seta[RETURN].x hitx
			seta[RETURN].y hity
			seta[RETURN].z hitz
			}

		ife kickbackpic 7 sound LASERSIGHT_OFF
		ife kickbackpic 50 sound LASERSIGHT_ON
		ife kickbackpic 13 state JMOVESOUND2

		ife kickbackpic 15 sound XM8_RELOAD
		ife kickbackpic 20 ife slot6_mag 0 shoot RIFLEMAGAZINE

		ife kickbackpic 43 state JMOVESOUND2
		ife kickbackpic 45
			{
			ifl cur_ammo 20 { set slot6_mag cur_ammo } else set slot6_mag 30
			}
		set GUN_MAX_SPREAD 0

		set GUN_ACCURACY 4


	  ifl slot6_mag 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
		   {
			ifn cur_ammo 0
				{
				setp[].reloading 1
				setp[].kickback_pic 6
				}
			}

		}
	}
else // XM-8 Laser rifle
	{
	setarray WEAPON_TILE[6] 5214
	setarray W_AMMO_TILE[6] 5224
	setarray weap_special[6] 0
	setarray ammo_amount[6] 20
	smaxammo 6 140

	set WEAPON6_CLIP 0
	set WEAPON6_RELOAD 52
	set WEAPON6_FIREDELAY 2
	set WEAPON6_TOTALTIME 4
	set WEAPON6_HOLDDELAY 0
	set WEAPON6_FLAGS 4
	set WEAPON6_SHOOTS GREENLASERSHOT
	set WEAPON6_SPAWNTIME -1
	set WEAPON6_SPAWN 0
	set WEAPON6_SHOTSPERBURST 1
	set WEAPON6_INITIALSOUND 0
	set WEAPON6_FIRESOUND 4
	set WEAPON6_SOUND2TIME 15
	set WEAPON6_SOUND2SOUND 4
	set WEAPON6_RELOADSOUND1 4
	set WEAPON6_RELOADSOUND2 4

		ife cur_weap 6
		{
		set weapon_type 2
		set GUN_VOLUME 15
		setplayer[THISACTOR].gotweapon 11 1
		ifand MAGIC_UPGRADE[0] 1 set GUN_AMMO_TYPES 16384 else
		set GUN_AMMO_TYPES 0
		set GUN_SIZE 1
		set GUN_HANDS 2
		set gun_mag slot6_mag
		ife kickbackpic 2 { sub slot6_mag 1 espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp XM8_FIRE }
		ife kickbackpic 3 { set gunsmoke_angle 64 state spawn_gunsmoke set gun_pushback_power -4 state gun_pushback set gun_recoil 5 }

		ifl kickbackpic 4
		 ife player[].weapon_pos 0
			{
			state spawn_lasersite
			seta[RETURN].x hitx
			seta[RETURN].y hity
			seta[RETURN].z hitz
			}

		ife kickbackpic 7 sound LASERSIGHT_OFF
		ife kickbackpic 50 sound LASERSIGHT_ON
		ife kickbackpic 13 state JMOVESOUND2

		ife kickbackpic 15 sound XM8_RELOAD
		ife kickbackpic 20 ife slot6_mag 0 shoot RIFLEMAGAZINE

		ife kickbackpic 43 state JMOVESOUND2
		ife kickbackpic 45
			{
			ifl cur_ammo 20 { set slot6_mag cur_ammo } else set slot6_mag 20
			}
		set GUN_MAX_SPREAD 0

		set GUN_ACCURACY 4


	  ifl slot6_mag 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
		   {
			ifn cur_ammo 0
				{
				setp[].reloading 1
				setp[].kickback_pic 6
				}
			}

		}
	}

// DEVISTATOR
ife SPECIALIST_EQUIPMENT[78] 2 // G36?
{
	smaxammo 7 300
	setarray WEAPON_TILE[7] 22571
	setarray weap_special[7] 16386
	setarray W_AMMO_TILE[7] 15906
	setarray ammo_amount[7] 30

	set WEAPON7_FIREDELAY 2
	set WEAPON7_TOTALTIME 3
	set WEAPON7_FLAGS 4
	set WEAPON7_SPAWN 0
	set WEAPON7_SHOOTS HOLLOW_POINT_SHOT
	set WEAPON7_INITIALSOUND 4
	set WEAPON7_SHOTSPERBURST 1
	set WEAPON7_CLIP 0
	set WEAPON7_RELOADSOUND1 4
	set WEAPON7_RELOADSOUND2 4
	set WEAPON7_FIRESOUND 4

	set WEAPON7_SELECTSOUND SELECT_ASSAULTR

	ife cur_weap 7
	{
	set weapon_type 2
	ifg gl_countd 0 sub gl_countd 1

	ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp G36_FIRE }
	set GUN_VOLUME 18

	ifand gun_firemode 32768 // If GL is selected
	set GUN_AMMO_TYPES 2048 // set ammo types to m203 compatible
	else
	set GUN_AMMO_TYPES 32 // set firing menu to switching to gl

	set GUN_SIZE 2
	set GUN_HANDS 2

	state check_cased_grenades_avail


			ifand gun_firemode 16384 // Using holosight?
				{
				set GUN_MAX_SPREAD 6
				set GUN_ACCURACY 8
				ifg kickbackpic 6 { set hide_xhair 0 xorvar gun_firemode 16384 }
				}
			else
				{
				set GUN_ACCURACY 12
				set GUN_MAX_SPREAD 16
				}
			ife player[].weapon_pos 0
				{
				state spawn_lasersite
				seta[RETURN].x hitx
				seta[RETURN].y hity
				seta[RETURN].z hitz

				ifand SPECIALIST_CUSTOM[45] 1073741824 seta[RETURN].pal 1
				else ifand SPECIALIST_CUSTOM[45] 2147483648 seta[RETURN].pal 8
				else seta[RETURN].pal 0
				}
			ife kickbackpic 2 { set gun_recoil 4 add gun_spread 8 set gunsmoke_angle 64 state spawn_gunsmoke  }

			ife needs_pump[cur_weap] 1 set gun_mag -1 else
			set gun_mag MACHINE_MAG

			set MAX_MACHINE_MAG 30
			ife kickbackpic 16 { state ar_mag_out_sounds ife MACHINE_MAG 0 shoot RIFLEMAGAZINE }
			ife kickbackpic 33
				{
				state ar_mag_in_sounds
				ifl cur_ammo MAX_MACHINE_MAG set MACHINE_MAG cur_ammo else set MACHINE_MAG MAX_MACHINE_MAG
				}

			ife kickbackpic 15 state JMOVESOUND2
			ife kickbackpic 60 state JMOVESOUND2
			ife kickbackpic 51 soundonce AUG_BOLT

			ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }

			ife gl_countd 34 soundonce GL_OPEN2
			ife gl_countd 30 state shoot_empty_40mmshell
			ife gl_countd 16 soundonce GL_INSERT2
			ife gl_countd 8 soundonce GL_CLOSE2

			ifg gl_countd 44
				{
				sub wepsway_x 5
				sub wepsway_y 5
				}


		ife kickbackpic 0
		ifand BITS_PRESS 128
			{
			 ife needs_pump[cur_weap] 0
			  ife player[].ammo_amount cur_weap 0
				{
				setp[].reloading 1
				setp[].kickback_pic 6
				setarray needs_pump[cur_weap] 1
				}
			}

		ife kickbackpic 20
		 ife needs_pump[cur_weap] 1
			{
			setp[].reloading 1
			setp[].kickback_pic 40
			}

		ifl MACHINE_MAG 1
		   ife player[].weapon_pos 0
			ife kickbackpic 0
		   {
			ifn cur_ammo 0
				{
				set WEAPON7_RELOAD 61
				setp[].reloading 1
				ife needs_pump[cur_weap] 1
					{
					setp[].kickback_pic 28
					setarray needs_pump[cur_weap] 0
					}
				else
				setp[].kickback_pic 6
				}
			}


	}
}
else
ife SPECIALIST_EQUIPMENT[84] 2 // M4-15?
{
	smaxammo 7 300
	setarray WEAPON_TILE[7] 15898
	setarray weap_special[7] 17408
	setarray W_AMMO_TILE[7] 15906
	setarray ammo_amount[7] 30

	set WEAPON7_FIREDELAY 3
	set WEAPON7_TOTALTIME 4
	set WEAPON7_FLAGS 4
	set WEAPON7_SPAWN 0
	set WEAPON7_SHOOTS RMAXREVOLVERSHOT
	set WEAPON7_INITIALSOUND 4
	set WEAPON7_SHOTSPERBURST 1
	set WEAPON7_CLIP 0
	set WEAPON7_RELOADSOUND1 4
	set WEAPON7_RELOADSOUND2 4
	set WEAPON7_FIRESOUND 4

	set WEAPON7_SELECTSOUND SELECT_M16

	ife cur_weap 7
	{
		set weapon_type 0
		ifg gl_countd 0 sub gl_countd 1
		set GUN_AMMO_TYPES 0
		ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp M4-15_FIRE }
		set GUN_VOLUME 4
		set GUN_SIZE 1
		set GUN_HANDS 2
		ifand gun_firemode 16384 // Using holosight?
			{
			set GUN_MAX_SPREAD 12
			set GUN_ACCURACY 8
			ife kickbackpic 3 { set gun_recoil 3 add gun_spread 8 set gunsmoke_angle 0 state spawn_gunsmoke  }
			ifg kickbackpic 6 { set hide_xhair 0 xorvar gun_firemode 16384 }
			}
			else
			{
			set GUN_ACCURACY 12
			set GUN_MAX_SPREAD 24
			ife player[].weapon_pos 0
				{
				state spawn_lasersite
				seta[RETURN].x hitx
				seta[RETURN].y hity
				seta[RETURN].z hitz

				ifand SPECIALIST_CUSTOM[84] 1073741824 seta[RETURN].pal 1
				else ifand SPECIALIST_CUSTOM[84] 2147483648 seta[RETURN].pal 8
				else seta[RETURN].pal 0
				}
			ife kickbackpic 3 { add gun_spread 8 set gunsmoke_angle 64 state spawn_gunsmoke set gun_recoil 5 }
			}

			ife needs_pump[cur_weap] 1 set gun_mag -1 else
			set gun_mag MACHINE_MAG
			set MAX_MACHINE_MAG 30
			ife kickbackpic 12 { state ar_mag_out_sounds ife MACHINE_MAG 0 shoot RIFLEMAGAZINE }
			ife kickbackpic 33
			{
			state ar_mag_in_sounds
			ifl cur_ammo MAX_MACHINE_MAG set MACHINE_MAG cur_ammo else set MACHINE_MAG MAX_MACHINE_MAG
			}
			ife kickbackpic 15 state JMOVESOUND2
			ife kickbackpic 45 state JMOVESOUND2
			ife kickbackpic 52 soundonce BOLT_CATCH

		ife kickbackpic 0
		ifand BITS_PRESS 128
			{
			 ife needs_pump[cur_weap] 0
			  ife player[].ammo_amount cur_weap 0
				{
				setp[].reloading 1
				setp[].kickback_pic 6
				setarray needs_pump[cur_weap] 1
				}
			}

		ife kickbackpic 20
		 ife needs_pump[cur_weap] 1
			{
			setp[].reloading 1
			setp[].kickback_pic 40
			}

		ifl MACHINE_MAG 1
		   ife player[].weapon_pos 0
			ife kickbackpic 0
		   {
			ifn cur_ammo 0
				{
				set WEAPON7_RELOAD 61
				setp[].reloading 1
				ife needs_pump[cur_weap] 1
					{
					setp[].kickback_pic 28
					setarray needs_pump[cur_weap] 0
					}
				else
				setp[].kickback_pic 6
				}
			}

	}
}
else
ife SPECIALIST_EQUIPMENT[45] 2 // LR300?
{
	smaxammo 7 300
	setarray WEAPON_TILE[7] 15895
	setarray weap_special[7] 16386
	setarray W_AMMO_TILE[7] 15906
	setarray ammo_amount[7] 30

	set WEAPON7_FIREDELAY 2
	set WEAPON7_TOTALTIME 3
	set WEAPON7_FLAGS 4
	set WEAPON7_SPAWN 0
	set WEAPON7_SHOOTS ZRIFLESHOTU
	set WEAPON7_INITIALSOUND 4
	set WEAPON7_SHOTSPERBURST 1
	set WEAPON7_CLIP 0
	set WEAPON7_RELOADSOUND1 4
	set WEAPON7_RELOADSOUND2 4
	set WEAPON7_FIRESOUND 4

	set WEAPON7_SELECTSOUND SELECT_M16

	ife cur_weap 7
	{
	set weapon_type 0
	ifg gl_countd 0 sub gl_countd 1
	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp LR300_FIRE }
	set GUN_VOLUME 18
	ifand gun_firemode 32768 // If GL is selected
	set GUN_AMMO_TYPES 2048 // set ammo types to m203 compatible
	else
	set GUN_AMMO_TYPES 32 // set firing menu to switching to gl
	set GUN_SIZE 2
	set GUN_HANDS 2
	state check_cased_grenades_avail

		ifand gun_firemode 16384 // Using holosight?
			{
			set GUN_MAX_SPREAD 16
			set GUN_ACCURACY 8
			ife kickbackpic 3 { set gun_recoil 3 add gun_spread 8 set gunsmoke_angle 0 state spawn_gunsmoke  }
			ifg kickbackpic 6 { set hide_xhair 0 xorvar gun_firemode 16384 }
			}
		else
			{
			set GUN_ACCURACY 16
			set GUN_MAX_SPREAD 32
			ife player[].weapon_pos 0
				{
				state spawn_lasersite
				seta[RETURN].x hitx
				seta[RETURN].y hity
				seta[RETURN].z hitz

				ifand SPECIALIST_CUSTOM[45] 1073741824 seta[RETURN].pal 1
				else ifand SPECIALIST_CUSTOM[45] 2147483648 seta[RETURN].pal 8
				else seta[RETURN].pal 0
				}
			ife kickbackpic 2 { set gun_recoil 5 add gun_spread 8 set gunsmoke_angle 64 state spawn_gunsmoke  }
			}
			ife needs_pump[cur_weap] 1 set gun_mag -1 else
			set gun_mag MACHINE_MAG
			set MAX_MACHINE_MAG 60
			ife kickbackpic 12 { state bgar_mag_out_sounds ife MACHINE_MAG 0 shoot RIFLEMAGAZINE }
			ife kickbackpic 30
			{
			state bgar_mag_in_sounds
			ifl cur_ammo MAX_MACHINE_MAG set MACHINE_MAG cur_ammo else set MACHINE_MAG MAX_MACHINE_MAG
			}

			ife kickbackpic 15 state JMOVESOUND2
			ife kickbackpic 45 state JMOVESOUND2
			ife kickbackpic 52 soundonce BOLT_CATCH

		ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }

					ife gl_countd 34 soundonce GL_OPEN2
					ife gl_countd 30 state shoot_empty_40mmshell
					ife gl_countd 16 soundonce GL_INSERT2
					ife gl_countd 8 soundonce GL_CLOSE2

				ifg gl_countd 44
					{
					sub wepsway_x 5
					sub wepsway_y 5
					}

// empty magazine removal
	ife kickbackpic 0
	ifand BITS_PRESS 128
	{
	 ife needs_pump[cur_weap] 0
	  ife player[].ammo_amount cur_weap 0
		{
		setp[].reloading 1
		setp[].kickback_pic 6
		setarray needs_pump[cur_weap] 1
		}
	}

	ife kickbackpic 20
	 ife needs_pump[cur_weap] 1
		{
		setp[].reloading 1
		setp[].kickback_pic 40
		}

	ifl MACHINE_MAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
		ifn cur_ammo 0
			{
			set WEAPON7_RELOAD 61
			setp[].reloading 1
			ife needs_pump[cur_weap] 1
				{
				setp[].kickback_pic 28
				setarray needs_pump[cur_weap] 0
				}
			else
			setp[].kickback_pic 6
			}
		}

	}
}
else // Steyr AUG?
{
smaxammo 7 400
setarray WEAPON_TILE[7] 5218
setarray W_AMMO_TILE[7] 5222
setarray ammo_amount[7] 50
setarray weap_special[7] 16384

set WEAPON7_INITIALSOUND 0
set WEAPON7_SHOOTS ARMOUR_PIERCING_SHOT
set WEAPON7_FIRESOUND 4
set WEAPON7_SHOTSPERBURST 1
set WEAPON7_FLAGS 12
set WEAPON7_RELOAD 85

	ifand JAMES_UPGRADE 4
		set WEAPON7_SELECTSOUND SELECT_HMG
	else
		set WEAPON7_SELECTSOUND SELECT_ASSAULTR

	ife cur_weap 7
	{
	set weapon_type 1
	set GUN_AMMO_TYPES 0
	set GUN_VOLUME 13
	set GUN_SIZE 1
	set GUN_HANDS 2
	ife needs_pump[cur_weap] 1 set gun_mag -1 else
	set gun_mag MACHINE_MAG
	ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp AUG_FIRE }
	ife kickbackpic 2 { set gunsmoke_angle 64 state spawn_gunsmoke }

		ifand JAMES_UPGRADE 4
			set MAX_MACHINE_MAG 100
			else
			set MAX_MACHINE_MAG 30
		ife kickbackpic 2
			{
			ife scope 1
				{
				ifand JAMES_UPGRADE 256 add gun_spread 3
				else add gun_spread 6
				}
			else
				{
				ifand JAMES_UPGRADE 256 add gun_spread 6
				else add gun_spread 10
				}
			ifand JAMES_UPGRADE 256 set gun_recoil 3 else
			set gun_recoil 5
			}

		ife kickbackpic 13 soundonce AUG_BOLT
        ife kickbackpic 10 soundonce AUG_MOVEMENT
		ife kickbackpic 46
			{
			state ar_mag_out_sounds
			ife MACHINE_MAG 0
				{
				ifand JAMES_UPGRADE 4 shoot BETA_MAG
				else shoot RIFLEMAGAZINE
				}
			}

		ife kickbackpic 60
		{
		state ar_mag_in_sounds
		ifl cur_ammo MAX_MACHINE_MAG set MACHINE_MAG cur_ammo else set MACHINE_MAG MAX_MACHINE_MAG
		}
		ife kickbackpic 73 soundonce AUG_MOVEMENT

// Empty mag strip?
	ife kickbackpic 0
	ifand BITS_PRESS 128
	{
	 ife needs_pump[cur_weap] 0
	  ife player[].ammo_amount cur_weap 0
		{
		setp[].reloading 1
		setp[].kickback_pic 6
		setarray needs_pump[cur_weap] 1
		}
	}

	ife kickbackpic 50
	 ife needs_pump[cur_weap] 1
		{
		setp[].reloading 1
		setp[].kickback_pic 70
		}

	ifl MACHINE_MAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
		ifn cur_ammo 0
			{
			setp[].reloading 1
			ife needs_pump[cur_weap] 1
				{
				setp[].kickback_pic 55
				setarray needs_pump[cur_weap] 0
				}
			else
			setp[].kickback_pic 6
			}
		}

	ifg scope 0
			{
			state TURNOFF_NVG
			set GUN_ACCURACY 2
			set GUN_MAX_SPREAD 8
			set WEAPON7_FIREDELAY 3
			set WEAPON7_TOTALTIME 4
			}
			else
				{
				set GUN_ACCURACY 4
				set GUN_MAX_SPREAD 32
				set WEAPON7_FIREDELAY 2
				set WEAPON7_TOTALTIME 3
				}

		ifg kickbackpic 5
			{
			set scope 0
			}

	}
}

// TRIPBOMB
ife SPECIALIST_EQUIPMENT[112] 2 // Rocket punch
{
setarray WEAPON_TILE[8] 29887
setarray ammo_amount[8] 1
setarray weap_special[8] 32768

set WEAPON8_SHOOTS 0
set WEAPON8_FIREDELAY 2
set WEAPON8_FLAGS 258
set WEAPON8_SHOTSPERBURST 1

ife cur_weap 8
	{
	set weapon_type 6
	set GUN_VOLUME 70
	set GUN_HANDS 1
	set GUN_AMMO_TYPES 256
	set GUN_SIZE 0
	set gun_mag -1
	set GUN_ACCURACY 32
	set GUN_MAX_SPREAD 0


	ife kickbackpic 0
		ife kickbackpic_2 0
		{
		ife SLO_MO_SHOWOFF 1 set kickbackpic_2 1
		 ifand BITS_PRESS 128 set kickbackpic_2 1
		}

	ifg kickbackpic_2 0
		{
		ifand BITS_PRESS 4 set kickbackpic_2 0
		ife kickbackpic_2 3 state jib_sounds
		ifand BITS_PRESS 128 ifge kickbackpic_2 5 ifle kickbackpic_2 6 set kickbackpic_2 5
		add kickbackpic_2 1
		ifg kickbackpic_2 10 set kickbackpic_2 0
		}

	ife kickbackpic 2
		{
		sound JS_ROCKETP
		set gunsmoke_angle 64 state spawn_gunsmoke set gun_recoil 5
		}
	ife kickbackpic 7 sound RPG7_LOAD
	}
}
else
{
setarray WEAPON_TILE[8] 5217
setarray ammo_amount[8] 1
setarray weap_special[8] 0

set WEAPON8_SHOOTS 0
set WEAPON8_FIREDELAY 2
set WEAPON8_FLAGS 256
set WEAPON8_SHOTSPERBURST 1

ife cur_weap 8
	{
	set weapon_type 6
	set GUN_VOLUME 0
	set GUN_HANDS 1
	set GUN_AMMO_TYPES 256
	set GUN_SIZE 0
	set gun_mag -1
	set GUN_ACCURACY 32
	set GUN_MAX_SPREAD 0
	}
}

// FREEZER
ife SPECIALIST_EQUIPMENT[22] 2 // using the AN-94?
	{
	setarray WEAPON_TILE[9] 13364
	setarray weap_special[9] 16392
	setarray W_AMMO_TILE[9] 13365
	setarray ammo_amount[9] 30

	set WEAPON9_HOLDDELAY 1
	set WEAPON9_SPAWN 0
	set WEAPON9_SHOOTS MSCORP_SHOT
	set WEAPON9_INITIALSOUND 4
	set WEAPON9_CLIP 0
	set WEAPON9_RELOADSOUND1 4
	set WEAPON9_RELOADSOUND2 4
	set WEAPON9_SELECTSOUND SELECT_AK

	ife cur_weap 9
	{
	set weapon_type 0
	set GUN_SIZE 2
	set GUN_HANDS 2
	ifg gl_countd 0 sub gl_countd 1
	set GUN_VOLUME 14

	state check_caseless_grenades_avail

		ifand gun_firemode 32768 // If GL is selected
		set GUN_AMMO_TYPES 4096 // set ammo types to gp25/30 compatible
		else
		set GUN_AMMO_TYPES 64 // set firing menu to switching to gl

		ifand gun_firemode 32768
			{
			ifand gun_firemode 16384 xorvar gun_firemode 16384
			}

			ife needs_pump[cur_weap] 1 set gun_mag -1 else
			set gun_mag rifle_mag
			ife kickbackpic 3 { set gunsmoke_angle 64 state spawn_gunsmoke set gun_recoil 5 }

			set max_rifle_mag 30
			ife kickbackpic 12 { state ar_mag_out_sounds ife rifle_mag 0 shoot RIFLEMAGAZINE }

			ife kickbackpic 33
				{
				state ar_mag_in_sounds
				ifl cur_ammo max_rifle_mag set rifle_mag cur_ammo else set rifle_mag max_rifle_mag
				}

			ife kickbackpic 15 state JMOVESOUND2

			ife kickbackpic 60 state JMOVESOUND2
			ife kickbackpic 63 soundonce VAL_SLIDE


				ifand gun_firemode 16384
						{
						ifand gun_firemode 32768 xorvar gun_firemode 32768
						set WEAPON9_FLAGS 16452
						set WEAPON9_FIREDELAY 2
						set WEAPON9_TOTALTIME 6
						ifl gun_mag 2 // Aim mode fires 2-burst shots so don't if they only have 1 round left
						{
						set WEAPON9_FIRESOUND AN-94_FIRE
						set WEAPON9_SHOTSPERBURST 1
						set GUN_ACCURACY 4
						ife kickbackpic 2
							{
							sub rifle_mag 1
							set gunsmoke_angle 0
							state spawn_gunsmoke
							}
						}
						else
						{
						set WEAPON9_FLAGS 16452
						set WEAPON9_FIRESOUND AN-94_FIRE2
						set WEAPON9_SHOTSPERBURST 2
						set GUN_ACCURACY 4
						set GUN_MAX_SPREAD 16
						ife kickbackpic 2
							{
							sub rifle_mag 2
							set gunsmoke_angle 0
							state spawn_gunsmoke
							}
						}
						ife kickbackpic 3 set gun_recoil 6
						ifg kickbackpic 6 { set hide_xhair 0 xorvar gun_firemode 16384 }
						ife kickbackpic 3 add gun_spread 8
						}
					else
					{
					set WEAPON9_FLAGS 68
					set WEAPON9_FIREDELAY 2
					set WEAPON9_TOTALTIME 4
					set WEAPON9_FIRESOUND 4
					set WEAPON9_SHOTSPERBURST 1
					set GUN_ACCURACY 8
					set GUN_MAX_SPREAD 48
					ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp AN-94_FIRE }
					ife kickbackpic 3
						{
						sub rifle_mag 1
						add gun_spread 8
						set gun_recoil 4
						set gunsmoke_angle 72
						state spawn_gunsmoke
						}
					}
				ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }
				ife gl_countd 40 sound AUG_MOVEMENT
				ife gl_countd 18 soundonce GL_RELOAD
				ife kickbackpic 46 soundonce AK_SLIDE
						ifg gl_countd 44
							{
							sub wepsway_x 5
							sub wepsway_y 5
							}

	ife kickbackpic 0
	ifand BITS_PRESS 128
		{
		 ife needs_pump[cur_weap] 0
		  ife player[].ammo_amount cur_weap 0
			{
			set WEAPON9_RELOAD 38
			setp[].reloading 1
			setp[].kickback_pic 6
			setarray needs_pump[cur_weap] 1
			}
		}

	ife kickbackpic 16
	 ife needs_pump[cur_weap] 1
		{
		setp[].reloading 1
		setp[].kickback_pic 35
		}

	ifl rifle_mag 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
		   {
			ifn cur_ammo 0
				{
				set WEAPON9_RELOAD 58
				setp[].reloading 1
				ife needs_pump[cur_weap] 1
					{
					setp[].kickback_pic 28
					setarray needs_pump[cur_weap] 0
					}
				else
				setp[].kickback_pic 6
				}
			}

		}
	}
else
ife SPECIALIST_EQUIPMENT[72] 2 // using the Gilboa?
	{
	setarray WEAPON_TILE[9] 19847
	setarray weap_special[9] 16386
	setarray W_AMMO_TILE[9] 19857
	setarray ammo_amount[9] 30

	set WEAPON9_FLAGS 68
	set WEAPON9_FIREDELAY 2
	set WEAPON9_TOTALTIME 4
	set WEAPON9_FIRESOUND 4
	set WEAPON9_SHOTSPERBURST 2
	set WEAPON9_HOLDDELAY 1
	set WEAPON9_SPAWN 0
	set WEAPON9_SHOOTS ARMOUR_PIERCING_SHOT
	set WEAPON9_INITIALSOUND 4
	set WEAPON9_CLIP 0
	set WEAPON9_RELOADSOUND1 4
	set WEAPON9_RELOADSOUND2 4

	set WEAPON9_SELECTSOUND SELECT_M16

	ife cur_weap 9
	{
	set weapon_type 1
	set GUN_SIZE 2
	set GUN_HANDS 2
	ifg gl_countd 0 sub gl_countd 1
	set GUN_VOLUME 28

	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp GILBOA_FIRE }

	state check_cased_grenades_avail

	ifand gun_firemode 32768 // If GL is selected
	set GUN_AMMO_TYPES 2048 // set ammo types to m203 compatible
	else
	set GUN_AMMO_TYPES 32 // set firing menu to switching to gl


	ifand gun_firemode 32768
		{
		ifand gun_firemode 16384 xorvar gun_firemode 16384
		}

		ife needs_pump[cur_weap] 1 set gun_mag -1 else
		set gun_mag rifle_mag
			ife kickbackpic 3 { set gunsmoke_angle 64 state spawn_gunsmoke set gun_recoil 16 }
			ife kickbackpic 12 sound AUG_MOVEMENT

			set max_rifle_mag 60
			ife kickbackpic 23 { state bgar_mag_out_sounds  ife rifle_mag 0 shoot RIFLEMAGAZINE }

			ife kickbackpic 33
				{
				state bgar_mag_in_sounds
				ifl cur_ammo max_rifle_mag set rifle_mag cur_ammo else set rifle_mag max_rifle_mag
				}

			ife kickbackpic 15 state JMOVESOUND2

			ife kickbackpic 60 state JMOVESOUND2
			ife kickbackpic 64 soundonce BOLT_CATCH

				ifand gun_firemode 16384
						{
						ifand gun_firemode 32768 xorvar gun_firemode 32768
						set GUN_ACCURACY 8
						set GUN_MAX_SPREAD 32
						ife kickbackpic 2
							{
							sub rifle_mag 2
							set gunsmoke_angle 0
							state spawn_gunsmoke
							}
						}
					else
					{
					set GUN_ACCURACY 16
					set GUN_MAX_SPREAD 96
					ife kickbackpic 2
						{
						sub rifle_mag 2

						set gunsmoke_angle 72
						state spawn_gunsmoke

						}
					}
				ife kickbackpic 3 { set gun_recoil 4 add gun_spread 8 }
				ifg kickbackpic 6 { set hide_xhair 0 ifand gun_firemode 16384 xorvar gun_firemode 16384 }

				ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }
				ife gl_countd 34 soundonce GL_OPEN2
				ife gl_countd 30 state shoot_empty_40mmshell
				ife gl_countd 16 soundonce GL_INSERT2
				ife gl_countd 8 soundonce GL_CLOSE2

			ife kickbackpic 46 state JMOVESOUND2
			ife kickbackpic 52 soundonce BOLT_CATCH
			ifg gl_countd 44
				{
				sub wepsway_x 5
				sub wepsway_y 5
				}

	ife kickbackpic 0
	ifand BITS_PRESS 128
		{
		 ife needs_pump[cur_weap] 0
		  ife player[].ammo_amount cur_weap 0
			{
			setp[].reloading 1
			setp[].kickback_pic 6
			set WEAPON9_RELOAD 43
			setarray needs_pump[cur_weap] 1
			}
		}

	ife kickbackpic 24
	 ife needs_pump[cur_weap] 1
		{
		setp[].reloading 1
		setp[].kickback_pic 36
		}

	ifl rifle_mag 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
		   {
			ifn cur_ammo 0
				{
				set WEAPON9_RELOAD 61
				setp[].reloading 1
				ife needs_pump[cur_weap] 1
					{
					setp[].kickback_pic 28
					setarray needs_pump[cur_weap] 0
					}
				else
				setp[].kickback_pic 6
				}
			}

		}
	}
else // Using the M4+Masterkey Shotgun?
	{
	setarray WEAPON_TILE[9] 5213
	setarray W_AMMO_TILE[9] 5219
	setarray weap_special[9] 49156
	setarray ammo_amount[9] 30

	set WEAPON9_FIREDELAY 2
	set WEAPON9_TOTALTIME 3
	set WEAPON9_HOLDDELAY 1
	set WEAPON9_FIRESOUND 4
	set WEAPON9_FLAGS 4
	set WEAPON9_SPAWN 0
	set WEAPON9_SHOOTS MSCORP_SHOT
	set WEAPON9_INITIALSOUND 4
	set WEAPON9_SHOTSPERBURST 1
	set WEAPON9_CLIP 0
	set WEAPON9_RELOADSOUND1 4
	set WEAPON9_RELOADSOUND2 4

	ifand JAMES_UPGRADE 32
		set WEAPON9_SELECTSOUND SELECT_HMG
	else
		set WEAPON9_SELECTSOUND SELECT_ASSAULTR

	ife cur_weap 9
	{
	set weapon_type 0
	set GUN_AMMO_TYPES 5
	set GUN_ACCURACY 8
	set GUN_MAX_SPREAD 32
	set GUN_SIZE 2
	set GUN_HANDS 2
	ifg gl_countd 0 sub gl_countd 1
	set GUN_VOLUME 14

	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp M16_FIRE }

		set gun_mag rifle_mag
			ife kickbackpic 2 { sub rifle_mag 1 set gun_recoil 10 add gun_spread 8 set gunsmoke_angle 64 state spawn_gunsmoke  }

			ifand JAMES_UPGRADE 32
			{
			set max_rifle_mag 100
			ife kickbackpic 12 { sound DRUM_OUT ife rifle_mag 0 shoot BETA_MAG }
			ife kickbackpic 33 sound DRUM_IN
			}
			else
			{
			set max_rifle_mag 30
			ife kickbackpic 12 { state ar_mag_out_sounds ife rifle_mag 0 shoot RIFLEMAGAZINE }
			ife kickbackpic 33 state ar_mag_in_sounds
			}
			ife kickbackpic 33
				{
				ifl cur_ammo max_rifle_mag set rifle_mag cur_ammo else set rifle_mag max_rifle_mag
				}

			ife kickbackpic 15 state JMOVESOUND2
			ife kickbackpic 48 state JMOVESOUND2
			ife kickbackpic 51 soundonce BOLT_CATCH

	  ifl rifle_mag 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
		ifn cur_ammo 0
			{
			set WEAPON9_RELOAD 61
			setp[].reloading 1
			setp[].kickback_pic 6
			}
		}

			ifg gl_countd 23
			ifl gl_countd 27
				{
				ifand AMMO_TYPES[cur_weap] 64 { set gun_pushback_power -128 state gun_pushback }
				sub wepsway_x 8
				sub wepsway_y 8
				}

			ifl ALTMAG 0 set ALTMAG 0

			ife ALTMAG 0 ife gl_countd 0 setarray needs_pump[cur_weap] 1

			ife needs_pump[cur_weap] 1
			 ifg ALTMAG 0
			  ife gl_countd 0
				{
				ifand JAMES_UPGRADE 512 nullop else
				set gl_countd 20
				}

					ife gl_countd 0
					{
					ifand AMMO_TYPES[cur_weap] 1 ifl explosive_shells 1 ife ALTMAG 0 { xorvar AMMO_TYPE 1 setarray AMMO_TYPES[cur_weap] AMMO_TYPE  }
					ifand AMMO_TYPES[cur_weap] 4 ifl flechete_shells 1 ife ALTMAG 0 { xorvar AMMO_TYPE 4 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
					ifand AMMO_TYPES[cur_weap] 64 ifl magnum_shells 1 ife ALTMAG 0 { xorvar AMMO_TYPE 64 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
					ifand AMMO_TYPES[cur_weap] 1024 ifl dragon_shells 1 ife ALTMAG 0 { xorvar AMMO_TYPE 1024 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
					}

			ife gl_countd 35
				{
				add ALTMAG 1
				ifand AMMO_TYPES[cur_weap] 1 { set LAST_SHELL_FIRED 1 sub explosive_shells 1 }
				else ifand AMMO_TYPES[cur_weap] 4 { set LAST_SHELL_FIRED 4 sub flechete_shells 1 }
				else ifand AMMO_TYPES[cur_weap] 64 { set LAST_SHELL_FIRED 64 sub magnum_shells 1 }
				else ifand AMMO_TYPES[cur_weap] 1024 { set LAST_SHELL_FIRED 1024 sub dragon_shells 1 }
				else
					{
					set LAST_SHELL_FIRED 0
					getp[].ammo_amount 2 temp3
					sub temp3 1
					setp[].ammo_amount 2 temp3
					}
				state sg_shell_sounds
				}
			ife gl_countd 28 set gl_countd 0
			ife gl_countd 25
				{
					ifg ALARM_DETECT 0 add ALARM_COUNTER 70

				sub ALTMAG 1 set gun_recoil 6
				set gunsmoke_angle 32 state spawn_gunsmoke
				set gun_pushback_power -32
				}
			ife gl_countd 16 ifand JAMES_UPGRADE 512 { state SHOTGUN_SHELL set gl_countd 0 }
			ife gl_countd 14 sound R870PUMP
			ife gl_countd 10 ife needs_pump[cur_weap] 0 state SHOTGUN_SHELL
			ife gl_countd 7 ife needs_pump[cur_weap] 1 setarray needs_pump[cur_weap] 0

	}
}

// EXPANDER
ife SPECIALIST_EQUIPMENT[49] 2
	setarray W_AMMO_TILE[11] 15927
ife SPECIALIST_EQUIPMENT[98] 2
	setarray W_AMMO_TILE[11] 29119
else
	{
		setarray W_AMMO_TILE[11] 5226
		setarray ammo_amount[11] 5
		setarray weap_special[11] 0
		smaxammo 11 50

		set WEAPON11_CLIP 0
		set WEAPON11_RELOAD 52
		set WEAPON11_FIREDELAY 2
		set WEAPON11_TOTALTIME 4
		set WEAPON11_HOLDDELAY 0
		set WEAPON11_FLAGS 16384
		set WEAPON11_SHOOTS 5125
		set WEAPON11_SPAWNTIME -1
		set WEAPON11_SPAWN 0
		set WEAPON11_SHOTSPERBURST 1
		set WEAPON11_INITIALSOUND 0
		set WEAPON11_FIRESOUND 4
		set WEAPON11_SOUND2TIME 15
		set WEAPON11_SOUND2SOUND 4
		set WEAPON11_RELOADSOUND1 4
		set WEAPON11_RELOADSOUND2 4
		set WEAPON11_SELECTSOUND SELECT_HT_SHOTGUN

			ife cur_weap 11
			{
			set weapon_type 9
			ifand MAGIC_UPGRADE[0] 1 set GUN_AMMO_TYPES 16384 else
			set GUN_AMMO_TYPES 0
			set GUN_ACCURACY 8
			set GUN_MAX_SPREAD 0
			set GUN_VOLUME 40
			set GUN_SIZE 1
			set GUN_HANDS 2
			set gun_mag SLUGSHOTMAG
			ife kickbackpic 2
				{
				espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp SLUGFIRE
				set gun_recoil 6
				sub SLUGSHOTMAG 1
				set gunsmoke_angle 64
				state spawn_gunsmoke
				set gun_pushback_power -32
				state gun_pushback
				}

			ifl kickbackpic 4
			 ife player[].weapon_pos 0
				{
				state spawn_lasersite
				seta[RETURN].x hitx
				seta[RETURN].y hity
				seta[RETURN].z hitz
				}


			ife kickbackpic 7 sound LASERSIGHT_OFF
			ife kickbackpic 50 sound LASERSIGHT_ON

			ife kickbackpic 13 state JMOVESOUND2
			ife kickbackpic 15 sound XM8_RELOAD
			ife kickbackpic 20 ife SLUGSHOTMAG 0 shoot RIFLEMAGAZINE

			ife kickbackpic 43 state JMOVESOUND2
			ife kickbackpic 45
				{
				ifl cur_ammo 5 set SLUGSHOTMAG cur_ammo else set SLUGSHOTMAG 5
				}
			ifand gun_firemode 16384
				{
				ifg kickbackpic 6 xorvar gun_firemode 16384
				}
		  ifl SLUGSHOTMAG 1
		   ife player[].weapon_pos 0
			ife kickbackpic 0
			   {
				ifn cur_ammo 0
					{
					setp[].reloading 1
					setp[].kickback_pic 6
					}
				}
			}
	}

}
ends
