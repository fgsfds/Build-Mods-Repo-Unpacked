/*
-------------------------------------------------------------------------------
===============================================================================

         -ooo:             +oo-            `+oo.       ./+oooooooooo+/:
        /NMMMN+            NMMNo`         -dMMM/      .mMMNmmmmmmmmmMMNo
       /NMd:mMMo           NMMNMd:      `oNMNMM/      :MMM/.........mMMh
      oNMd. -mMMy`         NMN:mMNs`   -hMm/mMM/      :MMM:         ::-.
    `sMMh`   .dMMh`        NMN .sNMd:`oNMh. mMM/      :MMM:
   `yMMMdhhhhhmMMMd.       NMN   /mMNdMm+`  mMM/      :MMM:         ss+:
  `hMMdhhhhhhhhhmMMm-      NMN    .yMMh.    mMM/      :MMM/.........mMMh
 .dMMs`         .hMMm:     NMN      :/`     mMM/      .mMMNmmmmmmmmmMMNo
 :oo+            `+oo+     +o+              +oo.       ./++ooooooooo+/:

###############################################################################
+ The AMC Squad
+ CON code by James Stanfield, Cedric "Sangman" Haegeman, Dino Bollinger,
+              Mikko Sandt, Cedric "Zaxtor" Lutes and Dan "Danarama" Gaskill
-------------------------------------------------------------------------------
* See AMC_MAIN.CON for a full list of script authors.

Feel free to use any code in the game for your own uses; just make
sure to mention the authors and/or "The AMC Squad" in your credits.
--------------------------------------------------------------------------------
NOTES:

--------------------------------------------------------------------------------
*/


// Rusty Nails

action RNGROWING 5251 1 5 1 1
action RNSTAND 5251 1 5 1 1
action RNSTAND_IDLE 5271 1 5 1 1
action RNJPHOUVER  5286   1   5   1
action RNWALK    5251   4   5   1   16
action RNRUN     5251   4   5   1   10
action RNJUMPING   5281   2   5   1   30
action RNFALLING   5286   1   5

action RNDUCKING   5323   1   5
action RNCRAWLING  5328   4   5   1   20

action RNAKICKING  5256   2   5   1   25
action RNFLINTCHING  5291  1   1   1   10
action RNTHROWNBACK  5291  5   1   1   18
action RNFROZEN     5251  1   5
action RNLYINGDEAD   5297  1   1
action RNSWIMMINGGO   5298   1   5   1   10
action RNSWIMMING   5298   4   5   1   13
action RNSWIMMINGWAIT 5298   1   5   1   13
action RNTREDWATER  5298   2   5   1   17

action RN_ONBIKE 16040 1 5 1 0

// Rusty Nails ringworld

action RN2GROWING 26539 1 5 1 1
action RN2STAND 26464 1 5 1 1
action RN2STAND_IDLE 26459 1 5 1 1
action RN2JPHOUVER  26489   1   5   1
action RN2WALK    26464   4   5   1   16
action RN2RUN     26464   4   5   1   10
action RN2JUMPING   26489   1   5   1   30
action RN2FALLING   26484   1   5
action RN2DUCKING   26494   1   5
action RN2CRAWLING  26499   4   5   1   20
action RN2AKICKING  26464   2   5   1   25
action RN2FLINTCHING  26539  1   1   1   10
action RN2THROWNBACK  26539  5   1   1   18
action RN2FROZEN     26539  1   5
action RN2LYINGDEAD   26544  1   1
action RN2SWIMMINGGO   26519   1   5   1   10
action RN2SWIMMING   26519   4   5   1   13
action RN2SWIMMINGWAIT 26519   1   5   1   13
action RN2TREDWATER  26519   2   5   1   17

action RN2_ONBIKE 16040 1 5 1 0

// **************************************R U S T Y   N A I L S   ANIMS******************************************************

defstate check_rnstandard
ifaction RNSTAND ifn amc_base 0 action RNSTAND_IDLE
ifaction RNSTAND ife TIMEZONE 10 action RNSTAND_IDLE
ifaction RNSTAND ife player[].holster_weapon 1 action RNSTAND_IDLE
ifaction RNSTAND_IDLE ife player[].holster_weapon 0 action RNSTAND
  ifp pwalking
    action RNWALK
  else
    ifl QUICKK 13
	 ife camerasprite -1
      action RNAKICKING
  else
    ifp prunning
      action RNRUN
  else
    ifp pjumping
      action RNJUMPING
  else
    ifp pducking
	 ife camerasprite -1
      action RNDUCKING
ends

defstate RUSTY_ANIMS

ifaction 0 ife CHARSELECT 0 action RNSTAND
ifg player_bike 0 action RN_ONBIKE

	ifaction RN_ONBIKE
	ife player_bike 0 action RNSTAND

  ifaction RNFLINTCHING
  {
    ifactioncount 2
      action RNSTAND
    break
  }

  ifinwater
  {
    ifaction RNTREDWATER
    {
      ifp pwalking prunning
        action RNSWIMMINGGO
    }
    else
      ifp pstanding pwalkingback prunningback
        action RNTREDWATER
    else
    {
      ifaction RNSWIMMING
      {
        ifrnd 4
          spawn WATERBUBBLE
        ifactioncount 4
          action RNSWIMMINGWAIT
      }
      else
        ifaction RNSWIMMINGWAIT
      {
        ifactioncount 2
          action RNSWIMMINGGO
      }
      else
        ifaction RNSWIMMINGGO
      {
        ifactioncount 2
          action RNSWIMMING
      }
      else
        action RNTREDWATER
    }

    ifrnd 4
      spawn WATERBUBBLE // For effect

    break
  }
  else ifp pjetpack
  {
    ifaction RNJPHOUVER
    {
      ifactioncount 4
        resetactioncount
    }
    else
      action RNJPHOUVER
    break
  }
  else
  {
    ifaction RNTREDWATER
      action RNSTAND
    ifaction RNSWIMMING
      action RNSTAND
    ifaction RNSWIMMINGWAIT
      action RNSTAND
    ifaction RNSWIMMINGGO
      action RNSTAND
    ifaction RNJPHOUVER
      action RNFALLING
  }

  ifaction RNFALLING
  {
    ifp ponground
      { action RNSTAND state landsounds }
    else
    {
      ifp pfalling
        break
      else
        state check_rnstandard
    }
  }

  ifaction RNDUCKING
  {
    ifgapzl 48
    {
      ifp pwalking pwalkingback prunning prunningback
        action RNCRAWLING
    }
    else ifp pducking
    {
      ifp pwalking pwalkingback prunning prunningback
        action RNCRAWLING
    }
    else
    {
      ifp pstanding
         action RNSTAND
      else
        state check_rnstandard
    }
  }

  else ifaction RNCRAWLING
  {
    ifgapzl 48
    {
      ifp pstanding
        action RNCRAWLING
    }
    else
      ifp pducking
    {
      ifp pstanding
        action RNDUCKING
    }
    else
    {
      ifp pstanding
       action RNSTAND
      else
        state check_rnstandard
    }
  }
  else
    ifgapzl 48
      action RNDUCKING

  else
    ifaction RNJUMPING
  {
    ifp ponground
       action RNSTAND
    else
      ifactioncount 4
        ifp pfalling
          action RNFALLING
  }


  ifp pfalling
    action RNFALLING
  else
    ifaction RNSTAND
      state check_rnstandard
  else
    ifaction RNSTAND_IDLE
      state check_rnstandard
  else
    ifaction RNAKICKING
  {
    ifactioncount 2
      action RNSTAND
    break
  }
  else
    ifaction RNWALK
  {
    ifp pfalling
      action RNFALLING
    else
      ifp pstanding
        action RNSTAND
    else
      ifp prunning
        action RNRUN
    else
      ifp pjumping
        action RNJUMPING
    else
      ifp pducking
        action RNDUCKING
  }

  else
    ifaction RNRUN
  {
    ifp pstanding
       action RNSTAND
    else
      ifp pwalking
        action RNWALK
    else
      ifp pjumping
        action RNJUMPING
    else
      ifp pducking
        action RNDUCKING
  }
ends


// **************************************R U S T Y   N A I L S   ANIMS******************************************************

defstate check_rn2standard
ifaction RN2STAND ifn amc_base 0 action RN2STAND_IDLE
ifaction RN2STAND ife TIMEZONE 10 action RN2STAND_IDLE
ifaction RN2STAND ife player[].holster_weapon 1 action RN2STAND_IDLE
ifaction RN2STAND_IDLE ife player[].holster_weapon 0 action RN2STAND
  ifp pwalking
    action RN2WALK
  else
    ifl QUICKK 13
	 ife camerasprite -1
      action RN2AKICKING
  else
    ifp prunning
      action RN2RUN
  else
    ifp pjumping
      action RN2JUMPING
  else
    ifp pducking
	 ife camerasprite -1
      action RN2DUCKING
ends

defstate RUSTY2_ANIMS

ifaction 0 ife CHARSELECT 0 action RN2STAND
ifg player_bike 0 action RN2_ONBIKE

	ifaction RN2_ONBIKE
	ife player_bike 0 action RN2STAND

  ifaction RN2FLINTCHING
  {
    ifactioncount 2
      action RN2STAND
    break
  }

  ifinwater
  {
    ifaction RN2TREDWATER
    {
      ifp pwalking prunning
        action RN2SWIMMINGGO
    }
    else
      ifp pstanding pwalkingback prunningback
        action RN2TREDWATER
    else
    {
      ifaction RN2SWIMMING
      {
        ifrnd 4
          spawn WATERBUBBLE
        ifactioncount 4
          action RN2SWIMMINGWAIT
      }
      else
        ifaction RN2SWIMMINGWAIT
      {
        ifactioncount 2
          action RN2SWIMMINGGO
      }
      else
        ifaction RN2SWIMMINGGO
      {
        ifactioncount 2
          action RN2SWIMMING
      }
      else
        action RN2TREDWATER
    }

    ifrnd 4
      spawn WATERBUBBLE // For effect

    break
  }
  else ifp pjetpack
  {
    ifaction RN2JPHOUVER
    {
      ifactioncount 4
        resetactioncount
    }
    else
      action RN2JPHOUVER
    break
  }
  else
  {
    ifaction RN2TREDWATER
      action RN2STAND
    ifaction RN2SWIMMING
      action RN2STAND
    ifaction RN2SWIMMINGWAIT
      action RN2STAND
    ifaction RN2SWIMMINGGO
      action RN2STAND
    ifaction RN2JPHOUVER
      action RN2FALLING
  }

  ifaction RN2FALLING
  {
    ifp ponground
      { action RN2STAND state landsounds }
    else
    {
      ifp pfalling
        break
      else
        state check_rn2standard
    }
  }

  ifaction RN2DUCKING
  {
    ifgapzl 48
    {
      ifp pwalking pwalkingback prunning prunningback
        action RN2CRAWLING
    }
    else ifp pducking
    {
      ifp pwalking pwalkingback prunning prunningback
        action RN2CRAWLING
    }
    else
    {
      ifp pstanding
         action RN2STAND
      else
        state check_rn2standard
    }
  }

  else ifaction RN2CRAWLING
  {
    ifgapzl 48
    {
      ifp pstanding
        action RN2CRAWLING
    }
    else
      ifp pducking
    {
      ifp pstanding
        action RN2DUCKING
    }
    else
    {
      ifp pstanding
       action RN2STAND
      else
        state check_rn2standard
    }
  }
  else
    ifgapzl 48
      action RN2DUCKING

  else
    ifaction RN2JUMPING
  {
    ifp ponground
       action RN2STAND
    else
      ifactioncount 4
        ifp pfalling
          action RN2FALLING
  }


  ifp pfalling
    action RN2FALLING
  else
    ifaction RN2STAND
      state check_rn2standard
  else
    ifaction RN2STAND_IDLE
      state check_rn2standard
  else
    ifaction RN2AKICKING
  {
    ifactioncount 2
      action RN2STAND
    break
  }
  else
    ifaction RN2WALK
  {
    ifp pfalling
      action RN2FALLING
    else
      ifp pstanding
        action RN2STAND
    else
      ifp prunning
        action RN2RUN
    else
      ifp pjumping
        action RN2JUMPING
    else
      ifp pducking
        action RN2DUCKING
  }

  else
    ifaction RN2RUN
  {
    ifp pstanding
       action RN2STAND
    else
      ifp pwalking
        action RN2WALK
    else
      ifp pjumping
        action RN2JUMPING
    else
      ifp pducking
        action RN2DUCKING
  }
ends

defstate RUSTY_REVOLVER_STUFF
	ifand gun_firemode 64 // two of them?
		{
		ifand gun_firemode_two 16 xorvar gun_firemode_two 16
		set GUN_HANDS 2
		set GUN_VOLUME 40
		set GUN_ACCURACY 8
		set WEAPON1_SHOTSPERBURST 2
		set WEAPON1_RELOAD 48
		set GUN_MAX_SPREAD 48
		set MAXPISTOLMAG 12

        set WEAPON1_FLAGS 16448
		}
	else
		{
		set GUN_VOLUME 20
		set GUN_ACCURACY 4
		set WEAPON1_SHOTSPERBURST 0
		set WEAPON1_RELOAD 30
		set GUN_MAX_SPREAD 64
		set MAXPISTOLMAG 6

		// fan the hammer
		ifand gun_firemode_two 16
			{
			set GUN_HANDS 2
			set WEAPON1_FLAGS 0
			}
		else
			{
			set GUN_HANDS 1
			set WEAPON1_FLAGS 16448
			}
		}

	ife kickbackpic 0
		ife kickbackpic_2 0
		{
		ife SLO_MO_SHOWOFF 1 set kickbackpic_2 1
		 ifand BITS_PRESS 128
			set kickbackpic_2 1
		}

	ifg kickbackpic_2 0
		{
		ifand BITS_PRESS 4 set kickbackpic_2 0
		ife kickbackpic_2 1 { set gun_recoil 5 sound R_TWIRL }
		add kickbackpic_2 1
		ifg kickbackpic_2 10 set kickbackpic_2 0
		}

	ifg kickbackpic 1
	 ifl kickbackpic 9
		{
		ifand gun_firemode_two 16
			{
			ife kickbackpic 8
				{
				ife SPECIALIST_EQUIPMENT[41] 2 sound GR_RHAM
				else sound R_HAMMER
				}
			}
		else
			{
			ifand BITS_PRESS 4 ifg PISTOLMAG 0 setplayer[].kickback_pic 1
			}
		}
ends

// Rusty's alternate fire code ==================================================================================================

defstate rusty_alt_fire

ife CHAR 5
{
	ife cur_weap 7
	  ife kickbackpic_2 0
	   ife weaponcount 0
	    ifge p_green_mana 4
		 ifand MAGIC_UPGRADE[5] 1
			{
			set kickbackpic_2 1
			sub p_green_mana 4
			}

 ife cur_weap 1 // fan the hammer
    {
    ife SPECIALIST_EQUIPMENT[29] 2 break
        ifcount 13
            {
            sound JMOVE4
            setplayer[].weapon_pos 5
            xorvar gun_firemode_two 16
            resetcount
            }
    }
    ife cur_weap 3
    {
        ife kickbackpic 0
        {
            ife SPECIALIST_EQUIPMENT[9] 2 // M41C's flamethrower
            {
            getp[].ammo_amount 7 alt_temp1
            ifg alt_temp1 1
                {
                ifl gl_countd 43 { sub alt_temp1 2 setp[].ammo_amount 7 alt_temp1 set gl_countd 46 }
                }
            else
            soundonce DRY_FIRE
            }
        else
         ife SPECIALIST_EQUIPMENT[27] 2
                {
                 ifcount 13
                    {
                    sound AUG_MOVEMENT
                    ifand gun_firemode 16384
                        {
                        set hide_xhair 0
                        ifand gun_firemode 32768 xorvar gun_firemode 32768
                        xorvar gun_firemode 16384
                        }
                        else
                        {
                        set hide_xhair 1
                        ifand gun_firemode 32768 xorvar gun_firemode 32768
                        xorvar gun_firemode 16384
                        }
                    resetcount
                    }
                }
        }
    }

    ife cur_weap 4
    {
         ife kickbackpic 0
            {
                getp[].ammo_amount 4 alt_temp1
                ifg alt_temp1 0
                 {
                 ifg ROCKETMAG 0
                    {
                    setp[].kickback_pic 2
                    sub wepsway_x 10
                    sub wepsway_y 10
                    globalsound RL_NAILB
                    sub alt_temp1 1
                    setp[].ammo_amount 4 alt_temp1
                    sub ROCKETMAG 1
					ife ARTIFACTS_LOADOUT[CHAR] 7 // book of nails?
						{
						shoot 6816 shoot 6816 shoot 6816 shoot 6816 shoot 6816 shoot 6816 shoot 6816 shoot 6816
						}
					else
						{
						shoot 6826 shoot 6826 shoot 6826 shoot 6826 shoot 6826 shoot 6826 shoot 6826 shoot 6826
						}
                    }
                else soundonce DRY_FIRE
                }
            }
    }

	ife cur_weap 6
	ife kickbackpic 0
			{
			soundonce MINE_DETONATE
			set RUSTY_MINE_GUN 4
			}
	ife cur_weap 9
	 ifcount 13
		{
		sound JMOVE8
		ifand gun_firemode 16384
			{
			set hide_xhair 0
			xorvar gun_firemode 16384
			}
		else
			{
			set hide_xhair 1
			xorvar gun_firemode 16384
			ifand gun_firemode 32768 xorvar gun_firemode 32768
			}
		resetcount
		}
	ife cur_weap 11
	ife kickbackpic 0
			{
			soundonce MINE_DETONATE
			set RUSTY_MINE_GUN 4
			}

}

ends

defstate PS_RUSTY // ===============================================================================================================================================================================================
{
set P_GENDER MALE
ifand CHAR_APP 32
ifn TIMEZONE 21
	{
	ifaction ZERO action RN2STAND
	ifaction RNSTAND action RN2STAND
	ife FIRE_SUIT 1 ifaction RN2STAND action ES_STAND
	ife JUGGERN_SUIT 1 ifaction RN2STAND action JG_STAND
	ife SPACE_SUIT 1 ifaction RN2STAND action SS_STAND
	ife on_tripwire 1 action RN2STAND
	ifl SLIDE_KICK 27 action RN2DUCKING
	}
else
	{
	ifaction ZERO action RNSTAND
	ife FIRE_SUIT 1 ifaction RNSTAND action ES_STAND
	ife JUGGERN_SUIT 1 ifaction RNSTAND action JG_STAND
	ife SPACE_SUIT 1 ifaction RNSTAND action SS_STAND
	ife on_tripwire 1 action RNSTAND
	ifl SLIDE_KICK 27 action RNDUCKING
	}

qputs 3 Coffee Thermos

qputs 6 Heavy duty boots
qputs 75 Heavy duty boots: %d %
set temp player[].boot_amount
ife PERSONNEL_RESEARCH[26] 2 div temp 3 else div temp 2
qsprintf 75 75 temp

ife HELMET_LOADOUT[CHAR] 4
	{
	qputs 101 Ghost vision goggles
	qputs 106 Ghost vision on
	qputs 107 Ghost vision off
	}
else
ife HEAT_GOGGLES 1
	{
	qputs 101 Heat vision shades
	qputs 106 Heat vision on
	qputs 107 Heat vision off
	}
else
	{
	qputs 101 Night vision shades
	qputs 106 Night vision shades on
	qputs 107 Night vision shades off
	}

qputs 90 Turbo Caffeine Pills
qputs 12 Used Turbo Caffeine Pills

qputs 89 Scuba Gear

qputs 47 Throwing Star Belt activated
qputs 48
qputs 49 Throwing Star Belt not found yet!
qputs 51 Throwing Star Belt
qputs 91 Throwing Star Belt

qputs 88 Hoverwatch
qputs 50 Hoverwatch not found yet!
qputs 52 Hoverwatch on
qputs 53 Hoverwatch off

qputs 102 We're gonna fry your ass, Rusty!

state mind_shield_state

setp[].knuckle_incs 0

getp[].holoduke_on temp
ifn temp -1
{
stopsound TELEPORTER
sound THROWING_STARBELT
shoot 3790
eshoot 3790 geta[RETURN].ang temp add temp 32 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 32 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp add temp 96 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 96 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp add temp 128 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 128 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp add temp 256 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 256 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp add temp 384 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 384 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp add temp 512 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 512 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp add temp 640 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 640 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp add temp 768 seta[RETURN].ang temp
eshoot 3790 geta[RETURN].ang temp sub temp 768 seta[RETURN].ang temp

getp[].holoduke_amount temp
ife temp 2399 setp[].holoduke_amount 1600
else ife temp 1599 setp[].holoduke_amount 800
else ife temp 799 { setp[].holoduke_amount 0 setp[].inven_icon 0 }
setp[].holoduke_on -1
}

smaxammo 1 200
smaxammo 3 300
smaxammo 4 80
smaxammo 6 50
smaxammo 7 300
smaxammo 9 300
smaxammo 11 10

set CKNEE 6821


set CTRIPBOMB 6863

set CKEYCARDTILE 6787
set CKEYCARDTILE2 6788
set CKEYCARDTILE3 6789

set CDETON 2570
set CTIP 8486
set CHOLDING_R 9439
set CHOLDING_L 9439
set CHOLDING_3 12230

set C_ARM_1 6903
set C_ARM_2 9005

set C_PISTOL_R 8995
set C_PISTOL_L 8995

set C_HAND_1 7840
set C_HAND_2 7841

set c_medikit 6869
set c_steroids 6864
set c_holoduke 6871
set c_jetpack 6865

set c_nvg_heat 6877
set c_nvg_normal 6870

setuserdef[].userquote_xoffset -25
setuserdef[].userquote_yoffset 105

state DISP_nvg

set c_scuba 6872
set c_boots 6866
set c_armour 6868
set c_heavy_armour 6867

ifg AGENT_FATIGUE[CHAR] 5000 ifg SKILL_LEVEL 2 set pmax_stamina 70
else
	{
	ife PERSONNEL_RESEARCH[25] 2 set pmax_stamina 130 // improved shoes?
	else set pmax_stamina 100
	}

set CPIPEBOMB 6828

// weapon pickup sounds
setarray wep_get_sound[1] PICK_PISTOL
setarray wep_get_sound[2] PICK_SHOTG
setarray wep_get_sound[3] PICK_RIFLE
setarray wep_get_sound[4] PICK_BIGGUN

setarray wep_get_sound[6] PICK_PISTOL
setarray wep_get_sound[7] PICK_ENERG
setarray wep_get_sound[9] PICK_RIFLE

// select sounds
set WEAPON1_SELECTSOUND SELECT_PISTOL
set WEAPON2_SELECTSOUND SELECT_SHOTGUN
set WEAPON3_SELECTSOUND SELECT_AK
set WEAPON4_SELECTSOUND SELECT_WEAPON
set WEAPON6_SELECTSOUND SELECT_PISTOL
set WEAPON7_SELECTSOUND SELECT_HT_ASSAULTR
set WEAPON9_SELECTSOUND SELECT_M16
set WEAPON11_SELECTSOUND SELECT_PISTOL

ife SHOOTDYNAMITE THISACTOR { ife ARTIFACTS_LOADOUT[5] 5 { shoot CHARMED_DYNA set artifact_used 60 } else shoot DYNAMITESTICK set SHOOTDYNAMITE -1 }

// MELEE
ife temp_weap 0
{
	set WEAPON0_TOTALTIME 17
	set WEAPON0_HOLDDELAY 17
	set WEAPON0_FIREDELAY 7
	set WEAPON0_FIRESOUND 532
	set WEAPON0_SHOOTS KNEE

ife cur_weap 0
	{
	set gun_mag -1
	set GUN_HANDS 1
	ife kickbackpic 15 { sound PUNCH shoot KNEE }
	state UPPERCUT_STUFF
	}
}


// PISTOL
ife SPECIALIST_EQUIPMENT[29] 2 // using the microuzi?
{
smaxammo 1 400
setarray WEAPON_TILE[1] 13423
setarray weap_special[1] 0
setarray W_AMMO_TILE[1] 5221
setarray ammo_amount[1] 25

set WEAPON1_CLIP 0
set WEAPON1_RELOAD 38
set WEAPON1_HOLDDELAY 0
set WEAPON1_SHOOTS 0
set WEAPON1_SPAWNTIME 2
set WEAPON1_SPAWN 4
set WEAPON1_SHOTSPERBURST 0
set WEAPON1_INITIALSOUND 0
set WEAPON1_FIRESOUND 4
set WEAPON1_SOUND2TIME 0
set WEAPON1_SOUND2SOUND 0
set WEAPON1_RELOADSOUND1 4
set WEAPON1_RELOADSOUND2 4
set WEAPON1_FIREDELAY 2
set WEAPON1_TOTALTIME 3

set WEAPON1_FLAGS 4


	ife cur_weap 1
	{
	set weapon_type 0
	set GUN_VOLUME 10
	set GUN_AMMO_TYPES 0
	set GUN_ACCURACY 8
	set GUN_MAX_SPREAD 32
	set GUN_SIZE 0
	set GUN_HANDS 1
	set gun_mag PISTOLMAG
	set MAXPISTOLMAG 25
	ife kickbackpic 1
			{
			shoot NINEMM_CALIBRE
			shoot NINEMM_SHELL
			sub PISTOLMAG 1
			set gunsmoke_angle 64 state spawn_gunsmoke
			}
		ife kickbackpic 2
			{
			espawn SOUND_SPRITE
			state SPAWN_IN_PLAYER_FRONT
			setactorvar[RETURN].temp MICRO_UZI_F
			add gun_spread 6
			set gun_recoil 5
			ifvarl gun_mag 6 sound MAG_LOW
			}
		ife kickbackpic 13 { state smg_mag_out_sounds ife PISTOLMAG 0 shoot SMGMAGAZINE }

		ife kickbackpic 28
			{
			state smg_mag_in_sounds
			ifl cur_ammo MAXPISTOLMAG { set PISTOLMAG cur_ammo } else set PISTOLMAG MAXPISTOLMAG
			}

		ifl PISTOLMAG 1
		   ife player[].weapon_pos 0
		  ife kickbackpic 0
		{
			ifn cur_ammo 0
				{
				setp[].reloading 1
				setp[].kickback_pic 6
				}
		}

	}
}
else
ife SPECIALIST_EQUIPMENT[24] 2 // Remington 1858 pistols?
	{
	smaxammo 1 240
	setarray WEAPON_TILE[1] 13376
	ifand guns_akimbo 4 setarray weap_special[1] 49153 else setarray weap_special[1] 49152
	setarray W_AMMO_TILE[1] 6847
	setarray ammo_amount[1] 18

	set WEAPON1_CLIP 0
	set WEAPON1_FIREDELAY 2
	set WEAPON1_FLAGS 16448
	set WEAPON1_TOTALTIME 9
	set WEAPON1_RELOAD 30
	set WEAPON1_HOLDDELAY 0
	set WEAPON1_SHOOTS 2537
	set WEAPON1_SPAWNTIME 2
	set WEAPON1_SPAWN 0
	set WEAPON1_INITIALSOUND 0
	set WEAPON1_FIRESOUND 4
	set WEAPON1_SOUND2TIME 0
	set WEAPON1_SOUND2SOUND 0
	set WEAPON1_RELOADSOUND1 4
	set WEAPON1_RELOADSOUND2 4

		ife cur_weap 1
		{
		set weapon_type 0
			set GUN_AMMO_TYPES 0
			set GUN_SIZE 0

			state RUSTY_REVOLVER_STUFF

			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp REVOLVER2FIRE }

			set gun_mag PISTOLMAG

			ife kickbackpic 2 { ifand gun_firemode 64 sub PISTOLMAG 2 else sub PISTOLMAG 1 }
			ife kickbackpic 3 { add gun_spread 24 set gun_recoil 6 }
			ife kickbackpic 4 {
			set gunsmoke_angle 64 state spawn_gunsmoke ifand gun_firemode 64 { set gunsmoke_angle -64 state spawn_gunsmoke  } }

			ife kickbackpic 14
				{
				state revolver_silver_eject
				sub PISTOLMAG temp4
				}
			ife kickbackpic 16
				{
			   ifl cur_ammo 6 set PISTOLMAG cur_ammo else set PISTOLMAG 6
				}

			ife kickbackpic 32 state revolver_silver2_eject
			ife kickbackpic 34
				{
			    ifl cur_ammo 12 set PISTOLMAG cur_ammo
				else set PISTOLMAG 12
				}

		  ifl PISTOLMAG 1
		   ife player[].weapon_pos 0
			ife kickbackpic 0
		   {
		   ifn cur_ammo 0
			   {
			   setp[].reloading 1
			   setp[].kickback_pic 10
			   }
		   }

		}
	}
else ife SPECIALIST_EQUIPMENT[41] 2 // Golden revolvers?
	{
	smaxammo 1 120
	setarray WEAPON_TILE[1] 14625
	ifand guns_akimbo 4 setarray weap_special[1] 49153 else setarray weap_special[1] 49152
	setarray W_AMMO_TILE[1] 6851
	setarray ammo_amount[1] 6

	set WEAPON1_CLIP 0
	set WEAPON1_FIREDELAY 2
	set WEAPON1_FLAGS 16448
	set WEAPON1_TOTALTIME 9
	set WEAPON1_RELOAD 30
	set WEAPON1_HOLDDELAY 0
	set WEAPON1_SHOOTS GOLDEN_SHOT_HIGH
	set WEAPON1_SPAWNTIME 2
	set WEAPON1_SPAWN 0
	set WEAPON1_INITIALSOUND 0
	set WEAPON1_FIRESOUND 4
	set WEAPON1_SOUND2TIME 0
	set WEAPON1_SOUND2SOUND 0
	set WEAPON1_RELOADSOUND1 4
	set WEAPON1_RELOADSOUND2 4

	ife cur_weap 1
	{
	set weapon_type 3
		set GUN_AMMO_TYPES 0
		set GUN_SIZE 0

		state RUSTY_REVOLVER_STUFF

			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp GOLREV_F }

		set gun_mag PISTOLMAG
		ife kickbackpic 2 { ifand gun_firemode 64 sub PISTOLMAG 2 else sub PISTOLMAG 1 }
		ife kickbackpic 3 { add gun_spread 24 set gun_recoil 6 }
		ife kickbackpic 4
		{
		set gunsmoke_angle 64 state spawn_gunsmoke ifand gun_firemode 64 { set gunsmoke_angle -64 state spawn_gunsmoke  }
		}

			ife kickbackpic 14
				{
				state revolver_eject
				sub PISTOLMAG temp4
				}
			ife kickbackpic 16
				{
			   ifl cur_ammo 6 set PISTOLMAG cur_ammo else set PISTOLMAG 6
				}

			ife kickbackpic 32 state revolver_2_eject
			ife kickbackpic 34
				{
			    ifl cur_ammo 12 set PISTOLMAG cur_ammo
				else set PISTOLMAG 12
				}


	  ifl PISTOLMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
	   ifn cur_ammo 0
		   {
		   setp[].reloading 1
		   setp[].kickback_pic 10
		   }
	   }

	}
}
else // default revolver?
	{
	smaxammo 1 120
	setarray WEAPON_TILE[1] 6839
	ifand guns_akimbo 4 setarray weap_special[1] 49153 else setarray weap_special[1] 49152
	setarray W_AMMO_TILE[1] 6847
	setarray ammo_amount[1] 6

	set WEAPON1_CLIP 0
	set WEAPON1_FIREDELAY 2
	set WEAPON1_RELOAD 30
	set WEAPON1_HOLDDELAY 9
	set WEAPON1_SHOOTS RMAXREVOLVERSHOT
	set WEAPON1_SPAWNTIME 2
	set WEAPON1_SPAWN 0
	set WEAPON1_INITIALSOUND 0
	set WEAPON1_FIRESOUND 4
	set WEAPON1_SOUND2TIME 0
	set WEAPON1_SOUND2SOUND 0
	set WEAPON1_RELOADSOUND1 4
	set WEAPON1_RELOADSOUND2 4

	set WEAPON1_TOTALTIME 9

	ife cur_weap 1
	{
	set weapon_type 0
		set GUN_AMMO_TYPES 0
		set GUN_SIZE 0

		state RUSTY_REVOLVER_STUFF

			ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp REVOLVERFIRE }

		set gun_mag PISTOLMAG
		ife kickbackpic 2 { ifand gun_firemode 64 sub PISTOLMAG 2 else sub PISTOLMAG 1 }
		ife kickbackpic 3 { ifand RUSTY_UPGRADE 4 add gun_spread 12 else add gun_spread 24 set gun_recoil 6 }
		ife kickbackpic 4
		{
		set gunsmoke_angle 64 state spawn_gunsmoke ifand gun_firemode 64 { set gunsmoke_angle -64 state spawn_gunsmoke  } }

			ife kickbackpic 14
				{
				state revolver_eject
				sub PISTOLMAG temp4
				}
			ife kickbackpic 16
				{
			   ifl cur_ammo 6 set PISTOLMAG cur_ammo else set PISTOLMAG 6
				}

			ife kickbackpic 32 state revolver_2_eject
			ife kickbackpic 34
				{
			    ifl cur_ammo 12 set PISTOLMAG cur_ammo
				else set PISTOLMAG 12
				}

			  ifl PISTOLMAG 1
			   ife player[].weapon_pos 0
				ife kickbackpic 0
			   {
			   ifn cur_ammo 0
				   {
				   setp[].reloading 1
				   setp[].kickback_pic 10
				   }
			   }

	}
}

// SHOTGUN
ife SPECIALIST_EQUIPMENT[83] 2 // player using automatic shotgun?
{
setarray WEAPON_TILE[2] 22671
setarray W_AMMO_TILE[2] 22676
setarray ammo_amount[2] 8
setarray weap_special[2] 4

ife BELT_LOADOUT[CHAR] 5 smaxammo 2 120 else
smaxammo 2 100

set WEAPON2_CLIP 0
set WEAPON2_FIREDELAY 2
set WEAPON2_TOTALTIME 5
set WEAPON2_RELOAD 40
set WEAPON2_HOLDDELAY 0
set WEAPON2_FLAGS 0
set WEAPON2_SHOOTS 2613
set WEAPON2_SPAWNTIME 24
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_FIRESOUND 4
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 0
set WEAPON2_RELOADSOUND1 0
set WEAPON2_RELOADSOUND2 0

	ife cur_weap 2
	{
	set weapon_type 2
		set gun_mag SHOTGUNBOXMAG
		set MAX_SHOTGUNBOXMAG 20
		set GUN_VOLUME 50
		set GUN_HANDS 2
		set GUN_ACCURACY 24
		set GUN_MAX_SPREAD 24
		set GUN_SIZE 2
		set GUN_AMMO_TYPES 0

		ife kickbackpic 2
			{
			getp[].ammo_amount 2 temp2
			add temp2 1
			setp[].ammo_amount 2 temp2
			sub SHOTGUNBOXMAG 1
			}

	ifand BITS_PRESS 4
	 ife player[].weapon_pos 0
		  ifg SHOTGUNBOXMAG 0
		   ife player[].ammo_amount 2 0
		   ife need_to_fire 0
			{
			getp[].ammo_amount 2 temp2
			add temp2 1
			setp[].ammo_amount 2 temp2
			setp[].kickback_pic 1
			set need_to_fire 1
			}

	ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp RN_AUTOSHOTGUN }
	ife kickbackpic 3
		{
		add gun_spread 20
		ife need_to_fire 1
			{
			setp[].ammo_amount 2 0
			set need_to_fire 0
			}
		}
	ife kickbackpic 3 // IF THE SHOTGUN ANIMATION IS ON IT'S 4TH FRAME MOVE THE PLAYERS SCREEN UP...
		{
		set gun_recoil 6
		set gun_pushback_power -64
		state gun_pushback
		set gunsmoke_angle 64 state spawn_gunsmoke
		set gunsmoke_angle 48 state spawn_gunsmoke
		shoot 3761
		}
	  ifl SHOTGUNBOXMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
		   {
		   ifn cur_ammo 0
			   {
			   setp[].reloading 1
			   setp[].kickback_pic 6
			   }
			}
		ife kickbackpic 12 { sound DRUM_OUT ife SHOTGUNBOXMAG 0 shoot DRUMMAGAZINE }

		ife kickbackpic 32
			{
			sound DRUM_IN
			set temp6 MAX_SHOTGUNBOXMAG
			sub temp6 SHOTGUNBOXMAG

				ifg temp6 cur_ammo
					{
					add SHOTGUNBOXMAG cur_ammo
					setp[].ammo_amount 2 0
					}
				else
					{
					getp[].ammo_amount 2 temp4 sub temp4 temp6 setp[].ammo_amount 2 temp4
					set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
					}
			}
	}
}
else
ife SPECIALIST_EQUIPMENT[3] 2 // player using overunder?
{
setarray WEAPON_TILE[2] 11100
setarray W_AMMO_TILE[2] 5250
setarray ammo_amount[2] 8
setarray weap_special[2] 4

ife BELT_LOADOUT[CHAR] 5 smaxammo 2 72 else
smaxammo 2 60

set WEAPON2_CLIP 0
set WEAPON2_FIREDELAY 2
set WEAPON2_TOTALTIME 7
set WEAPON2_RELOAD 30
set WEAPON2_HOLDDELAY 0
set WEAPON2_FLAGS 17408
set WEAPON2_SHOOTS SHOTG_SLUG
set WEAPON2_SPAWNTIME 24
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 0
set WEAPON2_RELOADSOUND1 0
set WEAPON2_RELOADSOUND2 0

	ife cur_weap 2
	{
	set gun_mag -1
	set GUN_HANDS 2
	set GUN_ACCURACY 4
	set GUN_MAX_SPREAD 16
	set GUN_SIZE 2
	set GUN_AMMO_TYPES 1

	ifand AMMO_TYPES[cur_weap] 1
	{
	set weapon_type 8
	set WEAPON2_SHOTSPERBURST 7
	set WEAPON2_SHOOTS 9361
	set WEAPON2_FIRESOUND EXPL_SHELL_FIRE
	ife explosive_shells 0 ife SHOTGUNBOXMAG 0 { xorvar AMMO_TYPE 1 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
	}
	else
	ifand AMMO_TYPES[cur_weap] 4
	{
	set weapon_type 9
	set WEAPON2_SHOTSPERBURST 7
	ife ARTIFACTS_LOADOUT[CHAR] 7 set WEAPON2_SHOOTS 6816 else
	set WEAPON2_SHOOTS 6826
	set WEAPON2_FIRESOUND FLECH_SHELL_FIRE
	ife flechete_shells 0 ife SHOTGUNBOXMAG 0  { xorvar AMMO_TYPE 4 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
	}
	else
	{
	set weapon_type 0
	set WEAPON2_SHOTSPERBURST 1
	set WEAPON2_SHOOTS SHOTG_SLUG
	set WEAPON2_FIRESOUND 4
	ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp OVERUNDER_FIRE }
	}

		set gun_mag SHOTGUNBOXMAG
		set MAX_SHOTGUNBOXMAG 2
		set GUN_VOLUME 60

	ifand BITS_PRESS 4
	 ife player[].weapon_pos 0
		  ifg SHOTGUNBOXMAG 0
		   ife player[].ammo_amount 2 0
		   ife need_to_fire 0
			{
			getp[].ammo_amount 2 temp2
			add temp2 1
			setp[].ammo_amount 2 temp2
			setp[].kickback_pic 1
			set need_to_fire 1
			}


	ife kickbackpic 3
	{
	add gun_spread 32
	ife need_to_fire 1
		{
		setp[].ammo_amount 2 0
		set need_to_fire 0
		}
	}
	ife kickbackpic 2
		{
		sub SHOTGUNBOXMAG 1
		setarray needs_pump[cur_weap] 1
		getp[].ammo_amount 2 temp2
		add temp2 1
		setp[].ammo_amount 2 temp2
		}
	ife kickbackpic 3
		{
		set gun_recoil 6
		set gun_pushback_power -64
		state gun_pushback
		set gunsmoke_angle 64 state spawn_gunsmoke
		set gunsmoke_angle 48 state spawn_gunsmoke
		}
		ife kickbackpic 20
			{
			set temp5 SHOTGUNBOXMAG
			set temp6 MAX_SHOTGUNBOXMAG
			sub temp6 temp5

			ifand AMMO_TYPES[cur_weap] 1
				{
				ifg temp6 explosive_shells
					{
					add SHOTGUNBOXMAG explosive_shells
					set explosive_shells 0
					}
					else
					{
					sub explosive_shells temp6
					set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
					}
				}
	else
	ifand AMMO_TYPES[cur_weap] 4
				{
				ifg temp6 flechete_shells
					{
					add SHOTGUNBOXMAG flechete_shells
					set flechete_shells 0
					}
					else
					{
					sub flechete_shells temp6
					set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
					}
				}
			else
				{
				ifg temp6 cur_ammo
					{
					add SHOTGUNBOXMAG cur_ammo
					setp[].ammo_amount 2 0
					}
					else
					{
					getp[].ammo_amount 2 temp4 sub temp4 temp6 setp[].ammo_amount 2 temp4
					set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
					}
				}
			}

	  ifl SHOTGUNBOXMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
	   ifn cur_ammo 0
		   {
		   setp[].reloading 1
		   setp[].kickback_pic 6
		   }
		}


		ife kickbackpic 8 soundonce OVERUNDER_LOAD

		ife kickbackpic 12
		 ife needs_pump[cur_weap] 1
		{
		ifand AMMO_TYPES[cur_weap] 1
			{
			ife SHOTGUNBOXMAG 0 shoot EXSHELL
			eshoot EXSHELL
			}
			else
		ifand AMMO_TYPES[cur_weap] 4
			{
			ife SHOTGUNBOXMAG 0 shoot FL_SHELL
			eshoot FL_SHELL
			}
			else
			{
			setprojectile[3761].pal 46
			ife SHOTGUNBOXMAG 0 shoot 3761
			eshoot 3761
			setprojectile[3761].pal 0
			}
		geta[RETURN].ang temp sub temp 1024 seta[RETURN].ang temp
		setarray needs_pump[cur_weap] 0
		}


	}

}
else // Alofs
ife SPECIALIST_EQUIPMENT[116] 2
{
	ife BELT_LOADOUT[CHAR] 5 smaxammo 2 84 else
	smaxammo 2 70
	setarray WEAPON_TILE[2] 33751
	setarray W_AMMO_TILE[2] 5982
	setarray ammo_amount[2] 8

	set WEAPON2_CLIP 0
	set WEAPON2_RELOAD 30
	set WEAPON2_FIREDELAY 2
	set WEAPON2_HOLDDELAY 0
	set WEAPON2_FLAGS 1024
	set WEAPON2_SPAWNTIME 24
	set WEAPON2_SPAWN 0
	set WEAPON2_SHOTSPERBURST 7
	set WEAPON2_INITIALSOUND 0
	set WEAPON2_SOUND2TIME 12
	set WEAPON2_SOUND2SOUND 4
	set WEAPON2_RELOADSOUND1 4
	set WEAPON2_RELOADSOUND2 5
	set WEAPON2_TOTALTIME 22

	ife cur_weap 2
	{
	set GUN_VOLUME 60
	set GUN_AMMO_TYPES 5
	set GUN_ACCURACY 8
	set GUN_MAX_SPREAD 32
	set GUN_SIZE 2
	set GUN_HANDS 2
	setarray weap_special[2] 0
	set gun_mag SHOTGUNMAG
	//setarray gun_mags[2] SHOTGUNMAG

	ifand AMMO_TYPES[cur_weap] 1
		{
		set weapon_type 8
		set WEAPON2_SHOOTS 9361
		set WEAPON2_FIRESOUND EXPL_SHELL_FIRE
		ife kickbackpic 0
			{
			ife explosive_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 1 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		}
	else
	ifand AMMO_TYPES[cur_weap] 4
		{
		set weapon_type 9
		ife ARTIFACTS_LOADOUT[CHAR] 7 set WEAPON2_SHOOTS 6816 else
		set WEAPON2_SHOOTS 6826
		set WEAPON2_FIRESOUND FLECH_SHELL_FIRE
		ife kickbackpic 0
			{
			ife flechete_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 4 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		}
	else
	ifand AMMO_TYPES[cur_weap] 64
		{
		set weapon_type 0
		set WEAPON2_SHOOTS RMAXREVOLVERSHOT
		set WEAPON2_FIRESOUND MAGNUM_SHOTGUN
		ife kickbackpic 0
			{
			ife magnum_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 64 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		}
	else
	ifand AMMO_TYPES[cur_weap] 1024
		{
		set weapon_type 8
		set WEAPON2_SHOOTS 22536
		set WEAPON2_FIRESOUND DRAGONS_BR_FIRE
		ife kickbackpic 0
			{
			ife dragon_shells 0 ife SHOTGUNMAG 0 { xorvar AMMO_TYPE 1024 setarray AMMO_TYPES[cur_weap] AMMO_TYPE }
			}
		}
	else
		{
		set weapon_type 2
		set WEAPON2_SHOOTS 2613
		ife kickbackpic 1 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp ALOF_FI }
		set WEAPON2_FIRESOUND 4
		}

	ife kickbackpic 3 add gun_spread 32
	
	ife kickbackpic 4 ifand BITS_PRESS 4 setplayer[].kickback_pic 12

	ifg shotgun_load 0
		{
		setp[].reloading 1
		ife BELT_LOADOUT[CHAR] 5
			{
			ifl kickbackpic 19 setp[].kickback_pic 19
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 24 setp[].kickback_pic 19
			}
		else
			{
			ifl kickbackpic 16 setp[].kickback_pic 16
			ife kickbackpic 21 sub shotgun_load 1
			ife kickbackpic 24 setp[].kickback_pic 16
			}
		ifand BITS_PRESS 4
			ifg SHOTGUNMAG 0
				ifg kickbackpic 21
					{
					set shotgun_load 0
					setp[].reloading 0
					setplayer[].kickback_pic 1
					espawn SOUND_SPRITE
					state SPAWN_IN_PLAYER_FRONT
					setactorvar[RETURN].temp ALOF_FI
					}
		}

	ife kickbackpic 0
	{
		state shotgun_load_check
		ifand BITS_PRESS 4
		  ifg SHOTGUNMAG 0
		   ife player[].ammo_amount 2 0
			{
			setp[].ammo_amount 2 1
			setp[].kickback_pic 1
			set need_to_fire 1
			espawn SOUND_SPRITE
			state SPAWN_IN_PLAYER_FRONT
			setactorvar[RETURN].temp ALOF_FI
			}
	}

	ife kickbackpic 3
	ife need_to_fire 1
		{
			setp[].ammo_amount 2 0
			set need_to_fire 0
		}

	ife needs_pump[cur_weap] 1 set MAX_SHOTGUNMAG 4 else set MAX_SHOTGUNMAG 5

	clamp SHOTGUNMAG 0 MAX_SHOTGUNMAG

	ife SHOTGUNMAG 0 ife kickbackpic 0 setarray needs_pump[cur_weap] 1
	ife player[].reloading 1
		{
		ife kickbackpic 22
			{
			state sg_shell_sounds
			add SHOTGUNMAG 1
			ifand AMMO_TYPES[cur_weap] 1 { set LAST_SHELL_FIRED 1 sub explosive_shells 1 }
			else ifand AMMO_TYPES[cur_weap] 4 { set LAST_SHELL_FIRED 4 sub flechete_shells 1 }
			else ifand AMMO_TYPES[cur_weap] 64 { set LAST_SHELL_FIRED 64 sub magnum_shells 1 }
			else ifand AMMO_TYPES[cur_weap] 1024 { set LAST_SHELL_FIRED 1024 sub dragon_shells 1 }
			else
				{
				set LAST_SHELL_FIRED 0

				set temp3 gun_ammopools[2]

				ifn temp3 -1
				{
					sub temp3 1
					setarray gun_ammopools[2] temp3
				}
				else
				{
					getp[].ammo_amount 2 temp3
					sub temp3 1
					setp[].ammo_amount 2 temp3
				}
				}
			}
		}
	else ife player[].reloading 0
		{
		ife kickbackpic 14 sound ALOF_LO
		ife kickbackpic 0 ifg SHOTGUNMAG 0 ife needs_pump[cur_weap] 1 setp[].kickback_pic 6
		}

		ife kickbackpic 2
		{
			sub SHOTGUNMAG 1
			set temp gun_ammopools[cur_weap]

			ife temp -1
			  ife AMMO_TYPES[cur_weap] 0
			{
				getp[].ammo_amount 2 temp3
				add temp3 1
				setp[].ammo_amount 2 temp3
			}

			set gun_recoil 6
		}
		ife kickbackpic 3 { set gunsmoke_angle 96 state spawn_gunsmoke }
		ife kickbackpic 21
		 ife player[].reloading 0
			{
			ife needs_pump[cur_weap] 1 setarray needs_pump[cur_weap] 0
			else // If it didn't need pumping, eject a shell
			state SHOTGUN_SHELL
			}
	}
}
else // player using gold lever-action?
ife SPECIALIST_EQUIPMENT[66] 2
{
setarray WEAPON_TILE[2] 19812
setarray W_AMMO_TILE[2] 6848
setarray ammo_amount[2] 8
setarray weap_special[2] 0

ife BELT_LOADOUT[CHAR] 5 smaxammo 2 72 else
smaxammo 2 60

set WEAPON2_CLIP 0
set WEAPON2_FIREDELAY 2
set WEAPON2_TOTALTIME 24
set WEAPON2_RELOAD 40
set WEAPON2_HOLDDELAY 0
set WEAPON2_FLAGS 1024
set WEAPON2_SHOOTS GOLDEN_SHOT_LOW
set WEAPON2_SPAWNTIME 24
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_FIRESOUND RUS_GOLD_SHOTGUN
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 0
set WEAPON2_RELOADSOUND1 0
set WEAPON2_RELOADSOUND2 0

	ife cur_weap 2
	{
	set weapon_type 3
	set gun_mag -1
	set GUN_VOLUME 60
	set GUN_HANDS 2
	set GUN_ACCURACY 8
	set GUN_MAX_SPREAD 64
	set GUN_SIZE 2
	set GUN_AMMO_TYPES 0
	ife kickbackpic 3
		{
		add gun_spread 32
		set gun_recoil 6
		set gun_pushback_power -32
		state gun_pushback
		set gunsmoke_angle 32 state spawn_gunsmoke
		}
	ife kickbackpic 5
		{
		ife cur_ammo 0 setp[].kickback_pic 0
		}
	ife kickbackpic 10 sound LEVER_ACTION
	ife kickbackpic 12 { setprojectile[3761].pal 40 eshoot 3761 setprojectile[3761].pal 0 }
	}
}
else // player using autoshotgun?
{
ifand RUSTY_UPGRADE 64 setarray WEAPON_TILE[2] 6806
else setarray WEAPON_TILE[2] 6840
setarray W_AMMO_TILE[2] 6848
setarray ammo_amount[2] 8
setarray weap_special[2] 4

ife BELT_LOADOUT[CHAR] 5 smaxammo 2 72 else
smaxammo 2 60

set WEAPON2_CLIP 0
set WEAPON2_FIREDELAY 2
set WEAPON2_TOTALTIME 4
set WEAPON2_RELOAD 40
set WEAPON2_HOLDDELAY 0
set WEAPON2_FLAGS 17408
set WEAPON2_SHOOTS 2613
set WEAPON2_SPAWNTIME 24
set WEAPON2_SPAWN 0
set WEAPON2_SHOTSPERBURST 7
set WEAPON2_INITIALSOUND 0
set WEAPON2_FIRESOUND 4
set WEAPON2_SOUND2TIME 15
set WEAPON2_SOUND2SOUND 0
set WEAPON2_RELOADSOUND1 0
set WEAPON2_RELOADSOUND2 0

	ife cur_weap 2
	{
	set weapon_type 2
		set gun_mag SHOTGUNBOXMAG
		ifand RUSTY_UPGRADE 64 set MAX_SHOTGUNBOXMAG 16
		else set MAX_SHOTGUNBOXMAG 8
		set GUN_VOLUME 50
		set GUN_HANDS 2
		set GUN_ACCURACY 24
		set GUN_MAX_SPREAD 24
		set GUN_SIZE 2
		set GUN_AMMO_TYPES 0

		ife kickbackpic 2
			{
			getp[].ammo_amount 2 temp2
			add temp2 1
			setp[].ammo_amount 2 temp2
			sub SHOTGUNBOXMAG 1
			}

	ife kickbackpic 0
	ifand BITS_PRESS 4
	 ifg SHOTGUNBOXMAG 0
	  ife need_to_fire 0
	   ife player[].weapon_pos 0
		  {
		   ife player[].ammo_amount 2 0
				{
				getp[].ammo_amount 2 temp2
				add temp2 1
				setp[].ammo_amount 2 temp2
				set need_to_fire 1
				setp[].kickback_pic 1
				}
			else
				setp[].kickback_pic 1
		   }

	ife kickbackpic 2
		{
		espawn SOUND_SPRITE
		state SPAWN_IN_PLAYER_FRONT
		setactorvar[RETURN].temp AUTOSHOT_FIRE
		set gun_recoil 6
		}

	ife kickbackpic 3 // IF THE SHOTGUN ANIMATION IS ON IT'S 4TH FRAME MOVE THE PLAYERS SCREEN UP...
		{
		add gun_spread 20
		ife need_to_fire 1
			{
			setp[].ammo_amount 2 0
			set need_to_fire 0
			}
		set gun_pushback_power -64
		state gun_pushback
		set gunsmoke_angle 64 state spawn_gunsmoke
		set gunsmoke_angle 48 state spawn_gunsmoke
		shoot 3761
		}


	  ifl SHOTGUNBOXMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
	   ifn cur_ammo 0
		   {
		   setp[].reloading 1
		   setp[].kickback_pic 6
		   }
		}
		ife kickbackpic 12 { state bgar_mag_out_sounds ife SHOTGUNBOXMAG 0 { ifand RUSTY_UPGRADE 64 shoot DRUMMAGAZINE else shoot SHOTGUNBOXMAGAZINE} }

		ife kickbackpic 30
			{
			state bgar_mag_in_sounds

			set temp6 MAX_SHOTGUNBOXMAG
			sub temp6 SHOTGUNBOXMAG

				ifg temp6 cur_ammo
					{
					add SHOTGUNBOXMAG cur_ammo
					setp[].ammo_amount 2 0
					}
				else
					{
					getp[].ammo_amount 2 temp4 sub temp4 temp6 setp[].ammo_amount 2 temp4
					set SHOTGUNBOXMAG MAX_SHOTGUNBOXMAG
					}
			}
	}
}

// MACHINEGUN
ife SPECIALIST_EQUIPMENT[9] 2 // using the M41C?
{
setarray WEAPON_TILE[3] 11865
setarray weap_special[3] 16384
setarray W_AMMO_TILE[3] 6849
setarray ammo_amount[3] 35

set WEAPON3_SPAWN 0
set WEAPON3_INITIALSOUND 4
set WEAPON3_SHOTSPERBURST 1
set WEAPON3_CLIP 0
set WEAPON3_RELOADSOUND1 4
set WEAPON3_RELOADSOUND2 4
set WEAPON3_RELOAD 41
set WEAPON3_FIREDELAY 2
set WEAPON3_TOTALTIME 3
set WEAPON3_HOLDDELAY 1
set WEAPON3_FLAGS 68
set WEAPON3_FIRESOUND 4
set WEAPON3_SHOOTS ARMOUR_PIERCING_SHOT

set WEAPON3_SELECTSOUND SELECT_M16

ife cur_weap 3
	{
	set weapon_type 1
	set GUN_ACCURACY 16
	set GUN_MAX_SPREAD 48
	set GUN_AMMO_TYPES 0
	set GUN_HANDS 2
	set GUN_SIZE 2
	set gun_mag MGUNMAG
	ifg gl_countd 0 sub gl_countd 1
	ife gl_countd 40
		{
		stopsound FLAMETH_FIRE
		soundonce FLAMETH_STOP
		}
	ifg gl_countd 42
		{
			espawn 3296 // flame sprite
			geta[].x temp
			geta[].y temp2
			set temp3 temp
			add temp3 256
			geta[].ang temp4
			add temp4 192
			randvar temp5 8
			ifrnd 128 add temp4 temp5 else sub temp4 temp5
			rotatepoint temp temp2 temp3 temp2 temp4 temp5 temp6
			seta[RETURN].x temp5
			seta[RETURN].y temp6
		espawn SOUND_SPRITE // sound sprite
		state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp FLAMETH_FIRE
		}
	ifg gl_countd 44
		{
		sub wepsway_x 2
		sub wepsway_y 2
		}
	ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke }
	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp AUTOTURRET_FIRE }

	ife RUSTY_BAYONET 0
		{
		set GUN_VOLUME 10
		set MAXMGUNMAG 99
			ife kickbackpic 1 { set gunsmoke_angle 32 set gun_recoil 8 }
			ife kickbackpic 3 add gun_spread 8

			ife kickbackpic 9 state bgar_mag_out_sounds
			ife kickbackpic 10 ife MGUNMAG 0 shoot SCIFI_BIG_MAG // spawn magazine

			ife kickbackpic 26
				{
				state bgar_mag_in_sounds
				ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
				}

	  ifl MGUNMAG 1
	   ife player[].weapon_pos 0
	    ife kickbackpic 0
		   {
		   	ifn cur_ammo 0
		   		{
		   		setp[].reloading 1
		   		setp[].kickback_pic 6
				}
			}
		}

	}

}
else
ife SPECIALIST_EQUIPMENT[27] 2 // using the AK74?
	{
	setarray WEAPON_TILE[3] 13412
	setarray weap_special[3] 16392
	setarray W_AMMO_TILE[3] 5219
	setarray ammo_amount[3] 30


	set WEAPON3_HOLDDELAY 1
	set WEAPON3_SPAWN 0

	set WEAPON3_INITIALSOUND 4
	set WEAPON3_CLIP 0
	set WEAPON3_RELOADSOUND1 4
	set WEAPON3_RELOADSOUND2 4
	set WEAPON3_SHOTSPERBURST 1

	ife cur_weap 3
	{
	set weapon_type 2
	set GUN_SIZE 2
	set GUN_HANDS 2
	ifg gl_countd 0 sub gl_countd 1
	set GUN_VOLUME 18

	ifand gun_firemode 32768 // If GL is selected
		set GUN_AMMO_TYPES 4096 // set ammo types to gp25/30 compatible
		else
		set GUN_AMMO_TYPES 64 // set firing menu to switching to gl

	state check_caseless_grenades_avail

				set WEAPON3_FLAGS 68
				set WEAPON3_FIREDELAY 2
				set WEAPON3_TOTALTIME 4
				set WEAPON3_FIRESOUND 4
				set WEAPON3_SHOOTS HOLLOW_POINT_SHOT

				ife kickbackpic 2 { set gun_recoil 4 espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp AK74_FIRE }
				ife kickbackpic 3 { set gunsmoke_angle 64 state spawn_gunsmoke }


				ife kickbackpic 21 sound AUG_MOVEMENT

				ife kickbackpic 15 state JMOVESOUND2

				ife kickbackpic 45 state JMOVESOUND2
				ife kickbackpic 46 soundonce AK_SLIDE

				ife kickbackpic 54 sound AUG_MOVEMENT

				ifand gun_firemode 32768
					{
					ifand gun_firemode 16384 xorvar gun_firemode 16384
					}

					set gun_mag MGUNMAG

						set MAXMGUNMAG 30
						ife kickbackpic 12 { state ar_mag_out_sounds ife MGUNMAG 0 shoot RIFLEMAGAZINE }


						ife kickbackpic 33
							{
							state ar_mag_in_sounds
							ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
							}

				ifand gun_firemode 16384
					{
					set GUN_ACCURACY 4
					set GUN_MAX_SPREAD 24
					ifand gun_firemode 32768 xorvar gun_firemode 32768

					ife kickbackpic 2
						{
						set gunsmoke_angle 0
						state spawn_gunsmoke
						}
					ife kickbackpic 3 add gun_spread 6

					ifg kickbackpic 6 { set hide_xhair 0  xorvar gun_firemode 16384 }

					}
					else
					{
					set GUN_ACCURACY 12
					set GUN_MAX_SPREAD 32
					ife kickbackpic 2
						{
						set gunsmoke_angle 72
						state spawn_gunsmoke
						}
					ife kickbackpic 3 add gun_spread 8
					}

				ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }
				ife gl_countd 40 sound AUG_MOVEMENT
				ife gl_countd 18 soundonce GL_RELOAD
				ifg gl_countd 44
					{
					sub wepsway_x 5
					sub wepsway_y 5
					}
				ifl MGUNMAG 1
				 ife player[].weapon_pos 0
				  ife kickbackpic 0
					{
					ifn cur_ammo 0
						{
						set WEAPON3_RELOAD 58
						setp[].reloading 1
						setp[].kickback_pic 6
						}
					}
		}
	}
else // Using the FG-42?
{
setarray WEAPON_TILE[3] 6841
setarray weap_special[3] 0
setarray W_AMMO_TILE[3] 6873
setarray ammo_amount[3] 20

set WEAPON3_SPAWN 0
set WEAPON3_INITIALSOUND 4
set WEAPON3_SHOTSPERBURST 1
set WEAPON3_CLIP 0
set WEAPON3_RELOADSOUND1 4
set WEAPON3_RELOADSOUND2 4

ifand RUSTY_UPGRADE 2 set WEAPON3_RELOAD 12

ife RUSTY_BAYONET 1
{
set WEAPON3_FIREDELAY 7
set WEAPON3_TOTALTIME 15
set WEAPON3_HOLDDELAY 0
set WEAPON3_FLAGS 256
set WEAPON3_FIRESOUND BAYONET
set WEAPON3_SHOOTS 0
}
else
{
	ifand RUSTY_UPGRADE 8
	{
	set WEAPON3_FIREDELAY 2
	set WEAPON3_TOTALTIME 3
	}
	else
	{
	set WEAPON3_FIREDELAY 2
	set WEAPON3_TOTALTIME 4
	}
set WEAPON3_HOLDDELAY 1
set WEAPON3_FLAGS 64
set WEAPON3_FIRESOUND 4
set WEAPON3_SHOOTS RMAXREVOLVERSHOT
}

	ife cur_weap 3
	{
	set weapon_type 0
	set GUN_AMMO_TYPES 0
	set GUN_HANDS 2
	ife kickbackpic 50 sound FG42_COCK

	ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp FG42_FIRE }

		ifand RUSTY_UPGRADE 1
		{
		set GUN_ACCURACY 8
		set GUN_MAX_SPREAD 16
		ife player[].weapon_pos 0
			{
			state spawn_lasersite
			seta[RETURN].x hitx
			seta[RETURN].y hity
			seta[RETURN].z hitz
			}
		}
		else
		{
		set GUN_ACCURACY 16
		set GUN_MAX_SPREAD 24
		}
		set GUN_SIZE 2
		ifand RUSTY_UPGRADE 2 set gun_mag -1 else set gun_mag MGUNMAG
	ife RUSTY_BAYONET 0
		{
		set GUN_VOLUME 20
		ifand RUSTY_UPGRADE 2 set MAXMGUNMAG 300 else set MAXMGUNMAG 20
			ife kickbackpic 2 set gun_recoil 4
			ife kickbackpic 3 { add gun_spread 12 set gunsmoke_angle 32 state spawn_gunsmoke }

			ife kickbackpic 9 state bgar_mag_out_sounds
			ife kickbackpic 10 ife MGUNMAG 0 shoot RIFLEMAGAZINE // spawn magazine

			ife kickbackpic 30
				{
				state bgar_mag_in_sounds
				ifl cur_ammo MAXMGUNMAG set MGUNMAG cur_ammo else set MGUNMAG MAXMGUNMAG
				}

	  ifl MGUNMAG 1
	   ife player[].weapon_pos 0
	    ife kickbackpic 0
		   {
		   ifand RUSTY_UPGRADE 2 set MGUNMAG cur_ammo else
		   	ifn cur_ammo 0
		   		{
				set WEAPON3_RELOAD 61
		   		setp[].reloading 1
		   		setp[].kickback_pic 6
				}
			}
		}
	ife RUSTY_BAYONET 1
		{
		set GUN_VOLUME 0
		ifg gun_pushb_disp 28 set gun_recoil 10
		ife kickbackpic 0 set RUSTY_BAYONET 0
		ife kickbackpic 4 set gun_recoil 8
		ife kickbackpic 6 { set gun_pushback_power 16 state gun_pushback }
		ife kickbackpic 7
			{
			ife SPECIALIST_EQUIPMENT[1] 1 shoot 6875 // If the player is using a silver bayonett
			else shoot 6874 // otherwise use the standard one
			}
		}
					ifand BITS_PRESS 4194304
					 ife kickbackpic 0
					  ifge p_stamina 15
					 	ifg SPIN_KICK 19
						 ifg TWIRL_KICK 19
						  ifg ROUNDHOUSE_KICK 26
						   ifg SLIDE_KICK 26
						    ifg FLYING_KICK 26
						{
						set RUSTY_BAYONET 1
						setp[].kickback_pic 4
						setp[].quick_kick 0
						sub p_stamina 15
						set KNIFE_ATTACK 26
						set QUICKK 13
						}

	ife RUSTY_BAYONET 1
	 ifand BITS_PRESS 4
		set RUSTY_BAYONET 0

	}
}

// RPG
setarray WEAPON_TILE[4] 6842
setarray W_AMMO_TILE[4] 6850
setarray ammo_amount[4] 5
setarray weap_special[4] 16384

set WEAPON4_FIRESOUND TRI_FIRE
set WEAPON4_SHOOTS RPG
set WEAPON4_SHOTSPERBURST 1
set WEAPON4_RELOAD 64
set WEAPON4_FIREDELAY 2
set WEAPON4_TOTALTIME 22
set WEAPON4_HOLDDELAY 0
set WEAPON4_FLAGS 0

ife cur_weap 4
	{
		set weapon_type 4
		set GUN_VOLUME 25
		set gun_mag -1
		set GUN_ACCURACY 24
		set GUN_MAX_SPREAD 0
		set gun_mag ROCKETMAG
		set GUN_HANDS 2
		set GUN_SIZE 2
		set GUN_AMMO_TYPES 0

			ife kickbackpic 2 sub ROCKETMAG 1
			ife kickbackpic 3
			{
			set gun_recoil 6
			set gun_pushback_power -64
			state gun_pushback
			set gunsmoke_angle 64 state spawn_gunsmoke
			set gunsmoke_angle 48 state spawn_gunsmoke
			}
		ife kickbackpic 5 sound TRI_INSERT

	ife kickbackpic 24 state JMOVESOUND2
	ife kickbackpic 31 sound J_GL_OPEN
	ife kickbackpic 35
		{
		sound DRUM_OUT
		set temp4 4
		sub temp4 ROCKETMAG
		clamp temp4 0 4
		set temp5 0
		whilevarvarn temp5 temp4
			{
			shoot TWENTY_SHELL
			add temp5 1
			}
		}

	ife kickbackpic 44 { ifl cur_ammo 4 set ROCKETMAG cur_ammo else set ROCKETMAG 4 }
	ife kickbackpic 49 sound DRUM_IN
	ife kickbackpic 57 sound J_GL_CLOSE

	  ifl ROCKETMAG 1
	   ife player[].weapon_pos 0
		ife kickbackpic 0
	   {
		ifn cur_ammo 0
			{
			setp[].reloading 1
			setp[].kickback_pic 23
			}
		}

	}

// PIPEBOMB
setarray WEAPON_TILE[5] 6846
setarray W_AMMO_TILE[5] 6331
setarray ammo_amount[5] 5
setarray weap_special[5] 0

set WEAPON5_FIREDELAY 6
set WEAPON5_TOTALTIME 21
set WEAPON5_HOLDDELAY 20
set PIPEBOMB_CONTROL 0

	ife cur_weap 5
		{
		set weapon_type 6
		set GUN_SIZE 0
		set gun_mag -1
		set GUN_VOLUME 0
		set GUN_ACCURACY 2
		set GUN_MAX_SPREAD 0
		set GUN_HANDS 2
		set GUN_AMMO_TYPES 0
		}


// SHRINKER
setarray WEAPON_TILE[6] 6843
setarray W_AMMO_TILE[6] 6854
setarray weap_special[6] 16640
setarray ammo_amount[6] 4

set WEAPON6_FIREDELAY 3
set WEAPON6_SHOOTS MINE_DART
set WEAPON6_TOTALTIME 12
set WEAPON6_FIRESOUND DL_FIRE
set WEAPON6_INITIALSOUND 0
set WEAPON6_SHOTSPERBURST 0
set WEAPON6_FLAGS 2
set WEAPON6_SPAWNTIME -1
set WEAPON6_SPAWN 0
set WEAPON6_SOUND2TIME -1
set WEAPON6_SOUND2SOUND 4
set WEAPON6_RELOADSOUND1 4
set WEAPON6_RELOADSOUND2 4

ife cur_weap 6
{
	set weapon_type 8
	set GUN_VOLUME 5
	set gun_mag -1
	set GUN_HANDS 1
	set GUN_ACCURACY 2
	set GUN_MAX_SPREAD 0
	set GUN_SIZE 0
	set GUN_AMMO_TYPES 0

ifg RUSTY_MINE_GUN 0 sub RUSTY_MINE_GUN 1
}

// DEVISTATOR
	ifand RUSTY_UPGRADE 128 // upgraded?
	setarray WEAPON_TILE[7] 6837
	else
	setarray WEAPON_TILE[7] 6844
setarray W_AMMO_TILE[7] 6852
setarray ammo_amount[7] 30

ifand MAGIC_UPGRADE[5] 1 setarray weap_special[7] 16384
else setarray weap_special[7] 0

set WEAPON7_SHOOTS 6857
set WEAPON7_SHOTSPERBURST 1
set WEAPON7_FIREDELAY 2
set WEAPON7_TOTALTIME 3
set WEAPON7_HOLDDELAY 0
set WEAPON7_FIRESOUND 4
set WEAPON7_INITIALSOUND 0
set WEAPON7_FLAGS 6

	ife cur_weap 7
		{
		set weapon_type 8
		set GUN_VOLUME 8
		set gun_mag -1
		set GUN_HANDS 2
		ifand RUSTY_UPGRADE 128
			{
			set GUN_ACCURACY 2
			set GUN_MAX_SPREAD 8
			}
		else
			{
			set GUN_ACCURACY 8
			set GUN_MAX_SPREAD 16
			}
		set GUN_SIZE 2
		ifand MAGIC_UPGRADE[5] 1 set GUN_AMMO_TYPES 16384
		else set GUN_AMMO_TYPES 0
		ife kickbackpic 2 { set gun_recoil 4 add gun_spread 8 espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp PULSE_FIRE }

		ifg kickbackpic_2 0
			{
			add kickbackpic_2 1
			ife kickbackpic_2 2
				{
				shoot QUIETUS_BLAST
				espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp PUL_BFG
				}
			ife kickbackpic_2 3
				{
				set gun_recoil 6
				add gun_spread 4
				}
			ifge kickbackpic_2 5 set kickbackpic_2 0
			}

		}

// TRIPBOMB
setarray WEAPON_TILE[8] 12024
setarray ammo_amount[8] 1
setarray weap_special[8] 0

set WEAPON8_SHOOTS HANDHOLDINGLASER
set WEAPON8_FIREDELAY 2
set WEAPON8_FLAGS 3328

	ife cur_weap 8
		{
		set weapon_type 6
		set GUN_SIZE 0
		set GUN_VOLUME 0
		set gun_mag -1
		set GUN_HANDS 1
		set GUN_ACCURACY 2
		set GUN_MAX_SPREAD 0
		set GUN_AMMO_TYPES 0
		}

// FREEZER
setarray WEAPON_TILE[9] 6845
setarray weap_special[9] 16386
setarray W_AMMO_TILE[9] 6853
setarray ammo_amount[9] 50

ife ARTIFACTS_LOADOUT[CHAR] 7 set WEAPON9_SHOOTS 6816 else
set WEAPON9_SHOOTS 6826
set WEAPON9_FIREDELAY 2
set WEAPON9_TOTALTIME 4
set WEAPON9_HOLDDELAY 0
set WEAPON9_RELOAD 50
set WEAPON9_FIRESOUND 4
set WEAPON9_INITIALSOUND 0
set WEAPON9_SHOTSPERBURST 1
set WEAPON9_FLAGS 22

	ife cur_weap 9
				{
				set weapon_type 9
				ifand RUSTY_UPGRADE 32 set max_rifle_mag 100 else set max_rifle_mag 40
				set GUN_VOLUME 6
				set GUN_SIZE 2
				set GUN_HANDS 2
				 set gun_mag rifle_mag

				state check_cased_grenades_avail

				set GUN_ACCURACY 1
				set GUN_MAX_SPREAD 32

				ifand gun_firemode 32768
				set GUN_AMMO_TYPES 2048
				else
				set GUN_AMMO_TYPES 32
				ife kickbackpic 2 { sub rifle_mag 1 set gun_recoil 8 add gun_spread 6 espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp NAILGUN_FIRE }
				ife gl_countd 34 soundonce GL_OPEN2
				ife gl_countd 30 state shoot_empty_40mmshell
				ife gl_countd 16 soundonce GL_INSERT2
				ife gl_countd 8 soundonce GL_CLOSE2
				ifg gl_countd 0 sub gl_countd 1
				ifg gl_countd 44
					{
					sub wepsway_x 5
					sub wepsway_y 5
					}

				ife kickbackpic 8 sound JMOVE8

				ifand RUSTY_UPGRADE 32
				{
				ife kickbackpic 22 soundonce DRUM_OUT
				ife kickbackpic 23 ife rifle_mag 0 shoot DRUM_MAG2
				ife kickbackpic 34 soundonce DRUM_IN
				}
				else
				{
				ife kickbackpic 22 state bgar_mag_out_sounds
				ife kickbackpic 23 ife rifle_mag 0 shoot NAILG_MAG
				ife kickbackpic 34 state bgar_mag_in_sounds
				}

				ife kickbackpic 34
					{
					ifl cur_ammo max_rifle_mag set rifle_mag cur_ammo else set rifle_mag max_rifle_mag
					}
				ife kickbackpic 39 sound JMOVE8

				  ifl rifle_mag 1
				   ife player[].weapon_pos 0
					ife kickbackpic 0
				   {
					ifn cur_ammo 0
						{
						setp[].reloading 1
						setp[].kickback_pic 6
						}
					}
				ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }
				ifand gun_firemode 16384
					{
					ifg kickbackpic 6 { set hide_xhair 0 xorvar gun_firemode 16384 }
					}
				}

// EXPANDER
setarray W_AMMO_TILE[11] 6855
setarray ammo_amount[11] 2

set WEAPON11_CLIP 0
set WEAPON11_RELOAD 0
set WEAPON11_FIREDELAY 2
set WEAPON11_TOTALTIME 12
set WEAPON11_HOLDDELAY 0
set WEAPON11_FLAGS 2
set WEAPON11_SHOOTS IN_MINE_DART
set WEAPON11_SPAWNTIME -1
set WEAPON11_SPAWN 0
set WEAPON11_SHOTSPERBURST 1
set WEAPON11_INITIALSOUND 0
set WEAPON11_FIRESOUND DL_FIRE
set WEAPON11_SOUND2TIME 0
set WEAPON11_SOUND2SOUND 4
set WEAPON11_RELOADSOUND1 4
set WEAPON11_RELOADSOUND2 4

ife cur_weap 11
	{
	set weapon_type 8
	set GUN_SIZE 0
	set GUN_HANDS 1
	set GUN_VOLUME 5
	set gun_mag -1
	set GUN_ACCURACY 2
	set GUN_MAX_SPREAD 0
	set GUN_AMMO_TYPES 0

	ifg RUSTY_MINE_GUN 0 sub RUSTY_MINE_GUN 1

	}

}
ends
