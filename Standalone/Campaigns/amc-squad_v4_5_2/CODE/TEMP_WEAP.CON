/*
-------------------------------------------------------------------------------
===============================================================================

         -ooo:             +oo-            `+oo.       ./+oooooooooo+/:
        /NMMMN+            NMMNo`         -dMMM/      .mMMNmmmmmmmmmMMNo
       /NMd:mMMo           NMMNMd:      `oNMNMM/      :MMM/.........mMMh
      oNMd. -mMMy`         NMN:mMNs`   -hMm/mMM/      :MMM:         ::-.
    `sMMh`   .dMMh`        NMN .sNMd:`oNMh. mMM/      :MMM:
   `yMMMdhhhhhmMMMd.       NMN   /mMNdMm+`  mMM/      :MMM:         ss+:
  `hMMdhhhhhhhhhmMMm-      NMN    .yMMh.    mMM/      :MMM/.........mMMh
 .dMMs`         .hMMm:     NMN      :/`     mMM/      .mMMNmmmmmmmmmMMNo
 :oo+            `+oo+     +o+              +oo.       ./++ooooooooo+/:

###############################################################################
+ The AMC Squad
+ CON code by James Stanfield, Cedric "Sangman" Haegeman, Dino Bollinger,
+              Mikko Sandt, Cedric "Zaxtor" Lutes and Dan "Danarama" Gaskill
-------------------------------------------------------------------------------
* See AMC_MAIN.CON for a full list of script authors.

Feel free to use any code in the game for your own uses; just make
sure to mention the authors and/or "The AMC Squad" in your credits.
--------------------------------------------------------------------------------
NOTES:
This file defines the behavior of temp weapons when used by the player.
Note that weapon display stuff is in WEAP_DISPLAY.CON, not here.
--------------------------------------------------------------------------------
*/

include CODE/TEMP_WEAPON/AK104.CON
include CODE/TEMP_WEAPON/AR65.CON
include CODE/TEMP_WEAPON/BARRETT.CON
include CODE/TEMP_WEAPON/BLOOD_STAFF.CON
include CODE/TEMP_WEAPON/CALICOM960.CON
include CODE/TEMP_WEAPON/CHAINSAW.CON
include CODE/TEMP_WEAPON/CROSSBOW.CON
include CODE/TEMP_WEAPON/DARTGUN.CON
include CODE/TEMP_WEAPON/DUALMAC10.CON
include CODE/TEMP_WEAPON/ENFOR_CG.CON
include CODE/TEMP_WEAPON/ENGINEER_SMG.CON
include CODE/TEMP_WEAPON/FLAMETHROWER.CON
include CODE/TEMP_WEAPON/FLESH_SQUIRTER.CON
include CODE/TEMP_WEAPON/FNFAL.CON
include CODE/TEMP_WEAPON/GDFPLASMA.CON
include CODE/TEMP_WEAPON/GUARDIAN_HEAD.CON
include CODE/TEMP_WEAPON/HELLNAILER.CON
include CODE/TEMP_WEAPON/JUGGERNAUT.CON
include CODE/TEMP_WEAPON/KATANA.CON
include CODE/TEMP_WEAPON/LASERGUN.CON
include CODE/TEMP_WEAPON/M16.CON
include CODE/TEMP_WEAPON/M60.CON
include CODE/TEMP_WEAPON/MAGICAXE.CON
include CODE/TEMP_WEAPON/MIAGUN.CON
include CODE/TEMP_WEAPON/SHRINKER.CON
include CODE/TEMP_WEAPON/MP40.CON
include CODE/TEMP_WEAPON/NAILGUN.CON
include CODE/TEMP_WEAPON/OGRESTAFF.CON
include CODE/TEMP_WEAPON/P90.CON
include CODE/TEMP_WEAPON/PIG_SHOTG.CON
include CODE/TEMP_WEAPON/RIOTGUN.CON
include CODE/TEMP_WEAPON/RIPPERHEART.CON
include CODE/TEMP_WEAPON/ROTBOLT.CON
include CODE/TEMP_WEAPON/SAWNOFF.CON
include CODE/TEMP_WEAPON/SKULLDUSTER.CON
include CODE/TEMP_WEAPON/STYG_WARC.CON
include CODE/TEMP_WEAPON/TMISSILEL.CON
include CODE/TEMP_WEAPON/TOMMYGUN.CON
include CODE/TEMP_WEAPON/UDP45.CON
include CODE/TEMP_WEAPON/VORPAL.CON
include CODE/TEMP_WEAPON/ZCHAINGUN.CON
include CODE/TEMP_WEAPON/ZMISSILE.CON
include CODE/TEMP_WEAPON/ZRAILGUN.CON
include CODE/TEMP_WEAPON/PHASEDPL.CON


// make sure to add tilenum of temp weapon pickup sprite to this list
appendevent EVENT_EGS
    switch sprite[].picnum
        case MINISHRINKERSPRITE
        case BARRETTRIFLESPRITE
        case SMGSPRITE
        case BLOODSTAFFSPRITE
        case LIZMANGUNSPRITE
        case PIGCOPGUNSPRITE
        case SKULLDUSTERSPRITE
        case FLESHSQUIRTERSPRITE
        case STYGIANGUNSPRITE
        case SAWNOFFSPRITE
        case TOMMYGUNSPRITE
        case RIOTGUNSPRITE
        case CROSSBOWSPRITE
        case MIAGUNSPRITE
        case LASERGUNSPRITE
        case TMISSILELSPRITE
        case CHAINSAWSPRITE
        case FLAMETHROWERSPRITE
        case SWORDSPRITE
        case 12200
        case MOPSPRITE
        case BLOODY_MOPSPRITE
        case FNFALSPRITE
        case MP40SPRITE
        case JPLASMASPRITE
        case LIZMANFGUNSPRITE
        case M16SPRITE
        case AK114SPRITE
        case RIOTGUN_MINIGUN_SPRITE
        case NAILGUN_SPRITE
        case RIOTGUN_GRENADEL_SPRITE
        case DARTGUN_SPRITE
        case M60_SPRITE
        case ZMISSILELSPRITE
        case GOROHEADSPRITE
        case M960_SPRITE
        case ZCHAINGUN_SPRITE
        case RAILGUN_SPRITE
        case PROTO_SHRINKER_SPRITE
        case 16087
        case RIPPER_HEART
        case 20101
        case P90_SPRITE
        case OGRE_STAFF_SPRITE
        case ENG_SMG_SPRITE
        case ROT_BOLT_SPRITE
        case AXE_SPRITE
        case RW_CROSSBOW_SPRITE
        case VORPAL_SWORD_SPRITE
        case UDP45_SPRITE
		case AR65_SPRITE		  
		case PHPLASMA_SPRITE
		case MOSSBERG_SPRITE
            ifspawnedby APLAYER { cstat 0 action ZERO }
            break
        case 12712 // projectile from ogre staff needs to be higher damage if fired by player
            ifspawnedby APLAYER { setthisprojectile[THISACTOR].extra 50 }
            break
    endswitch
endevent

// previous temp weapon, only used here so far
var disp_prev_temp_weap -1 131073

// if the current temp weapon doesn't match the previous, restore it
defstate restore_weap_tile
    ifn temp_weap disp_prev_temp_weap
    {
        // this makes the background thingy in the weapon select appear
        ifg temp_weap 0
            setarray picked_up_gun[0] 30

        // assign a proper tile
        switch temp_weap
            case 0 : setarray WEAPON_TILE[0] 0 ; break
            case 1 : setarray WEAPON_TILE[0] MINISHRINKERSPRITE ; break
            case 2 : setarray WEAPON_TILE[0] BARRETTRIFLESPRITE ; break
            case 3 : setarray WEAPON_TILE[0] SMGSPRITE ; break
            case 4 : setarray WEAPON_TILE[0] BLOODSTAFFSPRITE ; break
            case 5 : setarray WEAPON_TILE[0] LIZMANGUNSPRITE ; break
            case 6 : setarray WEAPON_TILE[0] PIGCOPGUNSPRITE ; break
            case 7 : setarray WEAPON_TILE[0] SKULLDUSTERSPRITE ; break
            case 8 : setarray WEAPON_TILE[0] FLESHSQUIRTERSPRITE ; break
            case 9 : setarray WEAPON_TILE[0] STYGIANGUNSPRITE ; break
            case 10 : setarray WEAPON_TILE[0] SAWNOFFSPRITE ; break
            case 11 : setarray WEAPON_TILE[0] TOMMYGUNSPRITE ; break
            case 12 : setarray WEAPON_TILE[0] RIOTGUNSPRITE ; break
            case 13 : setarray WEAPON_TILE[0] CROSSBOWSPRITE ; break
            case 14 : setarray WEAPON_TILE[0] MIAGUNSPRITE ; break
            case 15 : setarray WEAPON_TILE[0] LASERGUNSPRITE ; break
            case 16 : setarray WEAPON_TILE[0] TMISSILELSPRITE ; break
            case 17 : setarray WEAPON_TILE[0] CHAINSAWSPRITE ; break
            case 18 : setarray WEAPON_TILE[0] FLAMETHROWERSPRITE ; break
            case 19 : setarray WEAPON_TILE[0] SWORDSPRITE ; break
            case 20 : setarray WEAPON_TILE[0] MOPSPRITE ; break
            case 21 : setarray WEAPON_TILE[0] FNFALSPRITE ; break
            case 22 : setarray WEAPON_TILE[0] MP40SPRITE ; break
            case 23 : setarray WEAPON_TILE[0] JPLASMASPRITE ; break
            case 24 : setarray WEAPON_TILE[0] LIZMANFGUNSPRITE ; break
            case 25 : setarray WEAPON_TILE[0] M16SPRITE ; break
            case 26 : setarray WEAPON_TILE[0] AK114SPRITE ; break
            case 27 : setarray WEAPON_TILE[0] RIOTGUN_MINIGUN_SPRITE ; break
            case 28 : setarray WEAPON_TILE[0] NAILGUN_SPRITE ; break
            case 29 : setarray WEAPON_TILE[0] RIOTGUN_GRENADEL_SPRITE ; break
            case 30 : setarray WEAPON_TILE[0] DARTGUN_SPRITE ; break
            case 31 : setarray WEAPON_TILE[0] M60_SPRITE ; break
            case 32 : setarray WEAPON_TILE[0] ZMISSILELSPRITE ; break
            case 33 : setarray WEAPON_TILE[0] 16030 ; break // Guardian Head
            case 34 : setarray WEAPON_TILE[0] 16087 ; break // Riotgun Minigun Mark 2
            case 35 : setarray WEAPON_TILE[0] 16059 ; break // Calico M960
            case 36 : setarray WEAPON_TILE[0] 12200 ; break // SW Katana
            case 37 : setarray WEAPON_TILE[0] 20101 ; break // Beam Sabre
            case 38 : setarray WEAPON_TILE[0] RIPPER_HEART ; break
            case 39 : setarray WEAPON_TILE[0] ZCHAINGUN_SPRITE ; break
            case 40 : setarray WEAPON_TILE[0] RAILGUN_SPRITE ; break
            case 41 : setarray WEAPON_TILE[0] AR65_SPRITE ; break
            case 42 : setarray WEAPON_TILE[0] HELL_NAILER_SPRITE ; break
            case 43 : setarray WEAPON_TILE[0] PROTO_SHRINKER_SPRITE ; break
            case 45 : setarray WEAPON_TILE[0] P90_SPRITE ; break
            case 46 : setarray WEAPON_TILE[0] OGRE_STAFF_SPRITE ; break
            case 47 : setarray WEAPON_TILE[0] ENG_SMG_SPRITE ; break
            case 48 : setarray WEAPON_TILE[0] ROT_BOLT_SPRITE ; break
            case 49 : setarray WEAPON_TILE[0] AXE_SPRITE ; break
            case 50 : setarray WEAPON_TILE[0] RW_CROSSBOW_SPRITE ; break
            case 51 : setarray WEAPON_TILE[0] VORPAL_SWORD_SPRITE ; break
            case 52 : setarray WEAPON_TILE[0] UDP45_SPRITE ; break
			case 55 : setarray WEAPON_TILE[0] PHPLASMA_SPRITE ; break
			case 56 : setarray WEAPON_TILE[0] MOSSBERG_SPRITE ; break
            default :
                // unassigned, display some garbage so the modder pays attention
                setarray WEAPON_TILE[0] 142
                break
        endswitch

        set disp_prev_temp_weap temp_weap
    }
ends

defstate temporary_weapons_code
    state restore_weap_tile

	// Set GUN_AMMO_TYPES_ARR[0] for the temp weapon as it needs to be consistent
	ifn temp_weap 0
	{
		switch temp_weap
			case 6 : state tw_pigcop_shotgun_gunammotypes ; break        // Pigcop Shotgun
			case 10 : state tw_sawnoff_gunammotypes ; break              // Sawn-Off Shotgun
			case 11 : state tw_tommygun_gunammotypes ; break             // Tommy Gun
			case 12 : state tw_riotgun_gunammotypes ; break              // Riotgun
			case 13 : state tw_normal_crossbow_gunammotypes ; break      // Standard Crossbow
			case 25 : state tw_m16_gunammotypes ; break                  // M16
			case 26 : state tw_ak104_gunammotypes ; break                // AK104
			case 27 : state tw_riotgun_minigun_mk1_gunammotypes ; break  // Riotgun-Minigun Mark1
			case 32 : state tw_zmissile_gunammotypes ; break             // Zilla Missile Launcher
			case 34 : state tw_riotgun_minigun_mk2_gunammotypes ; break  // Riotgun-Minigun Mark2
			case 41 : state tw_ar65_gunammotypes ; break                 // AR-65
			case 46 : state tw_ogrestaff_gunammotypes ; break            // Ogre Staff
			case 48 : state tw_rotbolt_gunammotypes ; break              // Rotary Bolt Launcher
			case 49 : state tw_magicaxe_gunammotypes ; break             // Magic Axe
			case 50 : state tw_rwcrossbow_gunammotypes ; break          // Magic Crossbow
			case 51 : state tw_vorpalsword_gunammotypes ; break         // Vorpal sword
			case 52 : state tw_udp45_gunammotypes ; break                // UDP45
			case 53 : state tw_udp45_gunammotypes ; break                // Garand M1
			case 56 : state tw_pigcop_shotgun_gunammotypes ; break        // Mossberg Shotgun; mossberg uses same code as pigcop shotgun
			default : setarray GUN_AMMO_TYPES_ARR[0] 0 break
            endswitch
	}
	else
	{
		setarray GUN_AMMO_TYPES_ARR[0] 0
	}
    ife cur_weap 0
    {
        ifn temp_weap 0
        {
            set weapon_type 0
            set gun_mag -1

            // TODO: Check these states for  `ife cur_weap 0` checks, these are unnecessary
            switch temp_weap
                case 1 : state tw_mini_shrinker_code ; break         // Mini-Shrinker
                case 2 : state tw_barrett_code ; break               // Barrett Rifle
                case 3 : state tw_dual_mac10_code ; break            // Dual Mac10
                case 4 : state tw_blood_staff_code ; break           // Blood Staff
                case 5 : state tw_enforcer_chaingun_code ; break     // Lizard Man Chaingun
                case 6 : state tw_pigcop_shotgun_code ; break        // Pigcop Shotgun
                case 7 : state tw_skull_duster_code ; break          // Bone Duster
                case 8 : state tw_flesh_squirter_code ; break        // Flesh Squirter
                case 9 : state tw_stygian_warcannon_code ; break     // Stygian Warcannon
                case 10 : state tw_sawnoff_code ; break              // Sawn-Off Shotgun
                case 11 : state tw_tommygun_code ; break             // Tommy Gun
                case 12 : state tw_riotgun_code ; break              // Riotgun
                case 13 : state tw_normal_crossbow_code ; break      // Standard Crossbow
                case 14 : state tw_miagun_code ; break               // MIA gun
                case 15 : state tw_lasergun_code ; break             // Laser Gun
                case 16 : state tw_tmissilel_code ; break            // Missile Launcher
                case 17 : state tw_chainsaw_code ; break             // Chainsaw
                case 18 : state tw_flamethrower_code ; break         // Flamethrower
                case 19 : state tw_katana_code ; break               // Standard Katana
                case 20 : state tw_mopweapon_code ; break            // The Mop
                case 21 : state tw_fnfal_code ; break                // FN FAL
                case 22 : state tw_mp40_code ; break                 // MP40
                case 23 : state tw_gdfplasma_code ; break            // GDF Plasmagun
                case 24 : state tw_enforcer_laser_code ; break       // Lizard Man Firelaser
                case 25 : state tw_m16_code ; break                  // M16
                case 26 : state tw_ak104_code ; break                // AK104
                case 27 : state tw_riotgun_minigun_mk1_code ; break  // Riotgun-Minigun Mark1
                case 28 : state tw_nailgun_code ; break              // Nailgun
                case 29 : state tw_glriotgun_code ; break            // Riotgun Grenade Launcher
                case 30 : state tw_dartgun_code ; break              // Dartgun
                case 31 : state tw_m60_code ; break                  // M60
                case 32 : state tw_zmissile_code ; break             // Zilla Missile Launcher
                case 33 : state tw_guardianhead_code ; break         // Guardian Head
                case 34 : state tw_riotgun_minigun_mk2_code ; break  // Riotgun-Minigun Mark2
                case 35 : state tw_calico_m960_code ; break          // Calico M960
                case 36 : state tw_swkatana_code ; break             // Shadow Realm Katana
                case 37 : state tw_beamsabre_code ; break            // Beam Sabre
                case 38 : state tw_ripperheart_code ; break          // Ripper Heart
                case 39 : state tw_zchaingun_code ; break            // Zombie Soldier Chaingun
                case 40 : state tw_zrailgun_code ; break             // Zilla Inc. Railgun
                case 41 : state tw_ar65_code ; break                 // AR-65
                case 42 : state tw_hellnailer_code ; break           // Hell Nailer
                case 43 : state tw_proto_shrinker_code ; break       // Proto-Shrinker
                case 44 : state tw_juggersuit_code ; break           // Juggernaut Suit Chaingun
                case 45 : state tw_p90_code ; break                  // P90
                case 46 : state tw_ogrestaff_code ; break            // Ogre Staff
                case 47 : state tw_engiesmg_code ; break             // Engineer SMG
                case 48 : state tw_rotbolt_code ; break              // Rotary Bolt Launcher
                case 49 : state tw_magicaxe_code ; break             // Magic Axe
                case 50 : state tw_rwcrossbow_code ; break          // Magic Crossbow
				case 51 : state tw_vorpalsword_code ; break         // Vorpal sword
                case 52 : state tw_udp45_code ; break                // UDP45
				case 55 : state tw_phased_code ; break                // Phased Plasma rifle
				case 56 : state tw_pigcop_shotgun_code ; break        // Mossberg Shotgun; mossberg uses same code as pigcop shotgun
                default : set temp_weap 0 ; break
            endswitch

			// If out of ammo, try to switch alt ammo type, otherwise drop temp weapon
			// This used to have "kickbackpic 0" check to only do it if the weapon is at rest,
			// but not every weapon resets to kickbackpic 0, eg it would break ammo switching on the tommy gun
			// I removed the check and it looks mostly fine, just some animation on the last weapon firing is skipped, I don't think it matters too much.
			ife cur_ammo 0
            {
				// try switch to alt ammo. If anything is applicable this will display the quote, swap the variable etc
				state detecttempweaponaltammoswitching

                // nothing to switch to, drop now
                ife switchaltammotype -1
					state dropemptyweapon

				// Mark as finished
				set switchaltammotype -1
            }
        }
        else
        {
            ifactorsound THISACTOR ZRAILGUN_IDLE stopsound ZRAILGUN_IDLE
            setarray WEAPON_TILE[0] 3833
            setarray weap_special[0] 0

            set gun_mag -1
            set GUN_HANDS 0
            set GUN_VOLUME 0
            set GUN_SIZE 0
            set GUN_AMMO_TYPES 0
			setarray GUN_AMMO_TYPES_ARR[0] 0					   

            set WEAPON0_WORKSLIKE 0
            set WEAPON0_SHOTSPERBURST 1
            set WEAPON0_FLAGS 292
            set WEAPON0_INITIALSOUND 4
        }
    }
ends
