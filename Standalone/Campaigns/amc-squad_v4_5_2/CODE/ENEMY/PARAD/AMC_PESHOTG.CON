/*
-------------------------------------------------------------------------------
===============================================================================

         -ooo:             +oo-            `+oo.       ./+oooooooooo+/:
        /NMMMN+            NMMNo`         -dMMM/      .mMMNmmmmmmmmmMMNo
       /NMd:mMMo           NMMNMd:      `oNMNMM/      :MMM/.........mMMh
      oNMd. -mMMy`         NMN:mMNs`   -hMm/mMM/      :MMM:         ::-.
    `sMMh`   .dMMh`        NMN .sNMd:`oNMh. mMM/      :MMM:
   `yMMMdhhhhhmMMMd.       NMN   /mMNdMm+`  mMM/      :MMM:         ss+:
  `hMMdhhhhhhhhhmMMm-      NMN    .yMMh.    mMM/      :MMM/.........mMMh
 .dMMs`         .hMMm:     NMN      :/`     mMM/      .mMMNmmmmmmmmmMMNo
 :oo+            `+oo+     +o+              +oo.       ./++ooooooooo+/:

###############################################################################
+ The AMC Squad
+ CON code by James Stanfield, Cedric "Sangman" Haegeman, Dino Bollinger,
+              Mikko Sandt, Cedric "Zaxtor" Lutes and Dan "Danarama" Gaskill
-------------------------------------------------------------------------------
* See AMC_MAIN.CON for a full list of script authors.

Feel free to use any code in the game for your own uses; just make
sure to mention the authors and/or "The AMC Squad" in your credits.
--------------------------------------------------------------------------------
NOTES:

--------------------------------------------------------------------------------
*/


// ******************************************************************************
// Eschaton Paradigm Shotgunner
// ******************************************************************************

spriteshadow 14222

useractor notenemy 14222 100 0 ifaction 0 { sizeat 24 24 action FIVE_ANG } enda

spriteshadow 18744

useractor notenemy 18744 100 0 ifaction 0 { sizeat 24 24 action FIVE_ANG } enda

// ************************************************************************************
// PARADIGM ESCHATON SHOTGUNNER
// ************************************************************************************

damageeventtile PE_SHOTGUNNER

action A_PESHOTG_IDLE 0 1 5 1 20

action A_PESHOTG_DEAD 54 1 1 1 10
action A_PESHOTG_HEADDEAD 59 1 1 1 10
action A_PESHOTG_HEADSHOT 55 5 1 1 16
action A_PESHOTG_DYING 50 5 1 1 16

action A_PESHOTG_FREEZE 0 1 5 1 10
action A_PESHOTG_GROW 41 1 1 1 10
action A_PESHOTG_SHRUNK  0 4 5 1 12
action A_PESHOTG_PAIN 50 1 1 1 10

action A_PESHOTG_SEEK  5 4 5 1 12

action A_PESHOTG_FIRE 25 3 5 1 32
action A_PESHOTG_PUMP 35 1 5 1 32
 action A_PESHOTG_THROW 40 2 5 1 15

move M_PESHOTG_WALK 120

defstate peshotg_flyback
	state random_trigger_showoff
	ife GENDER MALE { ifrnd 128 sound PE_PAIN1 else sound PE_PAIN2 }
	else { ifrnd 128 sound PE_F_PAIIN1 else sound PE_F_PAIN2 }
	setprojectile[PSHOTG_CORPSE_FLY].pal sprite[].pal
	eshoot PSHOTG_CORPSE_FLY
	setprojectile[PSHOTG_CORPSE_FLY].pal 0
	geta[].htang temp4
	seta[RETURN].ang temp4
	killit
ends

defstate peshotg_dead
	cstat 0
	move STOP
    ifhitweapon
	{
		ifwasweapon RADIUSEXPLOSION
		{
			state squish_sounds
			ife INVASION 0
			{
				state standard_jibs
				state human_jibs

			}
			killit
		}
	}
ends

useractor enemystayput PE_SHOTGUNNER_STAYPUT 175
	state monst_glow
	cactor PE_SHOTGUNNER
enda

useractor enemy PE_SHOTGUNNER 175
	fall

	ifaction 0
	{
		cstator 257
		ifspritepal 24 { strength 200 sizeat 26 26 }
		else { strength 175 ifrnd 128 { sizeat 22 23 set GENDER FEMALE } else { sizeat 24 24 set GENDER MALE } }
		state monst_glow
		spawn SHOOTME
		set ZVELSAVED 5
		set MONSTER_FLAGS 2
		set npc_talking 0
		spriteflags NORMAL_ENEMY
		set ally_mag 30

		action A_PESHOTG_IDLE
	}

	ifg enemy_cooldown1 0 sub enemy_cooldown1 1
	ifg npc_talking 0 sub npc_talking 1

	state ENEMYKNOCKBACKS
	state enemyfloordamage
	state enemy_ice_damage
	state enemy_spirit_damage

	ifaction A_PESHOTG_IDLE
	{
		move STOP
		state checkfortarget

		ifn my_target -1
		{
			ifcansee
				state pegrunt_recog_sound

			action A_PESHOTG_SEEK
		}
	}
	else ifaction A_PESHOTG_DEAD
		state peshotg_dead
	else ifaction A_PESHOTG_HEADDEAD
		state peshotg_dead
	else ifaction A_PESHOTG_HEADSHOT
	{
		strength 0
		ifactioncount 5 { state BODY_FALL_NOISES spawn BLOODPOOL action A_PESHOTG_HEADDEAD }
	}
	else ifaction A_PESHOTG_DYING
	{
		strength 0
		ifactioncount 5 { state BODY_FALL_NOISES spawn BLOODPOOL action A_PESHOTG_DEAD }
	}
	else ifaction A_PESHOTG_FREEZE
		state frozen_code
	else ifaction A_PESHOTG_GROW
	{
		move STOP
		state genericgrowcode
	}
	else ifaction A_PESHOTG_SHRUNK
	{
		ifmove M_PESHOTG_WALK nullop
		else move M_PESHOTG_WALK geth fleeenemy

		ifl SHRUNK_TIME SHRUNKCOUNT // keep shrunk
			state new_shrunkcode
		else ifl SHRUNK_TIME SHRUNKDONECOUNT // regrow
		{
			state unshrink

			ifspritepal 24 { sizeto 26 26 }
			else
			{
				ife GENDER FEMALE
					sizeto 22 23
				else ife GENDER MALE
					sizeto 24 24
			}
		}
		else // after regrow, switch back to regular action
		{
			state endshrunkenstate
			action A_PESHOTG_SEEK
		}
	}
	else ifaction A_PESHOTG_PAIN
	{
		move STOP
		sub PAIN_AMOUNT 1
		ife PAIN_AMOUNT 0 action A_PESHOTG_SEEK
	}
	else ifaction A_PESHOTG_THROW
	{
	move STOP faceplayersmart
	ifcansee { }
		geta[].htlastvx mx
		geta[].htlastvy my
		geta[].x x
		geta[].y y
		sub mx x
		sub my y
		getangle angvar mx my
		ifactioncount 2 soundonce LIGHT_FUSE
		ifactioncount 4
			{
			seta[].ang angvar
			sound THROWSOMET
			shoot MOLOTOV
			action A_PESHOTG_SEEK
			sub ZVELSAVED 1
			set enemy_cooldown1 90
			resetactioncount
			}
	}
	else ifaction A_PESHOTG_SEEK
	{
		ifmove M_PESHOTG_WALK nullop
		else move M_PESHOTG_WALK geth

		ifl ally_mag 0 add ally_mag 1
		ifg ally_mag 0 sub ally_mag 1

		ife npc_talking 0
			state pegrunt_chat_underfire

		ifnotmoving ifrnd 32 operate

		state checkfortarget

		ifn my_target -1
			ife ally_mag 0
		{
			state SKILL_SHOOT_LEVELADJUST
			ifl RANDOM_CHANCE SKILLCHANCE
			{
				ife npc_talking 0
					state pegrunt_chat_target

				ifpdistg 4096 ifrnd 164 ifg ZVELSAVED 0 ife enemy_cooldown1 0 action A_PESHOTG_THROW
				else action A_PESHOTG_FIRE
			}
		}

		ife my_target -1
		  ifrnd 4
			state pegrunt_chat_seek
	}
	else ifaction A_PESHOTG_PUMP
	{
	move STOP
		ifactioncount 2
			{
			sound MOSSB_PUMP
				shoot 3761
				ifg ally_mag 2 { action A_PESHOTG_SEEK set ally_mag -30 }
				else action A_PESHOTG_FIRE
				resetactioncount
			}
	}
	else ifaction A_PESHOTG_FIRE
	{
		move STOP
		state new_validatetarget

		ife my_target -1
		{
			ifrnd 32 ife npc_talking 0 { ife GENDER MALE set npc_sound PE_HAHAHA else set npc_sound PE_F_HAHA soundoncevar npc_sound }
			action A_PESHOTG_SEEK
		}
		state fronttowardstarget
		{
			ifactioncount 1
			{
				add ally_mag 1
				state DARKNESS_TARGET_ACCURACY
				sound PD_MOSSF
				set PROJECTILE_TO_SHOOT ENEMY_SHOTGUN
				state sang_enemyShootProjectile
				state sang_enemyShootProjectile
				state sang_enemyShootProjectile
				state sang_enemyShootProjectile
				state sang_enemyShootProjectile

				ife HITSCAN_SHOT_FIRED 1
				{
					ifrnd 2 zshoot temp3 13215
					globalsound DISTANT_RIFLE
				}

				ife PERFMODE 1
				 ifcansee
				  ife INVASION 0
				{
					set gunsmoke_z 8244
					set gunsmoke_angle 128
					state spawn_gunsmoke_z
					set gunsmoke_z 6344
					espawn 16115
					state spawn_muzzleflash
				}

			action A_PESHOTG_PUMP
			resetactioncount
			}
		}
	}

	ifhitweapon
	{
	state NEWGUNEFFECTS
	ife INVASION 0
	ifcansee
		state random_wall_jibs

	ifdead
	{
		ifn npc_sound 0 stopactorsound THISACTOR npc_sound
		ifand npc_killed 32 nullop else xorvar npc_killed 32
		addkills 1

		ifwasweapon RADIUSEXPLOSION
		{
			geta[].extra temp
		    ifg temp -50 state peshotg_flyback
			state squish_sounds
			state standard_jibs
			state human_jibs
			killit
		}
		ifwasweapon RPG
		{
			geta[].extra temp
		    ifg temp -50 state peshotg_flyback
			state squish_sounds
			state standard_jibs
			state human_jibs
			killit
		}
		ifand PROJ_UDATA PROJ_GIB
		{
		    geta[].extra temp
		    ifg temp -50 state peshotg_flyback
			state squish_sounds
			state standard_jibs
			state human_jibs
			killit
		}
		ifand PROJ_UDATA 8192
		 {
			 ifrnd 4 ife GENDER MALE { spawn ELECTROCUTE_MARV soundonce MALE_ELECT1 } else spawn ELECTROCUTE_GUY
			 shoot SPARK2 shoot SPARK2 shoot SPARK2
			 killit
		 }
		else ifwasweapon GROWSPARK { cstat 0 sound ACTOR_GROWING action A_PESHOTG_GROW break }
		else ifg ice_damage 0 { spritepal 1 strength 1 sound SOMETHINGFROZE action A_PESHOTG_FREEZE }
		else
		{
			state rf
			ife HEADSHOT 2
			{
					ifg fire_damage 0 set fire_damage 0
					state random_trigger_showoff
					state jib_sounds
					state decap_sounds
					shoot NJIB
					shoot NJIB
					guts JIBS6 3
					guts JIBS2 2
					action A_PESHOTG_HEADSHOT
			}
			else ifg spirit_damage 0
			{
				shoot SPARK2 shoot SPARK2 shoot SPARK2
				spritepal 1
				guts JIBS3 6
				spawn SPIRIT_DEATH_GUY
				killit
			}
			else ifg fire_damage 0
			{
				state pegrunt_chat_onfire
				set PLAYER_VOICEOVER 21
				spawn ONFIREGUY
				killit
			}
			else ifg energy_damage 0
			{
				shoot SPARK2 shoot SPARK2 shoot SPARK2
				spritepal 4
				guts JIBS3 6
				spawn DISINTIGRATE_GUY
				killit
			}
			else
			{
				ifstrength -35 ifpdistl 4096
					state peshotg_flyback
				else ifwasweapon KNEE state peshotg_flyback
				else ifwasweapon SHOTGUN ifpdistl 1536 state peshotg_flyback
				else
					{
					ife GENDER MALE { ifrnd 128 sound PE_PAIN1 else sound PE_PAIN2 }
					else { ifrnd 128 sound PE_F_PAIIN1 else sound PE_F_PAIN2 }
					action A_PESHOTG_DYING
					}
			}
			ifrnd 48 { espawn MOSSBERG_SPRITE randvar temp 5 add temp 3 setactorvar[RETURN].YVELSAVED temp }
		}

		ifphealthl 50
		{
			state SKILL_LEVELADJUST
			ifl RANDOM_CHANCE SKILLCHANCE spawn HYPOSPRAY
		}
	}
	else // not dead
	{
		ifg PAIN_AMOUNT 0 action A_PESHOTG_PAIN
		else ifrnd 16 { state PAIN_SKILL_LEVELADJUST action A_PESHOTG_PAIN }
		else ifwasweapon SHRINKSPARK { sound ACTOR_SHRINKING action A_PESHOTG_SHRUNK }
		else ifaction A_PESHOTG_IDLE { state PAIN_SKILL_LEVELADJUST action A_PESHOTG_PAIN }
	}
}

state checksquished

enda
