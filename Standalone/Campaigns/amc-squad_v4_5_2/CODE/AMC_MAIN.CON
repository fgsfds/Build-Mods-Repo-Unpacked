/*
-------------------------------------------------------------------------------
===============================================================================

         -ooo:             +oo-            `+oo.       ./+oooooooooo+/:
        /NMMMN+            NMMNo`         -dMMM/      .mMMNmmmmmmmmmMMNo
       /NMd:mMMo           NMMNMd:      `oNMNMM/      :MMM/.........mMMh
      oNMd. -mMMy`         NMN:mMNs`   -hMm/mMM/      :MMM:         ::-.
    `sMMh`   .dMMh`        NMN .sNMd:`oNMh. mMM/      :MMM:
   `yMMMdhhhhhmMMMd.       NMN   /mMNdMm+`  mMM/      :MMM:         ss+:
  `hMMdhhhhhhhhhmMMm-      NMN    .yMMh.    mMM/      :MMM/.........mMMh
 .dMMs`         .hMMm:     NMN      :/`     mMM/      .mMMNmmmmmmmmmMMNo
 :oo+            `+oo+     +o+              +oo.       ./++ooooooooo+/:

###############################################################################
+ The AMC Squad
+ CON code by James Stanfield, Cedric "Sangman" Haegeman, Dino "Doom64hunter" Bollinger,
+              Mikko Sandt, Cedric "Zaxtor" Lutes and Dan "Danarama" Gaskill
-------------------------------------------------------------------------------
= Also contains code excerpts from the following authors:
* Maxim Chinyakin (aka. Lezing) - Dukebike code, Lens Flares
* ILOVEFOXES - Tank code
* Phillip Kutin (aka. HelixHorned) - getzrange/visibility code
* Jonathan Strander (aka. Mblackwell) - various
* Eddy Zykov / Balls of Steel Team - various
* Lord Misfit - various
* Hunter_Rus - various
* Kaostico - various
* Alias Conrad Coldwood - EDF Bureau (EDF Mission) code
* M210 - various from BloodCM

Based on the Duke3D CON files by 3DRealms, released under the GPL2 at:
https://github.com/videogamepreservation/dukenukem3d/blob/ef609159bd352985a0c63734a11241d86c873fe5/testdata/GAME.CON

Feel free to use any code in the game for your own uses; just make
sure to mention the authors and/or "The AMC Squad" in your credits.
--------------------------------------------------------------------------------
NOTES:
This file is the main entry point for the CON scripts and defines the inclusion
of all other script files, as well as some general purpose events and states.
--------------------------------------------------------------------------------
*/

var toggle_heatnight 0 1

setdefname AMCSQUAD.DEF
dynamicremap

// Version Definition
string 9000 The AMC Squad - Episode 4 - 4.5.0

onevent EVENT_INIT
    // print version string
    echo 9000

    // savegame compatibility version (SVN revision) -- alter to invalidate savegames
    setu[].userbyteversion 15011
endevent

// Main

move STOP 0

move SUP 0 -5
move SDOWN 0 5

// Some misc defines
define NO       0
define YES      1
define OFF      2

include CODE/DATA.CON  // Variables and Arrays stored on Disk
include CODE/VARIABLES.CON // Variables
include CODE/SETTINGS_DEFS.CON

include CODE/AMCDEFS.CON // Defs
include CODE/ALLY/ALLY_DEFS.CON // Defs for Allies
include CODE/ENEMY/ENEMY_DEFS.CON // Defs for enemies, contains set-up events too
include CODE/STANDARD.CON // Separated re-usable functions
include CODE/AMCUSER.CON // User
include CODE/TEXT/QUOTES.CON // Quotes
include CODE/SOUNDS_LABELS.CON // Sound Labels
include CODE/SOUNDS_DEFINITIONS.CON // Sound Definitions (comment this to test with regular eduke32 builds)
include CODE/EPISODES.CON // Episodes
include CODE/SETTINGS.CON

action FIVE_ANG 0 1 5 1 1
action SEVEN_ANG 0 1 7 1 1

defstate SPRITE_FADE
        ife alpha 0
        {
        geta[].cstat temp
        andvar temp 0xfdfe
        seta[].cstat temp
        }
        else
        {
            geta[].cstat temp
            orvar temp 2
            seta[].cstat temp

            // Assume blending tables [1 .. 128] are installed, like generated by
            // shadexfog.lua:create_128_trans(1).
            ifg alpha 128
            {
                set temp 257
                sub temp alpha
                set alpha temp

                // Set "reverse translucent" cstat bit
                geta[].cstat temp
                orvar temp 512
                seta[].cstat temp
            }
            else
            {
                // Clear cstat bit 512
                geta[].cstat temp
                andvar temp 0xfdff
                seta[].cstat temp
            }
            seta[].blend alpha
        }
ends

defstate rf
geta[].cstat temp4
ife temp4 259 cstat 2 else
ife temp4 771 cstat 514 else
{
  ifrnd 128
    cstat 4
  else
    cstat 0
}
ends

defstate decap_sounds
ifrnd 128 sound DECAPITATE2
else sound DECAPITATE
ends

defstate squish_sounds
ife TIMEZONE 8 { stopallsounds globalsound RETRO_DEAD } else
    {
    ifrnd 128 sound SQUISHED2
    else ifrnd 128 sound SQUISHED3
    else sound SQUISHED
    }
ends

defstate animate_sprite_event
    seta[].mdflags 16
ends

defstate NOEVENTNOCLIPPING
    geta[].htflags temp2
    xorvar temp2 128
    xorvar temp2 2048
    seta[].htflags temp2
ends

gamevar spawntmp 0 0

onevent EVENT_ENDLEVELSCREEN
set RETURN -1
endevent

onevent EVENT_NEWGAMESCREEN
set RETURN -1
endevent



onevent EVENT_SPAWN
    geta[].cstat spawntmp
    andvar spawntmp 48

    ife spawntmp 32  // if it's floor-aligned
    {
        geta[].mdflags spawntmp
        orvar spawntmp 1  // SPREXT_NOTMD
        seta[].mdflags spawntmp
    }
    ifactor ACCESSSWITCH
    {
    ife sprite[].xvel 1
        {
        geta[].mdflags spawntmp
        orvar spawntmp 1  // SPREXT_NOTMD
        seta[].mdflags spawntmp
        }
    }
    ifactor SLOTDOOR
    {
    ife sprite[].xvel 1
        {
        geta[].mdflags spawntmp
        orvar spawntmp 1  // SPREXT_NOTMD
        seta[].mdflags spawntmp
        }
    }
    ifactor LIGHTSWITCH
    {
    ife sprite[].xvel 1
        {
        geta[].mdflags spawntmp
        orvar spawntmp 1  // SPREXT_NOTMD
        seta[].mdflags spawntmp
        }
    }
    ifactor DIPSWITCH
    {
    ife sprite[].xvel 1
        {
        geta[].mdflags spawntmp
        orvar spawntmp 1  // SPREXT_NOTMD
        seta[].mdflags spawntmp
        }
    }
    ifactor LIGHTSWITCH2
    {
    ife sprite[].hitag 0 seta[].hitag 44
    }
	ifactor RAT cactor ARAT
endevent

// thanks MBlackwell
appendevent EVENT_RESETGOTPICS
    // gotpic[179] = 1 => means the default NULL skybox tile is visible.
    // if 0, it's not visible
    setarray gotpic[179] 0
    setarray gotpic[17924] 0
	setarray gotpic[13214] 0
	setarray gotpic[SHOTSPARK1] 0
endevent

move FORWARD 10

// Reverse shade

defstate reverse_shade
  set weap_disp_temp5 shade
  ifg weap_disp_temp5 30 set weap_disp_temp5 30
  ifl weap_disp_temp5 0 set weap_disp_temp5 0
  sub weap_disp_temp5 30
  mulvar weap_disp_temp5 -1
ends

// disp_temp = value
// disp_temp3 = resulting tile
defstate circle_bar_disp
	ifg disp_temp 99 set disp_temp3 9291 else
	ifg disp_temp 90 set disp_temp3 9292 else
	ifg disp_temp 80 set disp_temp3 9293 else
	ifg disp_temp 70 set disp_temp3 9294 else
	ifg disp_temp 60 set disp_temp3 9295 else
	ifg disp_temp 50 set disp_temp3 9296 else
	ifg disp_temp 40 set disp_temp3 9297 else
	ifg disp_temp 30 set disp_temp3 9298 else
	ifg disp_temp 20 set disp_temp3 9299 else
	ifg disp_temp 10 set disp_temp3 9300 else
	ifg disp_temp 0 set disp_temp3 9301
ends


defstate SWITCH_INFO_CODE
    ife sprite[].hitag 1 espawn 10351 else espawn 10350

    set temp3 sprite[].x
    add temp3 64

    rotatepoint sprite[].x sprite[].y temp3 sprite[].y sprite[].ang temp5 temp6

	geta[].sectnum upd_sect
    updatesectorz temp5 temp6 sprite[].z upd_sect
    ife upd_sect -1 // if it's in an empty sector, trying checking backwards
    {
    set temp3 sprite[].x
    sub temp3 64

    rotatepoint sprite[].x sprite[].y temp3 sprite[].y sprite[].ang temp5 temp6
	geta[].sectnum temp8
    updatesectorz temp5 temp6 sprite[].z temp8
    ifn temp8 -1
        {
        seta[RETURN].x temp5
        seta[RETURN].y temp6
        }
    }
    else
    ifvarvarl sector[upd_sect].floorz sprite[].z // if floor is above this sprite, spawn 'behind'
    {
    set temp3 sprite[].x
    sub temp3 64

    rotatepoint sprite[].x sprite[].y temp3 sprite[].y sprite[].ang temp5 temp6
	geta[].sectnum temp8
    updatesectorz temp5 temp6 sprite[].z temp8
    ifn temp8 -1
        {
        seta[RETURN].x temp5
        seta[RETURN].y temp6
        }
    }
    else
    {
    seta[RETURN].x temp5
    seta[RETURN].y temp6
    }
    geta[].z temp
    sub temp 2048
    seta[RETURN].z temp
ends

/* Global display timer to use for whatever */
onevent EVENT_DISPLAYROOMS
    add global_display_timer 1
    mod global_display_timer 240
endevent

// these two events update gamevars that can be used to detect whether a gametic has passed
appendevent EVENT_WORLD
    add gametic_clock 1
    mod gametic_clock 30
endevent

onevent EVENT_DISPLAYROOMS
    ifn disp_seen_gametic gametic_clock
    {
        set disp_seen_gametic gametic_clock
        set disp_gametic_haschanged 1
    }
    else
        set disp_gametic_haschanged 0
endevent

// call this state to ignore the use key press until next time the player lets go of the key
// this is to prevent actions from triggering multiple times if a key press is detected in multiple tics
// note this will only work in places where the variable "use_action_allowed" is validated
defstate setIgnoreUse
	ifhitspace
	{
		set ignore_current_use 1
		set use_action_allowed 0
	}
ends

// for removing followers from other actors
defstate hard_removefollower
	ifn ALLYSLOT1 -1 { setactorvar[ALLYSLOT1].FOLLOW_PLAYER 0 set ALLYSLOT1 -1 }
	ifn ALLYSLOT2 -1 { setactorvar[ALLYSLOT2].FOLLOW_PLAYER 0 set ALLYSLOT2 -1 }
	ifn ALLYSLOT3 -1 { setactorvar[ALLYSLOT3].FOLLOW_PLAYER 0 set ALLYSLOT3 -1 }
	ifn ALLYSLOT4 -1 { setactorvar[ALLYSLOT4].FOLLOW_PLAYER 0 set ALLYSLOT4 -1 }
	ifn ALLYSLOT5 -1 { setactorvar[ALLYSLOT5].FOLLOW_PLAYER 0 set ALLYSLOT5 -1 }
	ifn ALLYSLOT6 -1 { setactorvar[ALLYSLOT6].FOLLOW_PLAYER 0 set ALLYSLOT6 -1 }
	ifn ALLYSLOT7 -1 { setactorvar[ALLYSLOT7].FOLLOW_PLAYER 0 set ALLYSLOT7 -1 }
	ifn ALLYSLOT8 -1 { setactorvar[ALLYSLOT8].FOLLOW_PLAYER 0 set ALLYSLOT8 -1 }
ends

include CODE/ACTORS/LOADACTOR.CON // Load actor
include CODE/TEXT/GAME_SUBTITLES.CON // subtitles for player one-liners .etc
include CODE/TEXT/CUTSCENE_SUBS.CON // subtitles for cutscenes
include CODE/TEXT/MISSIONS.CON // Mission text
include CODE/TEXT/TRANSLATOR.CON // Mission text
include CODE/SOUNDS.CON // Sound code

include CODE/GETZRANGE.CON // helixhorned's get range code
include CODE/PLAYER/AMMO_DEFS.CON // all ammo type related info in one place
include CODE/PLAYER/WEAPON.CON // player temp weapon helper code that's specifically about ammo type management
include CODE/PLAYER/PBURN.CON // Player burning status effect code
include CODE/PLAYER/PACID.CON // Player acid (not the drug... but what if it was?) status effect code

include CODE/RESEARCH_DEFVARS.CON

include CODE/PLAYER/PSTATS.CON // Player code
include CODE/GUI/HUDS.CON // Player heads up displays
include CODE/VEHICLE/EBIKE.CON // Bike code by Lezing
include CODE/MATERIALS.CON // Materials
include CODE/ACTORS/PROJECTILES.CON // Projectiles
include CODE/ACTORS/PARTICLES.CON // Particle spawner
include CODE/ACTORS/SMARTPOINT.CON // Smartpoint
include CODE/ACTORS/SHADEOFFSET.CON // Shade offset
include CODE/ACTORS/PALCHANGE.CON // Pal swap
include CODE/ACTORS/HEADSPRITESECT.CON // Sheep herding effect
include CODE/ACTORS/CHANGETEXTURE.CON // change texture effect
include CODE/ACTORS/CURRENT.CON


// Targetting code
include CODE/ACTORS/ACTIVESPAWN.CON // Active respawn enemies

include CODE/ACTORS/TARGETSTATES.CON // Some states that are needed in the ally/enemy target vars states
include CODE/ALLY/ALLYTARGETVARS.CON // Ally variable setting
include CODE/ACTORS/TARGET.CON // Faction target selection code

include CODE/ACTORS/EXTRA.CON // Extra stuff
include CODE/ACTORS/ANIMALS.CON // Animal code
include CODE/WEAP_DISP/WEAP_DISPLAY.CON // Weapon display

// Research & bestiary vars + definitions
include CODE/BESTIARY_DEFVARS.CON
include CODE/RESEARCH_DEFS.CON
include CODE/BESTIARY_DEFS.CON

// Enemy code
include CODE/ENEMY/ENEMY.CON // Enemies

include CODE/GUI/GENERIC_UI.CON // Generic UI states
include CODE/GUI/MISSION_BOX.CON // Mission box specific stuff
include CODE/GUI/COMMAND_INT.CON // AMC Command interface
include CODE/GUI/INTERFACES.CON // Computer and mission code
include CODE/GUI/WEP_UPG.CON // Weapon upgrade interface
include CODE/GUI/WEP_SHOP.CON // Weapon shop interface
include CODE/GUI/RW_SHOP.CON // Ringworld shop interface
include CODE/GUI/RW_UPG.CON // Ringworld upgrade interface
include CODE/GUI/KITCHEN.CON // Kitchen Interface
include CODE/GUI/BASE_CUS.CON // Base customisation Interface

include CODE/GUI/LOADOUT.CON // Loadout Terminal
include CODE/GUI/TRAINING.CON // Training interface
include CODE/GUI/NEW_RESEARCH.CON // New research terminal
include CODE/GUI/BESTIARY.CON // Bestiary
include CODE/GUI/RESEARCH.CON // Contains old Research Terminal code, but some parts of it are still in use I think so not removed yet
include CODE/CONVERSATIONS/CONV_TEXT.CON // Conversation text
include CODE/GUI/MISC.CON // misc interfaces
include CODE/CUTSCENE.CON // Cutscene cam code
include CODE/LEVELS.CON // Code for level transitions

include CODE/DISPLAYWEAPONBAR.CON // display weapon bar (top of screen HUD)
include CODE/GUI/CHARSELECT_UI.CON // Character selection UI code
include CODE/DISPLAY.CON // display stuff
include CODE/DISPLAYCURSOR.CON // display cursor CON file, THIS INCLUDE NEEDS TO BE BELOW THE OTHER UI/DISPLAY CON FILES so that the cursor appears ABOVE the elements rendered via those files.

include CODE/ALLY/ALLY.CON // AMC Ally, vehicle, and fighting code
include CODE/ACTORS/ITEMS.CON // Items

include CODE/ACTORS/OBJECTS.CON // Breakable objects
include CODE/INPUT.CON // Inputable stuff
include CODE/ACTORS/LENSFLARE.CON // Lensflare
include CODE/ZAX.CON // CON file for Zaxtor to put his stuff in
include CODE/ACTORS/SHADOW.CON // contains all listings for spritenoshade and spritenopal
include CODE/ACTORS/OVERGROWTH.CON

include CODE/MIKKO.CON // CON file for Mikko to put his stuff in
include CODE/DMGSPRITE_MODS.CON // Sprite damage events and modifiers
include CODE/NEWGAME_CHOICES.CON // Custom new game selection

include CODE/CHEATS.CON // cheat code stuff

onevent EVENT_SETDEFAULTS
    setuserdef[].menubackground 0
    setuserdef[].show_level_text 0
    setuserdef[].screenfade 0
    setuserdef[].menutext_paldisabled 13
    setuserdef[].menutext_paldeselected 5
    // setuserdef[].menutext_zoom 49152
    // setuserdef[].gametext_zoom 49152
    setuserdef[].gametext_pal 2
    setuserdef[].gametext_palselected 0
    setuserdef[].minitext_paldisabled 22
    setuserdef[].menu_scrollbartilenum 3064
    readarrayfromfile BEAT_EPISODES F_BEAT_EPISODES_AMCTC
    ifand BEAT_EPISODES[1] 128 setuserdef[].default_volume 1
    ifand BEAT_EPISODES[2] 1024  setuserdef[].default_volume 2
endevent

var RESET_WALLS 0 2
var swing_mov_bit 0 2 // 0 = door isn't moving (anymore). 1 = door is moving
var swing_angle_start 0 2

onevent EVENT_MOVESECTOR
	// If swinging door sector effector
	ife sprite[THISACTOR].picnum 1
	  ife sprite[THISACTOR].lotag 11
	{
		// SHADE OFFSET handling
		ifg sprite[].hitag 0
		{
			// trigger shade offset if coming from not moving state
			ifn swing_mov_bit 2 // 2 means we stopped moving but we're in build jank
			{
				ife swing_mov_bit 0
				{
					// Increment value
					set temp LIGHT_OPEN[sprite[].hitag]
					add temp 1
					setarray LIGHT_OPEN[sprite[].hitag] temp
				}

				// Start of movement setup is done in EVENT_GAME below this event!
				// Here we detect full end of movement
				set swing_mov_bit 1

				set temp RETURN
				abs swing_angle_start
				abs temp

				// We assume swinging door angle must always move 512 units to be marked done
				sub temp swing_angle_start
				abs temp

				// door movement done
				ife temp 512
					set swing_mov_bit 2 // we still end up in this bit one more time after calculating the end of movement because the build engine is jank. Set to 2 and we'll handle that on next tic.
			}
			else
				set swing_mov_bit 0 // done for real now
		}

		// DOOR KNOB CODE
		// This causes the door tiles on swinging doors to switch to other tiles simulating movement of the door knob
		set temp RETURN
		and temp 255
		geta[THISACTOR].sectnum temp2
		for WALLPOINT wallsofsector temp2
		{
			ifn wall[WALLPOINT].hitag 1 // if hitag 1, don't touch the wall - same as built in lighting effects
			{
				getwall[WALLPOINT].nextwall temp3
				getwall[temp3].picnum temp4

				switch temp4
					case 717
						setwall[temp3].picnum 29998
						break
					case 29998
						ifg temp 192 setwall[temp3].picnum 29999
						ifl temp 32 setwall[temp3].picnum 29999
						break
					case 719
						setwall[temp3].picnum 30000
						break
					case 30000
						ifg temp 192 setwall[temp3].picnum 30001
						ifl temp 32 setwall[temp3].picnum 30001
						break
					case 9523
						setwall[temp3].picnum 30002
						break
					case 30002
						ifg temp 192 setwall[temp3].picnum 30003
						ifl temp 32 setwall[temp3].picnum 30003
						break
					case 8530
						setwall[temp3].picnum 30004
						break
					case 30004
						ifg temp 192 setwall[temp3].picnum 30005
						ifl temp 32 setwall[temp3].picnum 30005
						break
					case 159
						setwall[temp3].picnum 30006
						break
					case 30006
						ifg temp 192 setwall[temp3].picnum 30007
						ifl temp 32 setwall[temp3].picnum 30007
						break
					case 11482
						setwall[temp3].picnum 30008
						break
					case 30008
						ifg temp 192 setwall[temp3].picnum 30009
						ifl temp 32 setwall[temp3].picnum 30009
						break
					case 10183
						setwall[temp3].picnum 30010
						break
					case 30010
						ifg temp 192 setwall[temp3].picnum 30011
						ifl temp 32 setwall[temp3].picnum 30011
						break
					case 13898
						setwall[temp3].picnum 30012
						break
					case 30012
						ifg temp 192 setwall[temp3].picnum 30013
						ifl temp 32 setwall[temp3].picnum 30013
						break
				endswitch
				setvar RESET_WALLS 15
			}
		}
	}
endevent

var game_temp 0 2

appendevent EVENT_GAME

// remove shadows in fog sectors
ifand sprite[].htflags 1 // does this sprite cast a spriteshadow?
	{
	switch sector[].floorpal
		case 128
		case 129
		case 130
		case 131
		case 140
		case 141
		case 142
		case 143
		case 144
		case 145
		case 146
		case 147
			ifand sprite[].htflags 4096 nullop else
					{
					geta[].htflags game_temp
					xor game_temp 4096
					seta[].htflags game_temp
					}
			break
	endswitch
	}

	// swing door stuff
	ifactor SECTOREFFECTOR
	  ife sprite[].lotag 11
	{
		// For hitag 0, handle shade offset things
		ifg sprite[].hitag 0
		{
			// get starting sector angle for non moving swing doors
			ife swing_mov_bit 0
			{
				set temp LIGHT_OPEN[sprite[].hitag]
				ifl temp 10
					setarray LIGHT_OPEN[sprite[].hitag] 10
				geta[].htg_t 2 swing_angle_start
			}
			else ife swing_mov_bit 2 // Counts too, I hate this engine
			{
				set temp LIGHT_OPEN[sprite[].hitag]
				ifl temp 10
					setarray LIGHT_OPEN[sprite[].hitag] 10
				geta[].htg_t 2 swing_angle_start
			}
		}

		// door knob stuff
		ifg RESET_WALLS 0
		{
			sub RESET_WALLS 1

			geta[THISACTOR].sectnum temp2
			for WALLPOINT wallsofsector temp2
			{
				ifn wall[WALLPOINT].hitag 1 // if hitag 1, don't touch the wall - same as built in lighting effects
				{
					getwall[WALLPOINT].nextwall temp3
					getwall[temp3].picnum temp4
					switch temp4
						case 29998
							ife RESET_WALLS 1 setwall[temp3].picnum 717
							break
						case 29999
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 29998
							break
						case 30000
							ife RESET_WALLS 1 setwall[temp3].picnum 719
							break
						case 30001
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 30000
							break
						case 30002
							ife RESET_WALLS 1 setwall[temp3].picnum 9523
							break
						case 30003
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 30002
							break
						case 30004
							ife RESET_WALLS 1 setwall[temp3].picnum 8530
							break
						case 30005
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 30004
							break
						case 30006
							ife RESET_WALLS 1 setwall[temp3].picnum 159
							break
						case 30007
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 30006
							break
						case 30008
							ife RESET_WALLS 1 setwall[temp3].picnum 11482
							break
						case 30009
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 30008
							break
						case 30010
							ife RESET_WALLS 1 setwall[temp3].picnum 10183
							break
						case 30011
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 30010
							break
						case 30012
							ife RESET_WALLS 1 setwall[temp3].picnum 13898
							break
						case 30013
							ifge RESET_WALLS 2 ifle RESET_WALLS 5 setwall[temp3].picnum 30012
							break
					endswitch
				}
			}
		}
	}
endevent

gamevar TSPRITE_STATNUM 0 2

defstate SHELL_ROT
        geta[].xvel tsprite_temp4
        div tsprite_temp4 5
        set tsprite_temp5 25
        sub tsprite_temp5 tsprite_temp4
        gettspr[].tsprpicnum tsprite_temp
        add tsprite_temp2 1
        ifg tsprite_temp2 tsprite_temp5
            {
            add tsprite_temp3 1
            set tsprite_temp2 0
            }
        ifactor NINEMM_SHELL { ifg tsprite_temp3 5 set tsprite_temp3 0 } else
        ifactor 13780 { ifg tsprite_temp3 5 set tsprite_temp3 0 } else
        ifactor SRIFLESHELL { ifg tsprite_temp3 5 set tsprite_temp3 0 } else
        { ifg tsprite_temp3 6 set tsprite_temp3 0 }
        add tsprite_temp tsprite_temp3
        settspr[].tsprpicnum tsprite_temp
ends

defstate SHELL_ROT_BACK
        geta[].xvel tsprite_temp4
        div tsprite_temp4 5
        set tsprite_temp5 25
        sub tsprite_temp5 tsprite_temp4
        gettspr[].tsprpicnum tsprite_temp
        add tsprite_temp2 1
        ifg tsprite_temp2 tsprite_temp5
            {
            sub tsprite_temp3 1
            set tsprite_temp2 0
            }
        ifl tsprite_temp3 -6 set tsprite_temp3 0
        add tsprite_temp tsprite_temp3
        settspr[].tsprpicnum tsprite_temp
ends

defstate pickup_disp_stuff
    settspr[].tsprpicnum tsprite_temp3
    set tsprite_temp2 3200
    ifg tilesizy[tsprite_temp3] tilesizx[tsprite_temp3]
    {
    div tsprite_temp2 tilesizy[tsprite_temp3]
    clamp tsprite_temp2 24 24
    }
    else
    {
    div tsprite_temp2 tilesizx[tsprite_temp3]
    clamp tsprite_temp2 16 24
    }
    settspr[].tsprxrepeat tsprite_temp2 // change it's X value
    ifn tspr[].tsprpal 4 settspr[].tspryrepeat tsprite_temp2 // If it's not the sprite's shadow, change it's Y value
ends

defstate inv_disp_stuff
    settspr[].tsprpicnum tsprite_temp3
    set tsprite_temp2 3200
    ifg tilesizy[tsprite_temp3] tilesizx[tsprite_temp3]
    div tsprite_temp2 tilesizy[tsprite_temp3]
    else
    div tsprite_temp2 tilesizx[tsprite_temp3]
    clamp tsprite_temp2 16 32
    settspr[].tsprxrepeat tsprite_temp2 // change it's X value
    ifn tspr[].tsprpal 4 settspr[].tspryrepeat tsprite_temp2 // If it's not the sprite's shadow, change it's Y value
ends

defstate ammo_disp_stuff
    settspr[].tsprpicnum tsprite_temp3
    set tsprite_temp2 2400
    div tsprite_temp2 tilesizx[tsprite_temp3]
    clamp tsprite_temp2 10 24
    settspr[].tsprxrepeat tsprite_temp2 // change it's X value
    ifn tspr[].tsprpal 4 settspr[].tspryrepeat tsprite_temp2 // If it's not the sprite's shadow, change it's Y value
ends

onevent EVENT_ANIMATESPRITES
gettspr[].tsprpicnum tspr_picnum
gettspr[].tsprstatnum TSPRITE_STATNUM

ifg vr_glitched 0 settspr[].tsprpal 125

ifactor KEY_CARD
	{
	ifspritepal 21 settspr[].tsprpicnum 65
	}

ife sprite[].htflags 32
  ifn tspr[].tsprpal 4
    {
    ifg sector[].floorpal 127
        {
        settspr[].tsprpal sector[].floorpal
        }
    }

	ifactor 4087 // case specific shit
	{
	ife sector[].floorpal 131 settspr[].tsprpal 174
	}

	ifactor PE_ELDER
	{
	ife display_mirror 1
		{
		// Paradigm Elder's invisible in mirrors
		settspr[].tsprpicnum 3587
		}
	}

	ifactor GUNSMOKE
		{
		geta[].shade temp
		add temp 20
		settspr[].tsprshade temp
		}

	ifactor 13214
		{
		settspr[].tsprshade 90
		}

	ifactor 3810 // skycube
		{
		settspr[].tsprsectnum player[].cursectnum
		}

    ifactor HEAVYHBOMB { settspr[].tsprxrepeat 16  settspr[].tspryrepeat 16 }

ifactor CUSTOM_OBJECT
	{
	ifn LOTAGSAVED 0 settspr[].tsprpicnum LOTAGSAVED
	set actor_pal 1
	}

// snow death stuff ==================================================================================

ifactor MERC
	{
	ife weather_type 1
	 ifle raining -1
	  ifdead
	   ifoutside
		{
		ifl INTERNALCOUNT_4 7200
			add INTERNALCOUNT_4 1
			else
		ife INTERNALCOUNT_4 7200
			{
			ife tspr[].tsprpicnum 8843 settspr[].tsprpicnum 33542
			ife tspr[].tsprpicnum 8848 settspr[].tsprpicnum 33543
			}
		}
	}

ifactor MERC2
	{
	ife weather_type 1
	 ifle raining -1
	  ifdead
	   ifoutside
		{
		ifl INTERNALCOUNT_4 7200
			add INTERNALCOUNT_4 1
			else
		ife INTERNALCOUNT_4 7200
			{
			ife tspr[].tsprpicnum 13607 settspr[].tsprpicnum 33544
			ife tspr[].tsprpicnum 13675 settspr[].tsprpicnum 33545
			}
		}
	}

ifactor LPOWERSUIT
	{
	ife weather_type 1
	 ifle raining -1
	  ifdead
	   ifoutside
		{
		ifl INTERNALCOUNT_4 7200
			add INTERNALCOUNT_4 1
			else
		ife INTERNALCOUNT_4 7200
			{
			ife tspr[].tsprpicnum 8738 settspr[].tsprpicnum 33546
			}
		}
	}

ifactor CULTIST
	{
	ife weather_type 1
	 ifle raining -1
	  ifdead
	   ifoutside
		{
		ifl INTERNALCOUNT_4 7200
			add INTERNALCOUNT_4 1
			else
		ife INTERNALCOUNT_4 7200
			{
			ife tspr[].tsprpicnum 7775 settspr[].tsprpicnum 33536
			ife tspr[].tsprpicnum 7782 settspr[].tsprpicnum 33537
			ife tspr[].tsprpicnum 7788 settspr[].tsprpicnum 33538
			ife tspr[].tsprpicnum 15260 settspr[].tsprpicnum 33539
			ife tspr[].tsprpicnum 30421 settspr[].tsprpicnum 33540
			}
		}
	}

ifactor 7775 // flyback corpse
	{
	ife weather_type 1
	 ifle raining -1
	   ifoutside
		{
		ifl INTERNALCOUNT_4 7200
			add INTERNALCOUNT_4 1
			else
		ife INTERNALCOUNT_4 7200
			{
			ife tspr[].tsprpicnum 7775 settspr[].tsprpicnum 33536
			}
		}
	}

ifactor 30426 // Cultist bi-sected corpse top
	{
	ife weather_type 1
	 ifle raining -1
	   ifoutside
		{
		ifl INTERNALCOUNT_4 7200
			add INTERNALCOUNT_4 1
			else
		ife INTERNALCOUNT_4 7200
			{
			ife tspr[].tsprpicnum 30426 settspr[].tsprpicnum 33541
			}
		}
	}

ifactor CUSTOM_ACTOR
	{
		set temp3 LOTAGSAVED
		sub temp3 4010
		gettspr[].tsprpicnum temp2
		add temp2 temp3
		settspr[].tsprpicnum temp2
		set actor_pal 1
	}

ifactor VIEWSCREEN
{
    switch tspr[].tsprpicnum
        case 32505
        case 32506
        case 32507
            break
        default
            ifn EXTRASAVED -1
            {
                settspr[].tsprpicnum EXTRASAVED
                settspr[].tsprxrepeat temp4
                settspr[].tspryrepeat temp5
            }
            break
    endswitch
}

ifactor VIEWSCREEN2
{
    switch tspr[].tsprpicnum
        case 32505
        case 32506
        case 32507
            break
        default
            ifn EXTRASAVED -1
            {
                settspr[].tsprpicnum EXTRASAVED
                settspr[].tsprxrepeat temp4
                settspr[].tspryrepeat temp5
            }
            break
    endswitch
}

ifactor GREENSLIME
    {
    geta[].xrepeat temp
    div temp 2
    settspr[].tsprxrepeat temp
    geta[].yrepeat temp
    div temp 2
    settspr[].tspryrepeat temp
    }

ife TSPRITE_STATNUM 99
{

// Why are we doing this?
gettspr[].tsprsectnum temp
gettspr[].tsprx temp2
gettspr[].tspry temp3

getflorzofslope temp temp2 temp3 tsprite_temp // very important to account for slopes. Otherwise sprite shadows are completely FUBAR
settspr[].tsprz tsprite_temp

 ifl sprite[].extra 1 // needs to be fixed at some point
  ifn tspr[].tsprpal 4
    {
    ifg sector[].floorpal 127
        {
        settspr[].tsprpal sector[].floorpal
        settspr[].tsprshade 32
        }
    }
}

    // Floating code by DeeperThought
    ifand actorvar[].command 32768
    {
        gettspr[].tsprpal pal
        ifn pal 4
        {
            geta[].z z
            sub z 1024
            set tsprite_temp player[].player_par
            set tsprite_temp2 THISACTOR
            ifand tsprite_temp2 1 add tsprite_temp2 4096
            add tsprite_temp tsprite_temp2
            shiftvarl tsprite_temp 6
            sin tsprite_temp2 tsprite_temp
            shiftvarr tsprite_temp2 4
            sub z tsprite_temp2
            settspr[].tsprz z
        }
    }

    ifand actorvar[].command 262144 // floating magic items
    {
        gettspr[].tsprpal pal
        ifn pal 4
        {
            settspr[].tsprshade -127
            geta[].z z
            sub z 1024
            set tsprite_temp player[].player_par
            set tsprite_temp2 THISACTOR
            ifand tsprite_temp2 1 add tsprite_temp2 4096
            add tsprite_temp tsprite_temp2
            shiftvarl tsprite_temp 6
            sin tsprite_temp2 tsprite_temp
            shiftvarr tsprite_temp2 4
            sub z tsprite_temp2
            settspr[].tsprz z
        }
    }

    ifand actorvar[].command 16 settspr[THISACTOR].tsprshade -127

    ifand actorvar[].command 64
    {
    getactor[THISACTOR].ang tsprite_temp
    setvarvar tsprite_temp2 totalclock
    shiftvarl tsprite_temp2 1
    divvar tsprite_temp2 16
    add tsprite_temp tsprite_temp2
    settspr[THISACTOR].tsprang tsprite_temp
    }

    ifand actorvar[].command 128
    {
    getactor[THISACTOR].ang tsprite_temp
    setvarvar tsprite_temp2 totalclock
    shiftvarl tsprite_temp2 1
    divvar tsprite_temp2 2
    add tsprite_temp tsprite_temp2
    settspr[THISACTOR].tsprang tsprite_temp
    }

    ifand actorvar[].command 256
    {
    getactor[THISACTOR].ang tsprite_temp
    setvarvar tsprite_temp2 totalclock
    shiftvarl tsprite_temp2 2
    add tsprite_temp tsprite_temp2
    settspr[THISACTOR].tsprang tsprite_temp
    }

    ifand actorvar[].command 512
    {
    getactor[THISACTOR].ang tsprite_temp
    setvarvar tsprite_temp2 totalclock
    shiftvarl tsprite_temp2 6
    add tsprite_temp tsprite_temp2
    settspr[THISACTOR].tsprang tsprite_temp
    }

    ifand actorvar[].command 1024 // counter-clockwise
    {
    getactor[THISACTOR].ang tsprite_temp
    setvarvar tsprite_temp2 totalclock
    shiftvarl tsprite_temp2 1
    divvar tsprite_temp2 2
    sub tsprite_temp tsprite_temp2
    settspr[THISACTOR].tsprang tsprite_temp
    }

    ifand actorvar[].command 2048 // counter-clockwise
    {
    getactor[THISACTOR].ang tsprite_temp
    setvarvar tsprite_temp2 totalclock
    shiftvarl tsprite_temp2 2
    sub tsprite_temp tsprite_temp2
    settspr[THISACTOR].tsprang tsprite_temp
    }

    ifand actorvar[].command 131072
    {
    ife player[].heat_on 1
        ife HELMET_LOADOUT[CHAR] 4 // ghost vision
            {
            settspr[].tsprpal 33
            settspr[].tsprshade -127
            }
    }

    ifand actorvar[].command 65536
    {
        gettspr[].tsprpal pal
        ifn pal 4
        {
            geta[].z z
            sub z 128
            set tsprite_temp player[].player_par
            set tsprite_temp2 THISACTOR
            ifand tsprite_temp2 1 add tsprite_temp2 256
            add tsprite_temp tsprite_temp2
            shiftvarl tsprite_temp 2
            sin tsprite_temp2 tsprite_temp
            shiftvarr tsprite_temp2 4
            sub z tsprite_temp2
            settspr[].tsprz z
        }
    }

    ifand actorvar[].command 8192
    {
    gettspr[].tsprpal tsprite_temp2
    ife tsprite_temp2 4 break // If the shadow actor, break
    ifl SKILL_LEVEL 3
        {
        geta[].shade tsprite_temp
        sub tsprite_temp 5
        ifl tsprite_temp -120 set tsprite_temp -120
        settspr[].tsprshade tsprite_temp
        }
    ife player[].heat_on 1
        {
        ife HEAT_GOGGLES 1 // heat vision
            {
            ifand MONSTER_FLAGS 4
                {
                settspr[].tsprblend 0
                settspr[].tsprcstat sprite[].cstat
                }
            ifl sprite[].extra 1
                {
                settspr[].tsprpal sprite[].pal
                settspr[].tsprshade sector[].floorshade
                }
            else
                {
                settspr[].tsprpal 107
                settspr[].tsprshade -127
                }
            }
        else
        ife HELMET_LOADOUT[CHAR] 4 // ghost vision
            {
            ifand MONSTER_FLAGS 8
                {
                settspr[].tsprblend 0
                settspr[].tsprcstat 0
                settspr[].tsprpal 67
                }
            else
                {
                settspr[].tsprpal sprite[].pal
                settspr[].tsprshade sector[].floorshade
                }
            }
        else // night vision
            {
            gets[].floorpal tsprite_temp3
            switch tsprite_temp3
                case 1
                case 2
                case 4
                case 6
                case 7
                case 8
                case 17
                case 19
                case 26
                case 27
                case 28
                case 29
                case 30
                case 31
                case 32
                case 33
                case 34
                case 35
                    settspr[].tsprpal sector[].floorpal
                    break
                default
                    settspr[].tsprpal sprite[].pal
                    break
            endswitch

            settspr[].tsprshade sector[].floorshade
            }
        ifl sprite[].extra 1
                {
                    gets[].floorpal tsprite_temp3
                    switch tsprite_temp3
                        case 1
                        case 2
                        case 4
                        case 6
                        case 7
                        case 8
                        case 17
                        case 19
                        case 26
                        case 27
                        case 28
                        case 29
                        case 30
                        case 31
                        case 32
                        case 33
                        case 34
                        case 35
                            settspr[].tsprpal sector[].floorpal
                            break
                        default
                            settspr[].tsprpal sprite[].pal
                            break
                    endswitch
                settspr[].tsprshade sector[].floorshade
                }
        }
    }

    // fade in and out code by helixhorned
    ifand actorvar[].command 16384
    {
        set tsprite_temp totalclock
        shiftvarl tsprite_temp 2

        sin alpha tsprite_temp   // alpha is now in [-2^14 .. 2^14]
        shiftvarr alpha 7  // [-2^7 .. 2^7]
        add alpha 128  // [0 .. 256]

        ife alpha 0
        {
            // clear translucent bits, 0xfdfe == 0xffff-(1+512)
            gettspr[].tsprcstat tsprite_temp
            andvar tsprite_temp 0xfdfe
            settspr[].tsprcstat tsprite_temp
        }
        else
        {
            gettspr[].tsprcstat tsprite_temp
            orvar tsprite_temp 2
            settspr[].tsprcstat tsprite_temp

            // Assume blending tables [1 .. 128] are installed, like generated by
            // shadexfog.lua:create_128_trans(1).
            ifg alpha 128
            {
                set tsprite_temp 257
                sub tsprite_temp alpha
                set alpha tsprite_temp

                // Set "reverse translucent" cstat bit
                gettspr[].tsprcstat tsprite_temp
                orvar tsprite_temp 512
                settspr[].tsprcstat tsprite_temp
            }
            else
            {
                // Clear cstat bit 512
                gettspr[].tsprcstat tsprite_temp
                andvar tsprite_temp 0xfdff
                settspr[].tsprcstat tsprite_temp
            }

            settspr[].tsprblend alpha
        }
    }

    ifand actorvar[].command 2048
    {
    gettspr[].tsprstatnum tsprite_temp
        {
        ife tsprite_temp 99 nullop else settspr[].tsprpicnum 3587
        }
    }

    ifand actorvar[].command 4096
    {
    ifn CHAR -1
    ife ARTIFACTS_LOADOUT[CHAR] 9 // player has spirit shawl?
        {
        gettspr[].tsprpal tsprite_temp2
        ifn tsprite_temp2 4
            {
            settspr[].tsprshade -127
            settspr[].tsprblend 254
            settspr[].tsprpal 103
            }
        }
        else
        ifn CHAR -1
        ife HELMET_LOADOUT[CHAR] 4 // ghost vision
         ife player[].heat_on 1
            {
                settspr[].tsprblend 0
                settspr[].tsprshade -127
                settspr[].tsprcstat 0
                settspr[].tsprpal 109
            }
        else
        {
            set tsprite_temp totalclock
            shiftvarl tsprite_temp 2

            sin alpha tsprite_temp   // alpha is now in [-2^14 .. 2^14]
            shiftvarr alpha 7  // [-2^7 .. 2^7]
            add alpha 128  // [0 .. 256]

            ife alpha 0
            {
                // clear translucent bits, 0xfdfe == 0xffff-(1+512)
                gettspr[].tsprcstat tsprite_temp
                andvar tsprite_temp 0xfdfe
                settspr[].tsprcstat tsprite_temp
            }
            else
            {
                gettspr[].tsprcstat tsprite_temp
                orvar tsprite_temp 2
                settspr[].tsprcstat tsprite_temp

                // Assume blending tables [1 .. 128] are installed, like generated by
                // shadexfog.lua:create_128_trans(1).
                ifg alpha 128
                {
                    set tsprite_temp 257
                    sub tsprite_temp alpha
                    set alpha tsprite_temp

                    // Set "reverse translucent" cstat bit
                    gettspr[].tsprcstat tsprite_temp
                    orvar tsprite_temp 512
                    settspr[].tsprcstat tsprite_temp
                }
                else
                {
                    // Clear cstat bit 512
                    gettspr[].tsprcstat tsprite_temp
                    andvar tsprite_temp 0xfdff
                    settspr[].tsprcstat tsprite_temp
                }

                settspr[].tsprblend alpha
            }
        }

    }

ifactor CAMERA1
{
settspr[].tsprcstat CSTATSAVED
ifl sprite[].xrepeat 8
 ifl sprite[].xrepeat 8
  settspr[].tsprpicnum 3625
}

ifactor TRIPBOMB
{
ifspawnedby APLAYER
 ife CHAR 1
    settspr[].tsprpicnum 5449
}


ifactor BULLETHOLE
{
ife COSMETIC_FLAME 0 // no point making new variables
    {
     geta[].x x
    geta[].y y
    geta[].sectnum temp
    geta[].ang temp3
    add temp3 1024

    sin my temp3
    cos mx temp3
    geta[].z z

    ifn temp -1
    {
        hitscan x y z temp mx my 0 hitsect hitwall hitsprite hitx hity hitz 16777280
        ifn hitwall -1
            {
           getwall[hitwall].picnum FLOORTEX
           ife FLOORTEX 179 killit // hit a skybox wall texture
		   ifand wall[hitwall].hitag 16 killit // wall scroll
           settspr[].tsprpal wall[hitwall].pal
           settspr[].tsprshade wall[hitwall].shade
           state CHECKSTEPS
           ife STEPSOUNDFX 1 set COSMETIC_FLAME 2
           ife STEPSOUNDFX 2 set COSMETIC_FLAME 5
           ife STEPSOUNDFX 3 set COSMETIC_FLAME 5
           ife STEPSOUNDFX 24 set COSMETIC_FLAME 5
           ife STEPSOUNDFX 14 set COSMETIC_FLAME 5
		   ife STEPSOUNDFX 21 set COSMETIC_FLAME 6
           ife STEPSOUNDFX 23 set COSMETIC_FLAME 2
           ife STEPSOUNDFX 11 set COSMETIC_FLAME 3
           ife STEPSOUNDFX 18 set COSMETIC_FLAME 4
           ife STEPSOUNDFX 26 set COSMETIC_FLAME 4
		   ife STEPSOUNDFX 32 set COSMETIC_FLAME 7
            }
            else set COSMETIC_FLAME 1

        }
    }

ife COSMETIC_FLAME 2
    settspr[].tsprpicnum 3778


ife COSMETIC_FLAME 3
    settspr[].tsprpicnum 3769

ife COSMETIC_FLAME 4
    {
    settspr[].tsprpicnum 3068
    settspr[].tsprblend 255
    gettspr[].tsprcstat temp
    xorvar temp 18
    settspr[].tsprcstat 18
    }

ife COSMETIC_FLAME 5
    settspr[].tsprpicnum 3645

ife COSMETIC_FLAME 6
    settspr[].tsprpicnum 3640

ife COSMETIC_FLAME 7
    settspr[].tsprpicnum 3715

ifn hitwall -1 settspr[].tsprshade wall[hitwall].shade

}

ifactor AMCSHIP
{
ifoutside
    {
    settspr[].tsprpal sector[].floorpal
    }
}

ifactor AMCSHIP2
{
ifoutside
    {
    settspr[].tsprpal sector[].floorpal
    }
}

ifactor 21612
{
ifspritepal 143 nullop else
ifspritepal 163 nullop else
settspr[].tsprpal 49
}

ifactor 14302
{
ife opt_highres_clouds OFF settspr[].tsprpicnum 3625
ife opt_highres_clouds YES
    {
    settspr[].tsprpicnum 14309
      gettspr[].tsprcstat tsprite_temp
      ifand tsprite_temp 2 nullop else
          xorvar tsprite_temp 2
      settspr[].tsprcstat tsprite_temp
    }
}

ifactor FIRELASER settspr[].tsprcstat 130

ifactor 12263
{
ifn player[].newowner -1 settspr[].tsprpicnum 3625
else ifn camerasprite -1 settspr[].tsprpicnum 3625
else ife opt_speech_bubble NO settspr[].tsprpicnum 3625
else settspr[].tsprpicnum 12263
}

ifactor TOWN_GUARD
{
ife sprite[].pal 21
 ife VOLUME 3 // only do this in episode 4 since it relies on per-map
	{
	gettspr[].tsprpicnum tsprite_temp
	add tsprite_temp 4848
	settspr[].tsprpicnum tsprite_temp
	}
}


ifactor 22877
{
ifand sprite[].pal 3
    {
    settspr[].tsprcstat 8
    }
}

ifactor PIGCOP
{
          geta[].htdispicnum tsprite_temp
          ifg tsprite_temp 2044
          ifl tsprite_temp 2055
          {
          settspr[].tsprxrepeat 28
          gettspr[].tsprpal tsprite_temp2
          ifn tsprite_temp2 4 settspr[].tspryrepeat 28
          }

}

ifactor PIG_SF
{
          geta[].htdispicnum tsprite_temp
          ifg tsprite_temp 24108
          ifl tsprite_temp 24119
          {
          settspr[].tsprxrepeat 28
          gettspr[].tsprpal tsprite_temp2
          ifn tsprite_temp2 4 settspr[].tspryrepeat 28
          }

}

ifactor NINJA
{
          geta[].htdispicnum tsprite_temp
          ifg tsprite_temp 14917
          ifl tsprite_temp 14943
          {
          settspr[].tsprxrepeat 26
          gettspr[].tsprpal tsprite_temp2
          ifn tsprite_temp2 4 settspr[].tspryrepeat 26
          }

}

ifactor MS_CORP_MECH
{
getp[].i tsprite_temp
ife player_using_mech THISACTOR
ife player[].over_shoulder_on 0
    {
    settspr[].tsprpicnum 11950
    }
}

ifactor CULTIST
{
          geta[].htdispicnum tsprite_temp
          ifg tsprite_temp 15229
          ifl tsprite_temp 15255
          {
          settspr[].tsprxrepeat 24
          gettspr[].tsprpal tsprite_temp2
          ifn tsprite_temp2 4 settspr[].tspryrepeat 24
          }

}

ifactor LIZMAN
{

          geta[].htdispicnum tsprite_temp
          ifg tsprite_temp 2139
          ifl tsprite_temp 2165
          {
          settspr[].tsprxrepeat 28
          gettspr[].tsprpal tsprite_temp2
          ifn tsprite_temp2 4 settspr[].tspryrepeat 28
          }

}


ifmultiplayer set TSPRITE_PLAYER screenpeek
else set TSPRITE_PLAYER PLAYER_IDENTITY

ife tspr_picnum 11772 // TIME PORTAL
{
getav[TSPRITE_PLAYER].P_CHAR tsprite_temp3
ife tsprite_temp3 0 settspr[].tsprpicnum 11772
else settspr[].tsprpicnum 3625
}

ife tspr_picnum 27112 // SHADOW GATE
{
getav[TSPRITE_PLAYER].P_CHAR tsprite_temp3
ife tsprite_temp3 17 settspr[].tsprpicnum 27112
else settspr[].tsprpicnum 3625
}

ife tspr_picnum 12261 // SPIRITS
{
getav[TSPRITE_PLAYER].P_CHAR tsprite_temp3
ife tsprite_temp3 5 settspr[].tsprpicnum 12261
else settspr[].tsprpicnum 3625
}

ife tspr_picnum 12267 // SPIRITS
{
getav[TSPRITE_PLAYER].P_CHAR tsprite_temp3
ife tsprite_temp3 5 settspr[].tsprpicnum 12267
else settspr[].tsprpicnum 3625
}

// item anim

ife tspr_picnum FIRSTGUNSPRITE // PISTOL
    {
    set tsprite_temp3 WEAPON_TILE[1]
    state pickup_disp_stuff
    }

ife tspr_picnum SHOTGUNSPRITE // SHOTGUN
    {
    set tsprite_temp3 WEAPON_TILE[2]
	ife tspr[].tsprpal 0
		{
		ife WEAPON_TILE[2] 16079 // KSG-12 colour

			{
			set cosm_col_id 53
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		}
    state pickup_disp_stuff
    }

ife tspr_picnum CHAINGUNSPRITE // CHAINGUN
    {
    set tsprite_temp3 WEAPON_TILE[3]
	ife tspr[].tsprpal 0
		{
		ife WEAPON_TILE[3] 11865 // MDF BR colour
			{
			set cosm_col_id 9
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		ife WEAPON_TILE[3] 13444 // SR-2 colour
			{
			set cosm_col_id 34
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		ife WEAPON_TILE[3] 29145 // Kriss colour
			{
			set cosm_col_id 92
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		ife WEAPON_TILE[3] 15911 // MDF BR colour
			{
			set cosm_col_id 47
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		}
    state pickup_disp_stuff
    }

ife tspr_picnum RPGSPRITE // RPG
    {
    set tsprite_temp3 WEAPON_TILE[4]
    state pickup_disp_stuff
    }

ife tspr_picnum SHRINKERSPRITE // SHRINKER
    {
    set tsprite_temp3 WEAPON_TILE[6]
    state pickup_disp_stuff
    }

ife tspr_picnum 3689 // GRENADE
    {
    set tsprite_temp3 WEAPON_TILE[5]
    state pickup_disp_stuff
    }

ife tspr_picnum DEVISTATORSPRITE // DEVISTATOR
    {
    set tsprite_temp3 WEAPON_TILE[7]
	ife tspr[].tsprpal 0
		{
		ife WEAPON_TILE[7] 5218 // LR300 colour
			{
			set cosm_col_id 200
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		ife WEAPON_TILE[7] 15895 // LR300 colour
			{
			set cosm_col_id 45
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		ife WEAPON_TILE[7] 15898 // MR-15 colour
			{
			set cosm_col_id 84
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		ife WEAPON_TILE[7] 22571 // G36 colour
			{
			set cosm_col_id 78
			state cus_gun_colour
			settspr[].tsprpal cosm_col
			}
		}
    state pickup_disp_stuff
    }

ife tspr_picnum TRIPBOMBSPRITE // TRIPBOMB
    {
    set tsprite_temp3 WEAPON_TILE[8]
    state ammo_disp_stuff
    }

ife tspr_picnum FREEZESPRITE // FREEZER
    {
    set tsprite_temp3 WEAPON_TILE[9]
    state pickup_disp_stuff
    }

ife tspr_picnum AMMO // PISTOL AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[1]
    state ammo_disp_stuff
    }

ife tspr_picnum SHOTGUNAMMO // SHOTGUN AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[2]
    state ammo_disp_stuff
    }

ife tspr_picnum BATTERYAMMO // MACHINEGUN AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[3]
    state ammo_disp_stuff
    }

ife tspr_picnum RPGAMMO // RPG AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[4]
    state ammo_disp_stuff
    }

ife tspr_picnum HBOMBAMMO // PIPEBOMB BOX
    {
    set tsprite_temp3 W_AMMO_TILE[5]
    state ammo_disp_stuff
    }

ife tspr_picnum CRYSTALAMMO // SHRINKER AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[6]
    state ammo_disp_stuff
    ife tsprite_temp3 46 break // if shrinker crystal, glow as normal
    settspr[].tsprshade sector[].floorshade
    }

ife tspr_picnum GROWAMMO // EXPANDER AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[11]
    state ammo_disp_stuff
    }

ife tspr_picnum DEVISTATORAMMO // DEVISTATOR AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[7]
    state ammo_disp_stuff
    }

ife tspr_picnum FREEZEAMMO // FREEZER AMMO
    {
    set tsprite_temp3 W_AMMO_TILE[9]
    state ammo_disp_stuff
    }

ife tspr_picnum STEROIDS // STEROIDS
{
getav[TSPRITE_PLAYER].c_steroids tsprite_temp3
state pickup_disp_stuff
}

ife tspr_picnum BOOTS // BOOTS
{
getav[TSPRITE_PLAYER].c_boots tsprite_temp3
settspr[].tsprpicnum tsprite_temp3
}

ife tspr_picnum FIRSTAID // Medikit
{
getav[TSPRITE_PLAYER].c_medikit tsprite_temp3
settspr[].tsprpicnum tsprite_temp3
}

ife tspr_picnum HOLODUKE // Holoduke
{
getav[TSPRITE_PLAYER].c_holoduke tsprite_temp3
settspr[].tsprpicnum tsprite_temp3
ife tsprite_temp3 6373 // Sang mirror
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 20
    ifn tsprite_temp2 4 settspr[].tspryrepeat 20
    }
}

ife tspr_picnum JETPACK // Jetpack
{
getav[TSPRITE_PLAYER].c_jetpack tsprite_temp3
ife CHAR 4 set tsprite_temp3 6370
ife CHAR 9 set tsprite_temp3 6370
settspr[].tsprpicnum tsprite_temp3
}

ife tspr_picnum HEATSENSOR // Night vision
{
getav[TSPRITE_PLAYER].disp_nvg tsprite_temp3
settspr[].tsprpicnum tsprite_temp3
}

ife tspr_picnum AIRTANK // Scuba
{
getav[TSPRITE_PLAYER].c_scuba tsprite_temp3
settspr[].tsprpicnum tsprite_temp3
}

ife tspr_picnum SHIELD // ARMOUR
{
getav[TSPRITE_PLAYER].c_armour tsprite_temp3
ifn CHAR -1 ife CHEST_LOADOUT[CHAR] 4 settspr[].tsprpicnum 117
else settspr[].tsprpicnum tsprite_temp3
ife tsprite_temp3 5229 // James
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 28
    ifn tsprite_temp2 4 settspr[].tspryrepeat 28
    }
ife tsprite_temp3 6638 // Sang
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 25
    ifn tsprite_temp2 4 settspr[].tspryrepeat 25
    }
ife tsprite_temp3 6868 // Rusty
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 22
    ifn tsprite_temp2 4 settspr[].tspryrepeat 22
    }
ife tsprite_temp3 6637 // Geoffrey
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 30
    ifn tsprite_temp2 4 settspr[].tspryrepeat 30
    }
ife tsprite_temp3 7084 // Mikko
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 30
    ifn tsprite_temp2 4 settspr[].tspryrepeat 30
    }
ife tsprite_temp3 16638 // Micky
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 25
    ifn tsprite_temp2 4 settspr[].tspryrepeat 25
    }
ife tsprite_temp3 20989 // Snowfall
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 22
    ifn tsprite_temp2 4 settspr[].tspryrepeat 22
    }
}

ife tspr_picnum 5236 // HEAVY ARMOUR
{
getav[TSPRITE_PLAYER].c_heavy_armour tsprite_temp3
settspr[].tsprpicnum tsprite_temp3
ife tsprite_temp3 4959
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 36
    ifn tsprite_temp2 4 settspr[].tspryrepeat 36
    }
ife tsprite_temp3 5410
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 45
    ifn tsprite_temp2 4 settspr[].tspryrepeat 45
    }
ife tsprite_temp3 6867 // Rusty
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 24
    ifn tsprite_temp2 4 settspr[].tspryrepeat 24
    }
ife tsprite_temp3 6636 // Geoffrey
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 35
    ifn tsprite_temp2 4 settspr[].tspryrepeat 35
    }
ife tsprite_temp3 7089
    {
    gettspr[].tsprpal tsprite_temp2
    settspr[].tsprxrepeat 30
    ifn tsprite_temp2 4 settspr[].tspryrepeat 30
    }
}

ifactor WOODSCRAP state SHELL_ROT
ifactor SWOODSCRAP state SHELL_ROT_BACK
ifactor 3761 state SHELL_ROT
ifactor EXSHELL state SHELL_ROT
ifactor FL_SHELL state SHELL_ROT
ifactor MAGN_SHELL state SHELL_ROT
ifactor RIFLESHELL state SHELL_ROT
ifactor NINEMM_SHELL state SHELL_ROT
ifactor SRIFLESHELL state SHELL_ROT
ifactor 13780 state SHELL_ROT
ifactor REVOLV_SHELL state SHELL_ROT
ifactor TWENTY_SHELL state SHELL_ROT

    switch tspr_picnum
        case SWOODSCRAP
        case WOODSCRAP
        case ICE_DEBRIS
        case ROCKDEB_1
        case ROCKDEB_3
        case ROCKDEB_4
        case SROCKDEB_4
        case SLIMEPROJ
        case CLUSTER_BOMB
        case CLUSTER_BOMB2
            settspr[].tsprpal sector[].floorpal
        break
    endswitch

endevent

onevent EVENT_PRELEVEL
set global_faction -1
endevent

onevent EVENT_ENTERLEVEL
stopallsounds
set inter_id -1
resizearray needs_pump 0
resizearray needs_pump 16
set used_door_trans -1
set scan_mode 0
set PLAYER_VOICEOVER 0
set player_dodge 0
set movement_level 0
set weapon_voices 0
set scarab_code 0
set necro_ress 0
set naal_glob_curse 0
set auto_room_type 1
setmusicvolume 100
set music_fade 0
set music_vol 100
set JUMP_BOOTS 0
set JUMP_BOOTS_USED 0
set player_ability_1 0
set player_ability_2 0
set player_ability_3 0
set player_berserking 0
set cloud_centre 0
set room_type 0
set room_type_reset 0
set mech_startup_sequence -1
set swear_addr 0
set swear2_addr 0
set pickup_addr 0
set mission_scare 0
set loading_hint 0
set RADIO_CONTACT YES
set speaker 0
set skybox_sect -1
set skybox_scale 64
set skybox_id 0
set skybox 0
set skybox_tile -1
set skybox_owner -1
set dummy_face -1
set CUSENDLEVEL 0
set cus_fade 40
set cus_fadew 40
set cus_fade_duration 30
set cameraend 0
set CC_MUSIC 0
set DISP_MAINMENU 0
set jib_quote_track 0
set pickup_quote_track 0
set HOLO_ACCESS 0
set STOP_EFFECTS 0
set END_LEVEL 0
set AUTOAIM_STATUS -1
set HUB_MAP 0
set INVASION 0
set TREASURE_FOUND 0
set INVEN_REPLACE 0
set SHIP_INTEGRITY -1
set tex_temp_x -1
set tex_temp_y -1
set tex_temp_sx -1
set tex_temp_sy -1
set WORLD_TRIGGER 0
set STORY_TRIGGER1 0
set STORY_TRIGGER2 0
set STORY_TRIGGER3 0
set HUGE_BOSS_HEALTH -1
set AMC_BUDGET_INCREASE 0
set CIVS_PANIC 0
set amc_base 0
set play_base_music 0
set menu_track 0
set DAYNIGHT 0
set give_loadout 1
set cameratype 0
set pickup_quote_track 0
set camerasprite -1
set raining 0
set global_trigger 0
set destruct_trigger 0
set NUKE_ACTIVE 0
set MISSIONLINE1 0
set MISSIONLINE2 0
set MISSIONLINE3 0
set MISSIONLINE4 0
set MISSIONLINE5 0
set MISSIONLINE6 0
set cuts_txt -1
set countdown -1
set countdown_fail -1
set countdown_minutes 0
set countdown_seconds 0
set GENERATOR_ACTIVE 0
set SLO_MO_SHOWOFF 0
set FISSION_MAILED 0
set REACTOR_VAR -1
set weather_type 0
set HELLGKEYS 0
set HELLGKEYSA 0
set TIMEZONE 0
set allies_present 0
set both_present 0
set CURBOSS -1
set screen_pal 0
set CONVO_STATE 0
set gl_countd 0
set END_LEVEL_TRIGGERED -1
set cameraskipping 0

    set temp8 0
    whilevarvarn temp8 NUMWALLS
    {
    // CHECK WALL BLEND
    ifand wall[temp8].cstat 16
        {
		ife wall[temp8].overpicnum 11686 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 29266 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 21292 setwall[temp8].blend 255
		ife wall[temp8].overpicnum 18161 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 18414 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 18432 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 3375 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 4346 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 7305 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 23446 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 23659 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 8169 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 8170 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 23799 setwall[temp8].blend 255
		ife wall[temp8].overpicnum 29409 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 10870 setwall[temp8].blend 255
		ife wall[temp8].overpicnum 30054 setwall[temp8].blend 255
        ife wall[temp8].overpicnum 663
            {
            ifand wall[temp8].cstat 128 nullop else
                {
                getwall[temp8].cstat temp9
                xorvar temp9 128
                setwall[temp8].cstat temp9
                }
            setwall[temp8].blend 255
            }
        }
    add temp8 1
    }

endevent

onevent EVENT_INCURDAMAGE
set RETURN -1
endevent


defstate player_hitscan_check
geta[].x x
geta[].y y
geta[].sectnum temp3
geta[].ang temp

sin my temp
cos mx temp
geta[].z z
    // getp[].pyoff temp

    add z player[].pyoff
    add z -9674

    set mz 100
    getp[].horiz temp
    sub mz temp
    getp[].horizoff temp
    sub mz temp

    shiftvarl mz 11

hitscan x y z temp3 mx my mz hitsect hitwall hitsprite hitx hity hitz 16777280
ifand gun_firemode 32768
    {
    espawn 5064
    seta[RETURN].x hitx
    seta[RETURN].y hity
    seta[RETURN].z hitz
    dist DISTANCE THISACTOR RETURN
    }


	// If PDU is out and on supply drop or airstrike mode,
	// display an icon for it in the game world where the player is looking in places where it can be used
	ife MISSION_UP 1
	 ife MISSIONSCREEN 5
	  ifge scan_mode 1
	   ife airdrop_cooldown 0
    {
		// TODO Make ceiling stat check TROR aware
		ifand sector[hitsect].ceilingstat 1 espawn 21120
		else espawn 21121
		seta[RETURN].htbposx hitx
		seta[RETURN].htbposy hity
		seta[RETURN].htbposz hitz
		setsprite RETURN hitx hity hitz
		ifand sector[hitsect].ceilingstat 1
		{
		ifge SUPPLY_LEVEL 30
			{
			ife scan_mode 1 // supply drop
				{
				espawn 21122
				seta[RETURN].htbposx hitx
				seta[RETURN].htbposy hity
				seta[RETURN].htbposz hitz
				setsprite RETURN hitx hity hitz
				}
			else
			ife scan_mode 2 // airstrike
				{
				espawn 21123
				seta[RETURN].htbposx hitx
				seta[RETURN].htbposy hity
				seta[RETURN].htbposz hitz
				setsprite RETURN hitx hity hitz
				}
			}
		else
			{
			// if not enough supplies, spawn not enough supplies warning
			ifl SUPPLY_LEVEL 30
				{
				espawn 21124
				seta[RETURN].htbposx hitx
				seta[RETURN].htbposy hity
				seta[RETURN].htbposz hitz
				setsprite RETURN hitx hity hitz
				}
			}
		}
    }
ends

defstate KEEPMYPAL
  geta[].owner temp
  ifn temp -1 seta[].pal sprite[temp].pal // SET IT'S PALETTE TO IT'S OWNER'S PALETTE
ends

onevent EVENT_RESETPLAYER
setp[].sound_pitch 0
set CHARSTART 0
ife CHAR -1 set CHARSELECT 1
state reset_PDA
set inter_id -1
set used_door_trans -1
set holoduke_amount 0
set booster_amount 0
set player_ability_1 0
set player_ability_2 0
set player_ability_3 0
set MISSIONLINE1 0
set p_dazed_count 0
set soundscape_fade -1
set soundscape_id -1
set soundscape_trans -1
    set MISSIONLINE2 0
    set MISSIONLINE3 0
    set MISSIONLINE4 0
    set MISSIONLINE5 0
    set MISSIONLINE6 0
    set cuts_txt -1
    set cs_textl 1
    set PCINTER 0
    set MOUSEUP 0
    set player_spooked 0
    set vr_glitched 0
    set countdown -1
    set WEP3_BLOODY 0
    set WEP9_BLOODY 0
    set countdown_type 0
    set CHOKE 0
    set shotgun_struggle -1
    set troll_struggle -1
	set succubus_struggle -1
    set chainsaw_struggle -1
    set phantasm_stick -1
    set FCHOKE 0
    set just_init 0
set cus_fade 40
set cus_fadew 40
set cus_fade_duration 30
set music_fade 0
set music_vol 100
set kickbackpic_2 0
set kickbackpic_3 0
set kickbackpic_4 0
set allow_fire YES
set OLDKEYS 0
set PLUGKEY 0
set player_jib 0
set player_berserking 0
set temporary_no_helmet 0
set draw_animation 0
set KAGURA_CHARGE 0
set mission_scare 0
set CUS_WACK 0
set loading_hint 0
set jib_quote_track 0
set pickup_quote_track 0
set hide_xhair 0
set CUSENDLEVEL 0
set AUTOAIM_STATUS -1
set IN_DREAM 0
set injured 0
set GUN_CHARGE 0
set cheated 0
set SWORD_BLOCK 0
set NOISE_SAID 0
set DEATH_CAM -1
set GOT_PASSWORD 0
set player_bike 0
set MELEE_LOCKED_ON -1
set CONTROL_VR -1
set voice_comm_menu 0
set fake_shrunk 0
set fire_mode_menu 0
set PLAYER_PROTECTED 0
set player_in_vehicle 0
set player_using_hovercraft -1
set player_using_fighter -1
set player_using_hovertank -1
set player_using_VR_tank -1
set player_using_mech -1
set player_using_horse -1
set player_using_submarine -1
set CURSED 0
set merl_shieldup 1
set shield_up 0
set merlijn_shield 100
set maartn_shield 150
set m_shieldtype 0
set MEDIKIT_USING 0
set caught_in_web 0
set caught_in_net 0
set on_tripwire 0
set ingas 0
set inspace 0
set using_turret -1
set turret_type -1
set scope 0
set scope_pal 0
set SPACE_SUIT 0
set SWORD_RAMP 0
set INVINC 0
set WEP0_BLOODY 0
set WEP1_BLOODY 0
set WEP2_BLOODY 0
set WEP3_BLOODY 0
set WEP9_BLOODY 0
set CHECKBOX -1
set SELSLOT 0
set ALLYSLOT1 -1
set ALLYSLOT2 -1
set ALLYSLOT3 -1
set ALLYSLOT4 -1
set ALLYSLOT5 -1
set ALLYSLOT6 -1
set ALLYSLOT7 -1
set ALLYSLOT8 -1
set music_level 0
set music_check 0
set music_play 0
endevent

onevent EVENT_RESETWEAPONS
    set guns_akimbo 0
    set gun_firemode 0
    set gun_firemode_two 0
    set AMMO_TYPE 0
    set gun_mag 0
    set PISTOLMAG 0
    set SHOTGUNMAG 0
    set SHOTGUNBOXMAG 0
    set MGUNMAG 0
    set rifle_mag 0
    set slot6_mag 0
    set SLUGSHOTMAG 0
    set ROCKETMAG 0
    set ALTMAG 0
    // set temp_weap 0
    set silver_ammo 0
    set incend_ammo 0
    set silver_bolts 0
    set void_bolts 0
    set explosive_shells 0
    set flechete_shells 0
    set tesla_ammo 0
    set micro_torpedo 0
    set magnum_shells 0
    set dragon_shells 0
    set atomic_bomb 0
    set heat_seek_card 0
    set scope 0
    set p_blue_mana 0
    set p_green_mana 0
    set p_orange_mana 0
    set p_purple_mana 0
    set DUP_missile_ammo 0
    set fortymm_grenades 0
    set fortymm_shells 0
    set fortymm_MIA_shells 0
    set fortymm_plasma 0
    set fortymm_caseless 0
    set fortymm_slug 0
    set fortymm_electro 0
    set fortymm_cryo 0
    set temp 0
    whilevarn temp 16
        {
        setarray AMMO_TYPES[temp] 0
        add temp 1
        }
    // setp[].ammo_amount 0 0
endevent


action SONICRPG 17
action MISSILERPG 84
action GLRPG 93
action DARKRPG 758

defstate CHANGEACCURACY
	ifspawnedby APLAYER
	{
    randvarvar temp2 GUN_ACCURACY
	randvarvar temp4 gun_spread
	add temp2 temp4
	mul temp2 32
    geta[].zvel temp
    ifrnd 128 add temp temp2 else sub temp temp2
    seta[].zvel temp

	randvarvar temp3 GUN_ACCURACY
	randvarvar temp4 gun_spread
	add temp3 temp4
    geta[].ang temp
    ifrnd 128 sub temp temp3 else add temp temp3
    seta[].ang temp
	}
	else
	{
    geta[].zvel temp
    ifrnd 128 add temp temp2 else sub temp temp2
    seta[].zvel temp
    geta[].ang temp
    ifrnd 128 sub temp temp3 else add temp temp3
    seta[].ang temp
	}
ends

defstate littlerandtraj // code by Eddy Zykov/Balls of Steel Team
 randvar temp 20
 geta[].ang temp2
 geta[].zvel temp3
 sub temp 10
 add temp2 temp
 randvar temp 500
 sub temp 250
 add temp3 temp
 seta[].ang temp2
 seta[].zvel temp3
 break
ends

useractor notenemy 3179 enda
useractor notenemy 3180 enda

defstate WOODCHUNKSPAWN
shoot SWOODSCRAP
ifg temp 10 shoot SWOODSCRAP
ifg temp 20 shoot SWOODSCRAP
ifg temp 30 shoot SWOODSCRAP
ifg temp 40 shoot SWOODSCRAP
ifg temp 50 shoot SWOODSCRAP
ends

defstate ROCKCHUNKSPAWN
shoot SROCKDEB_4
ifg temp 10 shoot SROCKDEB_4
ifg temp 20 shoot SROCKDEB_4
ifg temp 30 shoot SROCKDEB_4
ifg temp 40 shoot SROCKDEB_4
ifg temp 50 shoot SROCKDEB_4
ends

defstate SPAWN_BIG_SPARKS
ifrnd 64 espawn 9284 else ifrnd 64 espawn 9285 else ifrnd 64 espawn 9286 else espawn 9287
ends

defstate bullet_hit_sounds
	geta[].extra temp6
	ife STEPSOUNDFX 0 { set playsound HITNORMAL espawn GUNSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 1 { set playsound HITWOOD espawn GUNSMOKE state SPAWN_BEHIND state WOODCHUNKSPAWN } else
	ife STEPSOUNDFX 2
		{
		state METAL_HIT_SOUNDS
		spawn GUNSMOKE shoot SPARK shoot SPARK
		state SPAWN_BIG_SPARKS
		state SPAWN_BEHIND
		}
	else
	ife STEPSOUNDFX 3 { state METAL_HIT_SOUNDS espawn GUNSMOKE state SPAWN_BEHIND shoot SPARK shoot SPARK state SPAWN_BIG_SPARKS state SPAWN_BEHIND } else
	ife STEPSOUNDFX 4 { set playsound HITDIRT espawn DUSTSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 5 { set playsound HITNORMAL espawn GUNSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 8 { set playsound HITDIRT espawn GUNSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 9 set playsound HITWATER else
	ife STEPSOUNDFX 10 { set playsound HITDIRT ife FLOORTEX 8067 { espawn DUSTSMOKE seta[RETURN].pal 8 } else espawn DUSTSMOKE  state SPAWN_BEHIND } else
	ife STEPSOUNDFX 11 { set playsound HITSTONE state ROCKCHUNKSPAWN espawn GUNSMOKE  state SPAWN_BEHIND } else
	ife STEPSOUNDFX 12 set playsound HITMUD else
	ife STEPSOUNDFX 14 { state METAL_HIT_SOUNDS set playsound HITWATER espawn GUNSMOKE  state SPAWN_BEHIND } else
	ife STEPSOUNDFX 15 { set playsound HITSTONE set playsound HITWATER espawn GUNSMOKE  state SPAWN_BEHIND } else
	ife STEPSOUNDFX 16 set playsound HITWATER else
	ife STEPSOUNDFX 17 { set playsound HITCHAINL espawn GUNSMOKE state SPAWN_BEHIND shoot SPARK shoot SPARK state SPAWN_BIG_SPARKS state SPAWN_BEHIND } else
	ife STEPSOUNDFX 18 { set playsound HITGLASS espawn GUNSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 19 { set playsound HITCARDB espawn GUNSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 20 { set playsound HITMUD espawn GUNSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 21 { set playsound HITMUD espawn BLOOD state SPAWN_BEHIND ifrnd 64 guts JIBS6 1 } else
	ife STEPSOUNDFX 22 { set playsound HITDIRT espawn DUSTSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 23 { set playsound HITWOOD espawn GUNSMOKE state SPAWN_BEHIND state WOODCHUNKSPAWN } else
	ife STEPSOUNDFX 24 { state METAL_HIT_SOUNDS espawn GUNSMOKE state SPAWN_BEHIND shoot SPARK shoot SPARK state SPAWN_BIG_SPARKS state SPAWN_BEHIND } else
	ife STEPSOUNDFX 26 { set playsound HITGLASS espawn GUNSMOKE state SPAWN_BEHIND eshoot ICE_DEBRIS setthisprojectile[RETURN].xrepeat 2 setthisprojectile[RETURN].yrepeat 2 } else
	ife STEPSOUNDFX 27 { set playsound HITSTONE state ROCKCHUNKSPAWN espawn GUNSMOKE  state SPAWN_BEHIND } else
	ife STEPSOUNDFX 28 { set playsound HITDIRT espawn DUSTSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 30 { set playsound HITSTONE espawn GUNSMOKE state SPAWN_BEHIND } else
	ife STEPSOUNDFX 32 { set playsound HITMUD spritepal 8 espawn BLOOD seta[RETURN].pal 8 ifrnd 64 guts JIBS6 1 } else
	ife STEPSOUNDFX 33 { set playsound HITDIRT ife FLOORTEX 8067 { espawn DUSTSMOKE seta[RETURN].pal 8 } else espawn DUSTSMOKE  state SPAWN_BEHIND } else
	ife STEPSOUNDFX 34 { set playsound HITDIRT espawn DUSTSMOKE state SPAWN_BEHIND }
	// randomizes pitch depending on bullet strength
	randvar temp4 256
	geta[].extra temp5
	mulvar temp5 5
	sub temp4 temp5
	ife playsound 0 set playsound HITNORMAL
	soundvar playsound
	setactorsoundpitch THISACTOR playsound temp4
ends

defstate BULLETHITSOUNDS
ifcount 1
	{
	state bullet_hit_sounds
	killit
	}
ends

// Controls melee hit sounds
defstate MELEE_HIT_SOUNDS
        ife STEPSOUNDFX 1 { ifrnd 128 set playsound MELEE_HIT_WOOD1 else set playsound MELEE_HIT_WOOD2 shoot SWOODSCRAP shoot SWOODSCRAP }
        else ife STEPSOUNDFX 23 { ifrnd 128 set playsound MELEE_HIT_WOOD1 else set playsound MELEE_HIT_WOOD2 shoot SWOODSCRAP shoot SWOODSCRAP }
        else ife STEPSOUNDFX 4 { ifrnd 128 set playsound MELEE_HIT_DIRT1 else set playsound MELEE_HIT_DIRT2 spawn DUSTSMOKE }
        else ife STEPSOUNDFX 6 { set playsound MELEE_HIT_CARPET1 }
        else ife STEPSOUNDFX 8 { set playsound MELEE_HIT_SNOW1 espawn DUSTSMOKE seta[RETURN].pal 27 }
        else ife STEPSOUNDFX 9 { sound WATER_SPLASH spawn WATERSPLASH2 }
        else ife STEPSOUNDFX 10 { ifrnd 128 set playsound MELEE_HIT_DIRT1 else set playsound MELEE_HIT_DIRT2 spawn DUSTSMOKE }
        else ife STEPSOUNDFX 11 { set playsound MELEE_HIT_STONE1 shoot SPARK shoot SPARK }
        else ife STEPSOUNDFX 19 { set playsound MELEE_HIT_CARPET1 shoot SPARK shoot SPARK }
        else ife STEPSOUNDFX 20 { ifrnd 128 set playsound MELEE_HIT_DIRT1 else set playsound MELEE_HIT_DIRT2 spawn DUSTSMOKE }
        else ife STEPSOUNDFX 21 { ifrnd 128 set playsound MELEE_HIT_DIRT1 else set playsound MELEE_HIT_DIRT2 spawn DUSTSMOKE }
        else ife STEPSOUNDFX 32 { ifrnd 128 set playsound MELEE_HIT_DIRT1 else set playsound MELEE_HIT_DIRT2 spawn DUSTSMOKE }
        else ife STEPSOUNDFX 28 { set playsound MELEE_HIT_SNOW1 spawn DUSTSMOKE }
        else ife STEPSOUNDFX 32 { ifrnd 128 set playsound MELEE_HIT_DIRT1 else set playsound MELEE_HIT_DIRT2 espawn DUSTSMOKE seta[RETURN].pal 8 }
        else ife STEPSOUNDFX 33 { ifrnd 128 set playsound MELEE_HIT_DIRT1 else set playsound MELEE_HIT_DIRT2 espawn DUSTSMOKE }
        else
            {
            spawn 8433
            shoot SPARK
            shoot SPARK
            shoot SPARK
            shoot SPARK
            ifrnd 96 set playsound METSWIPE else
            ifrnd 96 set playsound METSWIPE2 else
            set playsound METSWIPE3
            }
        // This code randomizes the pitch of the sound a bit based on it's damage
        randvar temp4 128
        ifrnd 128 sub temp4 128
        geta[].extra temp5
        mulvar temp5 2
        sub temp4 temp5
        soundvar playsound
        setactorsoundpitch THISACTOR playsound temp4
ends

defstate PROJ_HIT_SOUNDS
    set temp3 temp
    ifl temp3 -16384
     ifg temp3 -32768 // hitting a wall?
        {
        add temp3 32768 // add 32768 to get the wall's number
        getwall[temp3].picnum FLOORTEX
        state CHECKSTEPS
        state MELEE_HIT_SOUNDS
        }
        else
    ifl temp3 32768
     ifg temp3 16384 // hitting a floor/ceiling?
        {
        sub temp3 16384
        state getfloordist
        ifl z 32 gets[temp3].floorpicnum FLOORTEX
        else gets[temp3].ceilingpicnum FLOORTEX
        state CHECKSTEPS
        state MELEE_HIT_SOUNDS
        }
ends

onevent EVENT_KILLIT

switch sprite[].picnum
	case SPELL1
		setprojectile[SPARK2].pal sprite[].pal
		shoot SPARK2
		setprojectile[SPARK2].pal 0
		break
	case SPELL7
		setprojectile[SPARK].pal 2
		shoot SPARK
		setprojectile[SPARK].pal 0
		break
	case SNOWFALL_DISC
		sound BEAMSABRE_CLASH
		geta[].htmovflag temp
		state PROJ_HIT_SOUNDS
		shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2
		break
	case SAWBLADE
		sound SAWBL_IMP
		geta[].htmovflag temp
		state PROJ_HIT_SOUNDS
		shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK
		break
	case SAWBLADE_BOUNCE
		sound SAWBL_IMP2
		geta[].htmovflag temp
		state PROJ_HIT_SOUNDS
		shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2
		break
	case CAMERALIGHT
	case MOVIECAMERA
		sound VENT_BUST
		ifn HITAGSAVED 0 setarray LIGHT_OPEN[HITAGSAVED] 2
		set RETURN 0
		break
	case MOLOTOV
		sound GLASS_BREAKING
		lotsofglass 5
		set RETURN 0
		break
	case CAR_DOOR
		spawn CARDOOR_FLOOR
		set RETURN 0
		break
	case CAR_WHEEL
		spawn CARWHEEL_FLOOR
		set RETURN 0
		break
	case CANWITHSOMETHING
		  state rats
		  state roaches
		set RETURN 0
		break
	case PARAD_TORSO_FLY
	case CULTIST_TORSO_FLY
	case MJ12_TORSO_FLY
	case ORC_TORSO_FLY
	case LIZTR_TORSO_FLY
	case ZOMBIE_TORSO_FLY
	case THOTH_TORSO_FLY
	case NAZI_TORSO_FLY
	case MERC_TORSO_FLY
	seta[].mdflags 16
    espawn 2284
	ifactor ORC_TORSO_FLY seta[RETURN].pal 8
    geta[].htmovflag temp3
    geta[].owner myowner
        ifl temp3 -16384
         ifg temp3 -32768 // hitting a wall?
            {
            state random_wall_jibs
			ifactor PARAD_TORSO_FLY espawn 30419
			ifactor CULTIST_TORSO_FLY espawn 30426
			ifactor MJ12_TORSO_FLY espawn 30433
			ifactor ORC_TORSO_FLY espawn 30449
			ifactor LIZTR_TORSO_FLY espawn 30456
			ifactor ZOMBIE_TORSO_FLY espawn 30463
			ifactor THOTH_TORSO_FLY espawn 30702
			ifactor NAZI_TORSO_FLY espawn 30709
			ifactor MERC_TORSO_FLY espawn 30716
			setav[RETURN].actor_pal actor_pal
            seta[RETURN].pal sprite[].pal
            }
            else
            {
			ifactor PARAD_TORSO_FLY espawn 30419
			ifactor CULTIST_TORSO_FLY espawn 30426
			ifactor MJ12_TORSO_FLY espawn 30433
			ifactor ORC_TORSO_FLY espawn 30449
			ifactor LIZTR_TORSO_FLY espawn 30456
			ifactor ZOMBIE_TORSO_FLY espawn 30463
			ifactor THOTH_TORSO_FLY espawn 30702
			ifactor NAZI_TORSO_FLY espawn 30709
			ifactor MERC_TORSO_FLY espawn 30716
			setav[RETURN].actor_pal actor_pal
            seta[RETURN].pal sprite[].pal
            }
            set RETURN 0
    break
    case ORC_CORPSE_FLY
    case ARCHER_CORPSE_FLY
    case CULTIST_CORPSE_FLY
    case PARAD_CORPSE_FLY
	case PSHOTG_CORPSE_FLY
    case THOTH_CORPSE_FLY
    case TRIAD_CORPSE_FLY
    case NINJA_CORPSE_FLY
	case LIZTROOP_CORPSE_FLY
	case ZOMBIE_CORPSE_FLY
        state BODY_FALL_NOISES
		seta[].mdflags 16
        spawn 2284
        geta[].htmovflag temp3
        geta[].owner myowner
        ifl temp3 -16384
         ifg temp3 -32768 // hitting a wall?
            {
            state random_wall_jibs
            ifactor ORC_CORPSE_FLY espawn 28828
            ifactor ARCHER_CORPSE_FLY espawn 28838
            ifactor CULTIST_CORPSE_FLY espawn 28848
			ifactor PSHOTG_CORPSE_FLY espawn 33503
            ifactor PARAD_CORPSE_FLY espawn 28858
            ifactor THOTH_CORPSE_FLY espawn 28868
            ifactor TRIAD_CORPSE_FLY espawn 28878
            ifactor NINJA_CORPSE_FLY espawn 28888
			ifactor LIZTROOP_CORPSE_FLY espawn 28898
			ifactor ZOMBIE_CORPSE_FLY espawn 9901
            geta[].ang temp
            sub temp 1024
            seta[RETURN].ang temp
            seta[RETURN].pal sprite[].pal
			setav[RETURN].actor_pal actor_pal
            }
            else
            {
            ifactor ORC_CORPSE_FLY espawn 24446
            ifactor ARCHER_CORPSE_FLY espawn 24487
            ifactor CULTIST_CORPSE_FLY espawn 7776
            ifactor PARAD_CORPSE_FLY espawn 18728
			ifactor PSHOTG_CORPSE_FLY espawn 33497
            ifactor THOTH_CORPSE_FLY espawn 12600
            ifactor TRIAD_CORPSE_FLY espawn 3992
            ifactor NINJA_CORPSE_FLY espawn 14949
			ifactor LIZTROOP_CORPSE_FLY espawn 1709
			ifactor ZOMBIE_CORPSE_FLY espawn 9901
			setav[RETURN].actor_pal actor_pal
            seta[RETURN].pal sprite[].pal
            }
            set RETURN 0
    break
    // A masterswitch gets "killed" when it starts to move. So using this event we can notify subscribers of this
    case MASTERSWITCH
    {
        for ms_temp sprofstat 1
        {
            getav[ms_temp].MASTERSWITCH_SUBSCRIBE ms_temp2

            ife ms_temp2 sprite[].lotag
                setav[ms_temp].MASTERSWITCH_RETURN 1
        }

        // for sector effectors
        for ms_temp sprofstat 3
        {
            getav[ms_temp].MASTERSWITCH_SUBSCRIBE ms_temp2

            ife ms_temp2 sprite[].lotag
                setav[ms_temp].MASTERSWITCH_RETURN 1
        }
    }
		break
    case TRIPBOMB
        ifspawnedby APLAYER
         ife CHAR 1
            {
            globalsound ZAX_BOMB_EXPL
            }
		break
    case SEENINE
        ifspritepal 3
            {
            stopsound PIPEBOMB_EXPLODE
            globalsound DISTANT_EXPLOSION
            screensound DISTANT_EXPLOSION
            }
        ifspritepal 5 stopsound PIPEBOMB_EXPLODE
        ifspritepal 9
            {
            stopsound PIPEBOMB_EXPLODE
            globalsound MISSILE_LAUNCH
            screensound MISSILE_LAUNCH
            }

        set RETURN 0
        break
    case WATERDRIP
        ifspritepal 10
            {
            espawn 2379
            seta[RETURN].pal 10
            // seta[RETURN].cstat sprite[].cstat
            seta[RETURN].shade sprite[].shade
            spawn 2284
            soundonce BLOOD_DRIP
            }
        else
        ifspritepal 2
            {
            espawn 2379
            seta[RETURN].pal 10
            // seta[RETURN].cstat sprite[].cstat
            seta[RETURN].shade sprite[].shade
            spawn 2284
            soundonce BLOOD_DRIP
            }
        else
        {
        espawn 2379
        seta[RETURN].pal sprite[].pal
        // seta[RETURN].cstat sprite[].cstat
        seta[RETURN].shade sprite[].shade
        }
        set RETURN 0
        break
    case 1031
    case 1032
    case 1033
        espawn 3714
        seta[RETURN].z sector[].floorz
        seta[RETURN].pal sprite[].pal
        set RETURN 0
    break
    case 198
    case 14094
        sound GLASS_BREAK3
        lotsofglass 25
        set RETURN 0
    break
    case JIBS1
    case JIBS2
    case JIBS3
    case JIBS4
    case JIBS5
    case LIZMANHEAD1
    case LIZMANARM1
    case LIZMANLEG1
    case HEADJIB1
    case ARMJIB1
    case LEGJIB1
    case HUMAN_TORSO
        state random_wall_jibs
        set RETURN 0
    break
    case 13383
    case 13404
    case 4961
    case 12053
    case 27370
    case 19802
    case 16076
    case 14604
    case 14605
    case 4960
    case 4959
    case 6874
    case 6875
    case 4963
    case 12203
    case 12204
    case 20194
	case 11741
	case 11742
	case CHAINSAW_PROJ
        // melee hit sounds
    geta[].htmovflag temp3
    geta[].owner myowner
    ifl temp3 -16384
     ifg temp3 -32768 // hitting a wall?
        {
        add temp3 32768 // add 32768 to get the wall's number
        getwall[temp3].picnum FLOORTEX
        state CHECKSTEPS
        state MELEE_HIT_SOUNDS
        }
        else
    ifl temp3 32768
     ifg temp3 16384 // hitting a floor/ceiling?
        {
        sub temp3 16384
        state getfloordist
        ifl z 32 gets[temp3].floorpicnum FLOORTEX
        else gets[temp3].ceilingpicnum FLOORTEX
        state CHECKSTEPS
        state MELEE_HIT_SOUNDS
        }
        else
        ifn temp3 0
        {
        spawn 8433
        shoot SPARK
        shoot SPARK
        ifrnd 96 sound METSWIPE else
        ifrnd 96 sound METSWIPE2 else
        sound METSWIPE3
        }
    set RETURN 0
break
case JIBS6
    ifn sprite[].sectnum -1 ifn sprite[].sectnum 4096 spawn 2284
    state random_wall_jibs
    set RETURN 0
break
case CRACK1
case CRACK2
case CRACK3
case CRACK4
    set destruct_trigger HITAGSAVED
    operateactivators HITAGSAVED 0
    operaterespawns HITAGSAVED
    operatemasterswitches HITAGSAVED
    set RETURN 0
break
case 18067 // dagger
case 18072 // golden dagger
    geta[].htmovflag temp

    state PROJ_HIT_SOUNDS

    add temp 16384
    ifl temp 16384 ifg temp -1
    {
        ifactor 18067 espawn 18069 // spawn dagger
        ifactor 18072 espawn 18074 // spawn golden dagger
        setactorvar[RETURN].myowner temp
        setactorvar[RETURN].temp2 sprite[temp].htang
        geta[temp].z temp5
        sub temp5 sprite[].z
        setactorvar[RETURN].temp5 temp5
        seta[RETURN].shade sector[].floorshade
    }
    set RETURN 0
break
case KAG_BLAST_RIGHT
case KAG_BLAST_LEFT
case ICE_BLAST
case CANNONBALL
    ifspawnedby SKNIGHT nullop
	else ifspawnedby MONGUR nullop
	else ifspawnedby JEDRIK nullop
	// The intention of this block is to have the projectile hit the target, then go through to the next one
	else
	{
        geta[].htmovflag temp
        geta[].owner myowner
        add temp 16384
        ifl temp 16384 ifg temp -1


        ifle sprite[temp].extra sprite[].extra
		 ifg sprite[temp].extra 0
            {
				geta[temp].picnum temp2
				ife temp2 KRAKEN nullop
				else
				{
					geta[temp].cstat temp4
					seta[temp].cstat 32768
					ifactor CANNONBALL eshoot CANNONBALL else
					ifactor ICE_BLAST eshoot ICE_BLAST else
					ifactor KAG_BLAST_LEFT eshoot KAG_BLAST_LEFT else
					eshoot KAG_BLAST_RIGHT
					seta[temp].cstat temp4
					seta[RETURN].zvel sprite[].zvel
					seta[RETURN].owner myowner
					seta[RETURN].ang sprite[].ang
					seta[RETURN].z sprite[].z
				}
            }
	}
    set RETURN 0

	break
case ENEMY_BULLET
case ENEMY_SHOTGUN
	geta[].htmovflag temp
		set temp3 temp
		ifl temp3 -16384
		 ifg temp3 -32768 // hitting a wall?
			{
			add temp3 32768 // add 32768 to get the wall's number
			getwall[temp3].picnum FLOORTEX
			state CHECKSTEPS
			state bullet_hit_sounds
			}
			else
		ifl temp3 32768
		 ifg temp3 16384 // hitting a floor/ceiling?
			{
			sub temp3 16384
			state getfloordist
			ifl z 32 gets[temp3].floorpicnum FLOORTEX
			else gets[temp3].ceilingpicnum FLOORTEX
			state CHECKSTEPS
			state bullet_hit_sounds
			}
	set RETURN 0
	break
case XBOW_BOLT // Bolt
case AUTOBOW_BOLT // Autobow bolt
    geta[].htmovflag temp
    state PROJ_HIT_SOUNDS

    add temp 16384
    ifl temp 16384 ifg temp -1
    {
    ifrnd 128
        {
        eshoot XBOW_BOLT
        seta[RETURN].ang sprite[].ang
        getthisprojectile[RETURN].EXTRA temp3
        divvar temp3 2
        setthisprojectile[RETURN].EXTRA temp3
        getthisprojectile[RETURN].VEL temp3
        divvar temp3 2
        setthisprojectile[RETURN].VEL temp3
        }
    else
        {
        espawn 12283 // spawn bolt
        setactorvar[RETURN].myowner temp
        setactorvar[RETURN].temp2 sprite[temp].htang
        geta[temp].z temp5
        sub temp5 sprite[].z
        setactorvar[RETURN].temp5 temp5
        seta[RETURN].shade sector[].floorshade
        }
    }
    set RETURN 0
break
case ARROW_PROJ // Arrow
case 18096 // Compound arrow
case 12232 // silver bolt
case SILVER_STAKE
    geta[].htmovflag temp
    state PROJ_HIT_SOUNDS

    add temp 16384
    ifl temp 16384 ifg temp -1
    {
        ifactor ARROW_PROJ espawn 12284 // spawn arrow
        ifactor 18096 espawn 18097
        ifactor 12232 espawn 12282 // spawn silver bolt
        setactorvar[RETURN].myowner temp
        setactorvar[RETURN].temp2 sprite[temp].htang
        geta[temp].z temp5
        sub temp5 sprite[].z
        setactorvar[RETURN].temp5 temp5
        seta[RETURN].shade sector[].floorshade
    }
    set RETURN 0
break
case IN_MINE_DART
    espawn 7790
    seta[RETURN].pal 2
    seta[RETURN].owner sprite[].owner
    set RETURN 0
break
case MINE_DART
    espawn 7790
    seta[RETURN].owner sprite[].owner
    set RETURN 0
break
case M_TRAP_THROW
    espawn M_TRAP_IDLE
    seta[RETURN].owner sprite[].owner
    set RETURN 0
break
case MC_TRAP_THROW
    espawn MC_TRAP_IDLE
    seta[RETURN].owner sprite[].owner
    set RETURN 0
break
case R_TRAP_THROW
    espawn R_TRAP_IDLE
    seta[RETURN].owner sprite[].owner
    set RETURN 0
break
case PROXBUNDLE
    ifand gun_firemode 32 espawn PROXONFLOOR_2
    else espawn PROXONFLOOR
    seta[RETURN].owner sprite[].owner
    set RETURN 0
break
case PRIEST_BLAST
    shoot SPARK
    shoot SPARK
    shoot SPARK
    shoot SPARK
    set RETURN 0
break
case CRYSTAL_SPIKE
	spritepal 102
	lotsofglass 1
	set RETURN 0
break
case 6826 // nails
case 22631
    geta[].htmovflag temp
    ifn ally_mag 4 state PROJ_HIT_SOUNDS
    shoot SPARK
    shoot SPARK
    shoot SPARK
    shoot SPARK
    set RETURN 0
break
case 6816 // enchanted nails
    geta[].htmovflag temp
    ifn ally_mag 4 state PROJ_HIT_SOUNDS
    shoot SPARK2
    shoot SPARK2
    shoot SPARK2
    shoot SPARK2
    set RETURN 0
break
case 29020
	ifspawnedby HYDRA nullop else
		{
		ifactorsound THISACTOR WATER_RUSH stopactorsound THISACTOR WATER_RUSH
		}
break
case BRUISERFIREBALL
case HADESBLASTH
    shoot SPARK
    shoot SPARK
    shoot SPARK
    shoot SPARK
break
case 22610
case SPELL2
case 20943
case REDM_BLAST
    shoot SPARK2
    shoot SPARK2
    shoot SPARK2
    shoot SPARK
break
case FIREWALL_BOMB
case GP30_NADE
case GEO_NADE
case 5968
case JRGL_PROJ
case FORTYMM_NADE
case 2606
case GOLD_SPELL2
case 19807
    shoot SPARK
    shoot SPARK
    shoot SPARK
    shoot SPARK
    set RETURN 0
    break
case TORPEDO
case MISSILE
    ifspawnedby APLAYER
        {
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        spawn BIG_SMOKE2
        spawn BIG_SMOKE2
        spawn BIG_SMOKE2
        spawn 8433
        }
    set RETURN 0
break
case RPG
    ifspawnedby APLAYER
        {
        ife CHAR 1
         ife cur_weap 7
            {
            }
            else
                {
            shoot SPARK
            shoot SPARK
            shoot SPARK
            shoot SPARK
                }
        ife temp_weap 16
         ife cur_weap 0
            {
            spawn BIG_SMOKE2
            spawn BIG_SMOKE2
            spawn 8433
            }
        ife CHAR 10
         ife cur_weap 7
            {
            spawn BIG_SMOKE2
            spawn BIG_SMOKE2
            spawn 8433
            }
        ife CHAR 12
         ife cur_weap 7
            {
            spawn BIG_SMOKE2
            spawn BIG_SMOKE2
            spawn 8433
            }
        }
    set RETURN 0
break
case DOMELITE
    espawn 3179
    seta[RETURN].xrepeat sprite[].xrepeat
    seta[RETURN].yrepeat sprite[].yrepeat
    seta[RETURN].cstat sprite[].cstat
    seta[RETURN].pal sprite[].pal
    set RETURN 0
break
case HANGLIGHT
    sound VENT_BUST
    espawn 3180
    seta[RETURN].xrepeat sprite[].xrepeat
    seta[RETURN].yrepeat sprite[].yrepeat
    seta[RETURN].cstat sprite[].cstat
	al HITAGSAVED
	ifn HITAGSAVED 0 setarray LIGHT_OPEN[HITAGSAVED] 2
    set RETURN 0
break
case POT1
case POT2
    spawn BROWNSTAIN sound VENT_BUST set RETURN 0
break
endswitch

endevent

onevent EVENT_PREGAME
    switch sprite[].picnum
		case 18360
			ifoutside seta[].pal sector[].ceilingpal else
			seta[].pal sector[].floorpal
			break
        case SPARK
        case SPARK2
            seta[].cstat 514
            seta[].blend 255
            break
		case 9395
		case 12902
		case 6544
		case 6633
		case 11179
			seta[].cstat 130
			seta[].blend 255
			break
		case 8435
			cstat 34
			break
        case 2284
            cstator 32
            break
        case COOLEXPLOSION1
        case EXPLOSION2
        case FREEZEBLAST
        case SHRINKSPARK
		case ACID_BLAST
		case WATERBUBBLE
		case WATERBUBBLEMAKER
            cstator 2
            seta[].blend 255
            break
        case 1404
            ifand ZVELSAVED 1 seta[].z ZPOS_SAVED
            break
    endswitch
endevent

useractor notenemy 18855 // Tron Disc
cstat 32
setsprite THISACTOR sprite[myowner].x sprite[myowner].y sprite[myowner].z
ife myowner -1 killit
ife sprite[myowner].statnum 1024 killit
ifl sprite[myowner].x 1 killit
enda

useractor notenemy 22013 // sawblade
cstat 32
ifspawnedby SAWBLADE_BOUNCE
	{
	spawn FRAMEEFFECT1
	geta[].ang temp
	add temp 256
	seta[].ang temp
	}
setsprite THISACTOR sprite[myowner].x sprite[myowner].y sprite[myowner].z
ife myowner -1 killit
ife sprite[myowner].statnum 1024 killit
ifl sprite[myowner].x 1 killit
enda

defstate model_pitch
	// code by Dan
	geta[].xvel xvel
	geta[].zvel z2
	shiftr z2 4
	getangle temp2 xvel z2
	seta[].pitch temp2
ends

defstate model_owner_pitch
	// code by Dan
	geta[myowner].xvel xvel
	geta[myowner].zvel z2
	shiftr z2 4
	getangle temp2 xvel z2
	seta[].pitch temp2
ends

onevent EVENT_EGS

  ifactor WTANK
    state wtankload
  ifactor WTANKGUN
    cstat 32768
  ifactor EXPLOSIONMAKER
  {
    geta[].z SET
    gets[].ceilingz ANGLE
    seta[].z ANGLE
    cstat 32768
  }

switch sprite[].picnum
case MODEL_TRAIL
	geta[].owner myowner
	ifspawnedby GREEN_ARCH_BOLT spritepal 8
	ifspawnedby RED_ARCH_BOLT spritepal 2
	ifspawnedby VOID_ARCH_BOLT spritepal 30
	ifspawnedby VOID_PLAYER_BOLT spritepal 30
	ifspawnedby VOID_BOLT spritepal 30
	ifspawnedby PLASMAPROJ spritepal 30
	ifspawnedby MISSILE spritepal 5
	ifspawnedby MICRO_MISSILE spritepal 5
	ifspawnedby HOMING_MISSILE spritepal 2
	ifspawnedby SPELL4 spritepal 2
	ifspawnedby 9361 spritepal 2
	ifspawnedby 9359 spritepal 2
	ifspawnedby 6826 spritepal 27
	ifspawnedby 6816 spritepal 1
	ifspawnedby ROCKET_PUNCH spritepal 5
	ifspawnedby ATOM_BOMB spritepal 20
	ifspawnedby 12717 spritepal 30
	ifspawnedby 5125 spritepal 5
	ifspawnedby SILVER_STAKE spritepal 1
	ifspawnedby 22631 spritepal 5
	ifspawnedby GOLD_SPELL1 spritepal 29
	ifspawnedby SPELL1 spritepal 1
	ifspawnedby SPELL8 spritepal 27
	ifspawnedby SPELL5 spritepal 30
	ifspawnedby SPELL14 spritepal 30
	ifspawnedby 6221 spritepal 30
	ifspawnedby 7160 spritepal 1
	ifspawnedby 7163 spritepal 2
	ifspawnedby ICE_BLAST spritepal 1
	ifspawnedby FLAME_BLAST spritepal 2
	ifspawnedby SAWBLADE spritepal 5
	ifspawnedby SAWBLADE_BOUNCE spritepal 2
	ifspawnedby SNOWFALL_DISC spritepal 1
	ifspawnedby CYCLOID_PLASMA spritepal 8
	ifspawnedby 6627 spritepal 8
	ifspawnedby SPIKE_PROJ { seta[].shade sprite[myowner].shade spritepal 5	}
	ifspawnedby ARROW_PROJ { seta[].shade sprite[myowner].shade spritepal 27 }
	ifspawnedby 18096 { seta[].shade sprite[myowner].shade spritepal 27 }
	ifspawnedby XBOW_BOLT { seta[].shade sprite[myowner].shade spritepal 27 }
	ifspawnedby BALLIST_BOLT { seta[].shade sprite[myowner].shade spritepal 27 }
	ifspawnedby AUTOBOW_BOLT { seta[].shade sprite[myowner].shade spritepal 27 }
	ifspawnedby SILVER_BOLT { seta[].shade sprite[myowner].shade spritepal 1 }
	ifspawnedby 29076 spritepal 5
	ifspawnedby 18072 { seta[].shade sprite[myowner].shade spritepal 5	}
	ifspawnedby 18067 { seta[].shade sprite[myowner].shade spritepal 5	}
    seta[].cstat 514
    seta[].blend 255
	state model_owner_pitch
break
case ENERGY_SHIELD
case SUPERN_SHIELD
		geta[].owner myowner
		geta[myowner].z temp
		sub temp 4096 // rough centre
		seta[].z temp
		seta[].shade 0
		seta[].blend 255
		cstat 130
		break
case 19674
		geta[].owner myowner
		break
case ENEMY_SHOTGUN
case FAKE_BULLET
		// reduce accuracy
		randvar temp 200
		geta[].ang temp2
		geta[].zvel temp3
		sub temp 100
		add temp2 temp
        randvar temp 1000
		sub temp 500
		add temp3 temp
		seta[].ang temp2
		seta[].zvel temp3

		seta[].blend 255
		state model_pitch
	break
case ENEMY_BULLET
		state littlerandtraj
		randvar temp3 12
		add temp3 20
		seta[].yrepeat temp3
		seta[].blend 255
		state model_pitch
	break
case FIREWALL_BOMB
	geta[].zvel temp
	sub temp 2048
	seta[].zvel temp
	break
case 18360
	ifoutside seta[].pal sector[].ceilingpal else
	seta[].pal sector[].floorpal
	break
case PARAD_TORSO_FLY
	geta[].owner myowner
	getav[myowner].GENDER GENDER
	ife GENDER MALE { ifrnd 128 sound PE_PAIN1 else sound PE_PAIN2 }
	else { ifrnd 128 sound PE_F_PAIIN1 else sound PE_F_PAIN2 }
	break
case 18855
	cstat 32
	sizeat 24 24
	geta[].owner myowner
	break
case 22013
	cstat 32
	sizeat 16 16
	geta[].owner myowner
	break
case SNOWFALL_DISC
	seta[].shade -127
	espawn 18855
	break
case SAWBLADE
case SAWBLADE_BOUNCE
	espawn 22013
	break
case 30070
case 30071
	cstat 32768
	break
case 30139 // dazed star
case 18067 // Bolt
case 18072 // golden bolt
case XBOW_BOLT
case ARROW_PROJ
case 12232 // silver bolt
case 19029
case 17886
case 24730 // Terminator weak spot
case 28317 // Beholder weak spot
case 18157
case 10828
case 10039
case COPTER_ROTOR
case COPTER_ROTOR2
case 16764
case 22923
case 23746
case 5381
case 13592
case 18427
case 18133
case SHOOTME
case SHOOTME2
case LILITH
case 9750
case 18768
case 9302
case 29079
case GOLEM
case GOLEM_STAYPUT
case DRAGON
case DRAGON_FLIGHT
case SOUNDSCAPE
case WARN_GLINT
 geta[].owner myowner
 break
  case FOOTPRINTS
  case FOOTPRINTS2
  case FOOTPRINTS3
  case FOOTPRINTS4
  seta[].shade sector[].floorshade
  break
case BLUELASERSHOT
setprojectile[].userdata 80
  break
case TRENTON_SOLARI
    ifspawnedby TRENTON_SOLARI ifspritepal 0 spritepal 10
    break
case 17079
  set SPEC_ACT 1
  break
case SHELL12GF
 geta[].owner myowner
 seta[].pal sprite[myowner].pal
 break
case 8002
 cstat 1
 sizeat 32 32
 break
case 2284
 cstat 34
 sizeat 10 10
 break
case 9284
case 9285
case 9286
case 9287
  iffloordistl 4 espawn 9288
  ifceilingdistl 4 espawn 9288
 break
case 16113
case 16114
case 16115
case 16116
case 16117
case 16118
case 16119
case 16120
case 16121
 seta[].shade -127
 cstat 32768 // make initially invisible
 break
case 22093
 geta[].owner myowner
 state KEEPMYPAL
 break
case ROTATEGUN
case WTANK
case WTANKDEAD
case SH40MM_FLOOR
case POTTERY_DEBRIS_F1
case POTTERY_DEBRIS_F2
 state KEEPMYPAL
 break
case PROJECTILE_FLARE
    cstat 32768
break
case 18271
 state KEEPMYPAL
 geta[].owner myowner
 geta[myowner].lotag temp2
 add temp2 1
 setactorvar[].LOTAGSAVED temp2
 break
case 13952
case SHOTSPARK1
 geta[].owner myowner
 break
case BLOODSPLAT1
case BLOODSPLAT2
case BLOODSPLAT3
case BLOODSPLAT4
	geta[].owner myowner
    ifrnd 96 sound BLD_SPLASH1
    else ifrnd 96 sound BLD_SPLASH2
    else sound BLD_SPLASH3
	seta[].pal actorvar[myowner].blood_type
    break
case SORCERER
case FR_SORCERER
case DARKAVATAR
case DARKAVATAR_STAYPUT
case LOST
        state KEEPMYPAL
        espawn 13950 // spawning circle
        seta[RETURN].ang sprite[].ang
        break
case MISTERH
    geta[].owner myowner
    state KEEPMYPAL
    flash
    palfrom 20 64 64 64
    globalsound LIGHTNING_SLAP
    soundonce LIGHTNING_SLAP
    seta[].ang sprite[myowner].ang
    spawn 8433
    spawn PENTAGRAM
    spawn BURNING2
break
case 3665
    sizeto 128 128
    geta[].owner myowner
    seta[].cstat sprite[myowner].cstat
    seta[].pal sprite[myowner].pal
break
case FIRE
case FIRE2
	cstat 32770
	seta[].blend 255
    sizeat 64 64
    state KEEPMYPAL
break
case FLAMEKEY
case SPIDERKEY
case DAGGERKEY
case MOONKEY
case SKULLKEY
case EYEKEY
case GENERICKEY
case DIAMOND_KEY
case CLUB_KEY
case SPADE_KEY
case HEART_KEY
case NORMAL_KEY5
    soundonce KEY_DROP
break
case 1404
    ifspawnedby RESPAWN
        {
        geta[].owner myowner
        ife sprite[myowner].pal 3 set EXTRASAVED -1
        else
            {
            getav[myowner].EXTRASAVED EXTRASAVED
            getav[myowner].xvel HITAGSAVED
            }
        }
break
case FL_GRENADE
    seta[].pal 17
break
case ORC
case TROLL
case MI_24_HIND
case KA_50_BLACK_SHARK
case BLACK_HAWK
case EDFSOLDIER_ACTIVE
case 10510
case HPOWERSUIT
case TERMINATOR
case TERMINATORSTAYPUT
case TERMINATORCRAWLING
case TERMTORSO
case TERMHEAD
case TOWN_GUARD
case JUGGERNAUT
case JUGGERNAUT_STAYPUT
    state KEEPMYPAL
	break
case AMC_209
case AMC_ASOLDIER_ACTIVE
case AMCSOLDIER_ACTIVE
    state KEEPMYPAL
	break
case LAVABALL
    randvar temp 2048
    seta[].ang temp
    randvar temp -8192
    seta[].zvel temp
    set temp 0
    seta[].shade -127
break
case 9946
case 12800
    geta[].owner temp4
break
case 6204
    geta[].z temp
    sub temp 6136
    seta[].z temp
    break
case 6200
    geta[].owner myowner
    break
case 6078 // Russian grenade
    geta[].owner myowner
    ifspawnedby APLAYER set grenade_counter 0 else
    getav[myowner].grenade_counter grenade_counter
    break
case PROXBUNDLE
case DYNAMITEBUNDLE
case DYNAMITESTICK
case CHARMED_DYNA
case DISCBOMB
case DISCBOMB2
case GRENADE
case MS_GRENADE_THROW
case H_GRENADE
case J_GRENADE
case MC_GRENADE
case Z_GRENADE
case SF_GRENADE
case HOLYHANDG
    ifspawnedby APLAYER
        {
        geta[].owner myowner
        geta[].xvel temp
        getav[myowner].bomb_throw_power temp2
        add temp temp2
        seta[].xvel temp
        geta[].zvel temp
        set temp3 temp2
        mulvar temp3 4
        sub temp temp3
        seta[].zvel temp
        }
    break
case EXPLOSION2
    seta[].blend 255
    cstat 130
    ifg ALARM_DETECT 0 add ALARM_COUNTER 70
            ifspawnedby RPG
         ife CHAR 1
          ife cur_weap 7 nullop else
    spawn 8433
    ifinwater  { spawn 18920 seta[].xrepeat 1 seta[].yrepeat 1 }
    ifspawnedby SEENINE nullop
    else ifspawnedby OOZFILTER nullop
    else ifspawnedby 9361 nullop
    else ifspawnedby 9359 nullop
    else ifspawnedby GORO_EXPLODING_FLAME nullop
    else
    {
    ifonwater spawn 18138
    else
        {
        ifspawnedby RPG
         ife CHAR 1
          ife cur_weap 7 nullop else
            {
            spawn BIG_SMOKE2
            spawn BIG_SMOKE2
            spawn BIG_SMOKE2
            }
        }
    }
    ifspawnedby 5968
        {
        flash
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        debris SCRAP2 3
        }
    ifspawnedby GP30_NADE
        {
        flash
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        }
    ifspawnedby SF_GRENADE
        {
        flash
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        }
    ifspawnedby EMP_GRENADE
        {
        flash
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        shoot SPARK2
        }
    ifspawnedby J_GRENADE
        {
        flash
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        }
    ifspawnedby H_GRENADE
        {
        flash
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        }
    ifspawnedby GRENADE
        {
        flash
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        }
    ifspawnedby MS_GRENADE_THROW
        {
        flash
        state FIRE_RING
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        }
    ifspawnedby MOLOTOV
        {
        flash
        state FIRE_RING
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        }
    ifspawnedby HOLYHANDG
        {
        flash
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        shoot SPARK
        }
    break
case 18096
	geta[].owner myowner
    randvar temp2 64
    randvar temp3 32
    state CHANGEACCURACY
    break
case 14509
    randvar temp2 64
    randvar temp3 32
    state CHANGEACCURACY
    break
case 9359
case 9361
case 9115
    randvar temp2 128
    randvar temp3 16
    state CHANGEACCURACY
    break
case GASBURST
case 19807
    seta[].blend 255
    seta[].shade -127
    randvar temp2 128
    randvar temp3 16
    state CHANGEACCURACY
    break
case 22631
    seta[].shade -127
	randvar temp2 128
    randvar temp3 16
    state CHANGEACCURACY
    break
case 6816
case 6826
case CRYSTAL_SPIKE
case SILVER_STAKE
    randvar temp2 64
    randvar temp3 8
    state CHANGEACCURACY
    break
case 5374
    seta[].blend 255
    seta[].shade -127
    randvar temp2 64
    randvar temp3 8
    state CHANGEACCURACY
    break
case 6857
case 6627
case 6198
    randvar temp2 64
    randvar temp3 8
    state CHANGEACCURACY
    seta[].shade -127
    seta[].blend 255
    break
case BONE_SHARD
case SPIKE_PROJ
    randvar temp2 256
    randvar temp3 64
    state CHANGEACCURACY
    break
case 7423
    geta[].owner temp
    seta[].xrepeat sprite[temp].xrepeat
    seta[].yrepeat sprite[temp].yrepeat
break
case HADESBLAST
case HADESBLASTH
    geta[].z temp
    add temp 2192
    seta[].z temp
    seta[].blend 255
break
case RUBYBLAST
    spawn PROJECTILE_FLARE
    randvar temp2 32
    randvar temp3 16
    state CHANGEACCURACY
    seta[].blend 255
    seta[].shade -127
break
case GORO_EXPLODING_FLAME
    seta[].blend 255
    seta[].shade -127
break
case 21612
case AMCSHIP
case AMCSHIP2
case 8924
case 8922
case 9388
case CAR_MOVE
case 15329
	geta[].sectnum upd_sect
    updatesectorz sprite[].x sprite[].y sprite[].z upd_sect
    ifn upd_sect -1 changespritesect THISACTOR upd_sect else sizeat 0 0
    geta[].owner temp
    ife sprite[temp].pal 3 set LOTAGSAVED 2 // FLY UP
    ife sprite[temp].pal 5 set LOTAGSAVED 1
    ife sprite[temp].pal 9 set LOTAGSAVED 3
    ife sprite[temp].pal 10 set LOTAGSAVED 4
    ife sprite[temp].pal 11 set LOTAGSAVED 5
    ife sprite[temp].pal 12 set LOTAGSAVED 6
    ife sprite[temp].pal 13 { spawn EXPLOSION2 shoot SPARK shoot SPARK spawn 8433 soundonce MISSILE_EXPLODE set LOTAGSAVED 7 }
    ife sprite[temp].pal 14 { globalsound CY_FLYBY set LOTAGSAVED 9 }
    ife sprite[temp].pal 15 set LOTAGSAVED 7
    ife sprite[temp].pal 16 set LOTAGSAVED 10
    ife sprite[temp].pal 17 set LOTAGSAVED 12
    getav[temp].EXTRASAVED temp3
    ife temp3 1
        {
        ife sprite[].picnum AMCSHIP2 screensound AMCSHIP2_FLYBY
        else screensound AMCSHIP_FLYBY
        }
break
case GROUNDEXPLOSION
	state explosion_shake
	shoot SPARK
	shoot SPARK
	shoot SPARK
	shoot SPARK
     flash
break
// items
case GOLD_SPELL1
case SPELL1
case SPELL2
case 22610
case GOLD_SPELL2
case SPELL8
case SPELL9
case SPELL7
case BRUISERFIREBALL
case BRUISERFEXPLOSION
case RUBYBLAST_EX
case REDM_BLAST
case BLOOD_BLAST
case KAG_BLAST_RIGHT
case KAG_BLAST_LEFT
case ICE_BLAST
case THUND_BLAST
case FLAME_BLAST
case ACID_EXPLOSION
case ENERGY_EXPLOSION
case NUCLEAR_EXPLOSION
case BOLT_EXPLOSION
case MPLASMA
case MDF_PLASMA
case 5372
case PRIEST_BLAST
case MINE_DART
case IN_MINE_DART
case 9376
case MICRO_MISSILE
case HOMING_MISSILE
case MISSILE
case GORO_FLAME
case 7526
case 12712
case 12717
case PETRIFYRAY
case 5394
case PLASMAPROJ
case GREEN_ARCH_BOLT
case RED_ARCH_BOLT
case VOID_ARCH_BOLT
case VOID_PLAYER_BOLT
case 27364
case 27365
case 27366
    seta[].blend 255
    seta[].shade -127
break
case 22442
    seta[].blend 255
    seta[].shade -127
	state model_pitch
break
case QUIETUS_BLAST
	spawn PROJECTILE_FLARE
    seta[].blend 255
    seta[].shade -127
break
case VOID_BOLT
    seta[].blend 255
    seta[].shade -127
break
case FRAMEEFFECT1
    state KEEPMYPAL
    ifspawnedby TROLLFIREWALL nullop else
	ifspawnedby 29076 nullop else
	ifspawnedby 14970 nullop else
	ifspawnedby 3789 nullop else
	ifspawnedby 3790 nullop else
    {
    seta[].blend 255
    seta[].shade -127
    }
break
case SPARK
case SPARK2
    ife INVASION 1 sizeat 0 0
	ifspawnedby ENERGY_EXPLOSION set param 1
	else ifspawnedby 12722 set param 1
	else set param 0
	ife param 1
		{
		geta[].z temp
		add temp 8192
		seta[].z temp
		}
    seta[].cstat 514
    seta[].blend 255
    randvar temp 2048
    seta[].ang temp
    randvar temp -4096
    seta[].zvel temp
    set temp 0
    seta[].yvel 0
    seta[].shade -90
break
case HEAT_SINK
    geta[].z temp
    add temp 1120
    seta[].z temp
    seta[].shade -127
break
case SWOODSCRAP
case WOODSCRAP
case ICE_DEBRIS
case ROCKDEB_1
case ROCKDEB_3
case ROCKDEB_4
case SROCKDEB_4
case SLIMEPROJ
case CLUSTER_BOMB
case CLUSTER_BOMB2
    randvar temp 2048
    seta[].ang temp
    randvar temp -4096
    seta[].zvel temp
    seta[].yvel 0
    setthisprojectile[].pal sector[].floorpal
case ROCKDEB_2
    randvar temp 2048
    seta[].ang temp
    randvar temp 4096
    ifrnd 128 mulvar temp -1
    seta[].zvel temp
    seta[].yvel 0
break
case WATERDRIP
    ifspritepal 0
        {
        ifspawnedby 3555 spritepal 10
        ifspawnedby 3327 spritepal 10
        ifspawnedby 20084 spritepal 10
        ifspawnedby 20085 spritepal 10
        ifspawnedby 20087 spritepal 10
        ifspawnedby 20088 spritepal 10
        ifspawnedby 2284 spritepal 10
        }
break
case NINEMM_SHELL
case RIFLESHELL
case SRIFLESHELL
case SHELL_LINK
case REVOLV_SHELL
case TWENTY_SHELL
    state animate_sprite_event
    move FORWARD
    randvar temp 512
    seta[].zvel temp
    geta[].ang temp
    sub temp -412
    randvar temp2 128
    add temp temp2
    seta[].ang temp
    geta[].owner temp8
        set temp3 sprite[temp8].x
        add temp3 256
        geta[temp8].ang temp4
        ifactor SRIFLESHELL add temp4 160 else
        ifactor RIFLESHELL add temp4 160 else
        ifactor SHELL_LINK add temp4 160 else
        ifspawnedby APLAYER
            {
            ife cur_weap 1
                {
                ife CHAR 0 add temp4 140 else
                ife CHAR 5 add temp4 140 else
                ife CHAR 7 add temp4 140 else
                ife CHAR 6 add temp4 140
                else add temp4 128
                }
            else ife cur_weap 3
                {
                ife CHAR 5 add temp4 140
                else add temp4 128
                }
            else add temp4 128
            }
        else add temp4 128
        rotatepoint sprite[temp8].x sprite[temp8].y temp3 sprite[temp8].y temp4 temp5 temp6
        seta[].x temp5
        seta[].y temp6
        geta[temp8].z temp
        sub temp 8096
        ifspawnedby APLAYER
            {
            getp[].horiz temp2
            sub temp2 100
            mulvar temp2 16
            sub temp temp2
            }
        seta[].z temp
break
case 13780
    move FORWARD
    state animate_sprite_event
    randvar temp 512
    seta[].zvel temp
    geta[].ang temp
    sub temp 512
    randvar temp2 -128
    add temp temp2
    seta[].ang temp
    geta[].owner temp8
        set temp3 sprite[temp8].x
        add temp3 256
        geta[temp8].ang temp4
        add temp4 -128
        rotatepoint sprite[temp8].x sprite[temp8].y temp3 sprite[temp8].y temp4 temp5 temp6
        seta[].x temp5
        seta[].y temp6
        geta[temp8].z temp
        sub temp 8096
        ifspawnedby APLAYER
            {
            getp[].horiz temp2
            sub temp2 100
            mulvar temp2 14
            sub temp temp2
            }
        seta[].z temp
break
case SHELL_40MM
    move FORWARD
    geta[].owner temp8
        set temp3 sprite[temp8].x
        add temp3 256
        geta[temp8].ang temp4
        add temp4 140
        rotatepoint sprite[temp8].x sprite[temp8].y temp3 sprite[temp8].y temp4 temp5 temp6
        seta[].x temp5
        seta[].y temp6
        geta[temp8].z temp
        sub temp 8096
        ifspawnedby APLAYER
            {
            getp[].horiz temp2
            sub temp2 100
            mulvar temp2 14
            sub temp temp2
            }
        seta[].z temp
break
case 3761
case EXSHELL
case FL_SHELL
case MAGN_SHELL
    state animate_sprite_event
    move FORWARD
    geta[].ang temp
    sub temp -412
    randvar temp2 128
    add temp temp2
    seta[].ang temp
    geta[].owner temp8
        set temp3 sprite[temp8].x
        add temp3 256
        geta[temp8].ang temp4
        ifspawnedby APLAYER
         ife cur_weap 0
          ife temp_weap 7
           add temp4 200 else
        add temp4 140
        rotatepoint sprite[temp8].x sprite[temp8].y temp3 sprite[temp8].y temp4 temp5 temp6
        seta[].x temp5
        seta[].y temp6
        geta[temp8].z temp
        sub temp 8096
        ifspawnedby APLAYER
            {
            getp[].horiz temp2
            sub temp2 100
            mulvar temp2 14
            sub temp temp2
            }
        seta[].z temp
break
case OGRE_STAFF_DROP
case OGRE_MACE_DROP
case ORC_SWORD_DROP
    randvar temp 2048
    seta[].ang temp
break
case METAL_RING
case POTTERY_DEBRIS1
case POTTERY_DEBRIS2
    state KEEPMYPAL
    randvar temp 2048
    seta[].ang temp
    randvar temp -4096
    seta[].zvel temp
break
case NJIB
case NJIB2
case NJIB3
case NJIB4
case OCTA_TENT
case 11426
case 11431
case 4714
case CAR_DOOR
case CAR_WHEEL
    randvar temp 2048
    seta[].ang temp
    randvar temp -4000
    seta[].zvel temp
break
case PISTOLMAGAZINE
case HEAVY_PISTOL_MAG
case SMGMAGAZINE
case SMG_MAG2
case 3790
    geta[].z temp
    add temp 1120
    seta[].z temp
break
case RIFLEMAGAZINE
case SCIFI_SMG_MAG
case DRUMMAGAZINE
case SHOTGUNBOXMAGAZINE
case BETA_MAG
case BIG_RIFLE_MAG
case SCIFI_BIG_MAG
case NAILG_MAG
case CROSSB_MAG
    geta[].z temp
    add temp 2020
    seta[].z temp
break
case WATERSPLASH2
  seta[].blend 255
  cstator 2
  ifinwater
   {
   ife sector[].ceilingpicnum FLOORPLASMA seta[].pal 2 else
   ife sector[].ceilingpicnum 5795 seta[].pal 11 else
   ife sector[].ceilingpicnum PURPLELAVA { seta[].pal 18 spawn LAVABUBBLE } else
   ife sector[].ceilingpicnum 773 seta[].pal 13
   ife sector[].ceilingpicnum 7387 seta[].pal 14
   ife sector[].ceilingpicnum 7396 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].ceilingpicnum 10030 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].ceilingpicnum 10033 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].ceilingpicnum 10047 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].ceilingpicnum 17052 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].ceilingpicnum 10526 { spawn LAVASPLASH cactor 3833 }
    }
    else
    {
   ife sector[].floorpicnum FLOORPLASMA { espawn LAVASPLASH seta[RETURN].pal 2 sound LAVA_HIT cactor 3833 } else
   ife sector[].floorpicnum PURPLELAVA seta[].pal 18 else
   ife sector[].floorpicnum 773 seta[].pal 13 else
   ife sector[].floorpicnum 19564 seta[].pal 10 else
   ife sector[].floorpicnum 7396 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].floorpicnum 10030 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].floorpicnum 10033 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].floorpicnum 10047 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].floorpicnum 17052 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
   ife sector[].floorpicnum 10526 { spawn LAVASPLASH sound LAVA_HIT cactor 3833 } else
     {
    ife sector[].floorpicnum 5795 seta[].pal 11
    ife sector[].floorpicnum 7387 seta[].pal 14
    espawn 8435
    geta[RETURN].sectnum temp
    geta[RETURN].x temp2
    geta[RETURN].y temp3
    getflorzofslope temp temp2 temp3 temp4
    seta[RETURN].z temp4
    seta[RETURN].pal sprite[].pal
     }
   }
   break
 case BULLETHOLE
 case TRIPBOMB
    seta[].mdflags 16
  break
 case FIRELASER
  geta[].owner myowner
  seta[].mdflags 16
  seta[].blend 255
  ifspawnedby LIZTROOP
  ife sprite[myowner].pal 10
  {
    seta[].pal 24
    addstrength FIRELASER_WEAPON_STRENGTH
    addstrength FIRELASER_WEAPON_STRENGTH
  }
  ife sprite[myowner].pal 20
  {
    seta[].pal 24
    addstrength FIRELASER_WEAPON_STRENGTH
    addstrength FIRELASER_WEAPON_STRENGTH
  }
   break
 case HEAVYHBOMB
  seta[].mdflags 16
    ifspawnedby APLAYER
    {
    geta[].owner myowner
    getav[myowner].P_CHAR temp
    ife temp 0 { set SHOOTGRENADE myowner cactor 3833 }
    ife temp 1 { set SHOOTGRENADE myowner cactor 3833 }
    ife temp 2 { set SHOOTHOLYG myowner cactor 3833 }
    ife temp 3 { set SHOOTGRENADE myowner cactor 3833 }
    ife temp 4 { set SHOOTDYNAMITE myowner cactor 3833 }
    ife temp 5 { set SHOOTDYNAMITE myowner cactor 3833 }
    ife temp 6 { set SHOOTDISCBOMB myowner cactor 3833 }
    ife temp 7 { set SHOOTGRENADE myowner cactor 3833 }
    ife temp 9 { set SHOOTDYNAMITE myowner cactor 3833 }
    ife temp 10 { set SHOOTGRENADE myowner cactor 3833 }
    ife temp 11 { set SHOOTHOLYG myowner cactor 3833 }
    ife temp 12 { set SHOOTCLUSTER myowner cactor 3833 }
    ife temp 13 { set SHOOTGRENADE myowner cactor 3833 }
    ife temp 14 { set SHOOTGRENADE myowner cactor 3833 }
    ife temp 17 { set SHOOTGRENADE myowner cactor 3833 }
    }
    break
 case RPG
   ifspawnedby APLAYER
   {
   ife CHAR 1
        {
        ife cur_weap 7
         ife SPECIALIST_EQUIPMENT[52] 2
          {
          sizeat 7 7
          }
          else
          {
        action SONICRPG
        addstrength 40
        ife cur_weap 7 sizeat 7 7 else sizeat 14 14
            }
        }
        else
   ife CHAR 3 { action MISSILERPG addstrength 20 sizeat 10 10 randvar temp2 256 randvar temp3 8 state CHANGEACCURACY } else
   ife CHAR 5 addstrength 20
   }
   ifspawnedby CYBERDEMON addstrength 60
   ifspawnedby ROTATEGUN addstrength -40
   ifspawnedby BOSS3
    {
    geta[].owner temp
    geta[temp].pal temp2
    ifn temp2 0
        {
        addstrength -100
        geta[].z temp
        add temp 3000
        seta[].z temp
        }
    }
    ifspawnedby COMMANDER
    {
    geta[].owner temp
    geta[temp].pal temp2
    ife temp2 20
        {
        soundonce SONICC
        action SONICRPG
        }
    else
        {
        action DARKRPG
        }
    }
    ifspawnedby SECTOREFFECTOR
    {
    sound BOS1_ATTACK2
    action DARKRPG
    }
    break
case 7160
case 7163
    ifspawnedby APLAYER
        {
        ife CHAR 4 ife cur_weap 2 addstrength -175
        }
    seta[].blend 255
    seta[].shade -127
break
 case EGG
  state KEEPMYPAL
  seta[].xrepeat 40
  seta[].yrepeat 40
   break
 case SVEDR
 case DRONE
 case PIGCOP
 case PIGCOPSTAYPUT
 case PIGCOPDIVE
 case PIG_SF
 case PIG_SF_STAYPUT
 case COMMANDER
 case COMMANDERSTAYPUT
 case ADV_COMMANDER
 case ADV_COMMANDER_STAYPUT
 case LIZMAN
 case LIZMANSTAYPUT
 case LIZMANSPITTING
 case LIZMANJUMP
 case OCTABRAIN
 case OCTABRAINSTAYPUT
 case HEADJIB1
 case ARMJIB1
 case KEY_CARD
 case ACCESSCARD2
 case LEGJIB1
  case LIZMANHEAD1
  case LIZMANHEAD3
  case 2214 // head on floor
  case LIZMANARM1
  case LIZMANLEG1
  case SATYR_HEAD
  case SATYR_HEAD_FLOOR
  case ORC_HEAD
  case ORC_HEAD_FLOOR
  case ARCHER_HEAD
  case ARCHER_HEAD_FLOOR
  case MJ12_HEAD
  case MJ12_HEAD_FLOOR
  case GORO_HEAD_FLY
  case FLAMEC_HEAD
  case FLAMEC_HEAD_FLOOR
  case HMGC_HEAD
  case HMGC_HEAD_FLOOR
  case SHAMBLER
  case PIG_HEAD
  case PIG_HEAD_FLOOR
   state KEEPMYPAL
  break
 case LIZTROOP
 case LIZTROOPRUNNING
 case LIZTROOPSTAYPUT
 case LIZTROOPJETPACK
 case LIZTROOPDUCKING
 case LIZTROOPSHOOT
  geta[].owner temp
  ifn temp -1
  {
    ife sprite[temp].pal 0 seta[].pal 11 else
    seta[].pal sprite[temp].pal
  }
  break
 case NEWBEAST
 case NEWBEASTSTAYPUT
 case NEWBEASTJUMP
 case NEWBEASTHANG
 case NEWBEASTHANGDEAD
  geta[].owner temp
  ifn temp -1
  {
    ife sprite[temp].pal 0 seta[].pal 15 else
    seta[].pal sprite[temp].pal
  }
  break
 case CULT_CHAINSAW
	state KEEPMYPAL
	break
 case CULTIST
 case CULTISTSTAYPUT
 case CULTISTJUMP
  geta[].owner temp
  ifn temp -1
  {
    seta[].xrepeat 28
    seta[].yrepeat 28
    ife sprite[temp].pal 0 seta[].pal 15 else
    seta[].pal sprite[temp].pal
  }
  break
  case TRIAD
  case TRIADSTAYPUT
  case TRIADJUMP
    state KEEPMYPAL
    seta[].xrepeat 28
    seta[].yrepeat 28
  break
  case ZSCIEN
  case ZCHAING
  case ZSOLDIER
  case ZSOLDIER2
  case Z_GRENADEL
   state KEEPMYPAL
  break
  case MINERVA
   globalsound CSPELL
   spawn 8433
  break
  case NINJA
  case NINJASTAYPUT
  case NINJAJUMP
  case RIPPER
  case GUARDIAN
  case GUARDIANSTAYPUT
  case MAMANO
  case YUKI_ONNA
      state KEEPMYPAL
      geta[].owner temp
      ifn temp -1
      {
        ifn sprite[temp].pal 3
            {
            globalsound TELEPORT_IN
            spawn 18623
            }
      }
  break
   case LESANG
      state KEEPMYPAL
      geta[].owner temp
      ifn temp -1
      {
        globalsound SIREN_TELEP
        spawn 18623
      }
  break
  case PE_TROOP
  case PE_TROOP_STAYPUT
  case PE_SHOTGUNNER
  case PE_SHOTGUNNER_STAYPUT
  case PE_ELDER
  case PE_ELDER_STAYPUT
      state KEEPMYPAL
      geta[].owner temp
      ifn temp -1
      {
        ifn sprite[temp].pal 3
            {
            soundonce BLOOD_EXPLOSION
            spawn BIG_BLOOD_EXE
            ifrnd 128 spawn 10644 else spawn 10643
            }
      }
  break
  case THOTH
  case THOTH_STAYPUT
  case ANUBIS_MUMMY
  case ANUBIS_MUMMY_STAYPUT
  case SIREN
  case ALUDRAN
  case ALUDRAN_STAYPUT
  case SCORPIONESS
  case SCORPIONESS_STAYPUT
  case COBRA
  case COBRA_STAYPUT
    state KEEPMYPAL
    globalsound LESANG_AID
    espawn SKULLEXPLOSION
    seta[RETURN].pal 1
    break
  case SATYR
  case SATYR_STAYPUT
  case SHADE
  case SHADESTAYPUT
  case INFERNAL
  case INFERNAL_STAYPUT
  case FLESHWIZARD
  case FLESHWIZARDSTAYPUT
  case BRUISER
  case BRUISERSTAYPUT
  case CYBERDEMON
  case SCARAB_DEMON
  case MAEPHISTO
  case CYBERTOUR
  case CYBERTOURSTAYPUT
  state KEEPMYPAL
  geta[].owner temp
  ifn temp -1
  {
    ife sprite[temp].pal 0 globalsound DEMON_TELEPORT
    ifactor BRUISER ife sprite[temp].pal 3 globalsound DEMON_TELEPORT
  }
  break
  case HADESPHERE
  case HADESPHERESTAYPUT
  state KEEPMYPAL
  geta[].owner temp
  ifn temp -1
  {
    spawn PENTAGRAM
    ife sprite[temp].pal 0 globalsound DEMON_TELEPORT
  }
  break
  case ZOMBIE
  state KEEPMYPAL
  break
  case JIBS2
  case JIBS3
  case JIBS4
  case JIBS5
    ifspawnedby SORCERER spritepal 1
    ifspawnedby DARKAVATAR spritepal 1
    ifspawnedby ANUBIS_MUMMY spritepal 5
    ifspawnedby COBRA spritepal 8
    ifspawnedby NEWBEAST spritepal 8
    ifspawnedby 4705 spritepal 27
    ifspawnedby PE_SENTRY sizeat 0 0
	ifspawnedby SENTRY sizeat 0 0
	ifspawnedby SPIDER2 spritepal 8
    break
  case JIBS6
    sizeat 20 20
    geta[].owner temp
    ifn temp -1 { getav[temp].fire_damage temp2 ifg temp2 0 sizeat 0 0 }
    ifspawnedby SORCERER spritepal 1
    ifspawnedby FR_SORCERER spritepal 1
    ifspawnedby DARKAVATAR spritepal 1
    ifspawnedby ANUBIS_MUMMY spritepal 5
    ifspawnedby COBRA spritepal 8
    ifspawnedby NEWBEAST spritepal 8
    ifspawnedby 4705 spritepal 27
    ifspawnedby PE_SENTRY sizeat 0 0
	ifspawnedby SENTRY sizeat 0 0
	ifspawnedby SPIDER2 spritepal 8
    break
endswitch

ifactor TRANSPORTERSTAR
{
ifspawnedby RESPAWN
    {
    geta[].owner temp4
    switch sprite[temp4].hitag
    case SATYR
    case SATYR_STAYPUT
    case FLESHWIZARD
    case FLESHWIZARDSTAYPUT
    case SHADE
    case SHADESTAYPUT
    case INFERNAL
    case INFERNAL_STAYPUT
    case BRUISER
    case BRUISERSTAYPUT
    case CYBERTOUR
    case CYBERTOURSTAYPUT
    case MAEPHISTO
    case 7492 // Shade dummy
        spawn BURNING2
        espawn PENTAGRAM
        seta[RETURN].ang sprite[].ang
        break
    case 8576
    case CULTIST
    case CULTISTSTAYPUT
    case WATERBUBBLE
    case 7677
    case VLADMIR
    case RIPPERJUMP
    case RIPPER
    case MAMANOJUMP
    case MAMANO
    case BEYONDER
        seta[].xrepeat 1
        seta[].yrepeat 1
        break
    default
        break
    endswitch
    }
}

endevent

eventloadactor RESPAWN
ifg sprite[].extra 0 geta[].extra EXTRASAVED
enda

eventloadactor MUSICANDSFX
ifg sprite[].extra 0 geta[].extra EXTRASAVED
ifn sprite[].xvel 0 { geta[].xvel XVELSAVED seta[].xvel 0 }
ife sprite[].hitag -32768 seta[].hitag 32767
ifg sprite[].hitag 32767 seta[].hitag 32767
ifge sprite[].lotag 1000 seta[].lotag 0
enda

eventloadactor CYCLER
ife opt_photosensitivity_mode 1 sets[].extra 1 // effectively disables it
enda

spritenopal SECTOREFFECTOR

eventloadactor SECTOREFFECTOR
// geta[].lotag LOTAGSAVED
geta[].hitag HITAGSAVED
geta[].xvel XVELSAVED
geta[].yvel YVELSAVED
geta[].zvel ZVELSAVED
geta[].cstat CSTATSAVED
geta[].xrepeat XREPEAT_SAVED
geta[].yrepeat YREPEAT_SAVED
seta[].zvel 0
ifg sprite[].extra 0 geta[].extra EXTRASAVED
geta[].pal PALSAVED
geta[].z initz
ifg sprite[].owner 0 geta[].owner OWNERSAVED
seta[].owner -1
ife sprite[].lotag 4 ife EXTRASAVED 1 getsector[].floorshade SHADESAVED

ife opt_photosensitivity_mode 1
    {
    ife sprite[].lotag 4 seta[].lotag 999
    ife sprite[].lotag 3 seta[].lotag 999
    }

ife sprite[].lotag 80
{
    set temp7 0
    whilevarvarn temp7 numsectors
    {
    // CHECK FLOORS
        gets[temp7].floorpicnum temp2
        ife temp2 178 sets[temp7].floorpicnum 179
    // CHECK CEILINGS
        gets[temp7].ceilingpicnum temp2
        ife temp2 178 sets[temp7].ceilingpicnum 179
      add temp7 1
    }
    set temp8 0
    whilevarvarn temp8 NUMWALLS
    {
    // CHECK WALLS
        ife wall[temp8].picnum 178 setwall[temp8].picnum 179
        ife wall[temp8].overpicnum 178 setwall[temp8].overpicnum 179
    add temp8 1
    }
}

enda

eventloadactor GPSPEED
geta[].lotag LOTAGSAVED
geta[].hitag HITAGSAVED
geta[].xvel XVELSAVED
ifg sprite[].extra 0 geta[].extra EXTRASAVED
enda

defstate SEHUBSTATE

ife WAIT YES // wait for the player to leave the sector before re-activating
break

// don't change maps if this map just loaded
// this avoids problem caused by scroll lock being placed in a map changing sector
ifl player[].player_par 4
break

// don't change maps if the player is at the edge of the sector
// this avoids problem of the player going back and forth between maps with slight movement
getp[].posx xoff
getp[].posy yoff
add xoff 128
add yoff 128
getp[].cursectnum upd_sect
updatesector xoff yoff upd_sect
ifvarvarn player[].cursectnum upd_sect break
sub xoff 256
updatesector xoff yoff upd_sect
ifvarvarn player[].cursectnum upd_sect break
sub yoff 256
updatesector xoff yoff upd_sect
ifvarvarn player[].cursectnum upd_sect break
add xoff 256
updatesector xoff yoff upd_sect
ifvarvarn player[].cursectnum upd_sect break

ife sprite[].shade 10
{
    set xoff 0
    set yoff 0
    set zoff 0
}
else
{
    geta[].x temp
    getp[].posx xoff
    sub xoff temp
    geta[].y temp
    getp[].posy yoff
    sub yoff temp
    geta[].z temp
    getp[].posz zoff
    add zoff 8192
    sub zoff temp
    ife EXTRASAVED 1 { set xoff 0 set yoff 0 set zoff 0 }
}


set pdestination HITAGSAVED
geta[].pal level_temp
set playerwait 2

        ife loading 0 set loading 30

        setarray Player_equip[43] temp_weap // Temp weapon
        getp[].ammo_amount 0 temp
        setarray Player_equip[1] temp
        getp[].gotweapon 1 temp // Pistol
        setarray Player_equip[2] temp
        getp[].ammo_amount 1 temp
        setarray Player_equip[3] temp
        getp[].gotweapon 2 temp // Shotgun
        setarray Player_equip[4] temp
        getp[].ammo_amount 2 temp
        setarray Player_equip[5] temp
        getp[].gotweapon 3 temp // Shotgun
        setarray Player_equip[6] temp
        getp[].ammo_amount 3 temp // Chaingun
        setarray Player_equip[7] temp
        getp[].gotweapon 4 temp // RPG
        setarray Player_equip[8] temp
        getp[].ammo_amount 4 temp
        setarray Player_equip[9] temp
        getp[].ammo_amount 5 temp // Pipebomb
        setarray Player_equip[10] temp
        getp[].gotweapon 6 temp // Shrinker
        setarray Player_equip[11] temp
        getp[].ammo_amount 6 temp
        setarray Player_equip[12] temp
        getp[].gotweapon 7 temp // Devistator
        setarray Player_equip[13] temp
        getp[].ammo_amount 7 temp
        setarray Player_equip[14] temp
        getp[].ammo_amount 8 temp // Tripbomb
        setarray Player_equip[15] temp
        getp[].gotweapon 9 temp // Freezer
        setarray Player_equip[16] temp
        getp[].ammo_amount 9 temp
        setarray Player_equip[17] temp
        getp[].gotweapon 11 temp // Expander
        setarray Player_equip[18] temp
        getp[].ammo_amount 11 temp
        setarray Player_equip[19] temp
        setarray Player_equip[20] PHEALTH
        setarray Player_equip[21] pmax_health
        setarray Player_equip[22] PARMOUR

        setarray Player_equip[23] P_SPIRIT_ARMOUR

        ife CHAR 0 setarray Player_equip[24] JAMES_UPGRADE
        ife CHAR 1 setarray Player_equip[24] ZAXTOR_UPGRADE
        ife CHAR 2 setarray Player_equip[24] MERLIJN_UPGRADE
        ife CHAR 3 setarray Player_equip[24] HIGHWIRE_UPGRADE
        ife CHAR 4 setarray Player_equip[24] SANG_UPGRADE
        ife CHAR 5 setarray Player_equip[24] RUSTY_UPGRADE
        ife CHAR 6 setarray Player_equip[24] GEOFFREY_UPGRADE
        ife CHAR 7 setarray Player_equip[24] MIKKO_UPGRADE
        ife CHAR 13 setarray Player_equip[24] MICKY_UPGRADE
        ife CHAR 14 setarray Player_equip[24] SNOWFALL_UPGRADE
		ife CHAR 17 setarray Player_equip[24] KAGURA_UPGRADE

        setarray Player_equip[25] gun_firemode
        setarray Player_equip[26] guns_akimbo
        setarray Player_equip[27] GOT_EXPLOSIVE
        setarray Player_equip[28] AIR_FILTER
        setarray Player_equip[29] PISTOLMAG
        setarray Player_equip[30] MGUNMAG
        setarray Player_equip[31] RUNEKEYS
        setarray Player_equip[32] ACCESSKEY2
        setarray Player_equip[33] PLUGKEY
        setarray Player_equip[34] HELLGKEYS
        setarray Player_equip[35] OLDKEYS

        getp[].boot_amount temp
        setarray Player_equip[36] temp
        getp[].heat_amount temp
        setarray Player_equip[37] temp
        getp[].holoduke_amount temp
        setarray Player_equip[38] temp
        getp[].jetpack_amount temp
        setarray Player_equip[39] temp
        getp[].scuba_amount temp
        setarray Player_equip[40] temp
        getp[].firstaid_amount temp
        setarray Player_equip[41] temp
        getp[].steroids_amount temp
        setarray Player_equip[42] temp
        getp[].got_access temp
        setarray Player_equip[44] temp

        setarray Player_equip[45] GENERIC_KEYS
        setarray Player_equip[46] silver_ammo
        setarray Player_equip[47] explosive_shells
        setarray Player_equip[48] FIRE_SUIT
        setarray Player_equip[49] GAS_MASK
        setarray Player_equip[50] tesla_ammo
        setarray Player_equip[51] SCARABKEYS
        setarray Player_equip[52] COGS
        setarray Player_equip[53] P_FIRE_ARMOUR
        setarray Player_equip[54] TOOLBOX
        setarray Player_equip[55] flechete_shells
        setarray Player_equip[56] silver_bolts
        setarray Player_equip[57] NORMAL_KEYS
        setarray Player_equip[58] micro_torpedo
        setarray Player_equip[59] magnum_shells
        setarray Player_equip[60] heat_seek_card
        setarray Player_equip[61] atomic_bomb
        setarray Player_equip[62] DUP_missile_ammo
        setarray Player_equip[63] SW_KEYS
        setarray Player_equip[64] fortymm_grenades
        setarray Player_equip[65] fortymm_shells
        setarray Player_equip[66] fortymm_MIA_shells
        setarray Player_equip[67] fortymm_plasma
        setarray Player_equip[68] fortymm_caseless
        setarray Player_equip[69] fortymm_electro
        setarray Player_equip[70] fortymm_slug
        setarray Player_equip[71] fortymm_cryo
        setarray Player_equip[72] ROPE
        setarray Player_equip[73] EGYPT_KEYS
        setarray Player_equip[74] EGYPT_ARTIFACTS
        setarray Player_equip[75] dragon_shells
        setarray Player_equip[76] GOT_KNIFE
        setarray Player_equip[77] riot_shield
        setarray Player_equip[78] incend_ammo

        setarray Player_equip[80] AMMO_TYPES[0]
        setarray Player_equip[81] AMMO_TYPES[1]
        setarray Player_equip[82] AMMO_TYPES[2]
        setarray Player_equip[83] AMMO_TYPES[3]
        setarray Player_equip[84] AMMO_TYPES[4]
        setarray Player_equip[85] AMMO_TYPES[5]
        setarray Player_equip[86] AMMO_TYPES[6]
        setarray Player_equip[87] AMMO_TYPES[7]
        setarray Player_equip[88] AMMO_TYPES[8]
        setarray Player_equip[89] AMMO_TYPES[9]
        setarray Player_equip[90] AMMO_TYPES[10]
        setarray Player_equip[91] AMMO_TYPES[11]
        setarray Player_equip[92] AMMO_TYPES[12]
        setarray Player_equip[93] AMMO_TYPES[13]
        setarray Player_equip[94] AMMO_TYPES[14]
        setarray Player_equip[95] AMMO_TYPES[15]
        setarray Player_equip[97] SWIPECARDS
        setarray Player_equip[98] GOT_FIREWALL
        setarray Player_equip[99] GOT_FLIPPER

        setarray Player_equip[100] temp_wep_mag

        setarray Player_equip[102] SHOTGUNMAG
        setarray Player_equip[103] SHOTGUNBOXMAG

        setarray Player_equip[105] ROCKETMAG
        setarray Player_equip[106] slot6_mag
        setarray Player_equip[107] SLUGSHOTMAG
        setarray Player_equip[108] rifle_mag
        setarray Player_equip[109] MACHINE_MAG
        setarray Player_equip[111] ALTMAG

        setarray Player_equip[119] player[].curr_weapon
        setarray Player_equip[121] player[].actors_killed
		setarray Player_equip[122] booster_amount

        setarray secret_count[LEVEL] player[].secret_rooms

state save_arrays
set loading_hint 0
savemapstate

ifl loading 20
{
    // allow overriding of the VOLUME via XVELSAVED to make testing via autosave_playtest less annoying (it will always have VOLUME 0 otherwise and take you to the wrong map)
    // but don't overwrite the value of VOLUME with XVELSAVED cause who knows how much that will break (if we can even do that?)
    ifn XVELSAVED 0
        startlevel XVELSAVED level_temp
    else
        startlevel VOLUME level_temp
}

ends

eventloadactor DOMELITE
ife sprite[].extra 0
    {
    espawn 18427
    ifand sprite[].cstat 8 nullop else
        {
        geta[].sectnum temp3
        seta[RETURN].z sector[temp3].ceilingz
        }
    geta[].pal temp4
    ife temp4 0 seta[RETURN].pal 2
    else seta[RETURN].pal temp4
    setactorvar[RETURN].myowner THISACTOR
    }
enda

onevent EVENT_WORLD
ife opt_photosensitivity_mode 1
    {
    settiledata[1280].animtype 0
    settiledata[3370].animtype 0
    settiledata[3375].animtype 0
    settiledata[7404].animtype 0
    settiledata[9491].animtype 0
    settiledata[9493].animtype 0
    settiledata[9495].animtype 0
    settiledata[9497].animtype 0
    settiledata[9499].animtype 0
    settiledata[9529].animtype 0
    settiledata[9603].animspeed 8
    settiledata[10615].animtype 0
    settiledata[10616].animtype 0
    settiledata[10625].animtype 0
    settiledata[10870].animtype 0
    settiledata[11258].animspeed 8
    settiledata[11768].animtype 0
    settiledata[11772].animtype 0
    settiledata[15331].animtype 0
    settiledata[18156].animtype 0
    settiledata[18432].animtype 0
    settiledata[19229].animtype 0
    settiledata[19312].animtype 0
    settiledata[19317].animtype 0
    settiledata[19411].animspeed 6
    settiledata[19604].animspeed 6
    settiledata[20298].animspeed 4
    settiledata[23742].animtype 0
    settiledata[25589].animtype 0
    }
ife INVASION 1
	{
	setprojectile[BLUELASERSHOT].trail -1
	}
	else
	{
	setprojectile[BLUELASERSHOT].trail 12902
	}
endevent

onevent EVENT_GAME
ife sprite[].mdflags 1 seta[].mdflags 17 else
seta[].mdflags 16
ifg energy_damage 0
{
	sub energy_damage 30
	clamp energy_damage 0 200
}

ifactor EGG ife opt_no_facehuggers YES killit
ifactor GREENSLIME
    {
    seta[].mdflags 16
    ife opt_no_facehuggers YES killit
    }

ife weather_type 2
    {
    geta[].zvel temp
    ifg temp 0 divvar temp 2
    seta[].zvel temp
    }
else
ife weather_type 3 // no gravity
{
    switch sprite[].picnum
        case FIRELASER
            break
        default
            geta[].zvel temp
            ifg temp 0 divvar temp 20
            seta[].zvel temp
            break
    endswitch
}
else
ifand sector[].ceilingstat 16384 // low gravity
{
    switch sprite[].picnum
        case FIRELASER
            break
        default
            geta[].zvel temp
            ifg temp 0 divvar temp 2
            seta[].zvel temp
            break
    endswitch
}
else
ifand sector[].ceilingstat 32768 // no gravity
{
    switch sprite[].picnum
        case FIRELASER
            break
        default
            geta[].zvel temp
            ifg temp 0 divvar temp 20
            seta[].zvel temp
            break
    endswitch
}

ifactor 2567
{
cstator 2
seta[].blend 255
}

ifactor FIFTY_CAL_TURRET
{
ifn HITAGSAVED 0
    {
    sleeptime 0
    checkactivatormotion HITAGSAVED
    ife RETURN 1
		{
		ifaction FIVE_ANG nullop else
			{
			action FIVE_ANG
			sound PES_DEAD
			setactorsoundpitch THISACTOR PES_DEAD 512
			soundonce FIFTY_T_BEEP
			stopsound AUTOTURRET_SCAN
			}
		}
    }
}
ife sprite[].statnum 1
    {
    ifg END_LEVEL 0 ifg sprite[].extra 0 sleeptime 32767
    /* floor reflection code, left in but not working because I am bad into math
    ifactor 4733 break
    gets[].extra temp2
        ife temp2 128
            {
            ife sprite[].cstat 32768 nullop else
                {
                ifn temp9 5
                    {
                    espawn 4733
                    seta[RETURN].owner THISACTOR
                    setactorvar[RETURN].myowner THISACTOR
                    set temp9 5
                    }
                }
            }
        */
		// this makes any flipped enemy instantly stick to the ceiling
        ifand sprite[].cstat 8
        ifg sprite[].extra 0
        {
        ifactor GREENSLIME nullop
		else ifactor ROTATEGUN nullop
		else ifactor AUTO_TURRET nullop
		else ifactor SHARK nullop
		else ifactor BLOOD nullop
		else ifactor SPIDER2 nullop // spider will handle this itself
		else
            {
            gets[].ceilingz temp
            add temp 11000
            seta[].z temp
            }
        }
     }

ifvarvare MELEE_LOCKED_ON THISACTOR
    {
    ifl UPPER_CUT 20
        {
        seta[].xvel 0
        }
    }

ife opt_random_enemy YES
 ife VOLUME 0
  ife LEVEL 7
{
    set global_faction 1
    ifactor LIZTROOP
    {
        ifai 0
            {
            rand temp 90
            ifl temp 10 cactor CULTIST
            else ifl temp 20 cactor ZSCIEN
            else ifl temp 30 cactor SHADE
            else ifl temp 40 cactor TRIAD
            else ifl temp 50 cactor ZSOLDIER
            else ifl temp 60 cactor ZSOLDIER2
            else ifl temp 70 cactor PE_TROOP
            else ifl temp 80 cactor ORC
            }
    }

    ifactor PIGCOP
    {
        ifai 0
            {
            rand temp 85
            ifspritepal 13 cactor PIG_SF
            else ifl temp 10 { cactor CULTIST spritepal 10 }
            else ifl temp 20 cactor MERC
            else ifl temp 30 cactor INFERNAL
            else ifl temp 40 cactor SATYR
            else ifl temp 50 cactor PIGCOP_RIOT
            else ifl temp 60 { cactor GUARDIAN spritepal 11 }
            else ifl temp 70 cactor ARCHER
            else ifl temp 75 cactor PIG_SF
            }
    }

    ifactor PIGCOPSTAYPUT
    {
        ifai 0
            {
            ifrnd 64 { cactor TRIADSTAYPUT spritepal 16 }
            else ifrnd 64 { cactor CULTISTSTAYPUT spritepal 10 }
            else ifrnd 64 cactor MERCSTAYPUT
            else ifrnd 64 cactor MERC2STAYPUT
            else ifrnd 64 cactor ARCHER_STAYPUT
            }
    }


    ifactor PIGCOPDIVE
    {
        ifai 0
            {
            ifrnd 48 { cactor CULTIST spritepal 10 }
            else ifrnd 48 cactor MERC
            else ifrnd 48 cactor MERC2
            else ifrnd 48 cactor FASCIST
            else ifrnd 48 { cactor GUARDIAN spritepal 11 }
            else ifrnd 48 cactor SATYR
            }
    }

    ifactor LIZMAN
    {
        ifai 0
            {
            rand temp 125
            ifl temp 10 cactor ZCHAING
            else ifl temp 20 cactor CULT_HMG
            else ifl temp 30 cactor FASCIST
            else ifl temp 40 cactor NINJA
            else ifl temp 50 cactor MJ12_TROOP
            else ifl temp 60 cactor NAZI
            else ifl temp 75 { cactor TRIAD spritepal 49 }
            else ifl temp 80 { cactor CULTIST spritepal 49 }
            else ifl temp 95 { cactor FASCIST spritepal 24 }
            else ifl temp 100 { cactor ZCHAING spritepal 24 }
            else ifl temp 105 { cactor ZSOLDIER spritepal 24 }
            else ifl temp 110 { cactor ZSOLDIER2 spritepal 24 }
            else ifl temp 115 cactor ELITE_LIZMAN
            }
    }

    ifactor OCTABRAIN
    {
        ifai 0
            {
            ifrnd 63 cactor SORCERER
            else ifrnd 95 cactor HADESPHERE
            }
    }

    ifactor COMMANDER
    {
        ifai 0
            {
			ifspritepal 24 cactor ADV_COMMANDER
            ifrnd 47 cactor CYBERTOUR
            else ifrnd 47 cactor BRUISER
            else ifrnd 95 { cactor PITFIEND strength 350 }
            else ifrnd 47 cactor LPOWERSUIT
            }
    }

    ifactor NEWBEAST
    {
        ifai 0
            {
            ifrnd 63 cactor RIPPER
            else ifrnd 63 cactor BERSERKER
            else ifrnd 63 cactor OGRE
            else ifrnd 31 cactor MAMANO
            else ifrnd 32 cactor SPIRIT
            else ifrnd 16 cactor CHRYSSALID
            }
    }

    ifactor BATTLELORD
    {
        ifai 0
        {
            ifspritepal 0
            {
                ifrnd 15 { cactor HPOWERSUIT }
                else ifrnd 23 { cactor DARKAVATAR }
                else ifrnd 31 { cactor CYBERDEMON }
            }
            else
            {
                ifrnd 63 cactor MAEPHISTO
                else ifrnd 63 cactor SENTRY
                else ifrnd 63 { cactor MISTERH spritepal 41 }
            }
        }
    }

    ifactor BOSS2
    {
        ifai 0
        ifspritepal 0
            {
                ifrnd 15 { cactor HPOWERSUIT }
                else ifrnd 23 { cactor DARKAVATAR }
                else ifrnd 31 { cactor CYBERDEMON }
            }
    }

    ifactor BOSS3
    {
        ifai 0
        ifspritepal 0
            {
                ifrnd 15 { cactor HPOWERSUIT }
                else ifrnd 23 { cactor DARKAVATAR }
                else ifrnd 31 { cactor CYBERDEMON }
                else ifrnd 31 { cactor TROLL }
            }
    }

    ifactor BOSS4
    {
        ifai 0
        ifspritepal 0
            {
                ifrnd 15 { cactor HPOWERSUIT }
                else ifrnd 23 { cactor DARKAVATAR }
                else ifrnd 31 { cactor CYBERDEMON }
                else ifrnd 31 { cactor TROLL }
            }
    }

}

ifactor TRANSPORTERSTAR
{
ifspawnedby RESPAWN
    {
    geta[].owner temp
    geta[temp].hitag temp2
    switch temp2
    case SATYR
    case SATYR_STAYPUT
    case SHADE
    case SHADESTAYPUT
    case FLESHWIZARD
    case FLESHWIZARDSTAYPUT
    case BRUISER
    case BRUISERSTAYPUT
    case HADESPHERE
    case HADESPHERESTAYPUT
    case 8576
    case CULTIST
    case CULTISTSTAYPUT
    case AMCSHIP
    case AMCSHIP2
    case 15329
    case 8924
    case 8922
    case WATERBUBBLE
    case FIRE
    case FIRE2
    case BURNING
    case BURNING2
    case VLADMIR
    case ZOMBIE
    case 10510
    case 12267
    case 3665
        seta[].xrepeat 1
        seta[].yrepeat 1
        break
    default
        break
    endswitch
    }
}

ifactor CAMERA1
{
ifn sprite[].hitag 0 ifg sprite[].xrepeat 8 ifg sprite[].yrepeat 8 soundonce CAMERA_MOVE
ifg temp5 0
    {
    sub temp5 1
    ife PCAMERA 0 set PCAMERA 1
    ife EXTRASAVED 1
        {

        getinput[].horz temp
        ifg temp 0
        {
        getu .mouseflip temp2

        geta[].shade temp4
        ifl temp4 120
            {
            ife temp2 0 sub temp4 temp else
            add temp4 temp
            ifg temp4 120 set temp4 120
            seta[].shade temp4
            set temp9 1
            }
        }
        else
        ifl temp 0
        {
        getu .mouseflip temp2

        geta[].shade temp4
        ifg temp4 -120
            {
            ife temp2 0 sub temp4 temp else
            add temp4 temp
            ifl temp4 -120 set temp4 -120
            seta[].shade temp4
            set temp9 1
            }
        }
        else set temp9 0


        getinput[].avel temp
        geta[].ang temp4
        getinput[temp6].extbits temp7
        getinput[temp6].bits temp8
        ifn temp 0
            {
            add temp4 temp
            seta[].ang temp4
            set temp9 1
            }
        else set temp9 0

            ifand temp7 16
                {
                set temp9 1
                geta[].ang temp4
                sub temp4 16
                seta[].ang temp4
                }
            else
            ifand temp7 32
                {
                set temp9 1
                geta[].ang temp4
                add temp4 16
                seta[].ang temp4
                }
            else
            ifand temp8 8192
                {
                geta[].shade temp4
                ifl temp4 114
                    {
                    set temp9 1
                    add temp4 4
                    seta[].shade temp4
                    }
                }
            else
            ifand temp8 16384
                {
                geta[].shade temp4
                ifg temp4 -118
                    {
                    set temp9 1
                    sub temp4 4
                    seta[].shade temp4
                    }
                }
            else
            ifand temp8 8
                {
                geta[].shade temp4
                ifl temp4 114
                    {
                    set temp9 1
                    add temp4 4
                    seta[].shade temp4
                    }
                }
            else
            ifand temp8 16
                {
                geta[].shade temp4
                ifg temp4 -118
                    {
                    set temp9 1
                    sub temp4 4
                    seta[].shade temp4
                    }
                }
            else set temp9 0
            }
    ife temp9 0 stopactorsound THISACTOR CAMERA_MOVE
    else ife temp9 1 soundonce CAMERA_MOVE

    }
}

ifactor H_GRENADE
	{
	add INTERNALCOUNT 1
	ife INTERNALCOUNT 13 { shoot SPARK sound RGD_POP }
	}

ifactor APLAYER
{
    getplayervar[THISACTOR].drop_cooldown temp
    ifg temp 0
        sub temp 1

    setplayervar[THISACTOR].drop_cooldown temp

    getp[].newowner CAMID
    ifn CAMID -1
    {
        setactorvar[CAMID].temp5 3
        geta[].yvel temp9
        setactorvar[CAMID].temp6 temp9
    }
    ife PCAMERA 1 { ifmultiplayer nullop else spawn 1404 set PCAMERA 2 }
    ife PCAMERA 2
    {
    ife CAMID -1 set PCAMERA 0
    }

    ifn pdestination -1
    {
        setp[].look_ang 0
        sub playerwait 1
        ifl playerwait 1
        {
            loadmapstate

            set temp 0
            for temp sprofstat 4
            {
                changespritestat temp 1
                seta[temp].picnum SMALLSMOKE
                seta[temp].cstat 32768
            }

            /*
            set temp 0
            whilevarn temp 16384
            {
                ife sprite[temp].statnum 4
                {
                    changespritestat temp 1
                    seta[temp].picnum SMALLSMOKE
                    seta[temp].cstat 32768
                }

                TODO why this?
                ife sprite[temp].picnum SMALLSMOKE
                seta[temp].cstat 32768
                add temp 1
            }
            */

            set temp 0
            for temp sprofstat 3
            {
                ifg sprite[temp].lotag 68 ifl sprite[temp].lotag 71
                {
                    ifvarvare sprite[temp].hitag pdestination
                    ifn sprite[temp].shade 10
                    {
                        ifg END_LEVEL 0 set END_LEVEL 0
                        setactorvar[temp].WAIT YES
                        getp[].i PLAYER_IDENTITY
                        geta[temp].x temp2
                        add temp2 xoff
                        setp[].posx temp2
                        seta[PLAYER_IDENTITY].x temp2
                        geta[temp].y temp2
                        add temp2 yoff
                        setp[].posy temp2
                        seta[PLAYER_IDENTITY].y temp2
                        geta[temp].z temp2
                        add temp2 zoff
                        seta[PLAYER_IDENTITY].z temp2
                        sub temp2 8192
                        setp[].posz temp2
                        setp[].cursectnum sprite[temp].sectnum
                        changespritesect PLAYER_IDENTITY sprite[temp].sectnum
                        setp[].knuckle_incs 0
                        setp[].kickback_pic 0
                        setp[].ang sprite[temp].ang

                        set temp_weap Player_equip[43]
                        setp[].ammo_amount 0 Player_equip[1]
                        setp[].gotweapon 1 Player_equip[2]
                        setp[].ammo_amount 1 Player_equip[3]
                        setp[].gotweapon 2 Player_equip[4]
                        setp[].ammo_amount 2 Player_equip[5]
                        setp[].gotweapon 3 Player_equip[6]
                        setp[].ammo_amount 3 Player_equip[7]
                        setp[].gotweapon 4 Player_equip[8] // RPG
                        setp[].ammo_amount 4 Player_equip[9]
                        setp[].ammo_amount 5 Player_equip[10] // Pipebomb
                        ifg Player_equip[10] 0 setp[].gotweapon 5 1
                        setp[].gotweapon 6 Player_equip[11] // Shrinker
                        setp[].ammo_amount 6 Player_equip[12]
                        setp[].gotweapon 7 Player_equip[13] // Devistator
                        setp[].ammo_amount 7 Player_equip[14]
                        setp[].ammo_amount 8 Player_equip[15] // Tripbomb
                        setp[].gotweapon 9 Player_equip[16] // Freezer
                        setp[].ammo_amount 9 Player_equip[17]
                        setp[].gotweapon 11 Player_equip[18] // Expander
                        setp[].ammo_amount 11 Player_equip[19]

                        getp[].i PLAYER_IDENTITY
                        ife Player_equip[20] 0 setarray Player_equip[20] 200
                        seta[PLAYER_IDENTITY].extra Player_equip[20]
                        ife Player_equip[21] 0 setarray Player_equip[21] 200
                        setp[].max_player_health Player_equip[21]

                        setp[].shield_amount Player_equip[22]

                        set P_SPIRIT_ARMOUR Player_equip[23]
                        set P_FIRE_ARMOUR Player_equip[53]

                        ife CHAR 0 set JAMES_UPGRADE Player_equip[24]
                        ife CHAR 1 set ZAXTOR_UPGRADE Player_equip[24]
                        ife CHAR 2 set MERLIJN_UPGRADE Player_equip[24]
                        ife CHAR 3 set HIGHWIRE_UPGRADE Player_equip[24]
                        ife CHAR 4 set SANG_UPGRADE Player_equip[24]
                        ife CHAR 5 set RUSTY_UPGRADE Player_equip[24]
                        ife CHAR 6 set GEOFFREY_UPGRADE Player_equip[24]
                        ife CHAR 7 set MIKKO_UPGRADE Player_equip[24]
						ife CHAR 13 set MICKY_UPGRADE Player_equip[24]
						ife CHAR 14 set SNOWFALL_UPGRADE Player_equip[24]
						ife CHAR 17 set KAGURA_UPGRADE Player_equip[24]

                        set gun_firemode Player_equip[25]
                        set guns_akimbo Player_equip[26]
                        set GOT_EXPLOSIVE Player_equip[27]
                        set AIR_FILTER Player_equip[28]
                        set PISTOLMAG Player_equip[29]
                        set MGUNMAG Player_equip[30]
                        set RUNEKEYS Player_equip[31]
                        set ACCESSKEY2 Player_equip[32]
                        set PLUGKEY Player_equip[33]
                        set HELLGKEYS Player_equip[34]
                        set OLDKEYS Player_equip[35]
                        set GENERIC_KEYS Player_equip[45]

                        setp[].got_access Player_equip[44]
                        setp[].boot_amount Player_equip[36]
                        setp[].heat_amount Player_equip[37]
                        setp[].holoduke_amount Player_equip[38]
                        setp[].jetpack_amount Player_equip[39]
                        setp[].scuba_amount Player_equip[40]
                        setp[].firstaid_amount Player_equip[41]
                        setp[].steroids_amount Player_equip[42]

                        set silver_ammo Player_equip[46]
                        set explosive_shells Player_equip[47]
                        set FIRE_SUIT Player_equip[48]
                        set GAS_MASK Player_equip[49]
                        set tesla_ammo Player_equip[50]
                        set SCARABKEYS Player_equip[51]
                        set COGS Player_equip[52]
                        set TOOLBOX Player_equip[54]
                        set flechete_shells Player_equip[55]
                        set silver_bolts Player_equip[56]
                        set NORMAL_KEYS Player_equip[57]
                        set micro_torpedo Player_equip[58]
                        set magnum_shells Player_equip[59]
                        set heat_seek_card Player_equip[60]
                        set atomic_bomb Player_equip[61]
                        set DUP_missile_ammo Player_equip[62]
                        set SW_KEYS Player_equip[63]
                        set fortymm_grenades Player_equip[64]
                        set fortymm_shells Player_equip[65]
                        set fortymm_MIA_shells Player_equip[66]
                        set fortymm_plasma Player_equip[67]
                        set fortymm_caseless Player_equip[68]
                        set fortymm_electro Player_equip[69]
                        set fortymm_slug Player_equip[70]
                        set fortymm_cryo Player_equip[71]
                        set ROPE Player_equip[72]
                        set EGYPT_KEYS Player_equip[73]
                        set EGYPT_ARTIFACTS Player_equip[74]
                        set dragon_shells Player_equip[75]
                        set GOT_KNIFE Player_equip[76]
                        set riot_shield Player_equip[77]
                        set incend_ammo Player_equip[78]
                        set SWIPECARDS Player_equip[97]
                        set GOT_FIREWALL Player_equip[98]
                        set GOT_FLIPPER Player_equip[99]


                        setarray AMMO_TYPES[0] Player_equip[80]
                        setarray AMMO_TYPES[1] Player_equip[81]
                        setarray AMMO_TYPES[2] Player_equip[82]
                        setarray AMMO_TYPES[3] Player_equip[83]
                        setarray AMMO_TYPES[4] Player_equip[84]
                        setarray AMMO_TYPES[5] Player_equip[85]
                        setarray AMMO_TYPES[6] Player_equip[86]
                        setarray AMMO_TYPES[7] Player_equip[87]
                        setarray AMMO_TYPES[8] Player_equip[88]
                        setarray AMMO_TYPES[9] Player_equip[89]
                        setarray AMMO_TYPES[10] Player_equip[90]
                        setarray AMMO_TYPES[11] Player_equip[91]
                        setarray AMMO_TYPES[12] Player_equip[92]
                        setarray AMMO_TYPES[13] Player_equip[93]
                        setarray AMMO_TYPES[14] Player_equip[94]
                        setarray AMMO_TYPES[15] Player_equip[95]

                        set temp_wep_mag Player_equip[100]

                        set SHOTGUNMAG Player_equip[102]
                        set SHOTGUNBOXMAG Player_equip[103]

                        set ROCKETMAG Player_equip[105]
                        set slot6_mag Player_equip[106]
                        set SLUGSHOTMAG Player_equip[107]
                        set rifle_mag Player_equip[108]
                        set MACHINE_MAG Player_equip[109]
                        set ALTMAG Player_equip[111]

                        setp[].curr_weapon Player_equip[119]
                        setp[].secret_rooms secret_count[LEVEL]
                        getp[].actors_killed temp2
                        add temp2 Player_equip[121]
                        setp[].actors_killed temp2
						set booster_amount Player_equip[122]
                        exit
                    }
                }
            }
            set pdestination -1
			set END_LEVEL_TRIGGERED -1
        }

    }
}


ifactor MUSICANDSFX
{
ifn camerasprite -1 sleeptime 0
ifg sprite[].hitag 32767 seta[].hitag 32767
ife sprite[].lotag 74
 ife sprite[].hitag 0
  seta[].hitag 716

ife opt_streamer_mode YES
    {
    ife sprite[].lotag LTS_MUFF seta[].lotag 227
    ife sprite[].lotag LTS_FADE seta[].lotag WIND_AMBIENCE
    }

ifn XVELSAVED 0
    {
    checkactivatormotion XVELSAVED
        ife RETURN 1 killit
    }

ifg EXTRASAVED 0
ifpdistl 16192
    {
    ifspritepal 0 gets[].floorzgoal temp6
    else ifspritepal 2 gets[].ceilingzgoal temp6
    ife temp6 0 { ifactorsound THISACTOR EXTRASAVED nullop
    else ifactorsound THISACTOR sprite[].lotag nullop else soundvar EXTRASAVED }
    else ife temp6 -1 ifactorsound THISACTOR sprite[].hitag stopactorsound THISACTOR EXTRASAVED
    }

ifspritepal 8
    {
    geta[].x temp
    geta[].y temp2

    sub temp skybox_x
    sub temp2 skybox_y

    ifl temp 2048
    ifg temp -2048
    ifl temp2 2048
    ifg temp2 -2048
        {
        ife temp3 0
            {
            globalsoundvar sprite[].lotag
            set temp3 1
            }
        }
    else ife temp3 1
        {
        stopsoundvar sprite[].lotag
        set temp3 0
        }
    }

}

ifactor TOUCHPLATE
{
ifspritepal 11
    {
    checkactivatormotion sprite[].lotag
     ife RETURN 1
        {
        killit
        }
    }
}

ifactor ACTIVATOR
{
ifspritepal 10
    {
    checkactivatormotion sprite[].lotag
        ife RETURN 1
            {
            set FORCEFIELD_TURNOFF sprite[].lotag
            }
    }
ifspritepal 123
    {
    checkactivatormotion sprite[].lotag
        ife RETURN 1
            {
            set FORCEFIELD_TURNOFF sprite[].lotag
			inv FORCEFIELD_TURNOFF
			seta[].lotag 0
            }
    }
}

ifactor SECTOREFFECTOR
{
ife sprite[].lotag 4
 ife EXTRASAVED 1
	{
	ifn sector[].floorshade SHADESAVED
		{
		ifrnd 128 sound LFLICK1 else sound LFLICK2
		}
	}
ife sprite[].lotag 90
	{
	ife CONTROL_VR -1
	 ife SLO_MO_SHOWOFF 0
	  ife FISSION_MAILED 0
	   ife SWORD_RAMP 0
		{
		ife sprite[].ang 0
			{
			ife player[].cursectnum sprite[].sectnum
				{
				ifvarvarn screen_pal HITAGSAVED set screen_pal HITAGSAVED
				}
			}
			else
			ifvarg EXTRASAVED 0
			{
			checkactivatormotion EXTRASAVED
			ife RETURN 1
				{
				ifvarvarn screen_pal HITAGSAVED set screen_pal HITAGSAVED
				}
			}
			else
			{
			ifvarvarn screen_pal HITAGSAVED set screen_pal HITAGSAVED
			}
		}
	}

ife sprite[].lotag 650 // custom falling actor
{

ifn HITAGSAVED 0
	{
	set INTERNALCOUNT 0
	set temp 0
	whilevarn temp 16384
		{
		  ifn sprite[temp].statnum 1024
		  {
			ife sprite[temp].picnum DOORTRANSPORTEXIT
			{
			 getav[temp].HITAGSAVED temp3
			 ife HITAGSAVED temp3
				{
				geta[temp].x ENDPOINTX
				geta[temp].y ENDPOINTY
				geta[temp].z ENDPOINTZ
				geta[temp].ang temp7
				geta[temp].sectnum dtexit_sectnum
				set temp 16383
				}
			}
		  }
		  add temp 1
		}
	set HITAGSAVED 0
	}

    headspritesect spriteid sprite[].sectnum
    whilevarn spriteid -1
    {
        set temp 0
        ife sprite[spriteid].picnum APLAYER
        {
            geta[spriteid].z mz
                ifvarvarg mz initz
				 ife player_in_vehicle 0
					{
					add INTERNALCOUNT 1
					setp[].falling_counter 0
					setp[].hard_landing 0
					ife INTERNALCOUNT 1
						{
						state fade_in_black
						set cus_fade_duration 10
						}
					ifge INTERNALCOUNT 10
						{
						setp[].cursectnum dtexit_sectnum
						setp[].posx ENDPOINTX
						setp[].posy ENDPOINTY
						setp[].posz ENDPOINTZ
						setp[].ang temp7
						state fade_out_black
						set cus_fade_duration 5
						set INTERNALCOUNT 0
						}
					}
        }
        nextspritesect spriteid spriteid
    }
}

ife sprite[].lotag 666 // credits to Dan Gaskil for this code
{
    headspritesect spriteid sprite[].sectnum
    whilevarn spriteid -1
    {
        set temp 0
        ife sprite[spriteid].picnum APLAYER
        {
            getu .god temp2
            ife temp2 NO
            {
                geta[spriteid].yvel temp2
                ife player[temp2].dead_flag 0 set temp 1
            }
        }
        else set temp 1

        ife temp 1
        {
            ifvarvarg sprite[spriteid].z initz
            {
            seta[spriteid].htextra 140
            seta[spriteid].htpicnum RADIUSEXPLOSION
            seta[spriteid].htowner spriteid
            seta[spriteid].xrepeat 0
            seta[spriteid].yrepeat 0
            }
        }
        nextspritesect spriteid spriteid
    }
}

ife sprite[].lotag 667 // credit to Dan Gaskil for this code
{
    headspritesect spriteid sprite[].sectnum
    whilevarn spriteid -1
    {
        set temp 0
        ife sprite[spriteid].picnum APLAYER
        {
            geta[spriteid].z mz
                ifvarvarg mz initz
                {
                addphealth -140
                seta[spriteid].htextra 140
                seta[spriteid].htowner spriteid
                }
        }
        else set temp 1
        ife temp 1
        {
            geta[spriteid].z mz
            ifvarvarg mz initz
            {
            geta[spriteid].statnum temp3
            ife temp3 1
                {
                ifspritepal 2
                    {
                    getav[spriteid].MONSTER_FLAGS temp4 // check to see if its a lava monster
                    ifand temp4 16 nullop else
                        {
                        setactorvar[spriteid].fire_damage 9999
                        stopsound WATER_SPLASH
                        soundonce LAVA_SPLASH
                        // seta[spriteid].htextra 9999
                        seta[spriteid].htowner spriteid
                        }
                    }
                    else
                    {
                    getav[spriteid].MONSTER_FLAGS temp4 // check to see if its a flying monster
                    ifand temp4 1 // only delete the corpse if it's a flying enemy and dead
                        {
                        ifg sprite[spriteid].extra 0 nullop
                            else
                                {
                                seta[spriteid].htextra 140
                                seta[spriteid].htpicnum RADIUSEXPLOSION
                                seta[spriteid].htowner spriteid
                                seta[spriteid].xrepeat 0
                                seta[spriteid].yrepeat 0
                                }
                        }
                        else
                    ifg sprite[spriteid].extra 0
                        {
                        seta[spriteid].htextra 9999
                        seta[spriteid].htowner spriteid
                        }
                    }
                }
            }
        }
        nextspritesect spriteid spriteid
    }
}

ife sprite[].lotag 668 // credits to Dan Gaskil for this code; kills everything except specific actors (clouds .etc)
{
    headspritesect spriteid sprite[].sectnum
    whilevarn spriteid -1
    {
        set temp 0
        ife sprite[spriteid].picnum APLAYER
        {
            geta[spriteid].z mz
                ifvarvarg mz initz
                {
                seta[spriteid].htowner spriteid
                set DEATH_CAM HITAGSAVED
                }
        }
        else set temp 1
        ife temp 1
        {
            geta[spriteid].z mz
            ifvarvarg mz initz
            {
            geta[spriteid].statnum temp3
            getav[spriteid].SPEC_ACT temp4
            ife temp3 1
             ife temp4 0
                {
                    seta[spriteid].htextra 140
                    seta[spriteid].htpicnum RADIUSEXPLOSION
                    seta[spriteid].htowner spriteid
                    seta[spriteid].xrepeat 0
                    seta[spriteid].yrepeat 0
                }
            }
        }
        nextspritesect spriteid spriteid
    }
}

ife sprite[].lotag 669 // credits to Dan Gaskil for this code; kills and deletes everything in sector when hitag is activated
{
checkactivatormotion HITAGSAVED
ife RETURN 1
    {
    headspritesect spriteid sprite[].sectnum
    whilevarn spriteid -1
    {
        set temp 0
        ife sprite[spriteid].picnum APLAYER
        {
            getu .god temp2
            ife temp2 NO
            {
                geta[spriteid].yvel temp2
                ife player[temp2].dead_flag 0 set temp 1
            }
        }
        else set temp 1
        ife temp 1
            {
                seta[spriteid].htextra 9999
                seta[spriteid].htpicnum RADIUSEXPLOSION
                seta[spriteid].htowner spriteid
                seta[spriteid].xrepeat 0
                seta[spriteid].yrepeat 0
            }
        nextspritesect spriteid spriteid
        }
    }
}

ife sprite[].lotag 670 // credits to Dan Gaskil for this code, kills everything in sector when hitag is activated
{
checkactivatormotion HITAGSAVED
ife RETURN 1
    {
    headspritesect spriteid sprite[].sectnum
    whilevarn spriteid -1
    {
        set temp 0
        ife sprite[spriteid].picnum APLAYER
        {
            getu .god temp2
            ife temp2 NO
            {
                geta[spriteid].yvel temp2
                ife player[temp2].dead_flag 0 set temp 1
            }
        }
        else set temp 1
        ife temp 1
            {
             ifg sprite[spriteid].extra 0
                {
                seta[spriteid].htextra 9999
                seta[spriteid].htpicnum SHOTSPARK1
                seta[spriteid].htowner THISACTOR
				ifspritepal 11
				 ife sprite[spriteid].picnum 1680
					seta[spriteid].picnum 33987
                }
            }
        nextspritesect spriteid spriteid
        }
    }
}

ife sprite[].lotag 671 // credits to Dan Gaskil for this code - will kill player if not in vehicle or non-flying enemies
{
    headspritesect spriteid sprite[].sectnum
    whilevarn spriteid -1
    {
        set temp 0
        ife sprite[spriteid].picnum APLAYER
         ife player_in_vehicle 0
        {
            geta[spriteid].z mz
                ifvarvarg mz initz
                {
                addphealth -140
                seta[spriteid].htextra 140
                seta[spriteid].htowner spriteid
                }
        }
        else set temp 1
        ife temp 1
        {
            geta[spriteid].z mz
            ifvarvarg mz initz
            {
            geta[spriteid].statnum temp3
            ife temp3 1
                {
                getav[spriteid].MONSTER_FLAGS temp4
                ifand temp4 1 nullop else
                    {
                    seta[spriteid].htextra 140
                    seta[spriteid].htowner spriteid
                    }
                }
            }
        }
        nextspritesect spriteid spriteid
    }
}

ife sprite[].lotag 91
{
ife player[].cursectnum sprite[].sectnum
    {
    setp[].falling_counter 0
    }
}


ife sprite[].lotag 98
{
ifn XVELSAVED -1
    {
    checkactivatormotion XVELSAVED
        ife RETURN 1
            {
            set temp8 1
            seta[].lotag 0
            // seta[].statnum 1024
            }
    }
}

ife sprite[].lotag 0 // rotate sectors
{
ifspritepal 2 // increase speed when activated
    {
    ife temp8 0
        {
        checkactivatormotion XVELSAVED
            ife RETURN 1
                set temp8 1
        }
    ife temp8 1
        {
        gets[].extra temp7
        ife YVELSAVED 0 set YVELSAVED 1024
        ifl sector[].extra YVELSAVED
            {
            add temp7 16
            sets[].extra temp7
            }
        }
    }
ifspritepal 3 // increase speed when active with turbine sound
    {
    ife temp8 0
        {
        checkactivatormotion XVELSAVED
            ife RETURN 1
                set temp8 1
        }
    ife temp8 1
        {
        gets[].extra temp7
        ifl temp7 2048
            {
            soundonce TURBINE_ON
            add temp7 16
            sets[].extra temp7
            }
        else soundonce TURBINE_ACT
        }
    }
ifspritepal 8 // decrease speed when activated
    {
    ife temp8 0
        {
        soundonce TURBINE_ACT
        checkactivatormotion XVELSAVED
            ife RETURN 1
                set temp8 1
        }
    ife temp8 1
        {
        gets[].extra temp7
        ifg temp7 1
            {
            sub temp7 8
            sets[].extra temp7
            }
        ifl temp7 1
            {
            set temp7 1
            stopsound TURBINE_ACT
            seta[].lotag 99
            }
        }
    }
ifspritepal 9 // decrease speed whn activated + gear grinding sound
    {
    ife temp8 0
        {
        soundonce GEARS_GRINDING
        checkactivatormotion XVELSAVED
            ife RETURN 1
                set temp8 1
        }
    ife temp8 1
        {
        gets[].extra temp7
        ifg temp7 1
            {
            sub temp7 2
            sets[].extra temp7
            }
        ifl temp7 1
            {
            set temp7 1
            stopsound GEARS_GRINDING
            seta[].lotag 99
            }
        }
    }
ifspritepal 6
    {
    sets[].extra YVELSAVED
    }
ifg EXTRASAVED 0
    {
    checkactivatormotion EXTRASAVED
        ife RETURN 1
            {
            seta[].lotag 99
            // seta[].statnum 1024
            }
    }
}

ife sprite[].lotag 1
{
ifg EXTRASAVED 0
    {
    checkactivatormotion EXTRASAVED
        ife RETURN 1
            {
            seta[].lotag 99
            // seta[].statnum 1024
            }
    }
}

ife sprite[].lotag 25
{
ifg EXTRASAVED 0
    {
    ifvarvare sector[].floorz sector[].ceilingz
        {
        soundvar EXTRASAVED
        ifspritepal 3 spawn BIG_SMOKE2
        state explosion_shake
        }
    }
}



	ife sprite[].lotag 29
	{
		ifspritepal 3
		{
			gets[].ceilingstat temp2
			ifand temp2 2 nullop else { xorvar temp2 2 sets[].ceilingstat temp2 }
			gets[].floorslope temp
			sets[].ceilingslope temp
		}
	}

	// Wave effect
	ife sprite[].lotag 42
	{

		ifaction 0
		{
			ife EXTRASAVED -1 set EXTRASAVED 8
			ife EXTRASAVED 0 set EXTRASAVED 8
			geta[].x x
			geta[].y y
			geta[].sectnum temp
			geta[].ang temp3

			sin my temp3
			cos mx temp3
			geta[].z z

			hitscan x y z temp mx my 0 hitsect hitwall hitsprite hitx hity hitz 16777280
			action ZERO
		}

		ifn hitwall -1
		{

			getwall[hitwall].x temp
			getwall[hitwall].y temp2

			set temp3 sprite[].x
			add temp3 EXTRASAVED

			add temp4 HITAGSAVED
			ifg temp4 2048 set temp4 0
			ifl temp4 -2048 set temp4 0

			rotatepoint sprite[].x sprite[].y temp3 sprite[].y temp4 temp5 temp6

			dragpoint hitwall temp5 temp6
		}
	}

	// "Breath" effect for walls => lotag 44
	// Xvel = speed
	// Yvel = duration (tics)
	// Hitag = channel
	// Extra = position in channel, START AT 1
	// You can chain different walls together in a channel so they will start "breathing" one after the other in what looks like a wave.
	// An SE in such a channel will only start moving if the previous one in the channel has travelled a bit (currently softcoded though I might open this up via ZVEL later)
	// KNOWN ISSUE:
	// Using this on a sloped surface can cause problems cause it won't detect the wall but the sector itself instead. Just put the sprite several units above the floor and should be fine.
	ife sprite[].lotag 44
	{
		ifaction 0
		{
			geta[].x my_x
			geta[].y my_y
			geta[].sectnum temp
			geta[].ang temp3

			sin my temp3
			cos mx temp3
			geta[].z my_z

			hitscan my_x my_y my_z temp mx my 0 hitsect hitwall hitsprite hitx hity hitz 16777280

			set temp8 YVELSAVED
			set temp3 my_x

			// Debug
			ife hitwall -1
			{
				al hitsect al hitwall al hitsprite al hitx al hity al hitz
				geta[].hitag temp10
				al temp10
				al EXTRASAVED
			}
			// store original values
			getwall[hitwall].x my_x
			getwall[hitwall].y my_y

			// drag to start point
			add temp3 XVELSAVED
			geta[].ang temp4
			add temp4 1024
			rotatepoint sprite[].x sprite[].y temp3 sprite[].y temp4 temp5 temp6
			dragpoint hitwall temp5 temp6

			// restore orig value
			sub temp3 XVELSAVED

			set INTERNALCOUNT 2

			action ZERO
		}

		// Wait for internalcount to be 0 again to give all the SEs in the channel a chance to initialize properly
		// IE. Only start processing from second tic
		ifg INTERNALCOUNT 0
			sub INTERNALCOUNT 1

		ife INTERNALCOUNT 0
		ifn hitwall -1
		  ife temp9 0
		{
			// if hitag 0, no channel logic
			ife sprite[].hitag 0
				set temp9 1
			// first in channel
			else ife EXTRASAVED 1
				set temp9 1
			// find previous in channel
			else
			{
				for temp sprofstat 3
				{
					set temp2 EXTRASAVED
					sub temp2 1
					getav[temp].EXTRASAVED temp5

					getav[temp].YVELSAVED temp4
					set temp6 temp4
					abs temp4
					div temp4 10
					sub temp6 temp4

					getav[temp].temp8 temp10

					ife sprite[temp].picnum SECTOREFFECTOR
					  ife sprite[temp].lotag 44
					  ife sprite[temp].hitag sprite[].hitag
					  ife temp2 temp5
					{
						ifl temp10 temp6
						{
							set temp9 1
						}
					}
				}
			}

			set temp4 0
			set temp5 0
			set temp6 0
			set temp10 0
		}

		ife temp9 1
		{
			// Move from current position to near SE
			ifg temp8 0
			{
				add temp3 XVELSAVED

				geta[].ang temp4
				add temp4 1024

				rotatepoint sprite[].x sprite[].y temp3 sprite[].y temp4 temp5 temp6

				dragpoint hitwall temp5 temp6

				sub temp8 1

				ifle temp8 0
				{
					set temp8 0
					sub temp8 YVELSAVED
				}
			}
			// Move from SE to original position
			else
			{
				sub temp3 XVELSAVED

				geta[].ang temp4
				add temp4 1024

				rotatepoint sprite[].x sprite[].y temp3 sprite[].y temp4 temp5 temp6

				dragpoint hitwall temp5 temp6

				add temp8 1

				ifge temp8 0
					set temp8 YVELSAVED
			}
		}
	}

ife sprite[].lotag 75
{
    checkactivatormotion HITAGSAVED
        ife RETURN 1
        {
        set skybox 1
        killit
        }
}


ife sprite[].lotag 77 // de-activated skybox, to swap with another one
{
    set MASTERSWITCH_SUBSCRIBE YVELSAVED
    checkactivatormotion YVELSAVED

    set temp 0
    ife RETURN 1
        set temp 1
    else ife MASTERSWITCH_RETURN 1
    {
        set temp 1
        set MASTERSWITCH_RETURN 0
    }

    ife temp 1
    {
        set skybox_owner THISACTOR
        set cloud_centre THISACTOR

        set skybox 2
        seta[].lotag 80

        ife PALSAVED 2 nullop
        else
        {
            geta[].x skybox_x
            geta[].y skybox_y
        }
        geta[].z skybox_z
		geta[].sectnum skybox_sect
        updatesectorz skybox_x skybox_y skybox_z skybox_sect
    }
    ifn ZVELSAVED 0 // use this tag to turn the skybox off permanantly
    {
        checkactivatormotion ZVELSAVED
        ife RETURN 1
            seta[].lotag 76
    }
}

ife sprite[].lotag 78 // de-activated skybox, turns off skybox initially
{
    ife skybox_owner -1 // only if no current skybox
        set skybox 0

    set MASTERSWITCH_SUBSCRIBE YVELSAVED
    checkactivatormotion YVELSAVED

    set temp 0
    ife RETURN 1
        set temp 1
    else ife MASTERSWITCH_RETURN 1
    {
        set temp 1
        set MASTERSWITCH_RETURN 0
    }

    ife temp 1
    {
        set skybox_owner THISACTOR
        set cloud_centre THISACTOR

        seta[].lotag 80

        ife PALSAVED 2 nullop
        else
        {
            geta[].x skybox_x
            geta[].y skybox_y
        }
        geta[].z skybox_z
		geta[].sectnum skybox_sect
        updatesectorz skybox_x skybox_y skybox_z skybox_sect

    }
    ifn ZVELSAVED 0 // use this tag to turn the skybox off permanantly
    {
        checkactivatormotion ZVELSAVED
        ife RETURN 1
            seta[].lotag 76
    }
}

ife sprite[].lotag 79
{
    checkactivatormotion HITAGSAVED
        ife RETURN 1
        {
        ifg skybox 0 set skybox 0 else
        ife skybox 0
            {
            ifspritepal 0 set skybox 1
            else ifspritepal 1 set skybox 2
            }
        }
}

ife sprite[].lotag 80 // skybox
{
    sleeptime 0

    ife skybox_z_offset -3
    {
        geta[].ang angvar
        ife angvar 512
            set skybox_z_offset -1
        else
            set skybox_z_offset -2
    }
    // claim skybox owner if not already claimed
    ife skybox_owner -1
    {
        set skybox_owner THISACTOR
        set cloud_centre THISACTOR
    }

    ifn XVELSAVED 0 // turn off skybox with XVEL (turn on again with YVEL)
    {
        set temp 0
        set MASTERSWITCH_SUBSCRIBE XVELSAVED
        checkactivatormotion XVELSAVED

        ife RETURN 1
            set temp 1
        else ife MASTERSWITCH_RETURN 1
        {
            set temp 1
            set MASTERSWITCH_RETURN 0
        }

        ife temp 1
        {
            ife PALSAVED 3
                seta[].lotag 77
            else
            {
                // This check is to avoid setting skybox to 0 if a replacing skybox has already been set
                ife skybox_owner THISACTOR
                {
                    set skybox 0
                    set skybox_owner -1
                }

                seta[].lotag 78
            }
        }
    }

    // are we still in charge?
    ife skybox_owner THISACTOR
    {
        ife PALSAVED 0
            set skybox 1
        else ife PALSAVED 1 // skybox that moves with player
        {
            ife HITAGSAVED 0
                set skybox_scale 64
            else
                set skybox_scale HITAGSAVED

            set skybox 2
        }
        else ife PALSAVED 2 // rotating skybox
        {
            geta[].x temp
            geta[].y temp2

            set temp3 temp
            add temp3 HITAGSAVED

            rotatepoint temp temp2 temp3 temp2 temp9 skybox_x skybox_y

            ifg temp9 2048 sub temp9 2048
            seta[].ang temp9

            getp[].ang temp6
            add temp6 temp9

            set skybox_angle temp6
            add temp9 2

            set skybox 3
        }
        else ife PALSAVED 3 // skybox that moves with player
        {
            ife HITAGSAVED 0
                set skybox_scale 64
            else
                set skybox_scale HITAGSAVED

            set skybox 3
        }
        else ife PALSAVED 7
        {
        state anglePathToNextLotag
                ifn next_point -1
                {
                ldist xydist next_point THISACTOR
                    ifg xydist 2048
                        seta[].ang angvar
                state skybox_movesprite_state
                }
        set skybox 3
        }
        else ife PALSAVED 8
        {
            ife HITAGSAVED 0
                set skybox_scale 64
            else
                set skybox_scale HITAGSAVED

            set skybox 2

            geta[].z temp
            add temp 128
            seta[].z temp
        }
		// Static skybox with scale
		else ife PALSAVED 9
        {
            ife HITAGSAVED 0
                set skybox_scale 64
            else
                set skybox_scale HITAGSAVED

            set skybox 1
        }

        ife PALSAVED 2
            nullop
        else
        {
            geta[].x skybox_x
            geta[].y skybox_y
        }

        // if set to -2 we explicitly don't process
        // if you're a dickish mapper, you'll break this effect by manually setting the skybox offset from the floor to -2 explicitly but ah well
        ifn skybox_z_offset -2
        {
            // skybox sprite should be able to raise/fall along with a floor it's on, while keeping the same offset
            // store the initial offset from the floor
            ife skybox_z_offset -1
            {
                geta[].sectnum temp
                gets[temp].floorz z
                geta[].z my_z

                sub my_z z
                set skybox_z_offset my_z
            }
            // if initialised, keep updating
            else
            {
                geta[].sectnum temp
                gets[temp].floorz z
                add z skybox_z_offset
                seta[].z z
            }
        }

        geta[].z skybox_z
		geta[].sectnum skybox_sect
        updatesectorz skybox_x skybox_y skybox_z skybox_sect

    }

}

ife sprite[].lotag 81
{
gets[skybox_sect].floorshade skybox_shade
mulvar skybox_shade 3
sets[].visibility skybox_shade
}

ife sprite[].lotag 82 // Anchor
{
set skybox_id THISACTOR
}

ife sprite[].lotag 84 // Shiny wall
{

ifaction 0
    {
    geta[].x x
    geta[].y y
    geta[].sectnum temp
    geta[].ang temp3

    sin my temp3
    cos mx temp3
    geta[].z z

    hitscan x y z temp mx my 0 hitsect hitwall hitsprite hitx hity hitz 16777280
    action ZERO
    }

ifn hitwall -1
{

    getwall[hitwall].xpanning temp2
    sub temp2 HITAGSAVED

    getwall[hitwall].ypanning temp2
    sub temp2 HITAGSAVED

    getp[].i target
    dist xydist THISACTOR target
    shiftvarr xydist 6
    ifl xydist 8 set xydist 8
    add xydist 32
    ifg xydist 128 set xydist 128
    set temp 128
    sub temp xydist
    ifg temp 120 set temp 120
    // setwall[hitwall].xrepeat temp
    // divvar temp 4
    // setwall[hitwall].yrepeat temp

    getp[].ang temp2
    geta[].ang temp3
    sub temp2 temp3
    divvar temp2 2
    setwall[hitwall].xpanning temp2
    // setwall[hitwall].ypanning temp2

}

}

ife sprite[].lotag 69
{
    ifvarvare player[].cursectnum sprite[].sectnum state SEHUBSTATE
    else set WAIT NO
}

ife sprite[].lotag 6
    {
    ife temp8 2 // if train was at top speed this means it's slowing down to stop
     ifl sprite[].xvel 250 // if it's slowing down
      ifg sprite[].xvel 5 // if it hasn't stopped though
     {
     ifspritepal 0 soundonce SUBTRAIN_STOP
     else ifspritepal 8 soundonce CARS_STOP
     else ifspritepal 11 soundonce PALACE_DOOR2
     }
     else
    ifg sprite[].xvel 5
        {
            ifspritepal 3
                {
                ife temp8 0 { globalsound TRAIN_WHISTLE set temp8 1 }
                ifactorsound THISACTOR TRAIN_AMB nullop else sound TRAIN_AMB
                }
            else ifspritepal 9 soundonce BOAT_RUN
            else ifspritepal 7 soundonce BIG_DRILL_IDLE
            else ifspritepal 8
                {
                ife temp8 0 { soundonce CARS_START set temp8 1 }
                ifactorsound THISACTOR VEH_RUN2 nullop else sound VEH_RUN2
                ifg sprite[].xvel 250 set temp8 2 // if at top speed, set var
                }
            else ifspritepal 2 soundonce BUBBLE_AMBIENCE
            else ifspritepal 0
                {
                ife temp8 0 { soundonce SUBTRAIN_START set temp8 1 }
                ifactorsound THISACTOR SUBWAY_S nullop else sound SUBWAY_S
                ifg sprite[].xvel 250 set temp8 2 // if at top speed, set var
                }
        }
    else
        {
        ifspritepal 9 soundonce BOAT_IDLE
        else ifspritepal 3
            {
            ife temp8 1 { ifactorsound THISACTOR TRAIN_AMB stopactorsound THISACTOR TRAIN_AMB globalsound TRAIN_WHISTLE set temp8 0 }
            }
        else ifspritepal 0 ife temp8 2 { ifactorsound THISACTOR SUBWAY_S stopactorsound THISACTOR SUBWAY_S set temp8 0 }
        }
    }

ife sprite[].lotag 14
    {
    ifg sprite[].xvel 5
        {
            ifspritepal 3 { ifactorsound THISACTOR TRAIN_AMB nullop else sound TRAIN_AMB }
            else ifspritepal 9 soundonce BOAT_RUN
            else ifspritepal 7 soundonce BIG_DRILL_IDLE
            else ifspritepal 2 soundonce BUBBLE_AMBIENCE
            else ifspritepal 0 { ifactorsound THISACTOR SUBWAY_S nullop else sound SUBWAY_S }
        }
    else
        {
        ifspritepal 9 soundonce BOAT_IDLE
        else ifspritepal 3 { ifactorsound THISACTOR TRAIN_AMB stopactorsound THISACTOR TRAIN_AMB }
        else ifspritepal 0 { ifactorsound THISACTOR SUBWAY_S stopactorsound THISACTOR SUBWAY_S }
        }
    }

ife sprite[].lotag 30
    {
    ife temp8 2 // if train was at top speed this means it's slowing down to stop
     ifl sprite[].xvel 250 // if it's slowing down
      ifg sprite[].xvel 5 // if it hasn't stopped though
     {
     ifspritepal 0 soundonce SUBTRAIN_STOP
     else ifspritepal 8 soundonce CARS_STOP
     else ifspritepal 11 soundonce PALACE_DOOR2
     }
     else
    ifg sprite[].xvel 5
        {
            ifspritepal 3
                {
                ife temp8 0 { globalsound TRAIN_WHISTLE set temp8 1 }
                ifactorsound THISACTOR TRAIN_AMB nullop else sound TRAIN_AMB
                }
            else ifspritepal 9 soundonce BOAT_RUN
            else ifspritepal 7 soundonce BIG_DRILL_IDLE
            else ifspritepal 8
                {
                ife temp8 0 { soundonce CARS_START set temp8 1 }
                ifactorsound THISACTOR VEH_RUN2 nullop else sound VEH_RUN2
                ifg sprite[].xvel 250 set temp8 2 // if at top speed, set var
                }
            else ifspritepal 2 soundonce BUBBLE_AMBIENCE
            else ifspritepal 11
                {
                ife temp8 0 { soundonce PALACE_DOOR1 set temp8 1 }
                ifg sprite[].xvel 250 set temp8 2 // if at top speed, set var
                }
			else ifspritepal 20
				{
				ife temp8 0 { soundonce TRAIN_STOP set temp8 1 }
				}
            else ifspritepal 0
                {
                ife temp8 0 { soundonce SUBTRAIN_START set temp8 1 }
                ifactorsound THISACTOR SUBWAY_S nullop else sound SUBWAY_S
                ifg sprite[].xvel 250 set temp8 2 // if at top speed, set var
                }
        }
    else
        {
        ifspritepal 9 soundonce BOAT_IDLE
        else ifspritepal 3
            {
            ife temp8 1 { ifactorsound THISACTOR TRAIN_AMB stopactorsound THISACTOR TRAIN_AMB globalsound TRAIN_WHISTLE set temp8 0 }
            }
        else ifspritepal 0 ife temp8 2 { ifactorsound THISACTOR SUBWAY_S stopactorsound THISACTOR SUBWAY_S set temp8 0 }
        }
    }


    ife sprite[].lotag 31
        {
            checkactivatormotion HITAGSAVED
            ife RETURN 1
            {
                ife EXTRASAVED 1 { ife temp2 0 quote 400 set temp2 1 }
                ife EXTRASAVED 2 { ife temp2 0 quote 401 set temp2 1 }
                ife EXTRASAVED 3 { ife temp2 0 quote 403 set temp2 1 }
                ife XVELSAVED 1
                    {
                    sets[].floorslope 0
                    gets[].floorstat temp3
                    ifand temp3 2 { xorvar temp3 2 sets[].floorstat temp3 }
                    }
            }
        }

    ife sprite[].lotag 32
        {
            checkactivatormotion HITAGSAVED
            ife RETURN 1
            {
                ife EXTRASAVED 1 { ife temp2 0 quote 402 set temp2 1 }
                ife EXTRASAVED 2 { ife temp2 0 quote 401 set temp2 1 }
            }
        }

	// Jump pad
	// The HITAG acts as multiplier of the player's Z Velocity
	// If the ZVEL is non-zero, increases the result of the HITAG multiplication result by 1/(zvelsaved) of that amount. Eg 2 will increase by half, 3 by a 3rd etc
    ife sprite[].lotag 46
	{
	ifg EXTRASAVED 0
		{
		checkactivatormotion EXTRASAVED
		ife RETURN 1 set EXTRASAVED -1
		}
	else
		ifvarvare player[].cursectnum sprite[].sectnum
		{
			setp[].falling_counter 0
            ifp ponground
			{
                ifspritepal 0 globalsound WIND_FLY
                set temp3 HITAGSAVED

				ifn ZVELSAVED 0
				{
					set temp4 temp3
					div temp4 ZVELSAVED
					add temp3 temp4
				}
				set jump_speed SPRINTSPEED
				setp[].runspeed SPRINTSPEED
                mulvar temp3 -1
                setp[].poszv temp3
			}
		}

	}

    ife sprite[].lotag 47
        {
            ifvarvare player[].cursectnum sprite[].sectnum
            {
            ifp ponground
                {
                ifspritepal 0 soundonce WIND_FLY
                geta[].ang temp
                set knockbackang temp
                set temp3 HITAGSAVED
                mulvar temp3 -1
                set knockbackheight temp3
                set knockback2 1
                }
            }

        }


    ife sprite[].lotag 71
        {
        ife temp2 0
            {
            gets[].floorpicnum temp7
            gets[].floorshade temp8
            geta[].z temp3
            gets[].floorz temp4
            sets[].floorz temp3
            set temp2 1
            }

        getp[].cursectnum temp5
        geta[].sectnum temp6
            ife temp5 temp6
            {
            ifp ponground
                {
                gets[].floorz temp5
                ife temp4 temp5 nullop
                 else
                    {
                    ifn sector[].extra 0 add temp5 sector[].extra else
                    add temp5 256
                    sets[].floorz temp5
                    ifge temp5 temp4
                        {
                        sets[].floorz temp4
                        sets[].floorpicnum HITAGSAVED
                        geta[].ang temp6
                        ife temp6 512 ifn sector[].lotag 1 { sets[].lotag 1 sound WATR_IMP }
                        geta[].pal temp6
                        ifn temp6 0 sets[].floorpal temp6
                        geta[].shade temp6
                        sets[].floorshade temp6
                        }
                    }
                }
            }
            else
            {
            geta[].extra temp5
            ifn temp5 1
            {
            gets[].floorz temp5
            ifge temp5 temp3
                {
                sub temp5 64
                sets[].floorz temp5
                }
            gets[].floorpicnum temp5
            ifvarvarn temp5 temp7
                {
                sets[].floorshade temp8
                sets[].floorpicnum temp7
                geta[].ang temp6
                ife temp6 512 sets[].lotag 0
                }
            }
            }

        }

ife sprite[].lotag 51
        {
            checkactivatormotion HITAGSAVED
            ife RETURN 1
            {
                ifn ZVELSAVED 1
                ifn ZVELSAVED 0
                    {
                    gets[].floorstat temp7
                    ifand temp7 2 nullop else xorvar temp7 2
                    sets[].floorstat temp7
                    sets[].floorslope ZVELSAVED
                    }
                else
                ife ZVELSAVED 1
                    {
                    globalsound SLAB_FALL
                    state explosion_shake
                    // shoot ROCKDEB_1
                    spawn BIG_SMOKE2 spawn BIG_SMOKE2
                    set ZVELSAVED 0
                    }
                ifn EXTRASAVED -1 ifn EXTRASAVED 0 sets[].floorpicnum EXTRASAVED
                ifg OWNERSAVED 0 sets[].floorstat OWNERSAVED
                geta[].ang temp6
                ife temp6 512 sets[].lotag 0
                ife temp6 1024 sets[].lotag 1
                geta[].pal temp6
                ifn temp6 0 sets[].floorpal temp6
                geta[].shade temp6
                sets[].floorshade temp6
                geta[].xvel temp6
                ife XVELSAVED 1
                    {
                    gets[].floorstat temp7
                    orvar temp7 8
                    sets[].floorstat temp7
                    }
                ife XVELSAVED 2
                    {
                    sets[].lotag 1
                    sets[].floorstat 3584
                    geta[].cstat temp4
                    ifand temp4 514 sets[].floorstat 3968
                    else sets[].floorstat 3840
                    }
                ife XVELSAVED 3
                    {
                    gets[].floorstat temp7
                    ifand temp7 1 xorvar temp7 1
                    sets[].floorstat temp7
                    }
                ifand CSTATSAVED 2
                    {
                    gets[].floorstat temp7
                    orvar temp7 64
                    sets[].floorstat temp7
                    }
                ifand CSTATSAVED 4
                    {
                    sets[].floorxpanning XREPEAT_SAVED
                    sets[].floorypanning YREPEAT_SAVED
                    }
                ifand CSTATSAVED 256
                    {
                    sets[].floorz sprite[].z
                    }
                ifand CSTATSAVED 8
                    {
                    gets[].floorstat temp7
                    ifand temp7 2 xorvar temp7 2
                    sets[].floorstat temp7
                    sets[].floorslope 0
                    }
                ife YVELSAVED 1 sets[].visibility 244
            }

        }

ife sprite[].lotag 58
        {
            checkactivatormotion HITAGSAVED
            ife RETURN 1
            {
                geta[].extra temp5
                sets[].ceilingpicnum temp5
                geta[].ang temp6
                ife temp6 512 sets[].lotag 0
                ife temp6 1024 sets[].lotag 1
                geta[].pal temp6
                ifn temp6 0 sets[].ceilingpal temp6
                geta[].shade temp6
                sets[].ceilingshade temp6
                geta[].xvel temp6
                ife temp6 1
                    {
                    gets[].ceilingstat temp7
                    orvar temp7 8
                    sets[].ceilingstat temp7
                    }
                ife temp6 2
                    {
                    sets[].lotag 2
                    sets[].ceilingstat 3968
                    geta[].cstat temp4
                    ifand temp4 514 sets[].ceilingstat 3968
                    else sets[].ceilingstat 3840
                    }
                ife temp6 3
                    {
                    gets[].ceilingstat temp7
                    orvar temp7 1
                    sets[].ceilingstat temp7
                    }
                ife YVELSAVED 1 sets[].visibility 244
            }

        }

ife sprite[].lotag 52
        {
        ife temp2 0
            {
            gets[].floorpicnum temp7
            gets[].floorshade temp8
            geta[].z temp3
            set temp2 1
            }

            checkactivatormotion HITAGSAVED
            ife RETURN 1
            {
                ife sprite[].z sector[].floorz
                {
                sets[].floorpicnum EXTRASAVED
                geta[].ang temp6
                ife temp6 512 sets[].lotag 0
                else ife temp6 1024 sets[].lotag 1
                geta[].pal temp6
                ifn temp6 0 sets[].floorpal temp6
                ifn YVELSAVED 0
                    {
                    gets[].floorslope temp7
                    ifvarvare YVELSAVED temp7 sets[].floorslope 0
                    else sets[].floorslope YVELSAVED
                    }
                ife XVELSAVED 1
                    {
                    gets[].floorstat temp7
                    orvar temp7 8
                    sets[].floorstat temp7
                    }
                ife XVELSAVED 2
                    {
                    gets[].floorstat temp7
                    orvar temp7 1
                    sets[].floorstat temp7
                    }
                ife XVELSAVED 3
                    {
                    sets[].floorstat 1664
                    }
                geta[].shade temp6
                sets[].floorshade temp6
                sets[].visibility ZVELSAVED
                }
            }

        }


ife sprite[].lotag 53
        {
            checkactivatormotion HITAGSAVED
            ife RETURN 1
            {
            ife temp2 0
                {
                ifn sector[].lotag 2 sets[].lotag 2 else
                    {
                    ife sprite[].ang 512 nullop else
                    sets[].lotag 0
                    }
                set temp2 1
                }
            }
            else ife RETURN 0 set temp2 0
        }

ife sprite[].lotag 54
    {
        checkactivatormotion HITAGSAVED
        ife RETURN 1
        {
            geta[].x x
            geta[].y y
            geta[].sectnum temp
            geta[].ang temp3

            sin my temp3
            cos mx temp3
            geta[].z z

            hitscan x y z temp mx my 0 hitsect hitwall hitsprite hitx hity hitz 16777280

            ifn hitwall -1
            {
            ife ZVELSAVED 1
                {
                getwall[hitwall].cstat temp4
                ifand temp4 1 xorvar temp4 1
                setwall[hitwall].cstat temp4
                }
            ife EXTRASAVED 0
                {
                geta[].pal temp2
                ifn temp2 0 setwall[hitwall].pal temp2
                geta[].shade temp3
                ifn temp3 0 setwall[hitwall].shade temp3
                }
            else
            ifn EXTRASAVED -1
                {
                setwall[hitwall].picnum EXTRASAVED
                geta[].pal temp2
                setwall[hitwall].pal temp2
                geta[].shade temp3
                setwall[hitwall].shade temp3
                }

            ifn YVELSAVED 0
                {
                getwall[hitwall].cstat temp4
                ifand temp4 16 nullop else { xorvar temp4 16 setwall[hitwall].cstat temp4 }
                setwall[hitwall].overpicnum YVELSAVED
                geta[].pal temp2
                ifn temp2 0 setwall[hitwall].pal temp2
                geta[].shade temp3
                ifn temp3 0 setwall[hitwall].shade temp3
                }
            }
        }
    }

ife sprite[].lotag 55
        {
            checkactivatormotion HITAGSAVED
            ife RETURN 1
            {
                geta[].extra temp5
                ifn temp5 -1 sets[].ceilingpicnum temp5
                geta[].pal temp6
                ifn temp6 0 sets[].ceilingpal temp6
                geta[].shade temp6
                ifn temp6 0 sets[].ceilingshade temp6
                geta[].xvel XVELSAVED
                ife XVELSAVED 3
                {
                gets[].ceilingstat temp7
                orvar temp7 1
                sets[].ceilingstat temp7
                }

            }

        }

ife sprite[].lotag 56
        {
            checkactivatormotion HITAGSAVED
            ife RETURN 1
            ifn sprite[].sectnum -1
             ifn sprite[].sectnum 4096
            {
            sets[].lotag EXTRASAVED
            }

        }

ife sprite[].lotag 57 // change texture if z exceeds floor or whatever
    {
    ife temp2 0
                {
                gets[].floorpicnum temp7
                gets[].floorshade temp8
                geta[].z temp3
                set temp2 1
                }

                checkactivatormotion HITAGSAVED
                ife RETURN 1
                {
                    ifg sector[].floorz sprite[].z
                    {
                    sets[].floorpicnum EXTRASAVED
                    geta[].ang temp6
                    ife temp6 512 sets[].lotag 0
                    else ife temp6 1024 sets[].lotag 1
                    geta[].pal temp6
                    ifn temp6 0 sets[].floorpal temp6
                    ifn YVELSAVED 0
                        {
                        gets[].floorslope temp7
                        ifvarvare YVELSAVED temp7 sets[].floorslope 0
                        else sets[].floorslope YVELSAVED
                        }
                    ife XVELSAVED 1
                        {
                        gets[].floorstat temp7
                        orvar temp7 8
                        sets[].floorstat temp7
                        }
                    ife XVELSAVED 2
                        {
                        gets[].floorstat temp7
                        orvar temp7 1
                        sets[].floorstat temp7
                        }
                    geta[].shade temp6
                    sets[].floorshade temp6
                    sets[].visibility ZVELSAVED
                    }
                }
    }

ife sprite[].lotag 60 // sector attribute copier
    {
    checkactivatormotion EXTRASAVED
    ife RETURN 1
        {
        headspritestat spriteid 3
        whilevarn spriteid -1
            {
            ife sprite[spriteid].picnum 1
             ife sprite[spriteid].lotag 61
              ife sprite[spriteid].hitag sprite[].hitag
                    {
                    geta[spriteid].sectnum temp
                    sets[].visibility sector[temp].visibility
                    sets[].hitag sector[temp].hitag
                    sets[].lotag sector[temp].lotag
                    sets[].floorpal sector[temp].floorpal
                    sets[].floorpicnum sector[temp].floorpicnum
                    sets[].floorshade sector[temp].floorshade
                    sets[].floorslope sector[temp].floorslope
                    sets[].floorstat sector[temp].floorstat
                    sets[].floorxpanning sector[temp].floorxpanning
                    sets[].floorypanning sector[temp].floorypanning
                    sets[].floorz sector[temp].floorz

                    sets[].ceilingpal sector[temp].ceilingpal
                    sets[].ceilingpicnum sector[temp].ceilingpicnum
                    sets[].ceilingshade sector[temp].ceilingshade
                    sets[].ceilingslope sector[temp].ceilingslope
                    sets[].ceilingstat sector[temp].ceilingstat
                    sets[].ceilingxpanning sector[temp].ceilingxpanning
                    sets[].ceilingypanning sector[temp].ceilingypanning
                    sets[].ceilingz sector[temp].ceilingz
                    set spriteid -1
                    }
                ifn spriteid -1 nextspritestat spriteid spriteid
            }
        }
    }

}

ifactor BULLETHOLE
    {
    ifaction 0
        {
        geta[].owner temp
        geta[temp].extra temp2
        divvar temp2 4
        ifl temp2 4 set temp2 4 // sets a minimum size
        ifg temp2 16 set temp2 16 // sets a maximum size
        seta[].xrepeat temp2
        seta[].yrepeat temp2
        cstator 192
        ifrnd 128 cstator 8
        action ZERO
        }
    }

// EVENT_GAME SWITCH STATEMENT

switch sprite[].picnum
case ENEMY_BULLET
case ENEMY_SHOTGUN
	ifpdistl 4096
		{
		ife ally_mag 0
			{
			ifrnd 85 sound BFLYBY_01
			else ifrnd 170 sound BFLYBY_02
			else sound BFLYBY_03
			set ally_mag 1
			}
		}
	break
case CHAIR1
case CHAIR2
	action 0
	espawn 3219
	seta[RETURN].xrepeat sprite[].xrepeat
	seta[RETURN].yrepeat sprite[].yrepeat
	sizeat 1 1
	killit
	break
case SAWBLADE_BOUNCE
	ifactorsound THISACTOR SAWBLADE_SP nullop else sound SAWBLADE_SP
	break
case QUIETUS_BLAST
	ifspawnedby APLAYER
		{
		ifpdistl 1536 cstat 32768 else cstat 130
		}
	break
case 9395
case 12902
case 6544
case 6633
case 13216
	ife INVASION 1 killit
	break
case VIEWSCREEN
case VIEWSCREEN2
    state animate_sprite_event
    break
case MISSILE
    ifspawnedby HPOWERSUIT strength 500
    break
case GASBURST
    ifspawnedby APLAYER ifpdistl 1024 cstat 32768 else cstat 130
    break
case 22442
    ifpdistl 2048 cstat 32768
    else cstat 2
    break
case MICRO_MISSILE
    ifspawnedby PITFIEND
        {
        setactor[].extra 20
        setthisprojectile[].extra 20
        }
    ifspawnedby CYBERALIEN
        {
        setactor[].extra 20
        setthisprojectile[].extra 20
        }
    ifspawnedby CYBERTOUR
        {
        setactor[].extra 20
        setthisprojectile[].extra 20
        }
    ifspawnedby HPOWERSUIT
        {
        setactor[].extra 20
        setthisprojectile[].extra 20
        }
break
case CYCLOID_PLASMA // Cycloid plasma
    spawn PROJECTILE_FLARE
    ifspawnedby APLAYER
     ifn player_in_vehicle 0
        {
        setactor[].extra 1200
        setthisprojectile[].extra 1200
        }
break
case RUBYBLAST
    ifspawnedby PE_ELDER
        {
        setactor[].extra 30
        setthisprojectile[].extra 30
        }
break
case 12782
    action ANUBIS_AXE_FRAMES
break
case 1404
    ifand ZVELSAVED 1 seta[].z ZPOS_SAVED
break
case COFFEEMUG
case JOLLYMEAL
case 4546
case 4547
case 4548
    ife EXTRASAVED 1
        {
        seta[].z ZPOS_SAVED
        }
break
case OOZ2
    ifcount 512
    killit
break
case RESPAWN
    geta[].extra EXTRASAVED
	geta[].xvel XVELSAVED
    geta[].yvel YVELSAVED
	geta[].zvel ZVELSAVED
    break
case FORCERIPPLE
sizeat 8 8
break
case SPARK
case SPARK2
	ifpdistgvar opt_particle_distance killit
    seta[].cstat 514
    seta[].blend 255
	state model_pitch
	geta[].shade temp
	ifpdistg 16384 add temp 6 else
	add temp 3
	seta[].shade temp
	ifge temp 30 killit
break
case SWOODSCRAP
case WOODSCRAP
case ICE_DEBRIS
case ROCKDEB_1
case ROCKDEB_3
case ROCKDEB_4
case SROCKDEB_4
case SLIMEPROJ
case CLUSTER_BOMB
case CLUSTER_BOMB2
    seta[].mdflags 16
break
case FIRSTGUNSPRITE
case SHOTGUNSPRITE
case CHAINGUNSPRITE
case RPGSPRITE
case 3689
// case HEAVYHBOMB
case SHRINKERSPRITE
case TRIPBOMBSPRITE
case DEVISTATORSPRITE
case FREEZESPRITE
case AMMO
case SHOTGUNAMMO
case BATTERYAMMO
case RPGAMMO
case HBOMBAMMO
case CRYSTALAMMO
case GROWAMMO
case DEVISTATORAMMO
case FREEZEAMMO
case SHIELD
case FIRSTAID
case STEROIDS
case AIRTANK
case HEATSENSOR
case JETPACK
case BOOTS
case HOLODUKE
changespritestat THISACTOR 1
break
case 2930 // Letters for Rusty's shades
case 2931
case 2932
case 2933
case 2934
case 2935
case 2936
case 2937
case 2938
case 2939
case 2940
case 2941
case 2942
case 2943
case 2944
case 2945
case 2946
case 2947
case 2948
case 2949
case 2950
case 2951
case 2952
case 2953
case 2954
case 2955
case 2956
case 2957
case 2958
case 2959
case 2960
case 2961
case 2962
case 2963
case 2964
case 2965
geta[].yvel temp
ife temp 1
    {
    ife CHAR 5
     {
     getp[].heat_on temp2
     ife temp2 1
        {
        cstat 16
        }
     else cstat 32768
     }
     else cstat 32768
    }
break
case JIBS1
case JIBS2
case JIBS3
case JIBS4
case JIBS5
case JIBS6
case LIZMANHEAD1
case LIZMANARM1
case LIZMANLEG1
case HEADJIB1
case ARMJIB1
case LEGJIB1
case HUMAN_TORSO
ifactor HUMAN_TORSO sizeat 36 36 else
ifactor JIBS2 sizeat 8 8 else
ifactor JIBS3 sizeat 16 16 else
ifactor JIBS4 sizeat 16 16 else
ifactor JIBS5 sizeat 16 16 else
ifactor JIBS6 sizeat 16 16 else
 sizeat 24 24
ife TIMEZONE 8 { spawn 6142 spawn 6142 spawn 6142 killit }
state getceildist
ifl z 0
 ifn ally_temp -1
    {
    ifn sector[].ceilingslope 0 killit
    ifinwater killit
    espawn 2284
    seta[RETURN].pal sprite[].pal
    setactorvar[RETURN].ally_temp 1
    killit
    }
iffloordistl 8
    {
    ifactor JIBS6
        {
        ifrnd 128 sound BLD_SPLASH1
        else ifrnd 128 sound BLD_SPLASH2
        else sound BLD_SPLASH3
        }
        else { ifrnd 128 sound GIB_LAND2 else sound GIB_LAND1 }
    changespritestat THISACTOR 1
    state rf
    ifmultiplayer nullop else
        {
        espawn 2284
        seta[RETURN].pal sprite[].pal
        }
    ifactor JIBS1 seta[].picnum 2249
    ifactor JIBS2 seta[].picnum 2254
    ifactor JIBS3 seta[].picnum 2259
    ifactor JIBS4 seta[].picnum 2264
    ifactor JIBS5 seta[].picnum 2269
    ifactor JIBS6 seta[].picnum 2284
    ifactor LIZMANHEAD1 seta[].picnum 2214
    ifactor LIZMANARM1 seta[].picnum 2215
    ifactor LIZMANLEG1 seta[].picnum 2216
    ifactor HEADJIB1 seta[].picnum 1769
    ifactor ARMJIB1 seta[].picnum 1773
    ifactor LEGJIB1 seta[].picnum 1777
    ifactor HUMAN_TORSO seta[].picnum 1519
    ifactor HUMAN_ARM seta[].picnum 1534
    }
break
case BRUISERFIREBALL
    spawn PROJECTILE_FLARE
break
case 7163
case 7160
case SPELL4
case SPELL5
case SPELL14
case SHRINKSPARK
case 9376
case PRIEST_BLAST
case LAVABALL
case HEAT_SINK
case 9115
case 12712
    spawn PROJECTILE_FLARE
break
case HOMING_MISSILE

    ifspawnedby SCORPIONESS
        {
        setactor[].extra 25
        setthisprojectile[].extra 25
        }
    ifspawnedby CYBERALIEN
        {
        setactor[].extra 25
        setthisprojectile[].extra 25
        }
    ifspawnedby CYBERTOUR
        {
        setactor[].extra 25
        setthisprojectile[].extra 25
        }
            // HEATSEEKER
            ifspawnedby APLAYER
            {
                set faction_flag ALLIED_FACTION_FLAG // needed for target check to run correctly
                set weight_increase 0 // don't contribute to weight score

                add INTERNALCOUNT 1

                ifg INTERNALCOUNT 2
                {
                    ife my_target -1
                        state checkfortarget

                    set INTERNALCOUNT 0
                }

                ifn my_target -1
                {
                    // if the coordinates overlap long enough then there's a bug, just destroy the missile
                    ldist temp THISACTOR my_target

                    ifl temp 1024
                        add INTERNALCOUNT_2 1

                    // seems to get stuck on TROR layers rarely
                    ifnotmoving
                        set INTERNALCOUNT_2 15

                    ifge INTERNALCOUNT_2 15
                    {
                        hitradius 1024 35 75 112 150
                        spawn MISSILE_EXPLOSION
                        sound RPG_EXPLODE
                        killit
                    }

                    ifn player_in_vehicle 1 ifcansee set PLAYER_VOICEOVER 22
                    soundonce HEAT_SEEK
                    state fronttowardstarget

                    set PROJECTILE_VEL 700

                    // z offset = sprite height / 2
                    set temp2 my_target
                    state getspriteheight
                    divvar RETURN 2
                    set CALCZ_TARGET_OFFSET RETURN
                    state calczvel
                    seta[].zvel temp3
                }
            }
            else
                {
					ifpdistg 16384 set temp2 -256
					else ifpdistg 10240 set temp2 -128
					else ifpdistg 8192 set temp2 0
					else ifpdistg 6144 set temp2 128
					else ifpdistg 4096 set temp2 256
					else ifpdistg 2048 set temp2 384
					else set temp2 512
					soundonce HEAT_SEEK
					setactorsoundpitch THISACTOR HEAT_SEEK temp2

					ifpdistg 2048
					 ife temp8 0
						{
						getp[].posx mx
						getp[].posy my
						geta[].x x
						geta[].y y
						sub mx x
						sub my y
						getangle angvar mx my
						seta[].ang angvar
						getp[].posz temp2
						geta[].z temp
						ifvarvarl temp temp2 { add temp 40 seta[].z temp }
						ifvarvarg temp temp2 { sub temp 40 seta[].z temp }
						}
					else
					set temp8 1
                }
break
case 6221
case HADESBLASTH
case 12717
case 30081
        spawn PROJECTILE_FLARE
        ifpdistl 4096 set temp3 1
        ifactor 6221
            {
            seta[].blend 255
            seta[].shade -127
            }
        ifn temp3 1
            {
            getp[].posx mx
            getp[].posy my
            geta[].x x
            geta[].y y
            sub mx x
            sub my y
            getangle angvar mx my
            seta[].ang angvar
            getp[].posz temp2
            geta[].z temp
            ifvarvarl temp temp2 { add temp 40 seta[].z temp }
            ifvarvarg temp temp2 { sub temp 40 seta[].z temp }
            }
break
case SPACEDOORSWITCH
    ife CHARSELECT 0
    ife EXTRASAVED 1
        {
        ifn CHAR 2 killit
        }
break
case 7047
case 22828
case 15175

    cstat 130
    seta[].blend 255

    seta[].shade -127

    // this tanks framerate if there's even a few projectiles visible at the same timer
    ifrnd 32
    {
        spawn PROJECTILE_FLARE
        shoot SPARK
    }
break
case CHARMED_DYNA
    soundonce DYNAMITEFUSE
    shoot SPARK2
break
case BLACK_POWD_BOMB
case DYNAMITESTICK
    soundonce DYNAMITEFUSE
    shoot SPARK
break
case RAINSPRITE
    sleeptime 0
break
case BOTTLE4
ifpdistl 812
ifp palive
   ifp pfacing
    ifhitspace
     ifl INEBRIATION 800
    {
    quote 134
    sound DRINKSOME
    palfrom 16 0 32

		ife CHAR 3 addphealth 5 else
		ife CHAR 9
			{
			getp[].shield_amount temp
			add temp 2
			clamp temp 0 200
			setp[].shield_amount temp
			addphealth 5
			}
			else
		addphealth 2

      ife CHAR 0 add INEBRIATION 100
    ife CHAR 1 add INEBRIATION 150
      ife CHAR 2 add INEBRIATION 50
      ife CHAR 3 add INEBRIATION 25
      ife CHAR 4 add INEBRIATION 200
    ife CHAR 5 add INEBRIATION 150
      ife CHAR 6 add INEBRIATION 150
    ife CHAR 7 add INEBRIATION 100
    ife CHAR 9 add INEBRIATION 0
    ife CHAR 10 add INEBRIATION 25
    ife CHAR 11 add INEBRIATION 50
    ife CHAR 12 add INEBRIATION 100
    ife CHAR 13 add INEBRIATION 300
    ife CHAR 14 add INEBRIATION 10
    ife CHAR 17
        {
        ifrnd 8 sound YO_DRUNK
        add INEBRIATION 150
        }
    killit
    }
  break
 case BOTTLE2
 case BOTTLE3
 case BOTTLE13
case BOTTLE14
case BOTTLE15
case BOTTLE16
case BOTTLE17
case BOTTLE18
ifpdistl 812
ifp palive
   ifp pfacing
    ifhitspace
     ifl INEBRIATION 600
    {
    quote 134
    sound DRINKSOME
    palfrom 16 0 32

		ife CHAR 3 addphealth 5 else
		ife CHAR 9
			{
			getp[].shield_amount temp
			add temp 2
			clamp temp 0 200
			setp[].shield_amount temp
			addphealth 5
			}
			else
		addphealth 2

      ife CHAR 0 add INEBRIATION 100
    ife CHAR 1 add INEBRIATION 150
      ife CHAR 2 add INEBRIATION 50
      ife CHAR 3 add INEBRIATION 100
      ife CHAR 4 add INEBRIATION 200
    ife CHAR 5 add INEBRIATION 150
      ife CHAR 6 add INEBRIATION 150
    ife CHAR 7 add INEBRIATION 100
    ife CHAR 9 add INEBRIATION 0
    ife CHAR 10 add INEBRIATION 25
    ife CHAR 11 add INEBRIATION 50
    ife CHAR 12 add INEBRIATION 100
    ife CHAR 13 add INEBRIATION 300
    ife CHAR 14 add INEBRIATION 10
    ife CHAR 17 add INEBRIATION 150
    killit
    }
  break
 case 22610
 case 22536
 case 27372
 case 6204
 case 29076
   ifspawnedby APLAYER { ifpdistl 1024 cstat 32768 else cstat 130 }
   state littlerandtraj
  break
 case RPG
    ifspawnedby APLAYER
    {
    ife CHAR 1
    ife cur_weap 7
     ife SPECIALIST_EQUIPMENT[52] 2
     {
     spawn 3296
    state littlerandtraj
     }
    ife CHAR 13
    ife cur_weap 4
    ifn tracker -1
        {
        iffloordistl 8 set tracker -1
        add INTERNALCOUNT 1
        ifl INTERNALCOUNT 150
            {
            set mx p_hitx
            set my p_hity
            geta[].x x
            geta[].y y
            sub mx x
            sub my y
            getangle angvar mx my
            seta[].ang angvar

            ifn tracker -1
                {
                soundonce RED_COMPBEEP
                ldist temp THISACTOR tracker
                geta[].z temp2
                sub temp2 8192 // Offset the Z. Assumes the center of the actor is the same as the player
                geta[tracker].z temp3
                sub temp3 8592 // Offset the Z. assumes the center of the actor is the same as the player
                sub temp3 temp2
                shiftvarl temp3 8
                ifn temp 0 divvarvar temp3 temp
                seta[].zvel temp3
                }
            }
        }
    ife cur_weap 0
     ife temp_weap 16
        {
        spawn GUNSMOKE
        }
    }
    ifspawnedby BOSS3
    {
    geta[].owner temp
    geta[temp].pal temp2
     ifn temp2 0 { sizeat 20 20 }
    }
    ifspawnedby BOSS5
    {
    sizeat 20 20
    }
     ifspawnedby COMMANDER
    {
    geta[].owner temp
    geta[temp].pal temp2
     ife temp2 20 { sizeat 14 14 }
    }
    gets[].floorpal temp
    seta[].pal temp
  break
 case BLOODPOOL
    seta[].shade sector[].floorshade
    gets[].floorpal temp
    ife temp 1 seta[].pal temp
    ifspawnedby PE_SENTRY killit
	ifspawnedby SENTRY killit
    break
 case DYNAMITEBUNDLE
 geta[].owner myowner
 ifspawnedby APLAYER
     {
    ife cur_weap 10
     ife kickbackpic 3
                {
                spawn EXPLOSION2
                globalsound PIPEBOMB_EXPLODE
                hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
                killit
                }
    }
 case RPG7_ROCKET
 ifspawnedby APLAYER
     {
     geta[].owner myowner
     getav[myowner].RUSTY_MINE_GUN temp4
    ifg temp4 0
     ifpdistg 4096
                {
                spawn BIG_EXPLOSION
                hitradius 4096 150 300 450 600
                setactorvar[myowner].RUSTY_MINE_GUN 0
                killit
                }
    }
   break
 case MC_GRENADE
 case Z_GRENADE
 geta[].owner myowner
 ifspawnedby APLAYER
 {
   ife CHAR 1
      {
      getav[myowner].P_CHAR temp
      state FINDMONSTERS
      }
ife cur_weap 10
 ife kickbackpic 3
            {
            spawn EXPLOSION2
            globalsound PIPEBOMB_EXPLODE
            hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
            killit
            }
}
   break
 case DYNAMITEONFLOOR
 geta[].owner myowner
     ifspawnedby APLAYER
     {
ife cur_weap 10
     ife kickbackpic 3
                {
                spawn EXPLOSION2
                globalsound PIPEBOMB_EXPLODE
                hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
                killit
                }
    }
 else
      ifspawnedby DYNAMITEBUNDLE
      {
     geta[myowner].owner temp3
     getav[temp3].cur_weap temp
     getav[temp3].kickbackpic temp2
ife temp 10
     ife temp2 3
                {
                spawn EXPLOSION2
                globalsound PIPEBOMB_EXPLODE
                hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
                killit
                }
      }
   break
case Z_GRENADE_ONFLOOR
     geta[].owner myowner
         ifspawnedby APLAYER
         {
    ife cur_weap 10
         ife kickbackpic 3
                    {
                    spawn EXPLOSION2
                    globalsound PIPEBOMB_EXPLODE
                    hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
                    killit
                    }
        }
     else
          ifspawnedby Z_GRENADE
          {
         geta[myowner].owner temp3
         getav[temp3].cur_weap temp
         getav[temp3].kickbackpic temp2
    ife temp 10
         ife temp2 3
                    {
                    spawn EXPLOSION2
                    globalsound PIPEBOMB_EXPLODE
                    hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
                    killit
                    }
          }
   break
case MC_GRENADE_ONFLOOR
 geta[].owner myowner
     ifspawnedby APLAYER
     {
ife cur_weap 10
     ife kickbackpic 3
                {
                spawn EXPLOSION2
                globalsound PIPEBOMB_EXPLODE
                hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
                killit
                }
    }
 else
      ifspawnedby MC_GRENADE
      {
     geta[myowner].owner temp3
     getav[temp3].cur_weap temp
     getav[temp3].kickbackpic temp2
ife temp 10
     ife temp2 3
                {
                spawn EXPLOSION2
                globalsound PIPEBOMB_EXPLODE
                hitradius PIPEBOMBRADIUS 80 90 100 HANDBOMB_WEAPON_STRENGTH
                killit
                }
      }
   break
endswitch

endevent


action EXPBARRELFRAME     0   2   1   1   15
actor EXPLODINGBARREL 26
  fall
  ifaction EXPBARRELFRAME
  {
    ifactioncount 2
    {
      hitradius 1024 WEAKEST WEAK MEDIUMSTRENGTH TOUGH
      spawn EXPLOSION2
      debris SCRAP2 2
      sound PIPEBOMB_EXPLODE
      killit
    }
    break
  }
  ifsquished
  {
    debris SCRAP1 5
    killit
    break
  }
  ifhitweapon
    action EXPBARRELFRAME
enda

action BURNING_FLAME  0   12   1   1   2
move BURNING_VELS

defstate burningstate

  sleeptime 300
  seta[].blend 255
  cstator 2


  ifpdistg 10240
    break

  ifcount 128
  {
    ifspawnedby TIRE
    {
      ifactioncount 512
        killit
      ifrnd 16
        sizeto 64 48
    }
    else
    {
      sizeto 8 8
      sizeto 8 8
      ifcount 192
        killit
    }
  }
  else
  {
    ifmove 0
      move BURNING_VELS
    sizeto 52 52

    ifp palive
      ifpdistl 844
        ifrnd 32
          ifcansee
            {
				set fire_damage 5
				state playerincurfiredamage
            }
  }

ends

actor BURNING WEAK BURNING_FLAME
  state burningstate
enda

actor BURNING2 WEAK BURNING_FLAME
  state burningstate
enda

action TOILETWATERFRAMES 0 4 1 1 1
actor TOILETWATER 0 TOILETWATERFRAMES
  ifpdistl 8192
  {
  ifspritepal 3 nullop else
    soundonce WATER_GURGLE
    ifspawnedby TOILET
      sizeto 34 34
    else
    {
      ifspawnedby WATERFOUNTAINBROKE
        sizeto 6 15
      else
        ifspawnedby TOILETWATER
          nullop
      else
        sizeto 24 32
    }

    ifp palive
      ifpdistl RETRIEVEDISTANCE
        ifp pfacing
          ifactioncount 32
            ifphealthl 30
              ifhitspace
                ifcansee
                    {
                      addphealth 1
                    ifg INEBRIATION 0 { sub INEBRIATION 10 }
                      globalsound PLYR_DRINKING
                      resetactioncount
                    }
  }
enda

action WOODENHORSEFRAME  0   1   4
action WOODENFALLFRAME  122  1   5

actor HORSEONSIDE WEAKEST
  cactor WOODENHORSE
  action WOODENFALLFRAME
enda
actor WOODENHORSE WEAK WOODENHORSEFRAME
  fall
  ifhitweapon
  {
    ifdead
    {
      debris SCRAP1 4
      debris SCRAP2 3
      killit
    }
    else
      action WOODENFALLFRAME
  }
enda

defstate steamcode
  ifpdistl 6144
    soundonce STEAM_HISSING

  ifcount 20
    {
      resetcount
      ifp palive
        ifpdistl 1024
      {
        addphealth -1
        palfrom 16 16
      }
    }
  else
  {
    ifspawnedby STEAM
      nullop
    else
      ifspawnedby CEILINGSTEAM
        nullop
    else
    sizeto 24 24
  }
ends

action STEAMFRAMES    0     5     1     1     1
actor STEAM 0 STEAMFRAMES
  state steamcode
enda

actor CEILINGSTEAM 0 STEAMFRAMES
  state steamcode
enda

actor WATERBUBBLEMAKER 0 0 0
  ifpdistl 3084
    ifrnd 24
      spawn WATERBUBBLE
enda

action BUBBLE
action CRACKEDBUBBLE  0
move BUBMOVE       -10 -36
move BUBMOVEFAST     -10 -52

useractor notenemy WATERBUBBLE 0 BUBBLE BUBMOVE
  seta[].blend 255
  geta[].sectnum upd_sect
  updatesectorz sprite[].x sprite[].y sprite[].z upd_sect
  ifn upd_sect -1 changespritesect THISACTOR upd_sect

        ifrnd 192
        move BUBMOVE getv geth randomangle
      else
        move BUBMOVEFAST getv geth randomangle

  ifaction CRACKEDBUBBLE
  {
  ifactioncount 7 killit
  }
  else
  {
  cstator 2
    ifcount 4
    {

      ifrnd 84
        sizeto 8 10
      else
        ifrnd 84
          sizeto 10 8
      else
        sizeto 9 9
	resetcount
    }

    ifinwater
        nullop
    else
        { action CRACKEDBUBBLE resetactioncount }

    ifactioncount 40
        { action CRACKEDBUBBLE resetactioncount }
  }
enda

action LAVAFRAMES 0 5 1 1 10
useractor notenemy LAVASPLASH

ifaction 0
{
sizeat 32 32
spriteflags 4
seta[].shade -16
spawn SMALLSMOKE
action LAVAFRAMES
}

ifaction LAVAFRAMES
ifactioncount 5
killit

enda

move SMOKEVEL 8 -16
move SMOKEVELD 8 16
move ENGINE_SMOKE 64 -64
move SMOKESHOOTOUT -192

action DUSTFRAMES 0 6 1 1 10
useractor notenemy DUSTSMOKE 0 DUSTFRAMES

ifspawnedby SUCC_FLOWER_TURRET nullop
else sizeat 20 20

move SMOKEVEL geth getv
  ifactioncount 6
    killit
enda

move ML_UP 32 -32
move ML_DOWN 32 32
move NSSLOW 32 0

action GUNFRAMES 0 16 1 1 8
action NUKEFRAMES 1 0 1 1 90

useractor notenemy GUNSMOKE

ifaction 0
	{
	seta[].blend 255
	seta[].mdflags 16
	ifspawnedby 16005 { sizeat 16 16 cstat 514 ifpdistl 1024 killit }
	else ifspawnedby APLAYER { sizeat 4 4 cstat 514 }
	else ifspawnedby THEEBIKE { sizeat 4 4 cstat 130 }
	else ifspawnedby HEAT_SINK_F { seta[].blend 255 sizeat 4 4 cstat 130 }
	else
	ifspawnedby 7677
	{
	sizeto 226 226
	ifaction 0 action NUKEFRAMES
	cstat 514
	}
	else ifspawnedby NMIND { sizeat 32 32 sizeto 226 226 cstat 514 }
	else { sizeat 16 16 sizeto 128 128 cstat 514 }

	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	action GUNFRAMES
	}

ifspawnedby RPG
	{
	sizeto 64 64 cstat 642
	move ML_UP getv spin randomangle
	}
else
ifspawnedby NMIND
	{
	move ML_DOWN getv spin randomangle
	}
else
ifspawnedby THEEBIKE
	{
	sizeto 16 16
	move ML_UP getv geth
	}
else
ifaction NUKEFRAMES
	{
	move NSSLOW geth
	ifcount 512 killit
	}
else
    {
    ifceilingdistl 6
    move SMOKEVELD geth getv
    else
    move SMOKEVEL geth getv
    }

ifaction GUNFRAMES
  ifactioncount 16
    killit

  ifpdistl 1596
    ifspawnedby GEO_NADE
      killit

  ifpdistl 1596
    ifspawnedby 5968
      killit

enda

action BLOODEXFRAMES 0 4 1 1 10
useractor notenemy BLOOD_EX 0
sizeat 32 32
cstat 128

ifaction 0
{
ifrnd 128 cstator 4
action BLOODEXFRAMES
}

  ifactioncount 4
    killit

  ifpdistl 1596
    ifspawnedby GEO_NADE
      killit

enda

move WATERVEL 32 48
move WFRAMESMOKE 16 -96
move WFRAMESMOKEDOWN 16 96
move WFRAMESMOKE2 16 -48

spritenopal WFRAMES
spritenoshade WFRAMES
useractor notenemy WFRAMES
fall
ifmove 0
	{
	sizeat 4 4
	cstat 642
	ifspritepal 15 // slow chimney smoke
		{
		seta[].blend 255
		move WFRAMESMOKE2 geth getv
		}
	else
	ifspritepal 13 // black smoke
		{
		seta[].blend 253
		move WFRAMESMOKE spin geth getv
		}
	else
	ifspritepal 12 // steam/fast smoke
		{
		seta[].blend 255
		move WFRAMESMOKE spin geth getv
		}
	else
	ifspritepal 27 // steam/fast smoke down
		{
		seta[].blend 255
		move WFRAMESMOKEDOWN spin geth getv
		}
	else // water
		{
		seta[].blend 255
		move WATERVEL geth getv
		}
	ifrnd 64 action ONE
	else ifrnd 128 action TWO
	else ifrnd 196 action THREE
	else action FOUR
	}
else
	{
	geta[].shade temp
	ifspritepal 15 // chimney smoke
		{
		add INTERNALCOUNT 1
		ifge INTERNALCOUNT 3
			{
			add temp 1
			set INTERNALCOUNT 0
			}
		}
	else
	add temp 1
	seta[].shade temp
	ifge temp 35 killit
	sizeto 60 60
	ifn sprite[].pal 15
	ifn sprite[].pal 13
	 ifn sprite[].pal 12
		{
		state getfloordist
		ifl z 1
			{
			gets[].lotag temp
			ife temp 1 { espawn WATERSPLASH2 geta[].pal temp2 seta[RETURN].pal temp2 killit }
			}
		}
	}
enda



useractor notenemy 6517 // Cycloid railgun trail
ifcount 26 killit else
ifcount 13 sizeto 1 1
else sizeto 20 20

ifaction 0
{
seta[].blend 255
cstat 146
    action ZERO
}

enda

useractor notenemy 14420
ifcount 26 killit else
ifcount 13 sizeto 1 1
else sizeto 16 16

ifaction 0
{
cstat 144
hitradius 1024 100 60 50 40
action ZERO
}

enda


useractor notenemy 6522 // Railgun trail
ifcount 26 killit else
ifcount 13 sizeto 1 1
else sizeto 16 16


// if spawned as dragon projectile trail, make sure its green
ifspawnedby DRAGON_REGEN_PROJECTILE
    seta[].pal 8

ifaction 0
{
cstat 144
     findnearactor3d SHOOTME 768 temp9 ifn temp9 -1
        {
        getav[temp9].myowner temp8
        ifl sprite[temp8].htextra 150 seta[temp8].htextra 150
        }
    action ZERO
}

ifl temp4 254 add temp4 8
set alpha temp4
state SPRITE_FADE

enda

spritenoshade 21133
spritenopal 21133

useractor notenemy 21133 // Plasma Railgun trail
ifcount 26 killit else
ifcount 13 sizeto 1 1
else sizeto 16 16

ifaction 0
{
cstat 146
seta[].blend 255
     findnearactor3d SHOOTME 768 temp9 ifn temp9 -1
        {
        getav[temp9].myowner temp8
        ifl sprite[temp8].htextra 150 seta[temp8].htextra 150
        }
    action ZERO
}

ifaction ZERO
	{
	geta[].shade temp
	add temp 2
	seta[].shade temp
	ifge temp 30 killit
	}

enda

spritenoshade 30127
spritenopal 30127

useractor notenemy 30127 // Void trail
ifcount 26 killit else
ifcount 13 sizeto 1 1
else sizeto 12 12


ifaction 0
{
seta[].shade -127
seta[].blend 255
cstat 146
     findnearactor3d SHOOTME 768 temp9 ifn temp9 -1
        {
        getav[temp9].myowner temp8
        ifl sprite[temp8].htextra 150 seta[temp8].htextra 150
        }
 action ZERO
}

ifaction ZERO
{
geta[].shade temp
add temp 8
seta[].shade temp
ifge temp 34 killit
}

enda


spritenoshade 6575
spritenopal 6575

useractor notenemy 6575 // Meltabeam
spritepal 0
seta[].shade -127
ifcount 3 killit
else sizeat 18 18

ifaction 0
{
seta[].blend 255
cstat 146
     findnearactor3d SHOOTME 768 temp9 ifn temp9 -1
        {
        getav[temp9].myowner temp8
        seta[temp8].htextra 15
        getav[temp8].energy_damage temp7
        add temp7 5
        setactorvar[temp8].energy_damage temp7
        }
    action ZERO
}

enda

// electric trail

spritenoshade MODEL_TRAIL
spritenopal MODEL_TRAIL

useractor notenemy MODEL_TRAIL
sizeat 16 16
ifpdistl 1024 killit
ifpdistgvar opt_particle_distance killit
state model_owner_pitch
geta[].shade temp
add temp 3
seta[].shade temp
ifge temp 30 killit
enda

defstate LASER_CODE
ifaction 0
	{
	ife INVASION 1 killit
	state NOEVENTNOCLIPPING
	cstat 130
	seta[].blend 255
	seta[].shade -127
	action ZERO
	}
ifcansee nullop else killit
ifmultiplayer nullop else ifl framerate 15 killit
sizeto 4 4
geta[].shade temp
add temp 8
ifg temp 30 killit
seta[].shade temp
ends

spritenoshade 9395
useractor notenemy 9395 // green laser trail
state LASER_CODE
enda

spritenoshade 12902
useractor notenemy 12902 // blue laser trail
state LASER_CODE
enda

spritenoshade 6544
useractor notenemy 6544 // white laser trail
state LASER_CODE
enda

spritenoshade 6633
useractor notenemy 6633 // red laser trail
state LASER_CODE
enda

spritenoshade 11179
useractor notenemy 11179 // ice beam trail
state LASER_CODE
enda

spriteflags 13216 SFLAG_NOCLIP SFLAG_NOEVENTS

useractor notenemy 13216 // ally bullet trail
cstat 128
ifg INVASION 0 killit
ifmultiplayer nullop else ifl framerate 15 killit
ifcount 26 killit else
ifcount 13 sizeto 1 1
else sizeto 8 8
enda

action SMOKEFRAMES 0 4 1 1 10
actor SMALLSMOKE 0 SMOKEFRAMES
cstator 514
  ifmove 0
  {
  ifspawnedby 7047 seta[].blend 255 else
  seta[].blend 48
    ifspawnedby RECON
      move SMOKESHOOTOUT geth
    else
      ifspawnedby SECTOREFFECTOR
        move ENGINE_SMOKE geth getv
    else
      ifspawnedby BOSS2_RAIN_ROCKET
        move ENGINE_SMOKE geth getv
    else
      move SMOKEVEL geth getv faceplayer
    ifspawnedby 2698 cstat 514
    ifspawnedby JRGL_PROJ cstat 642
    ifspawnedby RPG
      cstat 514
    ifspawnedby SPELL4
      spritepal 514
    ifspawnedby CYCLOID_PLASMA { sizeat 24 24 cstat 514 spritepal 8 }
    ifspawnedby MICRO_MISSILE { sizeat 24 24 cstat 514 }
    ifspawnedby HOMING_MISSILE { sizeat 24 24 cstat 514 }
    ifspawnedby 7047 { sizeat 16 16 cstat 514 spritepal 29 }
    ifspawnedby LAVABALL { sizeat 32 32 cstat 514 spritepal 2 }
    ifspawnedby 14970 { sizeat 32 32 cstat 514 }
    ifspawnedby 3761 { sizeat 2 2 cstat 514 }
    ifspawnedby HEAT_SINK { seta[].blend 255 sizeat 4 4 cstat 514 }
    ifspawnedby REVOLV_SHELL { sizeat 4 4 cstat 514 }
    ifspawnedby TWENTY_SHELL { sizeat 4 4 cstat 514 }
    ifspawnedby SHELL_40MM { sizeat 4 4 cstat 514 }
    ifspawnedby EXSHELL { sizeat 4 4 cstat 514 }
    ifspawnedby FL_SHELL { sizeat 4 4 cstat 514 }
    ifspawnedby MAGN_SHELL { sizeat 4 4 cstat 514 }
    ifspawnedby SHOTSPARK1 killit
    ifspawnedby COMMANDER
        {
    move SMOKEVEL2 geth
    cstat 514
    }
    ifspawnedby MAMANO
        {
		sizeat 16 16
    move SMOKEVEL2 geth
    cstat 514
    }
    ifspawnedby ADV_COMMANDER
        {
    move SMOKEVEL2 geth
    cstat 514
    }
    ifspawnedby PE_SENTRY
        {
    move SMOKEVEL2 geth
    cstat 514
    }
    ifspawnedby SENTRY
        {
    move SMOKEVEL2 geth
    cstat 514
    }

    ifspawnedby KNEE
    ifactioncount 0
    {
    ifl UPPER_CUT 20 { soundonce UPPER_PUNCH stopsound KICK_HIT } else
    ife SPIN_KICK 20
    ife TWIRL_KICK 20
    ife ROUNDHOUSE_KICK 27
    ife SLIDE_KICK 27
    ife FLYING_KICK 27
    ife DROP_KICK 27
        {
        ifp pboosted sound SPUNCHHIT else
        ife CHAR 2 { ife cur_weap 0 sound PUNCHHIT } else
        sound PUNCHHIT
        }
        else ifp pboosted sound SPUNCHHIT else sound PUNCHHIT
    }
    ifspawnedby 14604 spawn 8433
    ifspawnedby 14605 spawn 8433
    ifspawnedby 4963 spawn 8433
    ifspawnedby 12204 spawn 8433
    ifspawnedby 20194 spawn 8433
    ifspawnedby 14970
        {
        ifactioncount 0
            {
            spawn 8433
            shoot SPARK
            shoot SPARK
            shoot SPARK
            shoot SPARK
            }
        }
    ifspawnedby CHAINSAW_PROJ
        {
        spawn 8433 shoot SPARK ifactioncount 0 sound CHAINSAW_HIT
        }
    ifspawnedby 12053
        {
        spawn 8433
        ifactioncount 0 sound HIT_SWORD
        }
    ifspawnedby 27370
        {
        spawn 8433
        ifactioncount 0 sound HIT_SWORD
        }
    ifspawnedby 12054
        {
        ifactioncount 0 sound MOP_HIT
        }
    ifspawnedby 19027 // Beamsabre
        {
        spawn 8433
        shoot SPARK shoot SPARK
        ifactioncount 0 sound BEAMSABRE_HIT
        }
    ifspawnedby 6874
        {
        spawn 8433
        shoot SPARK shoot SPARK
        ifpdistl 256 killit
        }
    ifspawnedby 6875
        {
        spawn 8433
        ifpdistl 256 killit
        }
  }
  ifpdistl 1596
   ifspawnedby MICRO_MISSILE
      killit
  ifpdistl 1596
   ifspawnedby HOMING_MISSILE
      killit
  ifpdistl 1596
    ifspawnedby MISSILE
      killit
  ifpdistl 1596
    ifspawnedby 2698
      killit
  ifpdistl 1596
    ifspawnedby 2704
      killit
  ifpdistl 1596
    ifspawnedby RPG
      killit
  ifpdistl 1596
    ifspawnedby SPELL4
      killit
  ifpdistl 1596
    ifspawnedby 7047
      killit
  ifpdistl 512
    ifspawnedby 4963
      killit
  ifpdistl 512
    ifspawnedby 14604
      killit
  ifpdistl 512
    ifspawnedby 14605
      killit
  ifactioncount 4
    killit

enda

action BARREL_DENTING  2 2 1 1 6
action BARREL_DENTED   1
action BARREL_DENTED2  2

move SPAWNED_BLOOD

actor NUKEBARRELDENTED WEAK
  cactor NUKEBARREL
  action BARREL_DENTED
enda

actor NUKEBARRELLEAKED WEAK
  cactor NUKEBARREL
  action BARREL_DENTED2
enda


actor NUKEBARREL MEDIUMSTRENGTH
  ifsquished
  {
    debris SCRAP1 32
    spawn BLOODPOOL
    state random_ooz
    killit
  }
  fall
  ifaction BARREL_DENTING
  {
    ifactioncount 2
    {
      debris SCRAP1 10
      ifrnd 2 spawn BLOODPOOL
      killit
    }
  }
  else
    ifhitweapon
  {
    ifdead
    {
      sound VENT_BUST

      ifrnd 128
        spawn BLOODPOOL
      action BARREL_DENTING
    }
    else
    {
      ifaction 0
        action BARREL_DENTED
      else
        ifaction BARREL_DENTED
      {
        action BARREL_DENTED2
        spawn BLOODPOOL
      }
      else
        ifaction BARREL_DENTED2
          action BARREL_DENTING
    }
  }
enda

action SHRINKERFRAMES 0 4 1 1 10
actor SHRINKEREXPLOSION 0 SHRINKERFRAMES
  ifactioncount 4
    killit

cstator 514
seta[].blend 255

ifspawnedby SPELL2 spritepal 1
ifspawnedby 22610 spritepal 1
ifspawnedby GOLD_SPELL2 spritepal 7
ifspawnedby 9376 spritepal 27
ifspawnedby 19807 { cstat 130 sizeat 8 8 spritepal 7 }
ifspawnedby 6198 { cstat 130 sizeat 8 8 spritepal 1 }
ifspawnedby TESLA_BOLT { cstat 130 sizeat 8 8 spritepal 1 }
ifspawnedby 6627 { cstat 130 sizeat 14 14 spritepal 8 }

enda

action UNDERW_EXP_FRAMES 0 14 1 1 4

useractor notenemy 18920

ifaction 0
{
seta[].blend 255
sizeat 96 96
cstat 130
action UNDERW_EXP_FRAMES
spawn WATERBUBBLE spawn WATERBUBBLE spawn WATERBUBBLE spawn WATERBUBBLE
}

ifactioncount 14 killit

enda

action EXPLOSION_FRAMES 0 21 1 1 0

actor EXPLOSION2 1

ifspawnedby 9359 { spritepal 2 sizeat 32 32 }
ifspawnedby 9361 { spritepal 2 sizeat 24 24 }
ifspawnedby 5460 sizeat 64 64
ifspawnedby 7047 sizeat 16 16

ifspawnedby CYCLOID_PLASMA spritepal 8

ifspawnedby MI_24_HIND sizeat 128 128
ifspawnedby KA_50_BLACK_SHARK sizeat 128 128
ifspawnedby BLACK_HAWK sizeat 128 128
ifspawnedby AMCSHIP sizeat 128 128
ifspawnedby AMCSHIP2 sizeat 128 128

ifspawnedby HOVERCRAFT sizeat 48 48

ifspawnedby SPELL4 spritepal 2

ifspawnedby CHARMED_DYNA spritepal 1

ifinwater { spawn WATERBUBBLE spawn 18920 killit }

ifspawnedby GORO_EXPLODING_FLAME
{
	// ignore self damage on explosions from goro_exploding flame. Set the owner to the owner of the flame... Use ownersaved as regular owner is not reliable
	ife OWNERSAVED 0
	{
		geta[].owner temp

		ifn temp -1
		{
			getav[temp].OWNERSAVED temp2

			ifn temp2 0
			{
				geta[temp2].picnum temp3
				seta[].owner temp2
				set OWNERSAVED temp2 // save on explosion as well
			}
			else
			{
				seta[].owner PLAYER_IDENTITY
			}
		}
		else
			seta[].owner PLAYER_IDENTITY
	}
	else
		seta[].owner OWNERSAVED

    sizeat 24 24
    spritepal 2
    ifpdistl 2048 killit
    ifactioncount 1
        {
        hitradius 1024 20 40 60 80
        ifpdistl 8192 sound GORO_EXPLOSION else sound DISTANT_EXPLOSION
        }
}

ifspawnedby WTANKPROJ ife temp 0 { hitradius 2500 200 300 400 800 sizeat 128 128 set temp 1 }

ifaction 0
{
iffloordistl 8 ifg sprite[].yrepeat 16 { espawn EXPLOSION2BOT seta[RETURN].pal sprite[].pal }
ifceilingdistl 8 ifg sprite[].yrepeat 16 { espawn EXPLOSION2BOT seta[RETURN].pal sprite[].pal }
seta[].blend 255
cstat 130
state explosion_shake
action EXPLOSION_FRAMES
    ifspawnedby SEENINE
    {
    geta[].owner temp
    geta[temp].pal temp2
    ife temp2 3
        {
        espawn SOUND_SPRITE
        setactorvar[RETURN].temp DISTANT_EXPLOSION
        }
        else
    ife temp2 9
        {
        state explosion_shake
        palfrom 30 30 30 30
        soundonce MISSILE_LAUNCH
        }
        else
        {
        espawn SOUND_SPRITE
        ifinwater setactorvar[RETURN].temp UNDERWATER_EXP
        else setactorvar[RETURN].temp RPG_EXPLODE
        }
    }
}

ifspawnedby C4_PLACE_HERE sizeto 64 64

ifspawnedby CLUSTER_PROJ
ife temp3 0
    {
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    shoot CLUSTER_BOMB
    set temp3 1
    }

ifspawnedby 12969
ifactioncount 0
    {
    shoot CLUSTER_BOMB2
    shoot CLUSTER_BOMB2
    shoot CLUSTER_BOMB2
    shoot CLUSTER_BOMB2
    shoot CLUSTER_BOMB2
    shoot CLUSTER_BOMB2
    }

ifspawnedby 7790 sizeat 16 16

ifspawnedby 5968
{
sizeto 64 64
}

ifspawnedby FUELPOD
{
spawn GROUNDEXPLOSION
hitradius 2048 50 100 125 150
globalsound LASERTRIP_EXPLODE
killit
}

ifspawnedby SATELLITE
ifactioncount 1
{
hitradius 2048 50 100 125 150
globalsound LASERTRIP_EXPLODE
}

ifspawnedby SOLARPANNEL
ifactioncount 1
{
hitradius 2048 50 100 125 150
globalsound LASERTRIP_EXPLODE
}

ifspawnedby ANTENNA
ifactioncount 1
{
hitradius 2048 50 100 125 150
globalsound LASERTRIP_EXPLODE
}

  ifactioncount 21
    killit

enda

action EXPLOSION_FRAMES2 0 20 1 1 0

spritenoshade BIG_EXPLOSION

useractor notenemy BIG_EXPLOSION 1  // Big explosion

ifaction 0
{
	cstator 2
	seta[].blend 255
	ifspawnedby MICRO_MISSILE flash

	dist xydist THISACTOR player[].i

	// custom shake code since it's a bigger explosion
	// the custom shake exacerbates what seems to be a sprite interpolation issue on the tank's movement so reduce it if it's by WTANKPROJ
	shiftvarr xydist 8
	clamp xydist 0 96
	ifl xydist 96
	{
		ifspawnedby WTANKPROJ
			set temp 24
		else
			set temp 98

		sub temp xydist
		set screen_shake temp
		div temp 4
		set shake_strength temp
		clamp shake_strength 0 14
	}

	seta[].shade -127
	cstat 130
	seta[].blend 255

	ifspawnedby 16005
		{
		sizeat 60 60
		shoot SPARK shoot SPARK shoot SPARK
		shoot LAVABALL shoot LAVABALL shoot LAVABALL
		spritepal 2
		quake 26
		}
	else
	ifspawnedby 21602
		{
		sizeat 90 90
		shoot SPARK shoot SPARK shoot SPARK
		shoot LAVABALL shoot LAVABALL shoot LAVABALL
		spritepal 2
		quake 26
		}
	else
	ifspawnedby WTANKPROJ { sizeat 90 90 flash }
	else
	ifspawnedby 18271 sizeat 64 64 else
	ifspritepal 3 sizeat 64 64 else
	sizeat 32 32
	action EXPLOSION_FRAMES2
}

    geta[].shade temp
    add temp 8
    seta[].shade temp

  ifactioncount 20
    killit

enda

spritenoshade MISSILE_EXPLOSION

action MISSILE_EX_FRAMES 0 16 1 1 0

useractor notenemy MISSILE_EXPLOSION 1 0
ifaction 0 { ifonwater spawn 18138 ifinwater { spawn 18920 killit } seta[].blend 255 state explosion_shake action MISSILE_EX_FRAMES cstat 130 ifrnd 128 cstator 4 }
sizeat 32 32


seta[].shade -127

  ifactioncount 16
    killit


enda

action GROUNDEX_FRAMES 0 9 1 1 6
spritenoshade GROUNDEXPLOSION
useractor notenemy GROUNDEXPLOSION 1 GROUNDEX_FRAMES
fall
cstat 2
seta[].blend 255
ifspawnedby CLUSTER_BOMB sizeat 32 32 else
sizeat 64 64

ifspawnedby FIREWALL_BOMB
 ifmove 0
	{
	geta[].ang temp2
	add temp2 256
	seta[].ang temp2
	setprojectile[GORO_EXPLODING_FLAME].workslike 36866
	shoot GORO_EXPLODING_FLAME
	add temp2 512
	seta[].ang temp2
	shoot GORO_EXPLODING_FLAME
	add temp2 512
	seta[].ang temp2
	shoot GORO_EXPLODING_FLAME
	add temp2 512
	seta[].ang temp2
	shoot GORO_EXPLODING_FLAME
	setprojectile[GORO_EXPLODING_FLAME].workslike 0x08002
	move STOP
	}

seta[].shade -127


  ifactioncount 9
    killit


enda

action NUKE_FLASH_FRAMES 0 12 1 1 8

spritenoshade 15954
useractor notenemy 15954 1 0
ifaction 0
    {
    geta[].htflags temp2
    orvar temp2 2048
    seta[].htflags temp2
    sizeat 80 80
    cstat 130
    seta[].blend 255
    action NUKE_FLASH_FRAMES
    seta[].shade -127
    }

ifactioncount 12 killit

enda

action MAGIC_SPAWN_FRAMES 0 22 1 1 0

spritenoshade 18623
spritenopal 18623

spriteflags 18623 16

useractor notenemy 18623 1 0
ifaction 0
{
        ifspawnedby LESANG
            {
            sizeat 64 64
            spritepal 1
            }
            else
            ifspawnedby 10287
            {
            sizeat 64 64
            spritepal 2
            }
            else
        sizeat 32 32
        seta[].blend 255
        cstat 2
        seta[].shade -127
        ifspawnedby HOVERCRAFT move FLYSLOW geth randomangle
        action MAGIC_SPAWN_FRAMES
}
ifaction MAGIC_SPAWN_FRAMES
{
ifactioncount 22 killit
}

enda

action SPLASH_FRAMES 0 15 1 1 0
action SPLASH_FRAMES2 0 15 1 1 4

move SPLASH_OUT 96 0

useractor notenemy 18138 1 0 // Big wave
ife temp 1 move SPLASH_OUT geth
	ifaction 0
	{
	fall
		ifspawnedby RESPAWN
		{
			state explosion_shake
			sound WAVECRASH
			sizeat 128 128 sizeto 200 200
			seta[].blend 255
			cstat 130
			action SPLASH_FRAMES2
		}
		else ifspawnedby INSTANT_RESPAWN
		{
			state explosion_shake
			sound WAVECRASH
			sizeat 200 200 sizeto 255 255
			seta[].blend 255
			cstat 130
			action SPLASH_FRAMES2
		}
		else ifspawnedby EXPLOSION2
		{
			sizeat 128 128 sizeto 200 200
			seta[].blend 255
			cstat 130
			action SPLASH_FRAMES2
		}
		else ifspawnedby HYDRA
		{
			sizeat 128 128 sizeto 200 200
			seta[].blend 255
			cstat 130
			action SPLASH_FRAMES2
		}
		else ifspawnedby KRAKEN
		{
			sizeat 128 128 sizeto 200 200
			seta[].blend 255
			cstat 130
			action SPLASH_FRAMES2
		}
		else ifspawnedby KRAKEN_TENT
		{
			sizeat 128 128 sizeto 200 200
			seta[].blend 255
			cstat 130
			action SPLASH_FRAMES2
		}
		else
		{
			sizeat 64 64
			sizeto 128 128
			seta[].blend 255
			cstat 514
			ifspawnedby 29020 cstator 128
			action SPLASH_FRAMES
		}
		seta[].shade -127
	}

	ifaction SPLASH_FRAMES
	{
		ifactioncount 15 killit
	}

	ifaction SPLASH_FRAMES2
	{
		ifactioncount 15 killit
	}
enda

action NUCLEAR_EX_FRAMES 0 24 1 1 12

move NUKE_SHROOM 100 -140

spritenoshade NUCLEAR_EXPLOSION
useractor notenemy NUCLEAR_EXPLOSION 1 0
ifaction 0
    {
    ifspawnedby ATOM_BOMB sound GEIGER_2
    geta[].htflags temp2
    xorvar temp2 2048
    seta[].htflags temp2
    ifspawnedby NUCLEAR_EXPLOSION
        {
        set NUKE_ACTIVE 1
        move NUKE_SHROOM geth getv
        seta[].blend 255
        cstat 2
        spritepal 2
        sizeat 100 100
        action NUCLEAR_EX_FRAMES
        }
    else
        {
        spawn 15954
        state fade_out_white
        setgamepalette 5
        set screen_shake 250
		set shake_strength 10
        action NUCLEAR_EX_FRAMES
        seta[].blend 255
        spritepal 2
        cstat 2
        ifrnd 128 cstator 4
        state spawn_nuke_smokering
        state getceildist
        ifg z 400
            {
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 0
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 256
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 512
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 768
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 1024
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 1280
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 1536
            espawn NUCLEAR_EXPLOSION
            seta[RETURN].ang 1792
            }
        }
    }
ifspawnedby NUCLEAR_EXPLOSION sizeto 150 150
else sizeat 140 240

seta[].shade -127
ifspawnedby 18271 nullop else flash

ifspawnedby 18271
 ifcount 2
    {
        geta[].x temp
        geta[].y temp2
        set temp3 temp
        add temp3 2048
        randvar temp4 2048
        rotatepoint temp temp2 temp3 temp2 temp4 temp5 temp6
        espawn BIG_SMOKE2
        seta[RETURN].x temp5
        seta[RETURN].y temp6
        set temp6 0
        resetcount
    }

ifmove NUKE_SHROOM move NUKE_SHROOM geth getv

ifactioncount 20
 ife INTERNALCOUNT 0
    {
    ifspawnedby NUCLEAR_EXPLOSION nullop else
        {
        geta[].z temp4
        sub temp4 65536
        espawn 18551 seta[RETURN].pal 3
        espawn 18551 seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 128 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 256 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 384 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 512 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 640 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 768 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 896 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1024 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1152 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1280 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1408 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1536 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1664 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1792 seta[RETURN].ang temp seta[RETURN].z temp4
        espawn 18551 geta[RETURN].ang temp add temp 1920 seta[RETURN].ang temp seta[RETURN].z temp4
        }
    set INTERNALCOUNT 1
    }

ife INTERNALCOUNT 1
    {
    geta[].shade temp3
    add temp3 2
    seta[].shade temp3
    }

  ifactioncount 24
    {
    set NUKE_ACTIVE 0
    palfrom 20 20 0 0
    setgamepalette 0
    killit
    }

enda

useractor notenemy 18551
ifaction 0
    {
    geta[].htflags temp2
    orvar temp2 2048
    seta[].htflags temp2
    seta[].blend 255
    cstat 2
    ifspritepal 3 sizeat 160 240 else { sizeat 240 240 move TROOPWALKVELS geth }
    action ZERO
    }

ifaction ZERO
    {
    ifcount 256
        {
        seta[].htflags 4
        set temp2 1
        }
    }

ife temp2 1
    {
    geta[].shade temp3
    add temp3 1
    ifg temp3 30 killit
    seta[].shade temp3
    }

enda

spritenoshade 12722

action AN_MAGIC_EX 0 4 1 1  6
useractor notenemy 12722
seta[].blend 255

ifaction 0
{
cstat 130
sizeat 32 32
shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2
seta[].shade -127
action AN_MAGIC_EX
}

  ifactioncount 4
    killit

enda

action SKULLE_FRAMES 0 7 1 1  6
useractor notenemy SKULLEXPLOSION 1 SKULLE_FRAMES
seta[].blend 255
ifspawnedby SPELL8
{
sizeat 32 32
cstat 130
}
else
ifspawnedby 6200
{
sizeat 20 20
spritepal 0
cstat 130
}
else
ifspawnedby 6221
{
sizeat 40 40
spritepal 30
cstat 130
}
else
ifspawnedby JEDR_SKULL
{
sizeat 40 40
spritepal 7
cstat 130
}
else
ifspawnedby STYGIAN_ROCK
{
state explosion_shake
spritepal 2
sizeat 48 48
cstat 130
ife INTERNALCOUNT 0
    {
    flash
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    set INTERNALCOUNT 1
    }
}
else
ifspawnedby FSTYGIAN_ROCK
{
state explosion_shake
spritepal 2
sizeat 48 48
cstat 130
ife INTERNALCOUNT 0
    {
    flash
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    shoot ROCKDEB_2
    set INTERNALCOUNT 1
    }
}
else
ifspawnedby HEARTLEECHFLOAT
{
spritepal 2
sizeat 32 32
cstat 2
}
else
{
sizeat 64 64
cstat 2
}

  ifactioncount 7
    killit

enda

// BLOOD EXPLOSION 2

action BLOODE_FRAMES 0 9 1 1 0
useractor notenemy BIG_BLOOD_EXE 1 BLOODE_FRAMES

cstat 2
ifspawnedby SORCERER { spritepal 1 cstator 128 }
seta[].blend 255
sizeat 40 40

  ifactioncount 9
    killit

enda

action RUBYEX_FRAMES 0 6 1 1 6
spritenoshade RUBYBLAST_EX
useractor notenemy RUBYBLAST_EX

ifaction 0
    {
    cstat 130
    ifpdistl 2048 nullop else
        {
        spawn 8433
        shoot SPARK shoot SPARK
        }
    sizeat 32 32
    sizeto 48 48
    action RUBYEX_FRAMES
    }

  ifactioncount 6
    killit

enda



action ACID_EXPLOSION_FRAMES 0 4 1 1 12
spritenoshade ACID_EXPLOSION
useractor notenemy ACID_EXPLOSION 1 ACID_EXPLOSION_FRAMES

    ife temp 0 { espawn 8433 seta[RETURN].pal 8 set temp 1 }
	seta[].shade -127
    cstat 2
    seta[].blend 255
    sizeat 20 20

ifactioncount 5 killit

enda

action ENERGYEXPLOSION_FRAMES 0 5 1 1 10
spritenopal ENERGY_EXPLOSION
spritenoshade ENERGY_EXPLOSION
useractor notenemy ENERGY_EXPLOSION 1 ENERGYEXPLOSION_FRAMES

ifspawnedby CYC_RAILGUN
    {
    shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK
    espawn 8433 seta[RETURN].pal 2
    cstat 128
    sizeat 25 25
    spritepal 21
    ifactioncount 1 flash
    }
else
ifspawnedby VOID_BOLT // Void bolt
    {
    seta[].blend 255
    cstat 130
    sizeat 20 20
    spritepal 30
    }
else
ifspawnedby VOID_TOTEM // Void totem
    {
    seta[].blend 255
    cstat 130
    sizeat 20 20
    spritepal 30
    }
else
ifspawnedby 28977 // Magic axe
    {
    seta[].blend 255
    cstat 130
    sizeat 20 20
    spritepal 8
    }
else
ifspawnedby 30081 // Magic hammer
    {
    seta[].blend 255
    cstat 130
    sizeat 32 32
    spritepal 2
    }
else
ifspawnedby TROLLFIREWALL // Magic hammer
    {
    seta[].blend 255
    cstat 130
    sizeat 32 32
    spritepal 1
    }
else
ifspawnedby HADESPHERE
    {
    shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK
    seta[].blend 255
    cstat 130
    sizeat 40 40
    spritepal 2
    }
else
ifspawnedby SF_GRENADE
    {
    shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2
    espawn 8433 seta[RETURN].pal 1
    seta[].blend 255
    cstat 130
    sizeat 40 40
    spritepal 1
    ifactioncount 1 { flash state explosion_shake }
    }
else
ifspawnedby GOLEM
    {
    seta[].blend 255
    cstat 130
    sizeat 40 40
    spritepal 1
    ifactioncount 1 { flash state explosion_shake }
    }
else
ifspawnedby EMP_GRENADE
    {
    shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2 shoot SPARK2
    espawn 8433 seta[RETURN].pal 1
    seta[].blend 255
    cstat 130
    sizeat 40 40
    spritepal 1
    ifactioncount 1 { flash state explosion_shake }
    }
else
ifspawnedby REDM_BLAST
    {
    shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK
    espawn 8433 seta[RETURN].pal 2
    seta[].blend 255
    cstat 130
    sizeat 40 40
    spritepal 2
    ifactioncount 1 { flash state explosion_shake }
    }
else
ifspawnedby BLOOD_BLAST
    {
    shoot SPARK shoot SPARK
    espawn 8433 seta[RETURN].pal 2
    seta[].blend 255
    cstat 130
    sizeat 40 40
    spritepal 2
    ifactioncount 1 { flash state explosion_shake }
    }
else
ifspawnedby MC_TRAP_IDLE
    {
    ife temp 0 { espawn 8433 seta[RETURN].pal 1 set temp 1 }
    cstat 130
    seta[].blend 255
    sizeat 20 20
    spritepal 1
    }
else
ifspawnedby 7160
    {
    ife temp 0 { espawn 8433 seta[RETURN].pal 1 set temp 1 }
    cstat 130
    seta[].blend 255
    sizeat 20 20
    spritepal 1
    }
else
ifspawnedby ICE_BLAST
    {
    ife temp 0 { espawn 8433 seta[RETURN].pal 1 set temp 1 }
    cstat 130
    seta[].blend 255
    sizeat 30 30
    spritepal 1
    }
else
ifspawnedby THUND_BLAST
    {
    ife temp 0 { espawn 8433 seta[RETURN].pal 1 set temp 1 }
    cstat 130
    seta[].blend 255
    sizeat 30 30
    spritepal 1
    }
else
ifspawnedby QUIETUS_BLAST
    {
    ife temp 0 { espawn 8433 seta[RETURN].pal 8 set temp 1 }
    cstat 130
    seta[].blend 255
    sizeat 40 40
    spritepal 8
    }
else
    {
    ife temp 0 { espawn 8433 seta[RETURN].pal sprite[].pal set temp 1 }
    cstat 2
    seta[].blend 255
    sizeat 20 20
    }


ifactioncount 5 killit

enda

action BLOODTRAIL_FRAMES 0 5 1 1  6
useractor notenemy BLOODTRAIL 1 0
ife INVASION 1 killit
ifmultiplayer killit
ifspawnedby ORC_TORSO_FLY spritepal 8
ifspawnedby 4714 spritepal 8
ifspawnedby ORC_CORPSE_FLY spritepal 8
ifspawnedby ORC_HEAD spritepal 8
ifaction 0 { sizeat 24 24 state rf cstator 128 action BLOODTRAIL_FRAMES }

  ifactioncount 6
    killit

enda

action GORO_FLAME_EXPLOSION_FRAMES 0 5 1 1 6

spritenoshade GORO_FLAME_EX

useractor notenemy GORO_FLAME_EX 1 0
ifaction 0
    {
    sizeat 16 16
    cstat 128
    seta[].shade -127
    action GORO_FLAME_EXPLOSION_FRAMES
    }

ifaction GORO_FLAME_EXPLOSION_FRAMES
 ifactioncount 5 killit

enda


spritenoshade 15184

useractor notenemy 15184 1 0
ifaction 0
    {
    sizeat 16 16
    cstat 128
    seta[].shade -127
    action GORO_FLAME_EXPLOSION_FRAMES
    }

ifaction GORO_FLAME_EXPLOSION_FRAMES
 ifactioncount 5 killit

enda

action SHADEFEXPLOSION_FRAMES 0 6 1 1  6

spritenoshade SHADEFEXPLOSION
useractor notenemy SHADEFEXPLOSION 1 SHADEFEXPLOSION_FRAMES
seta[].blend 255
ifspawnedby 7160 { sizeat 16 16 cstat 646 spritepal 1 ifpdistl 1024 killit } else
ifspawnedby 7163 { sizeat 16 16 cstat 646 spritepal 2 ifpdistl 1024 killit } else
ifspawnedby 19029 { sizeat 8 8 cstat 646 spritepal 27 ifpdistl 1024 killit } else
ifspawnedby 27364 { sizeat 8 8 cstat 646 spritepal 2 ifpdistl 1024 killit } else
ifspawnedby 27365 { sizeat 8 8 cstat 646 spritepal 1 ifpdistl 1024 killit } else
ifspawnedby 27366 { sizeat 8 8 cstat 646 spritepal 32 ifpdistl 1024 killit } else
ifspawnedby 27372 { sizeat 8 8 cstat 646 ifrnd 128 spritepal 1 else ifrnd 96 spritepal 32 else spritepal 2 ifpdistl 1024 killit } else
ifspawnedby SHOTSPARK1 { spritepal 1 sizeto 16 16 cstat 130 } else
ifspawnedby 7526 { sizeat 26 26 cstat 130 } else
ifspawnedby BRUISERFIREBALL { spritepal 19 sizeat 26 26 cstat 646 ifpdistl 1024 killit } else
ifspawnedby STYGIAN_ROCK { spritepal 2 sizeat 32 32 cstat 130 ifpdistl 1024 killit } else
{ sizeto 32 32 cstat 130 }

ifspawnedby 27372
    {
    ifactioncount 1
        {
        shoot SPARK shoot SPARK2 shoot SPARK shoot SPARK2 shoot SPARK killit
        }
    }

  ifactioncount 7
    killit

enda

action HADESFEXPLOSION_FRAMES 0 6 1 1  6
spritenopal HADESFEXPLOSION
spritenoshade HADESFEXPLOSION
useractor notenemy HADESFEXPLOSION 1 HADESFEXPLOSION_FRAMES
seta[].blend 255
sizeat 32 32 cstat 130


  ifactioncount 6
    killit

enda

action BRUISERFEXPL_FRAMES 0 12 1 1  6
spritenopal BRUISERFEXPLOSION
spritenoshade BRUISERFEXPLOSION
useractor notenemy BRUISERFEXPLOSION

ifaction 0
    {
    seta[].blend 255
    sizeat 40 40
    cstat 130
    shoot SPARK
    shoot SPARK
    shoot SPARK
    action BRUISERFEXPL_FRAMES
    }
	sizeto 80 80
  ifactioncount 12
    killit

enda

action PULSEE_FRAMES 0 4 1 1  6
spritenoshade PULSEEXPLOSION
useractor notenemy PULSEEXPLOSION 1 PULSEE_FRAMES

sizeat 32 32
seta[].blend 255
cstat 130

 ifactioncount 2 nullop else
ifactioncount 1 shoot SPARK

  ifactioncount 4
    killit
enda

spritenopal BOLT_EXPLOSION
spritenoshade BOLT_EXPLOSION

action BOLT_EX_FRAMES 0 4 1 1  8
useractor notenemy BOLT_EXPLOSION

ifaction 0
	{
	sizeat 16 16
	ifspawnedby PRIEST_BLAST spritepal 7
	else ifspawnedby RED_ARCH_BOLT spritepal 2
	else ifspawnedby VOID_ARCH_BOLT spritepal 30
	else ifspawnedby VOID_PLAYER_BOLT spritepal 30
	else spritepal 8
	cstat 130
	seta[].blend 255
	action BOLT_EX_FRAMES
	espawn BIG_SMOKE
	seta[RETURN].pal sprite[].pal
	}

  ifactioncount 4
    killit
enda


spritenopal PLASMA_EX
action GASBURSTEX_FRAMES 0 6 1 1 1
useractor notenemy PLASMA_EX

ifaction 0
	{
	sizeat 32 32
	seta[].blend 255
	ifspawnedby MPLASMA { shoot SPARK2 shoot SPARK2 spritepal 1 }
	else ifspawnedby MDF_PLASMA { shoot SPARK2 shoot SPARK2 spritepal 1 }
	else ifspawnedby PLASMAPROJ spritepal 30
	else { shoot SPARK shoot SPARK spritepal 2 }
	cstat 130
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	action GASBURSTEX_FRAMES
	}

ifaction GASBURSTEX_FRAMES
	{
	sizeto 48 48
	  ifactioncount 6
		{
		spawn BIG_SMOKE
		killit
		}
	}
enda

action CRYSTALE_FRAMES 0 5 1 1  6
useractor notenemy CRYSTALEXPLOSION 1 CRYSTALE_FRAMES

ifspawnedby SPELL1 sizeat 32 32
ifspawnedby SPELL7 { sizeat 32 32 spritepal 2 }
ifspawnedby SPELL9 sizeat 48 48
ifspawnedby GOLD_SPELL1 { sizeat 32 32 spritepal 23 }
ifspawnedby PRIEST_BLAST { sizeto 32 32 spritepal 23 }
ifspawnedby VOID_BOLT { sizeto 16 16 spritepal 30 }

seta[].blend 255
cstat 130

ife temp 0 ifinwater { spawn WATERBUBBLE set temp 1 }

  ifactioncount 5
    killit
enda

action EXPLOSION2_BOT -329 20 1 1 0

actor EXPLOSION2BOT 1 0

ifaction 0
{
move STOP randomangle
cstat 1058
sizeat 40 40
iffloordistl 32 seta[].z sector[].floorz
ifceilingdistl 32 seta[].z sector[].ceilingz
seta[].blend 255
gets[].floorpicnum FLOORTEX
state CHECKSTEPS
    switch STEPSOUNDFX
        case 4
        case 10
        case 27
        case 33
            ifrnd 128 sound DIRTB_01 else sound DIRTB_02
            break
        case 8
        case 28
            ifrnd 96 sound SANDB_01 else ifrnd 128 sound SANDB_02 else sound SANDB_03
            break
        case 11
        case 34
            ifrnd 96 sound STONEB_01 else ifrnd 128 sound STONEB_02 else sound STONEB_03
            break
        case 31
            sound COINSB_01
            break
        default
        break
    endswitch
action EXPLOSION2_BOT
}

  ifactioncount 20
    killit
enda

action FFLAME_FR 0 16 1 1 1
action FFLAME 0 1 1 1 1

actor FLOORFLAME 0 FFLAME_FR
  ifaction FFLAME_FR
  {
    ifpdistl 1024
      hitradius 1024 WEAKEST WEAKEST WEAKEST WEAKEST
    ifactioncount 16
      action FFLAME
  }
  ifaction FFLAME
    ifrnd 4
  {
    action FFLAME_FR
    sound FLAMETH_STOP
    resetactioncount
  }
enda


action RIP_F 0 8 1 1 1
actor FORCERIPPLE 0 RIP_F
sizeto 32 32
cstator 514
seta[].blend 255
  ifactioncount 8
    killit
enda

action TRANSFOWARD -129  6  1  1  2
action TRANSBACK   -124  6  1 -1  2
actor TRANSPORTERSTAR

ifaction 0
    {
    action TRANSFOWARD
    seta[].blend 255
    cstator 2
    resetactioncount
    }
  ifaction TRANSFOWARD
  {
    ifactioncount 6
      {
      action TRANSBACK
      resetactioncount
      }
  }
  else
    ifactioncount 6
      killit



    ifspawnedby RESPAWN killit

   ifspawnedby 5372
        {
        sizeto 128 128
        spritepal 1
        seta[].blend 255
        cstat 130
        }

   ifspawnedby DAYBLAST
      {
      geta[].owner temp
      geta[temp].xrepeat temp2
      seta[].xrepeat temp2
      geta[temp].yrepeat temp2
      seta[].yrepeat temp2
      }

   ifspawnedby 5374
        {
        sizeto 128 128
        spritepal 1
        seta[].blend 255
        cstat 130
        }

enda

spritenoshade TRANSPORTERBEAM

action BEAMFOWARD  0  4  1  1  9
actor TRANSPORTERBEAM

ifaction 0
{
seta[].shade -127
seta[].blend 255
cstat 130
ifspawnedby 15626 sizeat 160 160
action BEAMFOWARD
}

ifspawnedby SECTOREFFECTOR // TELEPORT EFFECTS
    {
    geta[].owner temp4
    geta[temp4].shade temp5
    ifactioncount 0
        {
        ife temp3 0
            {
            ife temp5 22
                {
                sound TELEPORT_IN
                spawn 18623
                ifcansee palfrom 30 0 30 0
                cstat 32768
                }
            else
            ife temp5 23
                {
                globalsound SOMETHINGHITFORCE
                state hard_removefollower
                palfrom 30 0 30 0
                cstat 32768
                }
            else
            ife temp5 25
                {
                globalsound DEMON_TELEPORT
                ifcansee palfrom 30 30 0 0
                cstat 32768
                }
            else
            ife temp5 26
                {
                globalsound USE_TIMEPORTAL
                ifpdistl 4096 state fade_out_white
                spawn 8433
                cstat 32768
                }
            else
            ife temp5 27
                {
                globalsound VR_GLITCH
                ifcansee state fade_out_white
                spawn 8433
                cstat 32768
                }
            else
			{
				// Play the "global" sound only if the player is close enough -> Fixes random teleport sounds in AMC base
				dist temp3 THISACTOR PLAYER_IDENTITY
				ifl temp3 16384
					globalsound SOMETHINGHITFORCE
			}

            set temp3 1
            }
        }
    }

ifspawnedby 9375
    {
    ife player[].heat_on 1 palfrom 5 0 0 0 else
    ifpdistl 20480 palfrom 32 0 0 0 else palfrom 10 0 0 0
    }

ifspritepal 27
    {
    ife player[].heat_on 1 palfrom 5 63 63 63 else
    ifpdistl 20480 palfrom 20 63 63 63 else palfrom 10 63 63 63 }


  sizeto 32 64
  sizeto 32 64
  sizeto 32 64
  ifactioncount 4
    killit
enda

action FIRE_FRAMES   -1 14 1 1 4
action FIRE_FRAMES2   -1 16 1 1 4
move FIREVELS

defstate firestate

	ifaction 0
	{
		cstat 32768
		ifrnd 16
		{
			seta[].blend 255
			cstat 2
			ifrnd 128 cstator 4
			ifactor FIRE2 action FIRE_FRAMES2
			else action FIRE_FRAMES
		}
	}

  sleeptime 300 // Never let it fall to sleep

  ifspawnedby FIRE
  {
    ifgapzl 16
      break
  }
  else
    ifspawnedby FIRE2
  {
    ifgapzl 16
      break
  }

  ifinwater
    killit

  ifspritepal 3 break
  ifspritepal 26 break

  ifp palive
     ifcansee
  {
	state playernearfire
  }

  ifspritepal 3 break
  else
  ifactor FIRE
  {
	  ifspawnedby RESPAWN break
	  ifspawnedby ACTIVESPAWN break
      ifspawnedby FIRE break
  }
  else
    ifactor FIRE2
	{
	  ifspawnedby RESPAWN break
	  ifspawnedby ACTIVESPAWN break
      ifspawnedby FIRE2 break
	}

  state getfloordist
  ifl z 128
  {
	  ifl z 0 seta[].z sector[].floorz
		ifrnd 128
		{
		  ifcount 84
			killit
					// This line(and the else below)
					// is not necessary, since actors
					// with zero x-size are automatically
					// deleted anyway!
		  else
			ifcount 42
			  sizeto 0 0
		  else
			sizeto 32 32
		}
  }
  else
    killit

ends

spritenopal FIRE
spritenopal FIRE2

useractor notenemy FIRE WEAK 0 FIREVELS state firestate enda
useractor notenemy FIRE2 WEAK 0 FIREVELS state firestate enda

useractor notenemy FECES
  ifcount 24
  {
    ifpdistl RETRIEVEDISTANCE
    {
      ifrnd SWEARFREQUENCY
        set PLAYER_VOICEOVER 46

      sound STEPNIT

      spawn BROWNSTAIN
      killit
    }
  }
  else
    sizeat 8 8
enda


actor MIKE
  ifp pfacing
    ifpdistl 1280
      ifhitspace
        mikesnd
enda

action BLOODFRAMES 0 4 1 1 15
actor BLOOD 0 BLOODFRAMES
  sizeto 10 10
  cstator 128
  ifactioncount 4 killit
enda

actor KNEE KNEE_WEAPON_STRENGTH enda
actor SPIT SPIT_WEAPON_STRENGTH enda
actor CHAINGUN CHAINGUN_WEAPON_STRENGTH enda
actor SHOTGUN SHOTGUN_WEAPON_STRENGTH enda
actor FIRELASER FIRELASER_WEAPON_STRENGTH enda
actor HEAVYHBOMB HANDBOMB_WEAPON_STRENGTH enda
actor BOUNCEMINE BOUNCEMINE_WEAPON_STRENGTH enda
actor MORTER MORTER_WEAPON_STRENGTH enda
actor SHRINKSPARK SHRINKER_WEAPON_STRENGTH enda

actor GROWSPARK GROWSPARK_WEAPON_STRENGTH
  ifcount 18
    killit
  else
    ifcount 9
  {
    sizeto 0 0
    sizeto 0 0
    sizeto 0 0
    sizeto 0 0
  }
  else
  {
    sizeto 28 28
    sizeto 28 28
    sizeto 28 28
    sizeto 28 28
  }
enda

actor RPG RPG_WEAPON_STRENGTH enda
actor FREEZEBLAST FREEZETHROWER_WEAPON_STRENGTH enda
actor DEVISTATORBLAST FREEZETHROWER_WEAPON_STRENGTH enda
actor COOLEXPLOSION1 COOL_EXPLOSION_STRENGTH enda
actor TRIPBOMB TRIPBOMB_STRENGTH enda

defstate FLOOR_CEILING_BULLETHOLE


ife temp 0
    seta[].z sector[].floorz
else
ife temp 1
    seta[].z sector[].ceilingz

ifaction 0
    {
    ifactor 3068
        {
        cstat 34
        seta[].blend 255
        }
    else
    cstat 32
    seta[].shade sector[].floorshade
    seta[].pal sector[].floorpal
    ifactor 3769
        {
        randvar temp 4
        ifl temp 2 set temp 2
        }
    else
        {
        randvar temp 6
        ifl temp 3 set temp 3
        }
    seta[].xrepeat temp
    seta[].yrepeat temp
    move 0 randomangle
    ifonwater killit else
        {
        insertspriteq
        action ZERO
        }
    }
ends

spritenoshade 3754
useractor notenemy 3754 // Floor/Ceiling Bullethole
state FLOOR_CEILING_BULLETHOLE
enda

spritenoshade 3760
useractor notenemy 3760 // Floor/Ceiling wood Bullethole
state FLOOR_CEILING_BULLETHOLE
enda

spritenoshade 3769
useractor notenemy 3769 // Floor/Ceiling concrete Bullethole
state FLOOR_CEILING_BULLETHOLE
enda

spritenoshade 3068
useractor notenemy 3068 // Floor/Ceiling glass Bullethole
state FLOOR_CEILING_BULLETHOLE
enda



// SHOTSPARK
// Causally this stuff occurs after EVENT_POSTDAMAGESPRITE.

action WEAP2FRAMES 0  4  1  1  6
spritenoshade SHOTSPARK1
actor SHOTSPARK1 PISTOL_WEAPON_STRENGTH WEAP2FRAMES

ifspawnedby APLAYER ife cur_weap 0 ife temp_weap 8 { spawn BLOOD_EX killit }

ife INVASION 1
{
ifspawnedby APLAYER nullop else killit
}

ifcount 1
    nullop
else
ifn gotpic[SHOTSPARK1] 0
{
setarray gotpic[SHOTSPARK1] 0
    geta[].yvel PROJ_HIT_TYPE
    geta[].htg_t 8 hitsprite
    ifn hitsprite -1
    {
        seta[hitsprite].htpicnum PROJ_HIT_TYPE
        // ONLY NON-ENEMY/NON-ALLY STUFF GOES HERE FROM NOW ON. EVERYTHING ELSE GOES TO AMC_DMG_MODIFIERS
        switch sprite[hitsprite].picnum
            case WATERTILE2
                sound HITWATER
                spawn WATERSPLASH2
                break

            case 5208 // Force Shield
                spawn SHADEFEXPLOSION
                break

            case 8088 // Target practice sprite
                getav[EV_TARG_SPRITE].HITAGSAVED EV_temp
                ife EV_temp 2
                {
                    state SPAWN_BIG_SPARKS
                    seta[RETURN].pal 1
                    shoot SPARK2
                    shoot SPARK2
                    state METAL_HIT_SOUNDS
                    soundvar playsound
                }
                else
                {
                    spawn 8433
                    shoot SPARK
                    shoot SPARK
                    state METAL_HIT_SOUNDS
                    soundvar playsound
                }
                break

            case 19029 // PATCOS telikinetic shield
                shoot 19028
                ife opt_protected_ding YES sound PROTECT_DING2
                ifspawnedby APLAYER ifrnd 32 { ifl VOLUME 2 set PLAYER_VOICEOVER 6 else set PLAYER_VOICEOVER 57 }
                spawn SHADEFEXPLOSION
                break

            // metal impact
            case 160 // hydraulic pillar
            case 3481 // Metal wall (intact)
            case 3482 // Metal wall (broken)
			case 3710 // Supply barrel
            case 3877 // car
            case 4087 // oil barrel 1
            case 7260 // demonic grate
            case 7349 // metal railing 1
            case 9590 // metal bars
            case 9630 // large bell (hexen)
            case 11608 // Metal gate
            case 12385 // metal railing 2
            case 10858 // broken down car
            case 16971 // oil barrel 2
            case 18294 // metal railing 3
            case 20192 // metal railing 4
            case 20384 // metal gate (front)
            case 20385 // metal gate (back)
            case 20417 // metal railing 5 (appears to be a duplicate of 20192)
            case 23577 // metal railing 6
            case 5658 // suit of armour
			case 17672
			case 17673
			case 17674
			case 17675
			case 17676
			case 17886
			case 14053
			case 14054
			case 14055
			case 14056
			case 14058
			case 14059
			case 14060
			case 14061
			case 14062
                set temp3 0
                state SPAWN_BIG_SPARKS
                shoot SPARK
                shoot SPARK // standard metal hit
                state METAL_HIT_SOUNDS
                soundvar playsound
                break

            // heavy metal impact
            case WTANKDEAD
            case WTANKGUN
            case WTANKUP
            case WTANKUP2
            case WTANKDW
            case WTANKDW2
            case WTANKFR
            case WTANKLF
            case WTANKLF2
            case WTANKFR2
            case WTANKFR3
            case WTANKBK
            case WTANKGUNFR
            case WTANKGUNUP
            case WTANKGUNUP2
            case WTANKGUNFR2
            case WTANKGUNAN
            case WTANKGUNLF
            case WTANKGUNBK
            case 2081 // pig tank chassis 1
            case 2082 // pig tank chassis 2
            case 2083 // pig tank chassis 3
            case 2084 // pig tank chassis 4
            case 9645 // black railing
            case 10701 // gothic lamp
            case 11593 // metal grate 1
            case 11594 // metal grate 2
            case 11595 // metal grate 3
            case 13044 // upscaled hydraulic pillar
            case 16343 // gong
            case 19181 // dormant mech

                state SPAWN_BIG_SPARKS
                seta[RETURN].pal 1
                shoot SPARK2
                shoot SPARK2
                state METAL_HIT_SOUNDS
                soundvar playsound
                break

            // chain link fence sprites
            case 913
            case 962
            case 7168
            case 8600
            case 8601
            case 9136
            case 9138
            case 9724
            case 12396
            case 12401
            case 12492
            case 13206
            case 22429
            case 23773
                state SPAWN_BIG_SPARKS
                seta[RETURN].pal 0
                shoot SPARK
                shoot SPARK
                sound HITCHAINL
                break

            // wood sprites
            case 3889 // wood cart
            case 3906 // boards 1
            case 5842 // bridge
            case 8015 // wood railing 1
            case 8016 // wood railing 2
            case 8172 // boards 2
            case 10578 // pile of boards
            case 10646 // wood fence 1
            case 11541 // wood fence 2
            case 12429 // boards 3
            case GUNPOWDERBARREL
            case 25574
                sound HITWOOD
                shoot SWOODSCRAP
                break

            // glass sprites
            case 401
            case 504
            case 758
            case 6880 // undefined/empty?
            case 14103
            case 18282
			case 17677
                sound HITGLASS
                lotsofglass 1
                break

        endswitch
    }
}

ifdead killit
ifactioncount 4 killit
else
{
    ifactioncount 3
    {
        ifinwater spawn WATERBUBBLE
    }
    else
        ifcount 2 nullop
        else
        {
            ifonwater spawn WATERSPLASH2
            ifinwater spawn WATERBUBBLE
        }
}

ife PROJ_HIT_TYPE MELTA_BEAM { shoot SPARK break }
ife PROJ_HIT_TYPE GREENLASERSHOT
    ifcansee
    {
        sound LASER_IMPACT
		setprojectile[SPARK].pal 8
        shoot SPARK
        shoot SPARK
		setprojectile[SPARK].pal 0
    }
ife PROJ_HIT_TYPE REDLASERSHOT
    ifcansee
    {
        sound LASER_IMPACT
		setprojectile[SPARK].pal 2
        shoot SPARK
        shoot SPARK
        setprojectile[SPARK].pal 0
    }

ife PROJ_HIT_TYPE BLUELASERSHOT
    ifcansee
    {
        sound LASER_IMPACT
        shoot SPARK2
        shoot SPARK2
    }

ife PROJ_HIT_TYPE 20797
    ifcansee
    {
        sound LASER_IMPACT
        shoot SPARK2
        shoot SPARK2
    }

ifpdistl 32767
{
	geta[].htg_t 6 hitwall
	ifn hitwall -1
	{
		getwall[hitwall].picnum FLOORTEX
		state CHECKSTEPS
		state BULLETHITSOUNDS

		ife STEPSOUNDFX 1 set MATERIAL_STRENGTH 100 // wood
		else ife STEPSOUNDFX 2 set MATERIAL_STRENGTH 50 // tin
		else ife STEPSOUNDFX 3 set MATERIAL_STRENGTH 30 // grate
		else ife STEPSOUNDFX 19 set MATERIAL_STRENGTH 150 // Cardboard
		else ife STEPSOUNDFX 22 set MATERIAL_STRENGTH 150 // Leaves
		else ife STEPSOUNDFX 23 set MATERIAL_STRENGTH 90 // Plank
		else set MATERIAL_STRENGTH 70

		ldist PENETRATE_STRENGTH myowner THISACTOR
		geta[].extra temp7
		ifl temp7 1 set temp7 1
		divvarvar PENETRATE_STRENGTH temp7
		geta[].yvel temp9
		ife temp9 BIGRIFLESHOT divvar PENETRATE_STRENGTH 4
		ife temp9 RIFLESHOT divvar PENETRATE_STRENGTH 3
		ife temp9 ARMOUR_PIERCING_SHOT divvar PENETRATE_STRENGTH 3
		ife temp9 F45_CALIBRE mulvar PENETRATE_STRENGTH 2
		ife temp9 HOLLOW_POINT_SHOT mulvar PENETRATE_STRENGTH 3
		ife temp9 GREENLASERSHOT mulvar PENETRATE_STRENGTH 4

		ifvarvarl PENETRATE_STRENGTH MATERIAL_STRENGTH
		{
			geta[].x temp
			geta[].y temp2

			set temp3 temp
			add temp3 200
			add temp3 PENETRATE_STRENGTH

			geta[].ang temp4
			rotatepoint temp temp2 temp3 temp2 temp4 temp5 temp6

			geta[].z temp8
			geta[myowner].z temp3
			sub temp3 temp8
			geta[].sectnum upd_sect
			updatesectorz temp5 temp6 temp8 upd_sect
			ifn upd_sect -1
			{
				espawn 5131
				geta[].extra temp3
				seta[RETURN].extra temp3
				seta[RETURN].x temp5
				seta[RETURN].y temp6
				seta[RETURN].z temp8
				seta[RETURN].ang temp4
				changespritesect RETURN upd_sect
			}
		}

		getwall[hitwall].overpicnum FLOORTEX
		state CHECKSTEPS
		state BULLETHITSOUNDS
		ife FLOORTEX 5834
		{
			getwall[hitwall].cstat temp
			ifn temp 32768
			{
				sound GLASS_BREAKING
				lotsofglass 40
				setwall[hitwall].cstat 32768
				getwall[hitwall].nextwall temp
				setwall[temp].cstat 32768
			}
		}
		break
	}

		state getfloordist
		ifl z 0
		{
			gets[].floorpicnum FLOORTEX
			state CHECKSTEPS
			state BULLETHITSOUNDS

			gets[].floorstat temp
			ifand temp 1 nullop else
			ifand temp 2 nullop else
			ifn STEPSOUNDFX 9
			{
				ife STEPSOUNDFX 1 spawn 3760 else
				ife STEPSOUNDFX 23 spawn 3760 else
				ife STEPSOUNDFX 11 spawn 3769 else
				ife STEPSOUNDFX 18 spawn 3068 else
				ife STEPSOUNDFX 26 spawn 3068 else
				spawn 3754
			}
			break
		}

		state getceildist
		ifl z 4
		{
			gets[].ceilingstat temp
			ifand temp 1 break else
			ifand temp 2 nullop else
			ifn STEPSOUNDFX 9 { espawn 3754 setactorvar[RETURN].temp 1 }
			gets[].ceilingpicnum FLOORTEX
			state CHECKSTEPS
			state BULLETHITSOUNDS
			break
		}
}
enda

appendevent EVENT_POSTSAVEGAME
    ifl saving MANUALSAVE_START
        set saving MANUALSAVE_START
endevent

include CODE/TEMP_WEAP.CON
include CODE/PLAYER/CHARSELECT.CON
include CODE/PLAYER/PLAYER.CON
