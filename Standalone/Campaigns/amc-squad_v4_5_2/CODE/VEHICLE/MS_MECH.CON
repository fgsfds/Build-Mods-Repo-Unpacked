/*
-------------------------------------------------------------------------------
===============================================================================

         -ooo:             +oo-            `+oo.       ./+oooooooooo+/:
        /NMMMN+            NMMNo`         -dMMM/      .mMMNmmmmmmmmmMMNo
       /NMd:mMMo           NMMNMd:      `oNMNMM/      :MMM/.........mMMh
      oNMd. -mMMy`         NMN:mMNs`   -hMm/mMM/      :MMM:         ::-.
    `sMMh`   .dMMh`        NMN .sNMd:`oNMh. mMM/      :MMM:
   `yMMMdhhhhhmMMMd.       NMN   /mMNdMm+`  mMM/      :MMM:         ss+:
  `hMMdhhhhhhhhhmMMm-      NMN    .yMMh.    mMM/      :MMM/.........mMMh
 .dMMs`         .hMMm:     NMN      :/`     mMM/      .mMMNmmmmmmmmmMMNo
 :oo+            `+oo+     +o+              +oo.       ./++ooooooooo+/:

###############################################################################
+ The AMC Squad
+ CON code by James Stanfield, Cedric "Sangman" Haegeman, Dino Bollinger,
+              Mikko Sandt, Cedric "Zaxtor" Lutes and Dan "Danarama" Gaskill
-------------------------------------------------------------------------------
* See AMC_MAIN.CON for a full list of script authors.

Feel free to use any code in the game for your own uses; just make
sure to mention the authors and/or "The AMC Squad" in your credits.
--------------------------------------------------------------------------------
NOTES:
This file defines behavior and controls for the MSCorp Mechsuit.
--------------------------------------------------------------------------------
*/

damageeventtile MS_CORP_MECH // (Ally)

action MS_CORP_MECH_IDLE 0 1 5 1 10
action MS_CORP_MECH_DEAD 0 1 5 1 10

action MS_CORP_MECH_INACTION 0 1 5 1 10
action MS_CORP_MECH_WALK 5 4 5 1 30
action MS_CORP_FIRE_MISSILES 40 1 5 1 20
action MS_CORP_COOLD_MISSILES 35 1 5 1 20
action MS_CORP_FIRE_GUN 30 1 5 1 20
action MS_CORP_COOL_GUN 25 1 5 1 20

move MECH_FORWARD 0
move MECH_IDLE 0

spriteshadow MS_CORP_MECH

useractor notenemy MS_CORP_MECH
fall

        ife ally_mag 1
            {
            ife PBOOST 0
                {
                move 0
                palfrom 60 0 0 0
                seta[].htextra -1
                set player_in_vehicle 0
                set player_using_mech -1
                setp[].movement_lock 0
                set just_changed 1
                soundonce MS_MECH_EXIT
                globalsound SOMETHINGHITFORCE
                spawn TRANSPORTERBEAM
                action MS_CORP_MECH_IDLE
                killit
                }
            }

ifhitweapon { }

ifspritepal 3 set mech_startup_sequence 0

ife CHAR 7
{
getp[].palookup temp
ife temp 0 set temp 11
seta[].pal temp
}
else spritepal 11

ifaction 0
	{
	set actor_type TYPE_VEHICLE
	spawn 9302
	  geta[].mdflags temp
	  orvar temp 16
	  seta[].mdflags temp
	cstat 257
	ifn LOTAGSAVED 0 seta[].extra LOTAGSAVED else
	strength 15000
	clipdist 220
	sizeat 50 50
	action MS_CORP_MECH_IDLE
	}


ifstrength 1000
{
espawn BIG_SMOKE

    geta[].x temp
    geta[].y temp2

    set temp3 temp
    randvarvar temp4 256
    add temp3 temp4
    randvar temp4 2048

    rotatepoint temp temp2 temp3 temp2 temp4 temp5 temp6


seta[RETURN].x temp5
seta[RETURN].y temp6

geta[].z temp
sub temp 16048
seta[RETURN].z temp

setactorvar[RETURN].YVELSAVED 1
seta[RETURN].pal 17
}

ifaction MS_CORP_MECH_IDLE
{
ifspawnedby APLAYER
 ife player_in_vehicle 0
  ife ally_mag 0
    {
    set ally_mag 1
    ifspawnedby APLAYER soundonce MS_MECH_START else
    ife mech_startup_sequence -1 set mech_startup_sequence 185
    else soundonce MS_MECH_START
    palfrom 60 0 0 0
    set control_display 150
    set player_in_vehicle 1
    set player_using_mech THISACTOR
    getp[].i temp2
    }

ifpdistl 2048
 ifp palive
  ifp pfacing
   ife player_in_vehicle 0
    {
    ifg scope 0 break
    ifand gun_firemode 16384 break
    ifl mech_startup_sequence 1 set player_use 0
        ifhitspace
         ifcount 26
            {
            ifspawnedby APLAYER soundonce MS_MECH_START else
                ife mech_startup_sequence -1
                    {
                    ifn rendmode 0 ife VOLUME 0 ife LEVEL 12 { startcutscene 1311 set mech_startup_sequence 0 } else
                    set mech_startup_sequence 185
                    }
            else soundonce MS_MECH_START
            palfrom 60 0 0 0
            set control_display 150
            set player_in_vehicle 1
            set player_using_mech THISACTOR
            getp[].i temp2
            resetcount
            }
    }

ifstrength 14999
ife HITAGSAVED 0
    {
    soundonce VEH_REP
	ife CHAR 13 addstrength 50 else
    addstrength 20
    }

}

ifonwater
    {
    ifaction MS_CORP_MECH_DEAD nullop else
        {
        soundonce SHORT_CIRCUIT
        soundonce ALARM

        ife player_using_mech THISACTOR { quake 13 palfrom 20 60 0 0 }
        addstrength -50
        }
    }

ife player_using_mech THISACTOR
{
ifg mech_startup_sequence 0 sub mech_startup_sequence 1
ifl mech_startup_sequence 20
{
state lower_weapon
setp[].movement_lock 15

setp[].poszv 0

geta[].x temp
setp[].posx temp
geta[].y temp2
setp[].posy temp2
geta[].z temp3
sub temp3 24000
setp[].posz temp3
geta[].sectnum upd_sect
updatesectorz temp temp2 temp3 upd_sect
ifn upd_sect -1 // Make sure it's a a valid sector
    {
    changespritesect APLAYER upd_sect
    setp[].cursectnum upd_sect
    }


    geta[].ang vehicle_ang
    setp[].ang vehicle_ang

getinput[].avel temp3 // Get their mouse movements
ifg temp3 0
    {
    geta[].ang temp
    divvar temp3 2
    add temp temp3
    seta[].ang temp
    }
else
ifl temp3 0
    {
    geta[].ang temp
    divvar temp3 2
    add temp temp3
    seta[].ang temp
    }
else
ifand EXTBITS_PRESS 16
    {
    geta[].ang temp
    divvar temp3 2
    add temp temp3
    seta[].ang temp
    }
else
ifand EXTBITS_PRESS 32
    {
    geta[].ang temp
    divvar temp3 2
    add temp temp3
    seta[].ang temp
    }

    ifaction MS_CORP_MECH_WALK
    {
    ifand BITS_PRESS P_SPRINTING add temp8 1
    add temp8 1
    ife temp8 4
        {
        set mech_hud_shake 5
        ifrnd 32 sound MS_MECH_SERV1
        else ifrnd 32 sound MS_MECH_SERV2
        }
    ifg temp8 16
        {
        set gun_recoil 2
        set mech_hud_shake 5

        espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT
        randvar footstep_count 3
        ife footstep_count 0 setactorvar[RETURN].temp MS_MECH_FS1
        else ife footstep_count 1 setactorvar[RETURN].temp MS_MECH_FS2
        else ife footstep_count 2 setactorvar[RETURN].temp MS_MECH_FS3
        else ife footstep_count 3 setactorvar[RETURN].temp MS_MECH_FS4
        ifrnd 16 soundonce MS_MECH_GROAN
        set temp8 0
         findnearsprite3d SHOOTME 1596 temp9
            ifn temp9 -1
                {
                getav[temp9].myowner temp8
                seta[temp8].htextra 50
                }
        }
    }

    ifaction MS_CORP_FIRE_MISSILES
    {
    ifactioncount 6 action MS_CORP_COOLD_MISSILES
    }

    ifaction MS_CORP_COOLD_MISSILES
    {
    ife hc_missile_fire 0 action MS_CORP_MECH_INACTION
    }

    ifaction MS_CORP_FIRE_GUN
    {
    ifactioncount 3 action MS_CORP_COOLD_MISSILES
    }

    ifaction MS_CORP_COOL_GUN
    {
    ife mech_maingun_fire 0 action MS_CORP_MECH_INACTION
    }

    ifand EXTBITS_PRESS 1
    {
    ifonwater break
    ifaction MS_CORP_MECH_IDLE action MS_CORP_MECH_WALK
    ifaction MS_CORP_MECH_INACTION action MS_CORP_MECH_WALK
    move MECH_FORWARD geth
    geta[].xvel temp
    ifand BITS_PRESS P_SPRINTING add temp 400 else
    add temp 200
    seta[].xvel temp
    }
    else
    ifand EXTBITS_PRESS 2
    {
    ifonwater break
    ifaction MS_CORP_MECH_IDLE action MS_CORP_MECH_WALK
    ifaction MS_CORP_MECH_INACTION action MS_CORP_MECH_WALK
    move MECH_FORWARD geth
    geta[].xvel temp
    ifand BITS_PRESS P_SPRINTING add temp -400 else
    add temp -200
    seta[].xvel temp
    }
     else
        {
        action MS_CORP_MECH_INACTION
        move MECH_IDLE
         ifand BITS_PRESS 1
         ife hc_missile_fire 0
         ife mech_maingun_fire 0
            {
			 ifand EXTBITS_PRESS 12 nullop else
				 {
				move 0
				palfrom 60 0 0 0
				seta[].htextra -1
				set player_in_vehicle 0
				set player_using_mech -1
				setp[].movement_lock 0
				set just_changed 1
				soundonce MS_MECH_EXIT
				action MS_CORP_MECH_IDLE
				}
            }
        }

    ifand EXTBITS_PRESS 4 // strafe left
    {
    ifaction MS_CORP_MECH_IDLE action MS_CORP_MECH_WALK
    ifaction MS_CORP_MECH_INACTION action MS_CORP_MECH_WALK
        geta[].x temp2
        geta[].y temp3
        geta[].ang temp4
        sub temp4 512
        cos temp2 temp4
        sin temp3 temp4
        shiftvarr temp2 7
        shiftvarr temp3 7
        movesprite THISACTOR temp2 temp3 0 CLIPMASK0 temp5
    }
    else
    ifand EXTBITS_PRESS 8 // strafe right
    {
    ifaction MS_CORP_MECH_IDLE action MS_CORP_MECH_WALK
    ifaction MS_CORP_MECH_INACTION action MS_CORP_MECH_WALK
        geta[].x temp2
        geta[].y temp3
        geta[].ang temp4
        add temp4 512
        cos temp2 temp4
        sin temp3 temp4
        shiftvarr temp2 7
        shiftvarr temp3 7
        movesprite THISACTOR temp2 temp3 0 CLIPMASK0 temp5
    }

    ifp pstanding
    {
    ifg hc_missile_fire 26 action MS_CORP_FIRE_MISSILES
    else ifg hc_missile_fire 0 action MS_CORP_COOLD_MISSILES

    ifg mech_maingun_fire 26 action MS_CORP_FIRE_GUN
    else ifg mech_maingun_fire 0 action MS_CORP_COOL_GUN
    }
}

ifp pdead
    {
    set player_in_vehicle 0
    set player_using_mech -1
    setp[].movement_lock 0
    set just_changed 1
    move 0
    action MS_CORP_MECH_IDLE
    resetcount
    }

    ifhitweapon
    {
    sound ALARM
    palfrom 10 10 0 0
    }


}

    ifdead
    {
    ife player_using_mech THISACTOR
        {
        set player_in_vehicle 0
        set player_using_mech -1
        addphealth -1000
        setp[].movement_lock 0
        set just_changed 1
        geta[].htowner temp8
        seta[PLAYER_IDENTITY].htowner temp8
        }
    spawn EXPLOSION2
    quake 26
    globalsound BLOWUP
    shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK shoot SPARK
    shoot LAVABALL shoot LAVABALL shoot LAVABALL shoot LAVABALL shoot LAVABALL
    strength 1
    move 0
    action MS_CORP_MECH_DEAD
    resetcount
    }


enda
