
defstate tw_m16_gunammotypes
	ifand gun_firemode 32768 // If GL is selected
	setarray GUN_AMMO_TYPES_ARR[0] 2048 // set ammo types to m203 compatible
	else
	setarray GUN_AMMO_TYPES_ARR[0] 32 // set firing menu to switching to gl
ends

defstate tw_m16_code
    setarray WEAPON_TILE[0] M16SPRITE

    set WEAPON0_FIREDELAY 2
    set WEAPON0_TOTALTIME 3
    set WEAPON0_HOLDDELAY 1
    set WEAPON0_FIRESOUND 4
    set WEAPON0_FLAGS 4
    set WEAPON0_SPAWN 0
    set WEAPON0_SHOOTS ZRIFLESHOTU
    set WEAPON0_INITIALSOUND 4
    set WEAPON0_SHOTSPERBURST 1
    set WEAPON0_CLIP 0
    set WEAPON0_SELECTSOUND SELECT_M16
    set WEAPON0_RELOADSOUND1 4
    set WEAPON0_RELOADSOUND2 4

    ife cur_weap 0
        {
        set weapon_type 0
        ifg gl_countd 0 sub gl_countd 1
        set GUN_VOLUME 6
        set GUN_ACCURACY 8
        set GUN_MAX_SPREAD 32
        set GUN_SIZE 2
        set GUN_HANDS 2
        setarray weap_special[0] 2

        ife kickbackpic 2 { espawn SOUND_SPRITE state SPAWN_IN_PLAYER_FRONT setactorvar[RETURN].temp M16_2_FIRE }

        ifand gun_firemode 32768 // If GL is selected
        set GUN_AMMO_TYPES 2048 // set ammo types to m203 compatible
        else
        set GUN_AMMO_TYPES 32 // set firing menu to switching to gl

        state check_cased_grenades_avail

        set gun_mag temp_wep_mag
        set max_temp_wep_mag 40
        ife kickbackpic 2 { set gunsmoke_angle 64 state spawn_gunsmoke }
        ife kickbackpic 2 { set gun_recoil 4 add gun_spread 8 }

        ife kickbackpic 18 { state ar_mag_out_sounds ife temp_wep_mag 0 shoot RIFLEMAGAZINE }

        ife gl_countd 45 { set gunsmoke_angle 32 state spawn_gunsmoke set gun_recoil 6 }
        ife gl_countd 34 soundonce GL_OPEN2
        ife gl_countd 30 state shoot_empty_40mmshell
        ife gl_countd 16 soundonce GL_INSERT2
        ife gl_countd 8 soundonce GL_CLOSE2
        ifg gl_countd 44
            {
            sub wepsway_x 5
            sub wepsway_y 5
            }

        ife kickbackpic 30
            {
            state ar_mag_in_sounds
            ifvarvarl cur_ammo max_temp_wep_mag set temp_wep_mag cur_ammo else set temp_wep_mag max_temp_wep_mag
            }
        ife kickbackpic 46 state JMOVESOUND2
        ife kickbackpic 52 soundonce BOLT_CATCH

      ifl temp_wep_mag 1
       ife player[].weapon_pos 0
        ife kickbackpic 0
            {
            ifn cur_ammo 0
                {
                set WEAPON0_RELOAD 61
                setp[].reloading 1
                setp[].kickback_pic 6
                }
            }
        }

ends
