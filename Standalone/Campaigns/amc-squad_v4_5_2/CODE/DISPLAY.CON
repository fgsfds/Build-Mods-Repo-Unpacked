/*
-------------------------------------------------------------------------------
===============================================================================

         -ooo:             +oo-            `+oo.       ./+oooooooooo+/:
        /NMMMN+            NMMNo`         -dMMM/      .mMMNmmmmmmmmmMMNo
       /NMd:mMMo           NMMNMd:      `oNMNMM/      :MMM/.........mMMh
      oNMd. -mMMy`         NMN:mMNs`   -hMm/mMM/      :MMM:         ::-.
    `sMMh`   .dMMh`        NMN .sNMd:`oNMh. mMM/      :MMM:
   `yMMMdhhhhhmMMMd.       NMN   /mMNdMm+`  mMM/      :MMM:         ss+:
  `hMMdhhhhhhhhhmMMm-      NMN    .yMMh.    mMM/      :MMM/.........mMMh
 .dMMs`         .hMMm:     NMN      :/`     mMM/      .mMMNmmmmmmmmmMMNo
 :oo+            `+oo+     +o+              +oo.       ./++ooooooooo+/:

###############################################################################
+ The AMC Squad
+ CON code by James Stanfield, Cedric "Sangman" Haegeman, Dino Bollinger,
+              Mikko Sandt, Cedric "Zaxtor" Lutes and Dan "Danarama" Gaskill
-------------------------------------------------------------------------------
* See AMC_MAIN.CON for a full list of script authors.

Feel free to use any code in the game for your own uses; just make
sure to mention the authors and/or "The AMC Squad" in your credits.
--------------------------------------------------------------------------------
NOTES:
This file contains various different display related code, such as menu code,
the character select and the inventory wheel display.
--------------------------------------------------------------------------------
*/

// INVENTORY WHEEL DISPLAY STUFF

// leave 4200 blank
string 4200
string 4201 No Item
string 4202 Healing Item
string 4203 ^32(Active Use)
string 4204 Improved Movement &
string 4205 Stronger Melee
string 4206 Faster Movement &
string 4207 Stronger Kick
string 4208 Regen., Strength &
string 4209 Greater Accuracy
string 4210 Can unlock Blood Sigils
string 4211 Summon temporary Mechsuit
string 4212 Gives Shield
string 4213 Cluster Bombs
string 4214 Absorb Lasers
string 4215 Into Armor
string 4216 ^1(Passive Use)
string 4217 MISSING DESCRIPTION
string 4218 Supercharges Yo
string 4219 INVALID CHAR
string 4220 Blocks Projectiles
string 4221 Distracts Enemies
string 4222 Replaces Shield
string 4223 Call Support
string 4224 Reflects Damage
string 4225 Fires Silver Stars
string 4226 Infinite Ammo
string 4227 Drops Ammo & Supplies
string 4228 Random Powerup
string 4229 Melee Beam Sabre
string 4230 Portable Turret
string 4231 Protects against
string 4232 Psychic Damage
string 4233 Mega Cluster Charge
string 4234 Grants Flight
string 4235 Heat Vision
string 4236 Ghost Vision
string 4237 Night Vision
string 4238 Breathe Underwater
string 4239 Floor Hazard
string 4240 Protection
string 4241
string 4242
string 4243

defstate getfadeframeratenormalized
	set temp framerate
	div temp 60

	set temp2 framerate
	mod temp2 60

	ifn temp2 0
		add temp 1

	ifge cus_fadetics temp
		set cus_fadetics 1
	else
		add cus_fadetics 1
ends

defstate custom_fade

ifl cus_fade 40 // fade out to black
 ifg cus_fade 0
	{
	state getfadeframeratenormalized
	ife cus_fadetics 1
		add cus_fade 1

	rotatespritea 160 100 DOUBLESIZE 0 4809 cus_fade 0 1 -253 0 0 xdim ydim
	}
else
ifl cus_fade 0 // fade in to black
	{
	state getfadeframeratenormalized
	ife cus_fadetics 1
		add cus_fade 1

	set disp_temp cus_fade
	inv disp_temp
	rotatespritea 160 100 DOUBLESIZE 0 4809 disp_temp 0 1 -253 0 0 xdim ydim
	}
else ife cus_fade 0 ifg cus_fade_duration 0 // view is black
	{
	state getfadeframeratenormalized
	ife cus_fadetics 1
		sub cus_fade_duration 1

	ifle cus_fade_duration 1
		set cus_fade 1

	rotatesprite 160 100 DOUBLESIZE 0 4809 0 4 0 0 0 xdim ydim
	}


ifl cus_fadew 40 // fade out to white
 ifg cus_fadew 0
	{
	state getfadeframeratenormalized
	ife cus_fadetics 1
		add cus_fadew 1

	rotatespritea 160 100 DOUBLESIZE 0 4809 cus_fadew 0 1 -255 0 0 xdim ydim
	}
else
ifl cus_fadew 0 // fade in to white
	{
	state getfadeframeratenormalized
	ife cus_fadetics 1
		add cus_fadew 1

	set disp_temp cus_fadew
	inv disp_temp
	rotatespritea 160 100 DOUBLESIZE 0 4809 disp_temp 0 1 -255 0 0 xdim ydim
	}
else ife cus_fadew 0 ifg cus_fade_duration 0 // view is white
	{

	state getfadeframeratenormalized
	ife cus_fadetics 1
		sub cus_fade_duration 1

	ifle cus_fade_duration 1
		set cus_fadew 1

	rotatesprite 160 100 DOUBLESIZE 0 4809 0 0 0 0 0 xdim ydim
	}

ends

defstate agent_name_pdu
		ife CHAR 0 gametextz STARTALPHANUM 60 30 1003 10 2 0 0 0 xdim ydim 42252
        ife CHAR 1 gametextz STARTALPHANUM 60 30 1004 10 2 0 0 0 xdim ydim 42252
        ife CHAR 2 gametextz STARTALPHANUM 60 30 1005 10 2 0 0 0 xdim ydim 42252
        ife CHAR 3
            {
            ife TIMEZONE 1 gametextz STARTALPHANUM 60 30 1218 10 2 0 0 0 xdim ydim 42252
            else gametextz STARTALPHANUM 60 30 1006 10 2 0 0 0 xdim ydim 42252
            }
        ife CHAR 4 gametextz STARTALPHANUM 60 30 1007 10 2 0 0 0 xdim ydim 42252
        ife CHAR 5 gametextz STARTALPHANUM 60 30 1008 10 2 0 0 0 xdim ydim 42252
        ife CHAR 6 gametextz STARTALPHANUM 60 30 1009 10 2 0 0 0 xdim ydim 42252
        ife CHAR 7 gametextz STARTALPHANUM 60 30 1010 10 2 0 0 0 xdim ydim 42252
        ife CHAR 9 gametextz STARTALPHANUM 60 30 1212 10 2 0 0 0 xdim ydim 42252
        ife CHAR 10 gametextz STARTALPHANUM 60 30 1213 10 2 0 0 0 xdim ydim 42252
        ife CHAR 11 gametextz STARTALPHANUM 60 30 1214 10 2 0 0 0 xdim ydim 42252
        ife CHAR 12 gametextz STARTALPHANUM 60 30 1215 10 2 0 0 0 xdim ydim 42252
        ife CHAR 13
            {
            ife TIMEZONE 2 gametextz STARTALPHANUM 60 30 1221 10 2 0 0 0 xdim ydim 42252
            else gametextz STARTALPHANUM 60 30 1216 10 2 0 0 0 xdim ydim 42252
            }
        ife CHAR 14
            {
            ife TIMEZONE 5 gametextz STARTALPHANUM 60 30 1219 10 2 0 0 0 xdim ydim 42252
            else gametextz STARTALPHANUM 60 30 1217 10 2 0 0 0 xdim ydim 42252
            }
        ife CHAR 17 gametextz STARTALPHANUM 60 30 1222 10 2 0 0 0 xdim ydim 42252
ends

defstate display_invitem_description
	qstrcpy 810 4200
	qstrcpy 811 4200
	qstrcpy 812 4200
    switch INVENTORY_SLOTS[THIS_SLOT]
        case 0
			qstrcpy 810 4201
            break
        case 1
			qstrcpy 810 4202
			qstrcpy 812 4203
            break
        case 2
            ife CHAR 0
                {
				qstrcpy 810 4204
				qstrcpy 811 4205
                }
            else ife CHAR 1
                {
				qstrcpy 810 4206
				qstrcpy 811 4207
                }
            else ife CHAR 2
                {
				qstrcpy 810 4204
				qstrcpy 811 4205
                }
            else ife CHAR 3
                {
				qstrcpy 810 4208
				qstrcpy 811 4209
                }
            else ife CHAR 4
                {
				qstrcpy 810 4206
				qstrcpy 811 4210
                }
            else ife CHAR 5
                {
				qstrcpy 810 4206
				qstrcpy 811 4207
                }
            else ife CHAR 6
                {
				qstrcpy 810 4206
				qstrcpy 811 4207
                }
            else ife CHAR 7 qstrcpy 810 4211
            else ife CHAR 8 qstrcpy 810 4200
            else ife CHAR 9
                {
				qstrcpy 810 4206
				qstrcpy 811 4207
                }
            else ife CHAR 10
                {
				qstrcpy 810 4206
				qstrcpy 811 4207
                }
            else ife CHAR 11 qstrcpy 810 4212
            else ife CHAR 12 qstrcpy 810 4213
            else ife CHAR 13
                {
				qstrcpy 810 4214
				qstrcpy 810 4215
                }
            else ife CHAR 14
                {
				qstrcpy 810 4206
				qstrcpy 811 4207
                }
            else ife CHAR 17 qstrcpy 810 4218
            else qstrcpy 810 4219
			qstrcpy 812 4203
            break
        case 3
            ife CHAR 0 qstrcpy 810 4220
            else ife CHAR 1 qstrcpy 810 4221
            else ife CHAR 2 qstrcpy 810 4222
            else ife CHAR 3 qstrcpy 810 4223
            else ife CHAR 4 qstrcpy 810 4224
            else ife CHAR 5 qstrcpy 810 4225
            else ife CHAR 6 qstrcpy 810 4226
            else ife CHAR 7 qstrcpy 810 4227
            else ife CHAR 8 qstrcpy 810 4200
            else ife CHAR 9 qstrcpy 810 4224
            else ife CHAR 10 qstrcpy 810 4220
            else ife CHAR 11 qstrcpy 810 4228
            else ife CHAR 12 qstrcpy 810 4229
            else ife CHAR 13 qstrcpy 810 4230
            else ife CHAR 14
                {
                qstrcpy 810 4231
                qstrcpy 811 4232
                }
            else ife CHAR 17 qstrcpy 810 4233
            else qstrcpy 810 4219
			qstrcpy 812 4203
            break
        case 4
            qstrcpy 810 4234
			qstrcpy 812 4203
            break
        case 5
            ife HEAT_GOGGLES 1 qstrcpy 810 4235
            else ife HELMET_LOADOUT[CHAR] 4 qstrcpy 810 4236
            else qstrcpy 810 4237
			qstrcpy 812 4203
            break
        case 6
            qstrcpy 810 4238
			qstrcpy 812 4216
            break
        case 7
            qstrcpy 810 4239
			qstrcpy 811 4240
			qstrcpy 812 4216
            break
        default
			qstrcpy 810 4217
            break
    endswitch
    gametextz STARTALPHANUM 320 113 810 0 8 1 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 320 117 811 0 8 1 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 320 121 812 0 0 1 0 0 xdim ydim HALFSIZE
ends

defstate INVENTORY_SLOTS_DEV
set disp_temp 0
set disp_temp2 0
set disp_temp3 0
// clear strings
qsprintf 570 0
qsprintf 572 0

switch INVENTORY_SLOTS[THIS_SLOT]
case 0
    set disp_temp2 3054
    break
case 1 // First aid
    ifg player[].firstaid_amount 0
        {
		qstrcpy 572 570
        set disp_temp2 c_medikit
        getkeyname 572 35 2
        }
    break
case 2 // Item 1
    ifg player[].steroids_amount 0
        {
		qstrcpy 572 570
        set disp_temp2 c_steroids
        getkeyname 572 48 2
        }
    break
case 3 // Item 2
    ifg player[].holoduke_amount 0
        {
		qstrcpy 572 570
        set disp_temp2 c_holoduke
        getkeyname 572 32 2
        }
    break
case 4 // Jetpack
    ifg player[].jetpack_amount 0
        {
		qstrcpy 572 570
        set disp_temp2 c_jetpack
        getkeyname 572 33 2
        }
    break
case 5 // night vision
    ifg player[].heat_amount 0
        {
		qstrcpy 572 570
        set disp_temp2 disp_nvg
        getkeyname 572 34 2
        }
    break
case 6 // Scuba
    ifg player[].scuba_amount 0 set disp_temp2 c_scuba
    break
case 7 // boot
    ifg player[].boot_amount 0 set disp_temp2 c_boots
    break
endswitch

ifn disp_temp2 0
{
    set disp_temp6 26
    sub disp_temp6 player[].invdisptime
    set disp_temp5 INVEN_BAR_SIZE[THIS_SLOT]
    ifl disp_temp5 28000 set disp_temp5 28000;
    ife player[].inven_icon THIS_SLOT
    {
        ifl disp_temp5 40000 add disp_temp5 500
        setarray INVEN_BAR_SIZE[THIS_SLOT] disp_temp5
        rotatespritea WH_SLOT_X WH_SLOT_Y INVEN_BAR_SIZE[THIS_SLOT] 0 3607 0 0 33 -255 0 0 xdim ydim
        rotatesprite WH_SLOT_X WH_SLOT_Y HALFSIZE 0 disp_temp2 0 0 0 0 0 xdim ydim
        state display_invitem_description
    }
    else
    {
        ifg disp_temp5 28000 sub disp_temp5 500
        setarray INVEN_BAR_SIZE[THIS_SLOT] disp_temp5
        rotatespritea WH_SLOT_X WH_SLOT_Y INVEN_BAR_SIZE[THIS_SLOT] 0 3607 disp_temp6 12 33 -255 0 0 xdim ydim
        mulvar disp_temp6 2
        rotatespritea WH_SLOT_X WH_SLOT_Y INVENSIZE 0 disp_temp2 15 27 1 disp_temp6 0 0 xdim ydim
    }
    set disp_temp7 WH_SLOT_X
    mulvar disp_temp7 2
    set disp_temp8 WH_SLOT_Y
    add disp_temp8 10
	ifn INVENTORY_SLOTS[THIS_SLOT] 6
	ifn INVENTORY_SLOTS[THIS_SLOT] 7
	ifn INVENTORY_SLOTS[THIS_SLOT] 0
    gametextz STARTALPHANUM disp_temp7 disp_temp8 572 0 8 1 0 0 xdim ydim HALFSIZE

}

ends



define NUMBER_OF_HINTS 67

var hint_line1 0 0
var hint_line2 0 0
var hint_line3 0 0
var hint_line4 0 0
var hint_line5 0 0

defstate lookup_hints
	set hint_line1 0
	set hint_line2 0
	set hint_line3 0
	set hint_line4 0
	set hint_line5 0
    switch loading_hint
    case 0
		set hint_line1 4600
        set hint_line2 4601
		set hint_line3 4602
        break
    case 1
        set hint_line1 4603
		set hint_line2 4604
		set hint_line3 4605
		set hint_line4 4606
        break
    case 2
        set hint_line1 4607
		set hint_line2 4608
		set hint_line3 4609
        break
    case 3
        set hint_line1 4610
		set hint_line2 4611
		set hint_line3 4612
		set hint_line4 4613
        break
    case 4
        set hint_line1 4614
		set hint_line2 4615
		set hint_line3 4616
        break
    case 5
        set hint_line1 4617
		set hint_line2 4618
		set hint_line3 4619
        break
    case 6
        set hint_line1 4620
		set hint_line2 4621
		set hint_line3 4622
        break
    case 7
        set hint_line1 4623
		set hint_line2 4624
        break
    case 8
        set hint_line1 4625
		set hint_line2 4626
		set hint_line3 4627
        break
    case 9
        set hint_line1 4628
		set hint_line2 4629
        break
    case 10
        set hint_line1 4630
		set hint_line2 4631
		set hint_line3 4632
        break
    case 11
        set hint_line1 4633
		set hint_line2 4634
		set hint_line3 4635
        break
    case 12
        set hint_line1 4636
		set hint_line2 4637
		set hint_line3 4638
        break
    case 13
        set hint_line1 4639
		set hint_line2 4640
        break
    case 14
        set hint_line1 4641
		set hint_line2 4642
        break
    case 15
        set hint_line1 4643
		set hint_line2 4644
		set hint_line3 4645
        break
    case 16
        set hint_line1 4646
		set hint_line2 4647
		set hint_line3 4648
        break
    case 17
        set hint_line1 4649
		set hint_line2 4650
		set hint_line3 4651
        break
    case 18
        set hint_line1 4652
		set hint_line2 4653
		set hint_line3 4654
		set hint_line4 4655
		set hint_line5 4656
        break
    case 19
        set hint_line1 4657
		set hint_line2 4658
		set hint_line3 4659
        break
    case 20
        set hint_line1 4660
		set hint_line2 4661
        break
    case 21
        set hint_line1 4662
		set hint_line2 4663
		set hint_line3 4664
        break
    case 22
        set hint_line1 4665
		set hint_line2 4666
        break
    case 23
        set hint_line1 4667
		set hint_line2 4668
		set hint_line3 4669
        break
    case 24
        set hint_line1 4670
		set hint_line2 4671
		set hint_line3 4672
        break
    case 25
        set hint_line1 4673
		set hint_line2 4674
		set hint_line3 4675
        break
    case 26
        set hint_line1 4676
		set hint_line2 4677
		set hint_line3 4678
        break
    case 27
        set hint_line1 4679
		set hint_line2 4680
		set hint_line3 4681
        break
    case 28
        set hint_line1 4682
		set hint_line2 4683
		set hint_line3 4684
        break
    case 29
        set hint_line1 4685
		set hint_line2 4686
		set hint_line3 4687
        break
    case 30
        set hint_line1 4688
		set hint_line2 4689
		set hint_line3 4690
        break
    case 31
        set hint_line1 4691
		set hint_line2 4692
        break
    case 32
        set hint_line1 4693
		set hint_line2 4694
		set hint_line3 4695
        break
    case 33
        set hint_line1 4696
		set hint_line2 4697
		set hint_line3 4698
		set hint_line4 4699
        break
    case 34
        set hint_line1 4700
		set hint_line2 4701
        break
    case 35
        set hint_line1 4702
		set hint_line2 4703
		set hint_line3 4704
        break
    case 36
        set hint_line1 4705
		set hint_line2 4706
        break
    case 37
        set hint_line1 4707
		set hint_line2 4708
		set hint_line3 4709
        break
    case 38
        set hint_line1 4710
		set hint_line2 4711
		set hint_line3 4712
        break
    case 39
        set hint_line1 4713
		set hint_line2 4714
		set hint_line3 4715
        break
    case 40
        set hint_line1 4716
		set hint_line2 4717
		set hint_line3 4718
        break
    case 41
        set hint_line1 4719
		set hint_line2 4720
		set hint_line3 4721
        break
    case 42
        set hint_line1 4722
		set hint_line2 4723
        break
    case 43
        set hint_line1 4724
		set hint_line2 4725
		set hint_line3 4726
        break
    case 44
        set hint_line1 4727
		set hint_line2 4728
		set hint_line3 4729
        break
    case 45
        set hint_line1 4730
		set hint_line2 4731
		set hint_line3 4732
		set hint_line4 4733
        break
    case 46
        set hint_line1 4734
		set hint_line2 4735
		set hint_line3 4736
        break
    case 47
        set hint_line1 4737
		set hint_line2 4738
        break
    case 48
        set hint_line1 4739
		set hint_line2 4740
		set hint_line3 4741
        break
    case 49
        set hint_line1 4742
		set hint_line2 4743
		set hint_line3 4744
        break
    case 50
        set hint_line1 4745
		set hint_line2 4746
        break
    case 51
        set hint_line1 4747
		set hint_line2 4748
        break
    case 52
        set hint_line1 4749
		set hint_line2 4750
		set hint_line3 4751
        break
    case 53
        set hint_line1 4752
		set hint_line2 4753
		set hint_line3 4754
        break
    case 54
        set hint_line1 4755
		set hint_line2 4756
        break
    case 55
        set hint_line1 4757
		set hint_line2 4758
        break
    case 56
        set hint_line1 4759
		set hint_line2 4760
        break
    case 57
        set hint_line1 4761
		set hint_line2 4762
		set hint_line3 4763
        break
    case 58
        set hint_line1 4764
		set hint_line2 4765
        break
    case 59
        set hint_line1 4766
        break
    case 60
        set hint_line1 4767
        break
    case 61
        set hint_line1 4768
		set hint_line2 4769
        break
    case 62
        set hint_line1 4770
		set hint_line2 4771
		set hint_line3 4772
        break
    case 63
        set hint_line1 4773
        break
    case 64
        set hint_line1 4774
		set hint_line2 4775
        break
    case 65
        set hint_line1 4776
		set hint_line2 4777
        break
    case 66
        set hint_line1 4778
        break
    case 67
        set hint_line1 4780
        break
    default
        set hint_line1 4779
        break
    endswitch
ends


defstate clean_hint_space
    // Blank existing hints
    set hint_line1 0
	set hint_line2 0
	set hint_line3 0
	set hint_line4 0
	set hint_line5 0
ends

defstate loading_hints
    // Place hint header
    screentext 2822 10 7 28672 0 0 800 0 8 16 0 5 8 1 1 0 0 0 xdim ydim

    // Pick a random hint
    ife loading_hint 0 {
        state clean_hint_space
        displayrandvar loading_hint NUMBER_OF_HINTS
    }
    state lookup_hints

    // Display hint
	ifn hint_line1 0 screentext 2822 10 12 28672 0 0 hint_line1 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line2 0 screentext 2822 10 17 28672 0 0 hint_line2 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line3 0 screentext 2822 10 22 28672 0 0 hint_line3 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line4 0 screentext 2822 10 27 28672 0 0 hint_line4 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line5 0 screentext 2822 10 32 28672 0 0 hint_line5 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
ends


defstate helpscreen_hints
    // Place hint header
    screentext 2822 10 44 28672 0 0 800 0 8 16 0 5 8 1 1 0 0 0 xdim ydim
    set disp_menu_temp4 loading_hint
    add disp_menu_temp4 1
    redefinequote 801 #%d
    qsprintf 802 801 disp_menu_temp4
    screentext 2822 60 44 28672 0 0 802 0 8 16 0 5 8 1 1 0 0 0 xdim ydim

    // load hint
    state clean_hint_space
    state lookup_hints

    // Display hint
	ifn hint_line1 0 screentext 2822 10 52 28672 0 0 hint_line1 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line2 0 screentext 2822 10 57 28672 0 0 hint_line2 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line3 0 screentext 2822 10 62 28672 0 0 hint_line3 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line4 0 screentext 2822 10 67 28672 0 0 hint_line4 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	ifn hint_line5 0 screentext 2822 10 72 28672 0 0 hint_line5 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
ends

onevent EVENT_DISPLAYOVERHEADMAPPLAYER
    // only display for the screenpeek player. Remove this check in case multiplayer is ever considered later
    ife THISACTOR player[screenpeek].i
    {
        switch CHAR
            case 0 // James
                ifand CHAR_APP 1 set disp_temp3 25636
                else set disp_temp3 5239
                break
            case 1 // Zaxtor
                set disp_temp3 5401
                break
            case 2 // Merlijn
                ifand CHAR_APP 4 set disp_temp3 25637
                else set disp_temp3 5402
                break
            case 3 // Highwire
                ifand CHAR_APP 16 set disp_temp3 25639
                else set disp_temp3 6118
                break
            case 4 // Sang
                ifand CHAR_APP 2 set disp_temp3 23875
                else set disp_temp3 5403
                break
            case 5 // Rusty
                set disp_temp3 6761
                break
            case 6 // Geoffrey
                set disp_temp3 5404
                break
            case 7 // Mikko
                ifand CHAR_APP 8 set disp_temp3 25638
                else set disp_temp3 6963
                break
            case 10 // Bombshell
                set disp_temp3 9946
                break
            case 12 // Jane
                set disp_temp3 12800
                break
            case 13 // Micky
				ifand CHAR_APP 256 set disp_temp3 26879
                else set disp_temp3 16541
                break
            case 14 // Snowfall
                set disp_temp3 20803
                break
            case 17 // Kagura
                set disp_temp3 27123
                break
            default
                set disp_temp3 3675
                break
        endswitch

        getp[].zoom disp_temp2
        mulvar disp_temp2 20

        // overhead sprite and shadow (could use the RETURN value to implement overhead sprite animation here)
        rotatesprite 161 101 disp_temp2 0 disp_temp3 shade 4 33 0 0 xdim ydim
        rotatesprite 160 100 disp_temp2 0 disp_temp3 shade pal 0 0 0 xdim ydim

        // disable the normal overhead sprite
        set RETURN -1
    }
endevent

include CODE/TEXT/OVERHEAD.CON

onevent EVENT_GETLOADTILE
    // Reset prevtick for EVENT_DISPLAYLOADINGSCREEN.
    set prevtick -1
endevent


// loading screen
onevent EVENT_DISPLAYLOADINGSCREEN
    rotatesprite 160 100 DOUBLESIZE 0 3240 0 4 1024 0 0 xdim ydim
    rotatesprite 40 160 QUARTERSIZE 0 3604 0 0 0 0 0 xdim ydim

    getticks curtick
    ife prevtick -1
    set disp_temp 0
    else
        {
        readgamevar WHEEL1
        readgamevar WHEEL2
        set disp_temp curtick
        sub disp_temp prevtick
        }

    add WHEEL1 2
    ifg WHEEL1 2048 set WHEEL1 0
    rotatespritea 10 135 INVENSIZE WHEEL1 3228 20 12 256 -255 0 0 xdim ydim
    sub WHEEL2 4
    ifl WHEEL2 -2048 set WHEEL2 0
    rotatespritea 10 135 QUARTERSIZE WHEEL2 3228 10 12 256 -255 0 0 xdim ydim

    set prevtick curtick

    rotatespritea 160 100 NORMALSIZE 0 loading_tile 0 0 0 -255 0 0 xdim ydim

    getp[].pals_time disp_temp3

    state loading_hints
endevent

defstate display_skill_info
    getuserdef[THISACTOR].m_origin_x x
    addvar x 65536
    shiftvarr x 16

    set disp_temp x
    add disp_temp 162 // Team image position
    set disp_temp2 x
    add disp_temp2 220 // Skilltext header
	div disp_temp2 2 // gametextz to screentext migration, x pos is just halved
    set disp_temp3 x
    add disp_temp3 260 // Skilltext content

	// clear skill info
    qstrcpy 831 0
    qstrcpy 832 0
    qstrcpy 833 0
    qstrcpy 834 0
	qstrcpy 835 0

	ifn BEAT_EPISODES[4] 0 // Ep4 started?
		set disp_temp4 11001
        else ifn BEAT_EPISODES[3] 0 // Ep3 started?
		set disp_temp4 11000
        else ifn BEAT_EPISODES[2] 0 // Ep2 started?
		set disp_temp4 10999
        else
		set disp_temp4 10998

    switch userdef.m_player_skill
    case 1
        // Header gets a different pal for each skill
        qputs 830 For the story, or for taking it easy
		screentext STARTALPHANUM disp_temp2 47 28672 0 0 830 0 1 16 0 5 8 1 1 0 0 0 xdim ydim

        qputs 831 - No Enemy Resistances
        qputs 832 - Low enemy count, accuracy and aggressiveness
        qputs 833 - Double Ammunition
        qputs 834 - 1/3 Damage to Players
        rotatesprite disp_temp 170 22000 0 disp_temp4 0 0 0 0 0 xdim ydim
        break
    case 2
        qputs 830 Intended for first-time players of The AMC Squad
		screentext STARTALPHANUM disp_temp2 47 28672 0 0 830 0 125 16 0 5 8 1 1 0 0 0 xdim ydim

        qputs 831 - Partial Enemy Resistances (50%)
        qputs 832 - Normal enemy count, accuracy and aggressiveness

        rotatesprite disp_temp 170 22000 0 disp_temp4 0 1 0 0 0 xdim ydim
        break
    case 3
        qputs 830 Intended for experienced AMC players
		screentext STARTALPHANUM disp_temp2 47 28672 0 0 830 0 32 16 0 5 8 1 1 0 0 0 xdim ydim

        qputs 831 - Full Enemy Resistances (100%)
        qputs 832 - Higher enemy count, accuracy and aggressiveness
        qputs 833 - Characters will be fatigued with excessive use

        rotatesprite disp_temp 170 22000 0 disp_temp4 0 2 0 0 0 xdim ydim
        break
    case 4
        qputs 830 Intended for hardcore AMC players
		screentext STARTALPHANUM disp_temp2 47 28672 0 0 830 0 54 16 0 5 8 1 1 0 0 0 xdim ydim

        qputs 831 - Full Enemy Resistances (100%)
        qputs 832 - Even higher enemy count, accuracy and aggressiveness
        qputs 833 - Characters will be fatigued with excessive use
		qputs 834 - ^32Will Unlock extended episode ending!

        rotatesprite disp_temp 170 22000 0 disp_temp4 0 3 0 0 0 xdim ydim
        break
    case 5
        qputs 830 You will be massacred!
		screentext STARTALPHANUM disp_temp2 47 28672 0 0 830 0 124 16 0 5 8 1 1 0 0 0 xdim ydim

        qputs 831 - Full Enemy Resistances (100%)
        qputs 832 - Greatest enemy count, accuracy and aggressiveness
        qputs 833 - Characters will be fatigued with excessive use
        qputs 834 - Enemies do x2 damage!
		qputs 835 - Advanced enemy types will appear earlier!

        rotatesprite disp_temp 170 22000 0 disp_temp4 0 4 0 0 0 xdim ydim
        break
    endswitch

    // Description (white text)
	div disp_temp3 2
	screentext STARTALPHANUM disp_temp3 54 28672 0 0 831 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	screentext STARTALPHANUM disp_temp3 60 28672 0 0 832 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	screentext STARTALPHANUM disp_temp3 66 28672 0 0 833 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	screentext STARTALPHANUM disp_temp3 72 28672 0 0 834 0 0 16 0 5 8 1 1 0 0 0 xdim ydim
	screentext STARTALPHANUM disp_temp3 78 28672 0 0 835 0 0 16 0 5 8 1 1 0 0 0 xdim ydim

    // Unlockables (gold text, defined in AMCUSER.CON)
    /* // Disabled due to the newgamecustom menu for the time being
    ife userdef.m_user_map 0
        {
        ifg userdef.m_player_skill 2
            {
            ifl userdef.m_volume_number 2
                gametextz STARTALPHANUM disp_temp3 92 838 0 24 0 0 0 xdim ydim HALFSIZE
            }
       ifg userdef.m_player_skill 3
            {
                gametextz STARTALPHANUM disp_temp3 99 839 0 24 0 0 0 xdim ydim HALFSIZE
            }
        }
    */
    add x 32 // set position and palette of Armageddon graphic
    ife userdef.m_player_skill 5 set disp_temp4 0
    else set disp_temp4 54
    rotatespritea x 124 28673 0 3597 0 disp_temp4 16 -254 0 0 xdim ydim
    rotatespritea x 124 28673 0 3597 0 disp_temp4 16 -255 0 0 xdim ydim
ends

defstate override_dukecredits
        qputs 831 For the full Credits of The AMC Squad
        qputs 832 see "credits.txt" included in the zip!
        gametext STARTALPHANUM 320 40 831 0 0 0 0 0 xdim ydim
        gametext STARTALPHANUM 320 50 832 0 0 0 0 0 xdim ydim
ends


onevent EVENT_CHANGEMENU

    // increment help screen hint
    ifge RETURN 400
     ifle RETURN 401
     {
        add loading_hint 1
        mod loading_hint NUMBER_OF_HINTS
     }

    switch RETURN

        // Set inittimer and screen tint to default (otherwise affects menu)
        case 400 // story
        case 300 // load
        case 350 // save
        case 232 // ingame colorcorr
        case 502 // ingame quit
        case 701 // ingame sound
        case 50 // ingame main
        {
            inittimer 120
            ife stored_palstime 0
                getp[].pals_time stored_palstime
            setp[].pals_time 0
        }
        break

        // Restore inittimer and screen tint to ingame value
        case -2 // close the menu
        {
            inittimer current_inittimer
            setp[].pals_time stored_palstime
            set stored_palstime 0
        }
        break

        // skip credits stuff
        case 990 set RETURN 992 break
        case 991 set RETURN 994 break

        // return to ingame when exiting F1 menu
        case 0
        {
          ifge current_menu 400
            ifle current_menu 401
              set RETURN -2
        }
        break
    endswitch
endevent

onevent EVENT_DISPLAYINACTIVEMENUREST

ife RETURN 110 // Choose Skill
    {
    getu .m_volume_number disp_temp
    state display_skill_info
    }
endevent

onevent EVENT_DISPLAYMENUREST

ife current_menu 200 set AUTOAIM_STATUS -1

// Help screen
else ife current_menu 400
    {
    rotatesprite 160 100 NNORMALSIZE 0 3584 0 0 1024 0 0 xdim ydim
    state helpscreen_hints
    }

else ife current_menu 401
    {
    rotatesprite 160 100 NNORMALSIZE 0 3584 0 0 1024 0 0 xdim ydim
    state helpscreen_hints
    }
// Display credits info
else ife current_menu 992 state override_dukecredits
// Display episode information
else ife current_menu 100
    {
    getu .m_volume_number disp_temp

    switch disp_temp
    case 0
        qputs 831 An attack on an EAF base precedes a sinister plot to unleash
        qputs 832 chaos on the world. Can the AMC squad stop this dark force from
        qputs 833 changing the face of the planet as we know it?
        break
    case 1
        qputs 831 The Triad have suddenly increased their hold on Asia, and have
        qputs 832 overthrown all law and order in China. Where did they get this new
        qputs 833 power from, and can the AMC Team stop it?
        break
    case 2
        qputs 831 The Warlock Sang's evil doppelganger, Le Sang, has surfaced deep in
        qputs 832 Egypt with an army of evil beings from beyond. Can Sangluss and the
        qputs 833 rest of the squad stop Le Sang from enslaving the planet?
        break
    case 3
        qputs 831 Stranded far, far away from Earth, the AMC Squad must
        qputs 832 traverse this vast location and not only find the evil
        qputs 833 responsible, but also a way home too.
        break
    default
        qputs 831
        qputs 832 Select custom maps to play with your favorite AMC Squad characters.
        qputs 833
        break
    endswitch
    gametextz STARTALPHANUM 320 160 831 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 320 165 832 0 0 0 0 0 xdim ydim HALFSIZE
    gametextz STARTALPHANUM 320 170 833 0 0 0 0 0 xdim ydim HALFSIZE
    }

else ife current_menu 110 // Choose Skill
    {
    state display_skill_info
    }

// Check that the DATA folder exists, and display a warning if it doesn't
ife DATA_CHECK[0] 0
    {
    setarray DATA_CHECK[0] 1
    writearraytofile DATA_CHECK F_DATA_CHECK_AMCTC // if this write fails, the CON VM will abort and DATA_CHECK[0] == 1
    setarray DATA_CHECK[0] -1
    }
else ife DATA_CHECK[0] 1
    {
    gametextz 2822 320 160 9002 0 124 16 0 0 xdim ydim 49152
    gametextz 2822 320 170 9003 0 124 16 0 0 xdim ydim 49152
    }
endevent

var menu_shade 0 0

onevent EVENT_DISPLAYMENU

    // this variable is set to disable the ingame menu stuff no matter which submenu is active
    ife current_menu 0 set DISP_MAINMENU 1

    ife DISP_MAINMENU 0
    {
        // darken the background to make menus more visible
        // render below char and location images when ingame
        rotatespritea 160 100 98304 0 3584 0 4 1 -40 0 0 xdim ydim

		ife VOLUME 3 ifge LEVEL 2 rotatespritea 160 100 22000 0 3634 0 0 1024 -255 0 0 xdim ydim // ringworld background
		else ife LOCATION 3634 rotatespritea 160 100 22000 0 3634 0 0 1024 -255 0 0 xdim ydim // ringworld background
        else ife LOCATION 8448 // Earth
			{
			ifge VOLUME 4 ifl VOLUME 6 rotatesprite 55 157 18210 0 13693 0 21 256 0 0 xdim ydim
			else rotatesprite 55 157 18210 0 13693 0 0 256 0 0 xdim ydim
			}
        else ife LOCATION 8449 rotatesprite 55 157 18210 0 13698 0 0 256 0 0 xdim ydim
        else ife LOCATION 8450 rotatesprite 55 157 18210 0 13695 0 0 256 0 0 xdim ydim
        else ife LOCATION 8467 rotatesprite 55 157 18210 0 13696 0 0 256 0 0 xdim ydim
        else ife LOCATION 8459 rotatesprite 55 157 18210 0 13694 0 0 256 0 0 xdim ydim
        else ife LOCATION 20224 rotatesprite 55 157 39767 0 20224 0 0 256 0 0 xdim ydim
        else ife LOCATION 20429 rotatesprite 55 157 24210 0 20429 0 0 256 0 0 xdim ydim
		else ife LOCATION 22366 rotatesprite 55 157 24210 0 22366 0 0 256 0 0 xdim ydim
        else rotatesprite 55 157 NORMALSIZE 0 LOCATION 0 0 256 0 0 xdim ydim
    }
    else
    {
        ife menu_track 0
        {
            getu .volume_number disp_menu_temp
            setuserdef[].volume_number 0
            readarrayfromfile BEAT_EPISODES F_BEAT_EPISODES_AMCTC

            ifand BEAT_EPISODES[4] 32768 starttrackslot 2 61 // episode 4 finished?
            else ifand BEAT_EPISODES[4] 1 starttrack 52 // episode 4 started?
            else ifand BEAT_EPISODES[2] 1024 starttrack 41 // episode 3 started?
            else starttrack 40
            set menu_track 1
            setuserdef[].volume_number disp_menu_temp
        }


		ifand BEAT_EPISODES[4] 32768 // Ep4 finished?
        {
            rotatesprite 160 100 20480 0 23756 0 10 0 0 0 xdim ydim // background
            rotatesprite 55 157 18210 0 13693 5 21 256 0 0 xdim ydim // Earth at day
			rotatespritea 55 157 18210 0 3608 10 0 256 -254 0 0 xdim ydim
			rotatespritea 355 137 90000 0 12683 disp_pulse 0 0 -254 0 0 xdim ydim
        }
		else
        ifand BEAT_EPISODES[4] 1 // Ep4 started?
            rotatesprite 160 100 22000 0 3634 0 0 1024 0 0 xdim ydim // background
        else ifand BEAT_EPISODES[3] 1 // Ep3 started?
        {
            rotatesprite 160 100 20480 0 3599 0 0 0 0 0 xdim ydim // background
            rotatesprite 55 157 18210 0 20428 10 0 256 0 0 xdim ydim // Uranus (HUHUHUHUHUHasghg325)
        }
        else ifand BEAT_EPISODES[2] 1 // Ep2 started?
        {
            rotatesprite 160 100 20480 0 23758 0 0 0 0 0 xdim ydim // background
            rotatesprite 55 157 18210 0 13695 10 0 256 0 0 xdim ydim // Mars
            rotatespritea 55 157 18210 0 3608 10 0 256 -254 0 0 xdim ydim
        }
        else ifand BEAT_EPISODES[1] 1 // Ep1 started?
        {
            rotatesprite 160 100 20480 0 23756 0 0 0 0 0 xdim ydim // background
            rotatesprite 55 157 18210 0 13694 10 0 256 0 0 xdim ydim // Earth at night
        }
        else // fresh start?
        {
            rotatesprite 160 100 20480 0 23756 0 0 0 0 0 xdim ydim // background
            rotatesprite 55 157 18210 0 13693 10 0 256 0 0 xdim ydim // Earth at day
        }

		ifand BEAT_EPISODES[4] 32768 // Ep4 finished?
         ifn BEAT_EPISODES[5] 0 // Argo will start appearing once any map in E5 is beaten as well
			{
				ifand BEAT_EPISODES[5] 262144 rotatesprite 80 127 49254 0 29257 5 0 0 0 0 xdim ydim
				else ifand BEAT_EPISODES[5] 32768 rotatesprite 80 127 49254 0 29256 10 0 0 0 0 xdim ydim
				else ifand BEAT_EPISODES[5] 2048 rotatesprite 80 127 49254 0 29255 15 0 0 0 0 xdim ydim
				else rotatesprite 80 127 49254 0 29254 20 0 0 0 0 xdim ydim
			}


        add disp_menu_temp2 2
        ifg disp_menu_temp2 400 set disp_menu_temp2 -200

        readarrayfromfile BASE_RESEARCH F_BASE_AMCTC
        ife BASE_RESEARCH[7] 2 // show new AMC ship if researched
        rotatesprite disp_menu_temp2 105 7192 1024 22524 5 0 4 0 0 xdim ydim
        else rotatesprite disp_menu_temp2 105 8192 1024 3797 5 0 4 0 0 xdim ydim

        ifand BEAT_EPISODES[2] 1024 // 2nd AMC ship shows up once EP2 is done
        {
            set disp_menu_temp3 disp_menu_temp2
            sub disp_menu_temp3 15
            ife BASE_RESEARCH[7] 2 // show new AMC ship if researched
                rotatesprite disp_menu_temp3 120 6192 1024 22524 10 0 4 0 0 xdim ydim
            else rotatesprite disp_menu_temp3 120 7192 1024 3797 10 0 4 0 0 xdim ydim
        }

        ifn BEAT_EPISODES[3] 0 // Snowfall's ship will start appearing once any map in E3 is beaten
        {
            add disp_menu_temp4 1
            ifg disp_menu_temp4 400
                set disp_menu_temp4 -200
            rotatesprite disp_menu_temp4 75 14192 0 23755 0 0 0 0 0 xdim ydim
        }

        ifand BEAT_EPISODES[3] 65536 // 3rd AMC ship shows up once EP3 is done
        {
            set disp_menu_temp3 disp_menu_temp2
            add disp_menu_temp3 25
            ife BASE_RESEARCH[7] 2 // show new AMC ship if researched
                rotatesprite disp_menu_temp3 150 11000 1024 22524 0 0 4 0 0 xdim ydim
            else rotatesprite disp_menu_temp3 150 12000 1024 3797 0 0 4 0 0 xdim ydim
        }

        ifand BEAT_EPISODES[4] 32768 // 4th AMC ship shows up once EP4 is done
        {
            set disp_menu_temp3 disp_menu_temp2
            add disp_menu_temp3 5
            ife BASE_RESEARCH[7] 2 // show new AMC ship if researched
                rotatesprite disp_menu_temp3 190 17000 1024 22524 0 67 4 0 0 xdim ydim
            else rotatesprite disp_menu_temp3 190 18000 1024 3797 0 67 4 0 0 xdim ydim
        }

        // darken the background to make menus more visible
        // render above ships etc when out of the game, don't render on titlescreen
        switch current_menu
            case 0 // main
                break
            default
                rotatespritea 160 100 98304 0 3584 0 4 1 -40 0 0 xdim ydim
                break
        endswitch
    }



	ifand BEAT_EPISODES[4] 32768 rotatespritea 105 115 40960 0 3605 0 21 256 -255 0 0 xdim ydim
    else ife LOCATION 8450 rotatespritea 105 115 40960 0 3605 0 21 256 -255 0 0 xdim ydim
    else rotatespritea 105 115 40960 0 3605 0 0 256 -255 0 0 xdim ydim

    add disp_temp7 2
    ifg disp_temp7 2048 set disp_temp7 0
    rotatespritea 10 135 INVENSIZE disp_temp7 3228 20 12 256 -255 0 0 xdim ydim

	ifand BEAT_EPISODES[5] 524288 rotatespritea 10 135 INVENSIZE disp_temp7 3227 10 12 256 -255 0 0 xdim ydim
    else ifand BEAT_EPISODES[4] 32768 rotatespritea 10 135 INVENSIZE disp_temp7 3227 20 12 256 -255 0 0 xdim ydim
    else ifand BEAT_EPISODES[3] 65536 rotatespritea 10 135 INVENSIZE disp_temp7 3227 26 12 256 -255 0 0 xdim ydim
    sub disp_temp8 4

    ifl disp_temp8 -2048 set disp_temp8 0
    rotatespritea 10 135 QUARTERSIZE disp_temp8 3228 10 12 256 -255 0 0 xdim ydim

	ifn DISP_MAINMENU 0
		{
		ifl menu_shade 60 add menu_shade 1
		rotatespritea 160 100 DOUBLESIZE 0 4809 menu_shade 0 1 -253 0 0 xdim ydim
		}

/*
    // legacy episode menu, no longer in use
    ife current_menu 100
    {
        getu .m_volume_number disp_temp

        ife disp_temp 0 rotatespritea 250 170 16384 0 3252 0 0 512 -255 0 0 xdim ydim
        ife disp_temp 1 rotatespritea 250 170 16384 0 3253 0 0 512 -255 0 0 xdim ydim
        ife disp_temp 2 rotatespritea 250 170 16384 0 3254 0 0 512 -255 0 0 xdim ydim
        ife disp_temp 3 rotatespritea 76 160 NORMALSIZE 0 3255 0 0 512 -255 0 0 xdim ydim
    }
*/

    getp[].palookup disp_temp6

    ife DISP_MAINMENU 0
    {

	ifp palive
		{
			ifn ALLYSLOT4 -1
			{
			geta[ALLYSLOT4].picnum disp_temp2
			ife disp_temp2 MINERVA rotatesprite 164 169 29152 0 disp_temp2 22 0 256 0 0 xdim ydim
			else rotatesprite 164 169 58304 0 disp_temp2 22 0 256 0 0 xdim ydim
			}
			ifn ALLYSLOT3 -1
			{
			geta[ALLYSLOT3].picnum disp_temp2
			ife disp_temp2 MINERVA rotatesprite 204 164 34152 0 disp_temp2 18 0 256 0 0 xdim ydim
			else rotatesprite 204 164 68304 0 disp_temp2 18 0 256 0 0 xdim ydim
			}
			ifn ALLYSLOT2 -1
			{
			geta[ALLYSLOT2].picnum disp_temp2
			ife disp_temp2 MINERVA rotatesprite 244 159 39152 0 disp_temp2 14 0 256 0 0 xdim ydim
			else rotatesprite 244 159 78304 0 disp_temp2 14 0 256 0 0 xdim ydim
			}
			ifn ALLYSLOT1 -1
			{
			geta[ALLYSLOT1].picnum disp_temp2
			ife disp_temp2 MINERVA rotatesprite 284 154 48304 0 disp_temp2 10 0 256 0 0 xdim ydim
			else rotatesprite 284 154 88304 0 disp_temp2 10 0 256 0 0 xdim ydim
			}
		}

		ifn player[].wackedbyactor -1
			{
			geta[player.wackedbyactor].picnum disp_temp5
			geta[player.wackedbyactor].pal disp_temp6
			// Cycloids
			ife disp_temp5 LIZTROOP rotatesprite 34 140 80304 FLIP 1716 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PIGCOP rotatesprite 194 140 95304 FLIP 2109 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 LIZMAN rotatesprite 34 140 80304 FLIP 2196 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 OCTABRAIN rotatesprite 34 130 80304 FLIP 1858 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 COMMANDER rotatesprite 34 140 80304 FLIP 1941 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ADV_COMMANDER rotatesprite 34 140 80304 FLIP 31002 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 RECON rotatesprite 34 120 70304 FLIP 1968 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SPACE_LIZTROOP rotatesprite 34 120 70304 FLIP 24721 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 TANK rotatesprite 54 140 90304 FLIP 1981 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BATTLELORD rotatesprite 54 130 90304 FLIP 2666 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BOSS2 rotatesprite 54 130 90304 FLIP 2736 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BOSS3 rotatesprite 54 130 90304 FLIP 2796 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 NEWBEAST rotatesprite 194 140 95304 FLIP 4646 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BOSS4 rotatesprite 54 130 90304 FLIP 4766 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PIGCOP_RIOT rotatesprite 34 140 80304 FLIP 17876 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PIG_SF rotatesprite 34 140 95304 FLIP 24100 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ELITE_LIZMAN rotatesprite 34 140 80304 FLIP 24184 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CYBERALIEN rotatesprite 34 140 90304 FLIP 15700 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PIGBOSS rotatesprite 34 120 90304 FLIP 24612 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 LIZBOSS rotatesprite 34 120 90304 FLIP 24672 5 disp_temp6 12 0 0 xdim ydim
			// Shadow
			ife disp_temp5 TRIAD rotatesprite 34 140 80304 FLIP 3952 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 NINJA rotatesprite 34 140 80304 FLIP 14874 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 RIPPER rotatesprite 174 140 80304 FLIP 17735 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MAMANO rotatesprite 174 130 80304 FLIP 15756 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 GUARDIAN rotatesprite 180 130 80304 FLIP 17814 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 YUKI_ONNA rotatesprite 34 140 80304 FLIP 21176 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SERPENT_GOD rotatesprite 44 130 80304 FLIP 16750 5 disp_temp6 12 0 0 xdim ydim
			// Abyssal
			ife disp_temp5 SATYR rotatesprite 174 130 80304 FLIP 7455 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SHADE rotatesprite 34 135 80304 FLIP 7503 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 INFERNAL rotatesprite 34 135 80304 FLIP 15145 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BRUISER rotatesprite 34 135 80304 FLIP 7566 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ZSCIEN rotatesprite 34 140 80304 FLIP 7608 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ZSOLDIER rotatesprite 34 140 80304 FLIP 14005 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ZSOLDIER2 rotatesprite 34 140 80304 FLIP 15309 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 Z_GRENADEL rotatesprite 34 140 80304 FLIP 16666 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ZCHAING rotatesprite 34 140 80304 FLIP 8349 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 HADESPHERE rotatesprite 34 125 80304 FLIP 8223 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 FLESHWIZARD rotatesprite 34 140 80304 FLIP 8379 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CYBERTOUR rotatesprite 34 130 80304 FLIP 8299 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MAEPHISTO rotatesprite 34 130 80304 FLIP 14367 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CYBERDEMON rotatesprite 34 140 90304 FLIP 10909 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SCARAB_DEMON rotatesprite 34 140 90304 FLIP 20516 5 disp_temp6 12 0 0 xdim ydim
			// Mercenary/Human
			ife disp_temp5 MADRAX rotatesprite 34 140 80304 FLIP 23459 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 FASCIST rotatesprite 34 140 80304 FLIP 13087 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MERC rotatesprite 34 140 80304 FLIP 8825 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MERC2 rotatesprite 34 140 80304 FLIP 13666 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 LPOWERSUIT rotatesprite 34 140 80304 FLIP 8730 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 HPOWERSUIT rotatesprite 64 120 65304 FLIP 8772 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 VILMOS_ROBOT rotatesprite 34 130 90304 FLIP 13135 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CYBERCULTIST rotatesprite 34 140 80304 FLIP 20000 5 disp_temp6 12 0 0 xdim ydim
			// Cult
			ife disp_temp5 LOST rotatesprite 34 140 80304 FLIP 9734 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SPIRIT rotatesprite 34 135 80304 FLIP 22052 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SORCERER rotatesprite 34 135 80304 FLIP 9793 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 DARKAVATAR rotatesprite 34 130 90304 FLIP 10957 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CULTIST rotatesprite 34 140 80304 FLIP 7734 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CULT_HMG rotatesprite 34 130 80304 FLIP 23328 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CULT_FLAME rotatesprite 34 130 80304 FLIP 23381 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CULT_CHAINSAW rotatesprite 174 135 80304 FLIP 10804 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 DOCTORJ rotatesprite 34 140 80304 FLIP 11290 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MISTERH rotatesprite 34 135 85304 FLIP 11351 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SHAMBLER rotatesprite 174 105 95304 FLIP 24351 5 disp_temp6 12 0 0 xdim ydim
			// Necro
			ife disp_temp5 OGRE rotatesprite 34 130 90304 FLIP 12648 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BERSERKER rotatesprite 174 130 95304 FLIP 11727 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SUCCUBUS rotatesprite 34 130 90304 FLIP 18902 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ORC rotatesprite 184 130 90304 FLIP 24437 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ARCHER rotatesprite 34 130 80304 FLIP 24473 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 TROLL rotatesprite 54 105 90304 FLIP 26665 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SKNIGHT rotatesprite 34 130 90304 FLIP 26586 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SSQUIRE rotatesprite 34 130 90304 FLIP 31470 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 GOBLINBROS rotatesprite 34 130 80304 FLIP 29466 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 GOLEM rotatesprite 34 130 90304 FLIP 31430 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 NETHERBRUTE rotatesprite 34 130 90304 FLIP 15221 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 DRAGON_FLIGHT rotatesprite 4 130 70304 FLIP 28196 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 DRAGON rotatesprite 14 125 80304 FLIP 28249 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BEHOLDER rotatesprite 34 125 90304 FLIP 28283 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 WOOFER rotatesprite 184 150 90304 FLIP 28356 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MAKARA rotatesprite 54 115 90304 FLIP 30280 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 VEGUNTH rotatesprite 160 115 90304 FLIP 25841 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SVEDR rotatesprite 160 115 90304 FLIP 28031 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MONGUR rotatesprite 100 115 100304 FLIP 20521 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 HYDRA rotatesprite 160 115 90304 FLIP 25841 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MAARTEN rotatesprite 34 130 80304 FLIP 26326 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 JEDRIK rotatesprite 44 120 90304 FLIP 27652 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 CONSERVATOR rotatesprite 4 105 70304 FLIP 22100 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 NAALDIR rotatesprite 24 115 80304 FLIP 26143 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 NMIND rotatesprite 24 115 90304 FLIP 20583 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 NSOUL rotatesprite 24 145 90304 FLIP 20551 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 KRAKEN rotatesprite 160 105 40304 FLIP 28675 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 KRAKEN_TENT rotatesprite 160 105 40304 FLIP 28697 5 disp_temp6 12 0 0 xdim ydim
			// Egypt
			ife disp_temp5 THOTH rotatesprite 34 135 80304 FLIP 12585 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ANUBIS_MUMMY rotatesprite 34 125 90304 FLIP 12758 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SIREN rotatesprite 34 135 80304 FLIP 22130 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 SCORPIONESS rotatesprite 34 115 80304 FLIP 22181 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 LIL_SCORP rotatesprite 154 115 70304 FLIP 22150 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 LAVA_BEAST rotatesprite 24 145 80304 FLIP 22084 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ALUDRAN rotatesprite 44 125 90304 FLIP 22236 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 COBRA rotatesprite 34 135 80304 FLIP 22861 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 LESANG rotatesprite 34 135 90304 FLIP 9827 5 disp_temp6 12 0 0 xdim ydim
			// MJ12
			ife disp_temp5 MJ12_TROOP rotatesprite 34 135 80304 FLIP 15041 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 MJ12_ASSASSIN rotatesprite 244 135 80304 FLIP 18836 5 disp_temp6 13 0 0 xdim ydim
			ife disp_temp5 PATCOS rotatesprite 44 135 80304 FLIP 19066 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 E3_BOSS rotatesprite 44 135 80304 FLIP 16395 5 disp_temp6 12 0 0 xdim ydim
			// Paradigm
			ife disp_temp5 PE_TROOP rotatesprite 34 135 80304 FLIP 18714 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PE_SHOTGUNNER rotatesprite 34 135 80304 FLIP 33469 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PE_ELDER rotatesprite 34 135 80304 FLIP 18792 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PE_SENTRY rotatesprite 44 135 90304 FLIP 18755 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 TRENTON_SOLARI rotatesprite 184 135 90304 FLIP 19010 5 disp_temp6 12 0 0 xdim ydim
			// Misc
			ife disp_temp5 E1_BOSS rotatesprite 44 120 80304 FLIP 20531 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 GORILLA rotatesprite 44 130 80304 FLIP 22811 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 NAZI rotatesprite 44 135 80304 FLIP 22913 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 PITFIEND rotatesprite 44 130 80304 FLIP 13017 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 BEYONDER rotatesprite 44 130 90304 FLIP 12683 5 disp_temp6 12 0 0 xdim ydim
			ife disp_temp5 ZOMBIE rotatesprite 184 130 80304 FLIP 26255 5 disp_temp6 4 0 0 xdim ydim
			ife disp_temp5 CHRYSSALID rotatesprite 184 135 85304 FLIP 24236 5 disp_temp6 4 0 0 xdim ydim
			ife disp_temp5 SPIDER2 rotatesprite 184 135 85304 FLIP 23516 5 disp_temp6 4 0 0 xdim ydim
			}

        switch CHAR
        case 0 // JAMES
            ife injured 1 // from PATCOS fight?
            {
                rotatesprite 294 144 98304 0 19157 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
                rotatesprite 290 140 98304 0 19157 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            }
            else
            {
				ifand CHAR_APP 64 // Ringworld James
					{
					ifp pdead set disp_temp5 27492
					else ifn player_using_horse -1 set disp_temp5 27511
					else ifinwater set disp_temp5 27462
					else ifn amc_base 0 set disp_temp5 27898
					else ifl SLIDE_KICK 26 set disp_temp5 27437
					else ifp pjumping set disp_temp5 27422
					else ifp pjetpack set disp_temp5 27422
					else ifp pducking set disp_temp5 27437
					else ifp pfalling set disp_temp5 27432
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 27487
					else ifl QUICKK 13 set disp_temp5 27487
					else ifp prunning set disp_temp5 27407
					else ifp pwalking set disp_temp5 27407
					else ife player[].holster_weapon 1 set disp_temp5 27392
					else set disp_temp5 27397
					}
                else ifand CHAR_APP 1 // bionic arm James
					{
					ifp pdead set disp_temp5 25725
					else ifn player_using_horse -1 set disp_temp5 21767
					else ifg player_bike 0 set disp_temp5 17505
					else ifinwater set disp_temp5 25705
					else ifn amc_base 0 set disp_temp5 25635
					else ifl SLIDE_KICK 26 set disp_temp5 25675
					else ifp pjumping set disp_temp5 25665
					else ifp pjetpack set disp_temp5 25665
					else ifp pducking set disp_temp5 25675
					else ifp pfalling set disp_temp5 25670
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 25720
					else ifl QUICKK 13 set disp_temp5 25720
					else ifp prunning set disp_temp5 25650
					else ifp pwalking set disp_temp5 25650
					else ife player[].holster_weapon 1 set disp_temp5 25630
					else set disp_temp5 25640
					}
                else // default James
					{
					ifp pdead set disp_temp5 5351
					else ifn player_using_horse -1 set disp_temp5 21767
					else ifg player_bike 0 set disp_temp5 17455
					else ifinwater set disp_temp5 5310
					else ifn amc_base 0 set disp_temp5 9017
					else ifl SLIDE_KICK 26 set disp_temp5 5331
					else ifp pjumping set disp_temp5 5300
					else ifp pjetpack set disp_temp5 5300
					else ifp pducking set disp_temp5 5331
					else ifp pfalling set disp_temp5 5305
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 5290
					else ifl QUICKK 13 set disp_temp5 5290
					else ifp prunning set disp_temp5 5270
					else ifp pwalking set disp_temp5 5270
					else ife player[].holster_weapon 1 set disp_temp5 5260
					else set disp_temp5 5245
					}

                rotatesprite 294 144 98304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
                rotatesprite 290 140 98304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            }
            break
        case 1 // ZAXTOR
					{
					ifp pdead set disp_temp5 5605
					else ifn player_using_horse -1 ife VOLUME 3 set disp_temp5 21827
					else ifn player_using_horse -1 set disp_temp5 21792
					else ifg player_bike 0 set disp_temp5 17490
					else ifinwater set disp_temp5 5566
					else ifn amc_base 0 set disp_temp5 5611
					else ifl SLIDE_KICK 26 set disp_temp5 5587
					else ifp pjumping set disp_temp5 5556
					else ifp pjetpack set disp_temp5 5551
					else ifp pducking set disp_temp5 5587
					else ifp pfalling set disp_temp5 5561
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 5546
					else ifl QUICKK 13 set disp_temp5 5546
					else ifp prunning set disp_temp5 5521
					else ifp pwalking set disp_temp5 5521
					else ife player[].holster_weapon 1 set disp_temp5 5611
					else set disp_temp5 5501
					}
            ife disp_temp6 0 set disp_temp6 21
            rotatesprite 294 144 98304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 98304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 2 // MERLIJN
            ife disp_temp6 0 set disp_temp6 21

            ifand CHAR_APP 4 // Berserker Merlijn
					{
					ifp pdead set disp_temp5 26547
					else ifn player_using_horse -1 set disp_temp5 21817
					else ifg player_bike 0 set disp_temp5 21837
					else ifinwater set disp_temp5 26527
					else ifn amc_base 0 set disp_temp5 26447
					else ifl SLIDE_KICK 26 set disp_temp5 26502
					else ifp pjumping set disp_temp5 26492
					else ifp pjetpack set disp_temp5 26492
					else ifp pducking set disp_temp5 26502
					else ifp pfalling set disp_temp5 26497
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 26477
					else ifl QUICKK 13 set disp_temp5 26477
					else ifp prunning set disp_temp5 26452
					else ifp pwalking set disp_temp5 26452
					else ife player[].holster_weapon 1 set disp_temp5 26447
					else set disp_temp5 26447
					}
                else // default Merlijn
					{
					ifp pdead set disp_temp5 6420
					else ifn player_using_horse -1 set disp_temp5 21782
					else ifg player_bike 0 set disp_temp5 17455
					else ifinwater set disp_temp5 9260
					else ifn amc_base 0 set disp_temp5 6425
					else ifl SLIDE_KICK 26 set disp_temp5 9245
					else ifp pjumping set disp_temp5 9225
					else ifp pjetpack set disp_temp5 9225
					else ifp pducking set disp_temp5 9245
					else ifp pfalling set disp_temp5 9230
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 9240
					else ifl QUICKK 13 set disp_temp5 9240
					else ifp prunning set disp_temp5 6405
					else ifp pwalking set disp_temp5 6405
					else ife player[].holster_weapon 1 set disp_temp5 6425
					else set disp_temp5 6400
					}

            rotatesprite 294 144 90304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 90304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 3 // HIGHWIRE
            ife disp_temp6 0 set disp_temp6 11
            ifand CHAR_APP 16 // SMART Highwire
					{
					ifp pdead set disp_temp5 31834
					else ifinwater set disp_temp5 31814
					else ifn amc_base 0 set disp_temp5 30121
					else ifl SLIDE_KICK 26 set disp_temp5 31789
					else ifp pjumping set disp_temp5 31779
					else ifp pjetpack set disp_temp5 31779
					else ifp pducking set disp_temp5 31789
					else ifp pfalling set disp_temp5 31784
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 31774
					else ifl QUICKK 13 set disp_temp5 31774
					else ifp prunning set disp_temp5 31754
					else ifp pwalking set disp_temp5 31754
					else ife player[].holster_weapon 1 set disp_temp5 30121
					else set disp_temp5 31744
					}
            else
					{
					ifp pdead set disp_temp5 6119
					else ifn player_using_horse -1 set disp_temp5 21787
					else ifg player_bike 0 set disp_temp5 17450
					else ifinwater set disp_temp5 9270
					else ifn amc_base 0 set disp_temp5 6019
					else ifl SLIDE_KICK 26 set disp_temp5 6099
					else ifp pjumping set disp_temp5 6043
					else ifp pjetpack set disp_temp5 6048
					else ifp pducking set disp_temp5 6099
					else ifp pfalling set disp_temp5 6058
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 6068
					else ifl QUICKK 13 set disp_temp5 6068
					else ifp prunning set disp_temp5 6028
					else ifp pwalking set disp_temp5 6028
					else ife player[].holster_weapon 1 set disp_temp5 6019
					else set disp_temp5 6013
					}
                rotatesprite 294 144 90304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
                rotatesprite 290 140 90304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 4 // SANG
            ife disp_temp6 0 set disp_temp6 21
            ifand CHAR_APP 2 // Peacelock Sang
				{
					set disp_temp7 88304
					ifp pdead set disp_temp5 23828
					else ifn player_using_horse -1 set disp_temp5 21807
					else ifg player_bike 0 set disp_temp5 17475
					else ifinwater set disp_temp5 24001
					else ifn amc_base 0 set disp_temp5 24011
					else ifl SLIDE_KICK 26 set disp_temp5 23976
					else ifp pjumping set disp_temp5 23971
					else ifp pjetpack set disp_temp5 23971
					else ifp pducking set disp_temp5 23976
					else ifp pfalling set disp_temp5 23971
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 23971
					else ifl QUICKK 13 set disp_temp5 23971
					else ifp prunning set disp_temp5 23808
					else ifp pwalking set disp_temp5 23808
					else ife player[].holster_weapon 1 set disp_temp5 23966
					else set disp_temp5 23966
				}
				else // Warlock Sang
					{
					set disp_temp7 98304
					ifp pdead set disp_temp5 6356
					else ifg player_bike 0 set disp_temp5 17460
					else ifinwater set disp_temp5 17585
					else ifn amc_base 0 set disp_temp5 13207
					else ifl SLIDE_KICK 26 set disp_temp5 17570
					else ifp pjumping set disp_temp5 17560
					else ifp pjetpack set disp_temp5 17560
					else ifp pducking set disp_temp5 17570
					else ifp pfalling set disp_temp5 17565
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 6068
					else ifl QUICKK 13 set disp_temp5 6068
					else ifp prunning set disp_temp5 6341
					else ifp pwalking set disp_temp5 6341
					else ife player[].holster_weapon 1 set disp_temp5 17555
					else set disp_temp5 17555
					rotatesprite 320 45 28304 0 6200 10 0 0 0 0 xdim ydim // CHARACTER
					}
                rotatesprite 294 144 disp_temp7 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
                rotatesprite 290 140 disp_temp7 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 5 // RUSTY
            ife disp_temp6 0 set disp_temp6 12

            ifand CHAR_APP 32 // Rust-D
					{
					ifp pdead set disp_temp5 6696
					else ifn player_using_horse -1 set disp_temp5 21812
					else ifg player_bike 0 set disp_temp5 17445
					else ifinwater set disp_temp5 6703
					else ifn amc_base 0 set disp_temp5 6676
					else ifl SLIDE_KICK 26 set disp_temp5 6728
					else ifp pjumping set disp_temp5 6686
					else ifp pjetpack set disp_temp5 6686
					else ifp pducking set disp_temp5 6728
					else ifp pfalling set disp_temp5 6691
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 6686
					else ifl QUICKK 13 set disp_temp5 6686
					else ifp prunning set disp_temp5 6661
					else ifp pwalking set disp_temp5 6661
					else ife player[].holster_weapon 1 set disp_temp5 6676
					else set disp_temp5 6656
					}
				else // Rusty
					{
					ifp pdead set disp_temp5 6696
					else ifn player_using_horse -1 set disp_temp5 21812
					else ifg player_bike 0 set disp_temp5 17445
					else ifinwater set disp_temp5 6703
					else ifn amc_base 0 set disp_temp5 6676
					else ifl SLIDE_KICK 26 set disp_temp5 6728
					else ifp pjumping set disp_temp5 6686
					else ifp pjetpack set disp_temp5 6686
					else ifp pducking set disp_temp5 6728
					else ifp pfalling set disp_temp5 6691
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 6686
					else ifl QUICKK 13 set disp_temp5 6686
					else ifp prunning set disp_temp5 6661
					else ifp pwalking set disp_temp5 6661
					else ife player[].holster_weapon 1 set disp_temp5 6676
					else set disp_temp5 6656
					}

            rotatesprite 294 144 90304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 90304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 6 // GEOFFREY
            ife disp_temp6 0 set disp_temp6 21
					
					ifp pdead set disp_temp5 6450
					else ifn player_using_horse -1 set disp_temp5 21797
					else ifg player_bike 0 set disp_temp5 17480
					else ifinwater set disp_temp5 11132
					else ifn amc_base 0 set disp_temp5 6456
					else ifl SLIDE_KICK 26 set disp_temp5 6595
					else ifp pjumping set disp_temp5 6585
					else ifp pjetpack set disp_temp5 6585
					else ifp pducking set disp_temp5 6595
					else ifp pfalling set disp_temp5 6590
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 6615
					else ifl QUICKK 13 set disp_temp5 6615
					else ifp prunning set disp_temp5 6430
					else ifp pwalking set disp_temp5 6430
					else ife player[].holster_weapon 1 set disp_temp5 6456
					else set disp_temp5 6681
					

            rotatesprite 294 144 84371 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
            rotatesprite 290 140 84371 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 7 // MIKKO
            ife disp_temp6 0 set disp_temp6 11
					
					ifp pdead set disp_temp5 6937
					else ifn player_using_horse -1 set disp_temp5 21772
					else ifg player_bike 0 set disp_temp5 17485
					else ifinwater set disp_temp5 14399
					else ifn amc_base 0 set disp_temp5 20074
					else ifl SLIDE_KICK 26 set disp_temp5 6983
					else ifp pjumping set disp_temp5 6944
					else ifp pjetpack set disp_temp5 6944
					else ifp pducking set disp_temp5 6983
					else ifp pfalling set disp_temp5 6949
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 11126
					else ifl QUICKK 13 set disp_temp5 11126
					else ifp prunning set disp_temp5 6912
					else ifp pwalking set disp_temp5 6912
					else ife player[].holster_weapon 1 set disp_temp5 20074
					else set disp_temp5 6932
					
                rotatesprite 294 144 84371 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
                rotatesprite 290 140 84371 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 8 // empty char
            break
        case 9 // CULTIST
				ifp pdead set disp_temp5 7769
				else ifinwater set disp_temp5 7748
				else ifn amc_base 0 set disp_temp5 7680
				else ifl SLIDE_KICK 26 set disp_temp5 15230
				else ifp pjumping set disp_temp5 7706
				else ifp pjetpack set disp_temp5 7706
				else ifp pducking set disp_temp5 15230
				else ifp pfalling set disp_temp5 7711
				else ifl ROUNDHOUSE_KICK 26 set disp_temp5 7721
				else ifl QUICKK 13 set disp_temp5 7721
				else ifp prunning set disp_temp5 7685
				else ifp pwalking set disp_temp5 7685
				else ife player[].holster_weapon 1 set disp_temp5 7680
				else set disp_temp5 7728
				rotatesprite 294 144 84371 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 84371 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 10 // BOMBSHELL
				ifp pdead set disp_temp5 9929
				else ifg player_bike 0 set disp_temp5 17500
				else ifinwater set disp_temp5 14474
				else ifn amc_base 0 set disp_temp5 14075
				else ifl SLIDE_KICK 26 set disp_temp5 10375
				else ifp pjumping set disp_temp5 10370
				else ifp pjetpack set disp_temp5 10370
				else ifp pducking set disp_temp5 10375
				else ifp pfalling set disp_temp5 10380
				else ifl ROUNDHOUSE_KICK 26 set disp_temp5 9941
				else ifl QUICKK 13 set disp_temp5 9941
				else ifp prunning set disp_temp5 9909
				else ifp pwalking set disp_temp5 9909
				else ife player[].holster_weapon 1 set disp_temp5 14075
				else set disp_temp5 10365
				rotatesprite 294 144 84371 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 84371 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 11 // MAARTEN
				ifp pdead set disp_temp5 26395
				else ifinwater set disp_temp5 26375
				else ifn amc_base 0 set disp_temp5 26280
				else ifl SLIDE_KICK 26 set disp_temp5 26350
				else ifp pjumping set disp_temp5 26335
				else ifp pjetpack set disp_temp5 26335
				else ifp pducking set disp_temp5 26350
				else ifp pfalling set disp_temp5 26330
				else ifl ROUNDHOUSE_KICK 26 set disp_temp5 26345
				else ifl QUICKK 13 set disp_temp5 26345
				else ifp prunning set disp_temp5 26285
				else ifp pwalking set disp_temp5 26285
				else ife player[].holster_weapon 1 set disp_temp5 26280
				else set disp_temp5 26305
				rotatesprite 294 144 88371 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 88371 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 12 // JANE
				ife disp_temp6 0 set disp_temp6 3
				ifp pdead set disp_temp5 12871
				else ifinwater set disp_temp5 14464
				else ifn amc_base 0 set disp_temp5 12949
				else ifl SLIDE_KICK 26 set disp_temp5 12846
				else ifp pjumping set disp_temp5 12841
				else ifp pjetpack set disp_temp5 12841
				else ifp pducking set disp_temp5 12846
				else ifp pfalling set disp_temp5 12851
				else ifl ROUNDHOUSE_KICK 26 set disp_temp5 12836
				else ifl QUICKK 13 set disp_temp5 12836
				else ifp prunning set disp_temp5 12811
				else ifp pwalking set disp_temp5 12811
				else ife player[].holster_weapon 1 set disp_temp5 12954
				else set disp_temp5 12801
				rotatesprite 294 144 86304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 86304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 13 // MICKY
					
					ifp pdead set disp_temp5 16419
					else ifn player_using_horse -1 set disp_temp5 21777
					else ifg player_bike 0 set disp_temp5 17465
					else ifinwater set disp_temp5 17545
					else ifn amc_base 0
						{
						ifand CHAR_APP 128 set disp_temp5 18527
						else set disp_temp5 16585
						}
					else ifl SLIDE_KICK 26 set disp_temp5 16425
					else ifp pjumping set disp_temp5 17525
					else ifp pjetpack set disp_temp5 17525
					else ifp pducking set disp_temp5 16425
					else ifp pfalling set disp_temp5 17530
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 17520
					else ifl QUICKK 13 set disp_temp5 17520
					else ifp prunning set disp_temp5 16394
					else ifp pwalking set disp_temp5 16394
					else ife player[].holster_weapon 1 set disp_temp5 16384
					else set disp_temp5 16389
					
				rotatesprite 294 144 86304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 86304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 14 // Snowfall
				ife TIMEZONE 6 // VR human snowfall
					set disp_temp5 15599
				else
					{
					ifp pdead set disp_temp5 20882
					else ifn player_using_horse -1 set disp_temp5 21802
					else ifg player_bike 0 set disp_temp5 17495
					else ifinwater set disp_temp5 20913
					else ifn amc_base 0 set disp_temp5 20888
					else ifl SLIDE_KICK 26 set disp_temp5 20893
					else ifp pjumping set disp_temp5 20766
					else ifp pjetpack set disp_temp5 20766
					else ifp pducking set disp_temp5 20893
					else ifp pfalling set disp_temp5 20771
					else ifl ROUNDHOUSE_KICK 26 set disp_temp5 20938
					else ifl QUICKK 13 set disp_temp5 20938
					else ifp prunning set disp_temp5 20741
					else ifp pwalking set disp_temp5 20741
					else ife player[].holster_weapon 1 set disp_temp5 20888
					else set disp_temp5 20736
					}
                rotatesprite 294 144 76304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
                rotatesprite 290 140 76304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 15 // Micky Begins Micky
				ifp prunning set disp_temp5 19134
				else ifp pwalking set disp_temp5 19134
				else set disp_temp5 19129
				rotatesprite 294 144 76304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 76304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
        case 17 // Kagura
				ifp pdead set disp_temp5 27241
				else ifn player_using_horse -1 set disp_temp5 27257
				else ifg player_bike 0 set disp_temp5 27264
				else ifinwater set disp_temp5 27226
				else ifn amc_base 0 set disp_temp5 27136
				else ifl SLIDE_KICK 26 set disp_temp5 27201
				else ifp pjumping set disp_temp5 27191
				else ifp pjetpack set disp_temp5 27191
				else ifp pducking set disp_temp5 27201
				else ifp pfalling set disp_temp5 27196
				else ifl ROUNDHOUSE_KICK 26 set disp_temp5 27186
				else ifl QUICKK 13 set disp_temp5 27186
				else ifp prunning set disp_temp5 27151
				else ifp pwalking set disp_temp5 27151
				else ife player[].holster_weapon 1 set disp_temp5 27141
				else set disp_temp5 27146
				rotatesprite 294 144 76304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 76304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
            break
		case 20 // Cassandra
				ifp prunning set disp_temp5 17930
				else ifp pwalking set disp_temp5 17930
				else ifp pjumping set disp_temp5 17930
				else ifp pjetpack set disp_temp5 17930
				else ifp pducking set disp_temp5 17950
				else ifp pfalling set disp_temp5 17965
				else ifinwater set disp_temp5 17930
				else set disp_temp5 17925
				rotatesprite 294 144 90304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
				rotatesprite 290 140 90304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
			break
        endswitch
    }

endevent

onevent EVENT_DISPLAYBONUSSCREEN

ife cheated 1 gametext STARTALPHANUM 27 158 8500 0 2 0 0 0 xdim ydim
else
ifg AMC_BUDGET_INCREASE 0
{
qsprintf 1026 1027 AMC_BUDGET_INCREASE
gametext STARTALPHANUM 27 158 1026 0 0 0 0 0 xdim ydim
}
ifg LOADOUT_COST 0
    {
    set temp6 LOADOUT_COST

        // Display 2 digits after the comma
        set disp_temp9 temp6
        div disp_temp9 10
        modvar disp_temp9 10

        set disp_temp8 temp6
        div disp_temp8 100
        modvar disp_temp8 10

    div temp6 1000

        qsprintf 1026 1090 temp6 disp_temp8 disp_temp9
    gametext STARTALPHANUM 27 168 1026 0 2 0 0 0 xdim ydim
    }

readgamevar AMC_BUDGET
qsprintf 1023 1024 AMC_BUDGET
gametext STARTALPHANUM 27 178 1023 0 0 0 0 0 xdim ydim

getp[].palookup disp_temp6

ife CHAR 0 // JAMES
    {
    ifand CHAR_APP 1 set disp_temp5 25630 else
    set disp_temp5 5260
    rotatesprite 294 144 98304 0 disp_temp5 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 98304 0 disp_temp5 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 1 // ZAXTOR
    {
    ife disp_temp6 0 set disp_temp6 21
    rotatesprite 294 144 98304 0 5501 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 98304 0 5501 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 2 // MERLIJN
    {
    ife disp_temp6 0 set disp_temp6 21
    rotatesprite 294 144 90304 0 6400 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 90304 0 6400 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 3 // HIGHWIRE
    {
    ife disp_temp6 0 set disp_temp6 11
	ifand CHAR_APP 16
		{
		rotatesprite 294 144 90304 0 30121 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
		rotatesprite 290 140 90304 0 30121 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
		}
	else
		{
		rotatesprite 294 144 90304 0 6013 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
		rotatesprite 290 140 90304 0 6013 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
		}
    }

ife CHAR 4 // SANG
    {
    ife disp_temp6 0 set disp_temp6 21
    ifand CHAR_APP 2
        {
        rotatesprite 294 144 98304 0 23808 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 98304 0 23808 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
        }
    else
        {
        rotatesprite 294 144 98304 0 6336 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
        rotatesprite 290 140 98304 0 6336 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
        }
    }

ife CHAR 5 // RUSTY
    {
    ife disp_temp6 0 set disp_temp6 12
    rotatesprite 294 144 90304 0 6676 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 90304 0 6676 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 6 // GEOFFREY
    {
    ife disp_temp6 0 set disp_temp6 21
    rotatesprite 294 144 84370 0 6456 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 84370 0 6456 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 7 // MIKKO
    {
    ife disp_temp6 0 set disp_temp6 11
    rotatesprite 294 144 98370 0 20074 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 98370 0 20074 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 9 // CULTIST
    {
    rotatesprite 294 144 98370 0 7680 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 98370 0 7680 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 10 // BOMBSHELL
    {
    rotatesprite 294 144 98370 0 10365 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 98370 0 10365 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 11 // MAARTEN
    {
    rotatesprite 294 144 80304 0 26280 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 80304 0 26280 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 12 // JANE
    {
    ife disp_temp6 0 set disp_temp6 3
    rotatesprite 294 144 76304 0 12801 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 76304 0 12801 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 13 // MICKY
    {
    rotatesprite 294 144 76304 0 16384 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 76304 0 16384 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

ife CHAR 14 // Snowfall
    {
    rotatesprite 294 144 76304 0 20736 CHARSHADE 4 33 0 0 xdim ydim // CHARACTER SHADOW
    rotatesprite 290 140 76304 0 20736 CHARSHADE disp_temp6 0 0 0 xdim ydim // CHARACTER
    }

endevent

onevent EVENT_DISPLAYACCESS
set RETURN 1
set shield_up 0
set merl_shieldup 0
setp[].weapon_pos 9
endevent

onevent EVENT_DISPLAYTIP
set RETURN 1
set shield_up 0
set merl_shieldup 0
setp[].weapon_pos 9
getp[].tipincs disp_temp

getp[].horiz disp_temp3

sub disp_temp3 player[].horizoff
div disp_temp3 4

set disp_temp6 CTIP

switch disp_temp
 case 26
 case 25
 case 24
 case 23
 case 22
 case 21
    set disp_temp2 240
    add disp_temp2 disp_temp3
  break
 case 20
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 8
  break
 case 19
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 16
  break
 case 18
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 32
  break
 case 17
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 64
  break
 case 16
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 84
  break
 case 15
 case 14
 case 13
 case 12
 case 11
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 96
  break
 case 10
 case 9
 case 8
 case 7
 case 6
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 96
    add disp_temp6 1
  break
 case 5
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 84
    add disp_temp6 1
  break
 case 4
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 72
    add disp_temp6 1
  break
 case 3
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 64
    add disp_temp6 1
  break
 case 2
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 32
    add disp_temp6 1
  break
 case 1
    set disp_temp2 240
    add disp_temp2 disp_temp3
    sub disp_temp2 16
    add disp_temp6 1
 case 0
  break
endswitch
ifn disp_temp 0 rotatesprite 170 disp_temp2 40960 0 disp_temp6 shade sprite[player[].i].pal 0 0 0 xdim ydim
endevent

onevent EVENT_DISPLAYSCUBA
ifg air_left 1 nullop else
    {
        ife CHAR 0
            {
            myospal 44 171 2583 shade 16 pal
            myospal 278 171 2583 shade 20 pal
            rotatesprite 160 100 NNORMALSIZE 0 2586 shade pal 1024 0 0 xdim ydim
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }

            ife AIR_FILTER 1 myospal 160 191 6117 0 0 0
            else
                {
                getp[].scuba_amount disp_temp2
                div disp_temp2 128
                digitalnumberz 2472 160 191 disp_temp2 0 125 0 0 0 xdim ydim 45536
                }
            }
        else
        ife CHAR 2
            {
            rotatesprite 160 100 NNORMALSIZE 0 2593 shade pal 1024 0 0 xdim ydim
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }
            }
        else
        ife CHAR 4
            {
			rotatesprite 80 100 NNORMALSIZE 0 6009 shade pal 1024 0 0 xdim ydim
            rotatesprite 240 100 NNORMALSIZE 1024 6009 shade pal 1028 0 0 xdim ydim
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 106 84 HALFSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                rotatespritea 235 88 HALFSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }
            }
        else
        ife CHAR 3
            {
			rotatesprite 80 100 NNORMALSIZE 0 6005 shade pal 1024 0 0 xdim ydim
            rotatesprite 240 100 NNORMALSIZE 1024 6005 shade pal 1028 0 0 xdim ydim
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 106 84 HALFSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                rotatespritea 235 88 HALFSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }
            }
        else
        ife CHAR 5
            {
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }
            myospal 160 100 2588 shade 1024 pal
            }
        else
        ife CHAR 6
            {
            myospal 44 171 2594 shade 16 pal
            myospal 278 171 2594 shade 20 pal
            }
        else
        ife CHAR 7
            {
            rotatesprite 160 200 NNORMALSIZE 0 6988 shade pal 1024 0 0 xdim ydim
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }
            }
        else
        ife CHAR 10
            {
            myospal 44 171 2583 shade 16 pal
            myospal 278 171 2583 shade 20 pal
            rotatesprite 160 100 NNORMALSIZE 0 2586 shade pal 1024 0 0 xdim ydim
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }
            ife AIR_FILTER 1 myospal 160 191 6117 0 0 0
            else
                {
                getp[].scuba_amount disp_temp2
                div disp_temp2 64
                digitalnumberz 2472 160 191 disp_temp2 0 125 0 0 0 xdim ydim 45536
                }
            }
        else
        ife CHAR 11
            {
            rotatesprite 160 100 NNORMALSIZE 0 2593 shade pal 1024 0 0 xdim ydim
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                rotatespritea 160 100 NNORMALSIZE 0 2587 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
                }
            }
        else
            {
            myospal 44 171 2582 shade 16 pal
            myospal 277 171 2582 shade 20 pal
            ife AIR_FILTER 1 myospal 160 191 6117 0 0 0
            else
                {
                getp[].scuba_amount disp_temp2
                div disp_temp2 64
                digitalnumberz 2472 160 197 disp_temp2 0 8 0 0 0 xdim ydim 45536
                }
            }
    }
endevent



appendevent EVENT_DISPLAYFIST

switch CHAR
case 0 ifand CHAR_APP 1 ifn TIMEZONE 2 set fist_tile 3158 else set fist_tile 3151 break
case 1 set fist_tile 3150 break
case 2 ifand CHAR_APP 4 set fist_tile 32290 else set fist_tile 3161 break
case 3 ifand CHAR_APP 16 set fist_tile 3215 else set fist_tile 3152 break
case 4 ifand CHAR_APP 2 set fist_tile 3160 else set fist_tile 3159 break
case 5 set fist_tile 3153 break
case 6 set fist_tile 3155 break
case 7 set fist_tile 3154 break
case 9 set fist_tile 3149 break
case 10 set fist_tile 12187 break
case 11 set fist_tile 3161 break
case 12 set fist_tile 12186 break
case 13 set fist_tile 3156 break
case 14 set fist_tile 3157 break
case 17 set fist_tile 12185 break
default set fist_tile 3149 break
endswitch

    set RETURN -1
    // thanks to Mblackwell for fist CON code, adapted from Duke source
    set y player[].look_ang
    div y 9
    abs y

    set z 40920
    set z2 player[].fist_incs
    ifg z2 32 set z2 32
    shiftl z2 6
    add z2 512
    and z2 2047
    sin z2 z2
    sub z z2
    clamp z 32768 90612

    set y2 player[].fist_incs
    ifg y2 32 set y2 32
    add y2 6
    shiftl y2 7
    and y2 2047
    sin y2 y2
    shiftr y2 9
    add y2 194

    set x player[].fist_incs
    ifg x 32 set x 32
    inv x
    add x 222
    shiftl x 16
    add y y2
    shiftl y 16
    guniqhudid 10
    rotatesprite x y z 0 fist_tile gs sprite[player[].i].pal 6146 0 0 xdim ydim
    guniqhudid 0
endevent

onevent EVENT_DISPLAYSBAR
set RETURN 1
endevent

onevent EVENT_DISPLAYBORDER
set RETURN 5684
endevent

// ally hud display stuff =====================================================================================================================================================================================

defstate ally_disp_stuff
	ife disp_temp2 AMC_ASOLDIER_ACTIVE { ifand amc_soldier_upgrades 16 div disp_temp 5 else div disp_temp 3 }
	ife disp_temp2 AMCSOLDIER_ACTIVE ifand amc_soldier_upgrades 16 div disp_temp 2
	ife disp_temp2 AMC_209_ACTIVE div disp_temp 8
	ife disp_temp2 EDFSOLDIER_ACTIVE ife disp_temp4 16 div disp_temp 2
	ife disp_temp2 MSSOLDIER_ACTIVE div disp_temp 3
	ife disp_temp2 EDF_SUPERSOLDIER div disp_temp 5
	ife disp_temp2 JANE div disp_temp 15
	ife disp_temp2 FIDO div disp_temp 15
	ife disp_temp2 VLADMIR div disp_temp 15
	ife disp_temp2 MINERVA div disp_temp 150
	// disp_temp = value
	// disp_temp3 = resulting tile
	state circle_bar_disp
ends

var ally_slot_id 0 1
var ally_slot_x 0 1
var ally_slot_y 0 1

defstate ALLY_STATUS_STUFF
	ife ally_slot_id -1 break
	else
	{
	geta[ally_slot_id].statnum disp_temp
	ife disp_temp 1024 set ally_slot_id -1

	geta[ally_slot_id].extra disp_temp
	geta[ally_slot_id].picnum disp_temp2
	geta[ally_slot_id].pal disp_temp4
	state ally_disp_stuff
	ife disp_temp2 JANE rotatesprite ally_slot_x ally_slot_y 22000 0 30206 0 0 256 0 0 xdim ydim
	else ife disp_temp2 SHELLY rotatesprite ally_slot_x ally_slot_y 22000 0 30204 0 0 256 0 0 xdim ydim
	else ife disp_temp2 VLADMIR rotatesprite ally_slot_x ally_slot_y 29000 0 30205 0 0 256 0 0 xdim ydim
	else ife disp_temp2 EDFSOLDIER_ACTIVE rotatesprite ally_slot_x ally_slot_y 28000 0 30197 0 0 256 0 0 xdim ydim
	else ife disp_temp2 EDF_SUPERSOLDIER rotatesprite ally_slot_x ally_slot_y 29000 0 30200 0 0 256 0 0 xdim ydim
	else ife disp_temp2 EAFSOLDIER_ACTIVE rotatesprite ally_slot_x ally_slot_y 32000 0 36190 0 0 256 0 0 xdim ydim
	else ife disp_temp2 RUSSIAN rotatesprite ally_slot_x ally_slot_y 28000 0 30202 0 disp_temp4 256 0 0 xdim ydim
	else ife disp_temp2 MINERVA rotatesprite ally_slot_x ally_slot_y 22000 0 30207 0 0 256 0 0 xdim ydim
	else ife disp_temp2 FIDO rotatesprite ally_slot_x ally_slot_y 22000 0 30201 0 0 256 0 0 xdim ydim
	else ife disp_temp2 AMCSOLDIER_ACTIVE rotatesprite ally_slot_x ally_slot_y 28000 0 30203 0 disp_temp4 256 0 0 xdim ydim
	else ife disp_temp2 AMC_ASOLDIER_ACTIVE rotatesprite ally_slot_x ally_slot_y 28000 0 30199 0 disp_temp4 256 0 0 xdim ydim
	else ife disp_temp2 AMC_209_ACTIVE rotatesprite ally_slot_x ally_slot_y 26000 0 30198 0 disp_temp4 256 0 0 xdim ydim
	else rotatesprite ally_slot_x ally_slot_y 9000 0 disp_temp2 0 disp_temp4 256 0 0 xdim ydim
	rotatespritea ally_slot_x ally_slot_y 45538 0 disp_temp3 0 0 256 -255 0 0 xdim ydim // Health Bar
	ifl disp_temp 1 set ally_slot_id -1

	ifg actorvar[ally_slot_id].NPC_SHIELD 0
		{
		set disp_temp4 actorvar[ally_slot_id].NPC_SHIELD
		div disp_temp4 2
		ifg disp_temp4 99 set disp_temp3 9291 else
		ifg disp_temp4 90 set disp_temp3 9292 else
		ifg disp_temp4 80 set disp_temp3 9293 else
		ifg disp_temp4 70 set disp_temp3 9294 else
		ifg disp_temp4 60 set disp_temp3 9295 else
		ifg disp_temp4 50 set disp_temp3 9296 else
		ifg disp_temp4 40 set disp_temp3 9297 else
		ifg disp_temp4 30 set disp_temp3 9298 else
		ifg disp_temp4 20 set disp_temp3 9299 else
		ifg disp_temp4 10 set disp_temp3 9300 else
		ifg disp_temp4 0 set disp_temp3 9301
		rotatespritea ally_slot_x ally_slot_y 35538 0 disp_temp3 0 32 256 -255 0 0 xdim ydim // Health Bar
		}

	getav[ally_slot_id].INTERNALCOUNT_3 disp_temp4
	ifg disp_temp4 0
		{
		rotatesprite ally_slot_x ally_slot_y INVENSIZE disp_temp4 9026 0 0 256 0 0 xdim ydim
		}

	getav[ally_slot_id].ALLY_ORDER disp_temp6
	add ally_slot_y 10
	add ally_slot_x 10
	ifand disp_temp6 1 rotatesprite ally_slot_x ally_slot_y NORMALSIZE 0 12912 0 0 256 0 0 xdim ydim
	sub ally_slot_x 10
	ifand disp_temp6 2 rotatesprite ally_slot_x ally_slot_y NORMALSIZE 0 12913 0 0 256 0 0 xdim ydim
	sub ally_slot_y 10

        geta[ally_slot_id].x mx
        geta[ally_slot_id].y my
        getp[].posx x
        getp[].posy y
        sub mx x
        sub my y
        getangle disp_temp8 mx my
		getp[].ang disp_temp7
		sub disp_temp8 disp_temp7
		getav[ally_slot_id].FOLLOW_PLAYER disp_temp
		ife disp_temp 0 rotatesprite ally_slot_x ally_slot_y 45538 disp_temp8 9289 0 0 256 0 0 xdim ydim // compass
		else rotatesprite ally_slot_x ally_slot_y 45538 disp_temp8 9290 0 0 256 0 0 xdim ydim // compass
	}
ends

onevent EVENT_DISPLAYREST
ife userdef[].screen_size 0 set hud_disp 0 else ife char_sel_anim 0 set hud_disp 1

ifg dummy_count 0
    {
    sub dummy_count 1
    qsprintf 396 395 dummy_ogdam
    gametext STARTALPHANUM 160 120 396 0 0 0 0 0 xdim ydim
    qsprintf 398 397 dummy_dam
    gametext STARTALPHANUM 160 128 398 0 0 0 0 0 xdim ydim
    }

ifn camerasprite -1 // Is the player in a cutscene?
{
	set MOUSEUP 0
    ife cameratype 4 // flier
    {
    set hud_disp 1
    ife opt_glass_effects YES rotatespritea 160 80 45960 0 3633 0 20 8 -255 0 0 xdim ydim
    rotatesprite 160 80 45960 0 3632 0 0 8 0 0 xdim ydim
    state helmet_huds
    }

    ife cameratype 5 // camera
    {
    set hud_disp 1
    rotatesprite 47 28 NORMALSIZE 0 2482 0 0 256 0 0 xdim ydim
    rotatesprite 273 28 NORMALSIZE 0 2483 0 0 512 0 0 xdim ydim
    rotatesprite 47 172 NORMALSIZE 1024 2483 0 0 256 0 0 xdim ydim
    rotatesprite 273 172 NORMALSIZE 0 2483 0 0 516 0 0 xdim ydim
    }

    ife cameratype 6 // news
    {
    set hud_disp 1
    rotatesprite 160 150 NORMALSIZE 0 8494 0 0 1024 0 0 xdim ydim
    }

    ife cameratype 7 // news 2
    {
    set hud_disp 1
    rotatesprite 160 150 NORMALSIZE 0 8493 0 0 1024 0 0 xdim ydim
    }

    ife cameratype 8 // in-game hud
    {
    state helmet_huds
    set hud_disp 1
    }

ife cameratype 9 // flier locked on
    {
    getav[camerasprite].cameratime disp_temp
    ifl disp_temp 90 soundonce TRACKED
    ife opt_glass_effects YES rotatespritea 160 80 45960 0 3633 0 20 8 -255 0 0 xdim ydim
    rotatesprite 160 80 45960 0 3632 0 0 8 0 0 xdim ydim
    set hud_disp 1
    state helmet_huds
    }

    ife cameratype 10 // drone
    {
    set hud_disp 1
    rotatesprite 47 28 NORMALSIZE 0 2482 0 0 256 0 0 xdim ydim
    rotatesprite 273 28 NORMALSIZE 0 2483 0 0 512 0 0 xdim ydim
    rotatesprite 47 172 NORMALSIZE 1024 2483 0 0 256 0 0 xdim ydim
    rotatesprite 273 172 NORMALSIZE 0 2483 0 0 516 0 0 xdim ydim
    }

    ife cameratype 11 // new flier
    {
    set hud_disp 1
    rotatesprite 160 100 NORMALSIZE 0 3639 0 0 1024 0 0 xdim ydim
    state helmet_huds
    }

    ifn cameratype 0 // CUTSCENE TYPE
    ifn cameratype 4
    ifn cameratype 5
    ifn cameratype 6
    ifn cameratype 7
    ifn cameratype 8
    ifn cameratype 9
    ifn cameratype 10
    {
    set hud_disp 0
	ifn rendmode 0 ifn opt_photosensitivity_mode 1 state custom_fade
    rotatesprite 160 100 NNORMALSIZE 0 3542 0 0 1024 0 0 xdim ydim
    }


ifg use_action_tics 0
{
set disp_temp 25
sub disp_temp use_action_tics

		rotatespritea 36 160 16384 0 4807 0 27 256 -255 0 0 xdim ydim

        rotatespritea 36 160 6320 1853 12948 disp_temp 27 264 -255 0 0 xdim ydim

        ifg use_action_tics 3 rotatespritea 36 160 6320 1751 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 6 rotatespritea 36 160 6320 1648 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 9 rotatespritea 36 160 6320 1545 12948 disp_temp 27 265 -255 0 0 xdim ydim

       ifg use_action_tics 12 rotatespritea 36 160 6320 1442 12948 disp_temp 27 265 -255 0 0 xdim ydim

       ifg use_action_tics 15 rotatespritea 36 160 6320 1339 12948 disp_temp 27 265 -255 0 0 xdim ydim

       ifg use_action_tics 18 rotatespritea 36 160 6320 1236 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 21 rotatespritea 36 160 6320 1133 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 24 rotatespritea 36 160 6320 1030 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 27 rotatespritea 36 160 6320 927 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 30 rotatespritea 36 160 6320 824 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 33 rotatespritea 36 160 6320 721 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 36 rotatespritea 36 160 6320 618 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 39 rotatespritea 36 160 6320 515 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 42 rotatespritea 36 160 6320 412 12948 disp_temp 27 265 -255 0 0 xdim ydim

        ifg use_action_tics 45 rotatespritea 36 160 6320 309 12948 disp_temp 27 265 -255 0 0 xdim ydim

		rotatespritea 36 160 6320 206 12948 15 27 265 -255 0 0 xdim ydim
}

}

// character select animations

ifg char_sel_anim 0
 ife SPACE_SUIT 0 // don't do these if the player is in one of the suits
  ife FIRE_SUIT 0
   ife JUGGERN_SUIT 0
    ife camerasprite -1
	 ife player[].over_shoulder_on 0
    {
    ife CHAR 0 // James
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
            setgamepalette 3
            rotatesprite 160 200 32768 1024 13970 shade wep_pal 12 windowx1 windowy1 windowx2 windowy2
            rotatesprite 160 200 32768 1024 13971 shade wep_pal 13 windowx1 windowy1 windowx2 windowy2
            break
        case 26
        case 25
        case 24
        case 23
            rotatesprite 160 170 32768 1024 13972 shade wep_pal 12 windowx1 windowy1 windowx2 windowy2
            rotatesprite 160 170 32768 1024 13973 shade wep_pal 13 windowx1 windowy1 windowx2 windowy2
            break
        case 22
        case 21
        case 20
        case 19
            rotatesprite 160 170 45768 1024 13974 shade wep_pal 12 windowx1 windowy1 windowx2 windowy2
            rotatesprite 160 170 45768 1024 13975 shade wep_pal 13 windowx1 windowy1 windowx2 windowy2
            break
        case 18
        case 17
        case 16
        case 15
            rotatesprite 160 150 45768 1024 13976 shade wep_pal 12 windowx1 windowy1 windowx2 windowy2
            rotatesprite 160 150 45768 1024 13977 shade wep_pal 13 windowx1 windowy1 windowx2 windowy2
            break
        case 14
            state fade_out_black
			set cus_fade_duration 3
            setgamepalette screen_pal
        default
        break
    endswitch
    ife CHAR 1 // Zaxtor
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        ife char_sel_anim 29 screensound JMOVE2
        rotatesprite 150 160 32768 0 14458 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 26
        case 25
        case 24
        case 23
        case 10
        case 9
        case 8
        case 7
        rotatesprite 150 160 32768 0 14459 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 22
        case 21
        case 20
        case 19
        case 14
        case 13
        case 12
        case 11
        rotatesprite 150 160 32768 0 14460 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 18
        case 17
        case 16
        case 15
        rotatesprite 150 160 32768 64 14461 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set disp_temp 142
        set disp_temp2 7
        sub disp_temp2 char_sel_anim
        mul disp_temp2 10
        add disp_temp disp_temp2
        guniqhudid 40
        rotatesprite 150 disp_temp 32768 0 14458 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
    endswitch
    ife CHAR 2 // Merlijn
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        case 26
        case 25
        case 24
        case 23
        case 22
        case 21
        case 20
        case 19
        ife char_sel_anim 29 screensound H_ARMOUR_M1
        set disp_temp char_sel_anim
        mul disp_temp 3
        set disp_temp2 80
        add disp_temp2 disp_temp
        ifand CHAR_APP 4 set disp_temp5 14490
        else set disp_temp5 14451
        guniqhudid 40
        rotatesprite 160 disp_temp2 32768 0 disp_temp5 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
        case 18
        case 17
        case 16
        case 15
        ifand CHAR_APP 4 set disp_temp5 14491
        else set disp_temp5 14452
        rotatesprite 160 100 32768 0 disp_temp5 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        break
        case 14
        case 13
        case 12
        case 11
        ifand CHAR_APP 4 set disp_temp5 14492
        else set disp_temp5 14453
        rotatesprite 164 100 32768 0 disp_temp5 shade wep_pal 4608 windowx1 windowy1 windowx2 windowy2
        break
        case 10
        case 9
        case 8
        case 7
        ifand CHAR_APP 4 set disp_temp5 14493
        else set disp_temp5 14454
        rotatesprite 24 40 32768 0 disp_temp5 shade wep_pal 4352 windowx1 windowy1 windowx2 windowy2
        ifand CHAR_APP 4 set disp_temp5 14494
        else set disp_temp5 14455
        rotatesprite 288 100 32768 0 disp_temp5 shade wep_pal 4608 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        ife char_sel_anim 6 { palfrom 30 0 0 0 soundonce HELM_EQ }
        ife char_sel_anim 5 { getp[].horiz disp_temp add disp_temp 10 setp[].horiz disp_temp }
        ife char_sel_anim 3 { getp[].horiz disp_temp sub disp_temp 10 setp[].horiz disp_temp }
        break
    endswitch
    ife CHAR 3 // Highwire
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        case 10
        case 9
        case 8
        case 7
            ife char_sel_anim 30 soundonce DRINKSOME
            ife char_sel_anim 10 screensound JMOVE6
            ife char_sel_anim 29 screensound JMOVE6
			ifand CHAR_APP 16 rotatesprite 160 170 32768 0 29848 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            else rotatesprite 160 170 32768 0 14448 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            break
        case 26
        case 25
        case 24
        case 23
        case 14
        case 13
        case 12
        case 11
			ifand CHAR_APP 16 rotatesprite 160 170 32768 0 29849 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            else rotatesprite 160 170 32768 0 14449 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            break
        case 22
        case 21
        case 20
        case 17
        case 16
        case 15
            guniqhudid 40
			ifand CHAR_APP 16 rotatesprite 160 175 32768 0 29850 shade arm_pal 4096 windowx1 windowy1 windowx2 windowy2
            else rotatesprite 160 175 32768 0 14450 shade arm_pal 4096 windowx1 windowy1 windowx2 windowy2
            guniqhudid 0
            break
        case 19
        case 18
            guniqhudid 40
			ifand CHAR_APP 16 rotatesprite 160 170 32768 0 29850 shade arm_pal 4096 windowx1 windowy1 windowx2 windowy2
            else rotatesprite 160 170 32768 0 14450 shade arm_pal 4096 windowx1 windowy1 windowx2 windowy2
            guniqhudid 0
            break
        case 6
        case 5
        case 4
			ifand CHAR_APP 16 rotatesprite 160 170 32768 0 29847 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            else rotatesprite 160 170 32768 0 14447 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            break
        case 3
        case 2
        case 1
			ifand CHAR_APP 16 rotatesprite 160 195 32768 0 29846 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            else rotatesprite 160 195 32768 0 14446 shade arm_pal 8 windowx1 windowy1 windowx2 windowy2
            break
    endswitch
    ife CHAR 4 // Sang
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        case 26
        case 25
        case 24
        case 23
        case 22
        case 21
        case 20
        case 19
        case 18
        case 17
        case 16
        case 15
        case 14
        case 13
        case 12
        case 11
        case 10
        case 9
        case 8
        case 7
        ife char_sel_anim 30 sound CSPELL
        add display_rot 8
        ifg display_rot 2040 set display_rot 0
        set disp_temp3 24
        sub disp_temp3 char_sel_anim
        ifand CHAR_APP 2
            {
            guniqhudid 40
            rotatesprite 150 160 24576 0 14508 0 wep_pal 4096 windowx1 windowy1 windowx2 windowy2
            guniqhudid 41
            rotatespritea 150 120 40960 display_rot 6335 disp_temp3 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
            }
        else
            {
            guniqhudid 40
            rotatesprite 150 160 24576 0 14457 0 21 4096 windowx1 windowy1 windowx2 windowy2
            guniqhudid 41
            rotatespritea 150 120 32768 display_rot PENTAGRAM disp_temp3 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
            }
            guniqhudid 0
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set disp_temp 142
        set disp_temp2 7
        sub disp_temp2 char_sel_anim
        mul disp_temp2 10
        add disp_temp disp_temp2
        guniqhudid 40
        ifand CHAR_APP 2 rotatesprite 150 disp_temp 24576 0 14507 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        else rotatesprite 150 disp_temp 24576 0 14456 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
    endswitch
    ife CHAR 5 // Rusty
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        ife char_sel_anim 29 screensound JMOVE1
        rotatesprite 160 180 32768 0 13959 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 26
        case 25
        case 24
        case 23
        rotatesprite 160 100 32768 0 13960 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 22
        case 21
        case 20
        case 19
        rotatesprite 160 100 32768 0 13961 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 18
        case 17
        case 16
        case 15
        rotatesprite 160 100 32768 0 13962 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 14
        case 13
        case 12
        case 11
        ife char_sel_anim 13 screensound JMOVE6
        rotatesprite 160 100 32768 0 13963 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 10
        case 9
        case 8
        case 7
        ife char_sel_anim 9 { getp[].horiz disp_temp add disp_temp 5 setp[].horiz disp_temp }
        ife char_sel_anim 8 { getp[].horiz disp_temp sub disp_temp 5 setp[].horiz disp_temp }
        rotatesprite 160 100 32768 0 13964 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set disp_temp 142
        set disp_temp2 7
        sub disp_temp2 char_sel_anim
        mul disp_temp2 10
        add disp_temp disp_temp2
        guniqhudid 40
        rotatesprite 160 disp_temp 32768 0 13965 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
    endswitch
    ife CHAR 6 // Geoffrey
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        ife char_sel_anim 29 screensound PAGE_TURN
        rotatesprite 160 170 32768 0 14628 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 26
        case 25
        case 24
        case 23
        rotatesprite 160 170 32768 0 14629 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 22
        case 21
        case 20
        case 19
        rotatesprite 160 170 32768 0 14630 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 18
        case 17
        case 16
        case 15
        rotatesprite 160 170 32768 0 14631 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 14
        case 13
        case 12
        case 11
        ife char_sel_anim 13 screensound JMOVE6
        rotatesprite 160 170 32768 0 14632 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 10
        case 9
        case 8
        case 7
        rotatesprite 160 170 32768 0 14633 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set disp_temp 160
        set disp_temp2 7
        sub disp_temp2 char_sel_anim
        mul disp_temp2 10
        add disp_temp disp_temp2
        guniqhudid 40
        rotatesprite 160 disp_temp 32768 0 14633 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
    endswitch
    ife CHAR 7 // Mikko
	{
	ifand CHAR_APP 8
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        case 26
        case 25
        case 24
        case 23
        case 22
        case 21
        case 20
        case 19
        set hud_disp 0
        ife char_sel_anim 29 screensound JMOVE6
        set disp_temp char_sel_anim
        mul disp_temp 3
        set disp_temp2 80
        add disp_temp2 disp_temp
        guniqhudid 40
        rotatesprite 160 disp_temp2 32768 0 29404 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
        case 18
        case 17
        case 16
        case 15
        rotatesprite 160 100 32768 0 29405 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 14
        case 13
        case 12
        case 11
        rotatesprite 164 100 32768 0 29406 shade wep_pal 520 windowx1 windowy1 windowx2 windowy2
        break
        case 10
        case 9
        case 8
        case 7
        rotatesprite 14 30 32768 0 29407 shade wep_pal 264 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set hud_disp 1
        ife char_sel_anim 6 { palfrom 30 0 0 0 soundonce HELM_EQ }
        ife char_sel_anim 5 { soundonce OSD_TEXT2 getp[].horiz disp_temp add disp_temp 10 setp[].horiz disp_temp }
        ife char_sel_anim 3 { getp[].horiz disp_temp sub disp_temp 10 setp[].horiz disp_temp }
        break
    endswitch
	else
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        case 26
        case 25
        case 24
        case 23
        case 22
        case 21
        case 20
        case 19
        set hud_disp 0
        ife char_sel_anim 29 screensound JMOVE6
        set disp_temp char_sel_anim
        mul disp_temp 3
        set disp_temp2 80
        add disp_temp2 disp_temp
        guniqhudid 40
        rotatesprite 160 disp_temp2 32768 0 13471 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
        case 18
        case 17
        case 16
        case 15
        rotatesprite 160 100 32768 0 13472 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 14
        case 13
        case 12
        case 11
        rotatesprite 164 100 32768 0 13473 shade wep_pal 520 windowx1 windowy1 windowx2 windowy2
        break
        case 10
        case 9
        case 8
        case 7
        rotatesprite 14 30 32768 0 13474 shade wep_pal 264 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set hud_disp 1
        ife char_sel_anim 6 { palfrom 30 0 0 0 soundonce HELM_EQ }
        ife char_sel_anim 5 { soundonce OSD_TEXT2 getp[].horiz disp_temp add disp_temp 10 setp[].horiz disp_temp }
        ife char_sel_anim 3 { getp[].horiz disp_temp sub disp_temp 10 setp[].horiz disp_temp }
        break
    endswitch
	}
    ife CHAR 12 // Jane
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        case 26
        case 25
        case 24
        case 23
        case 22
        case 21
        case 20
        case 19
        set hud_disp 0
        set temporary_no_helmet 1
        ife char_sel_anim 29 screensound JMOVE6
        set disp_temp char_sel_anim
        mul disp_temp 3
        set disp_temp2 80
        add disp_temp2 disp_temp
        guniqhudid 40
        rotatesprite 160 disp_temp2 32768 0 14486 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
        case 18
        case 17
        case 16
        case 15
        rotatesprite 160 100 32768 0 14487 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 14
        case 13
        case 12
        case 11
        rotatesprite 164 100 32768 0 14487 shade wep_pal 520 windowx1 windowy1 windowx2 windowy2
        break
        case 10
        case 9
        case 8
        case 7
        rotatesprite 38 100 32768 0 14488 shade wep_pal 264 windowx1 windowy1 windowx2 windowy2
        rotatesprite 272 100 32768 0 14489 shade wep_pal 520 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set temporary_no_helmet 0
        ife char_sel_anim 6 { state fade_out_black soundonce HELM_EQ }
        ife char_sel_anim 5 { getp[].horiz disp_temp add disp_temp 10 setp[].horiz disp_temp }
        ife char_sel_anim 3 { getp[].horiz disp_temp sub disp_temp 10 setp[].horiz disp_temp }
        ife char_sel_anim 1 { soundonce OSD_TEXT2 set hud_disp 1 }
        break
    endswitch
    ife CHAR 13 // Micky
	{
    switch char_sel_anim
        case 30
        case 29
        case 28
        case 27
        case 26
        case 25
        case 24
        case 23
        case 22
        case 21
        case 20
        case 19
        set hud_disp 0
        set temporary_no_helmet 1
        ife char_sel_anim 29 screensound JMOVE6
        set disp_temp char_sel_anim
        mul disp_temp 3
        set disp_temp2 80
        add disp_temp2 disp_temp
        guniqhudid 40
        rotatesprite 160 disp_temp2 32768 0 13475 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
        guniqhudid 0
        break
        case 18
        case 17
        case 16
        case 15
        rotatesprite 160 100 32768 0 13476 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
        break
        case 14
        case 13
        case 12
        case 11
        rotatesprite 164 100 32768 0 13477 shade wep_pal 520 windowx1 windowy1 windowx2 windowy2
        break
        case 10
        case 9
        case 8
        case 7
        rotatesprite 16 40 32768 0 13478 shade wep_pal 264 windowx1 windowy1 windowx2 windowy2
        rotatesprite 282 100 32768 0 13479 shade wep_pal 520 windowx1 windowy1 windowx2 windowy2
        break
        case 6
        case 5
        case 4
        case 3
        case 2
        case 1
        set temporary_no_helmet 0
        ife char_sel_anim 6 { state fade_out_black soundonce HELM_EQ }
        ife char_sel_anim 5 { getp[].horiz disp_temp add disp_temp 10 setp[].horiz disp_temp }
        ife char_sel_anim 3 { getp[].horiz disp_temp sub disp_temp 10 setp[].horiz disp_temp }
        ife char_sel_anim 1 { soundonce OSD_TEXT2 set hud_disp 1 }
        break
    endswitch
	}
    ife CHAR 14 // Snowfall
    switch char_sel_anim
        case 30
        case 29
        case 28
          guniqhudid 40
          rotatesprite 200 160 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatesprite 125 180 32768 0 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 27
        case 26
        case 25
          ife char_sel_anim 27 sound ESHEILD_CHARGING
          guniqhudid 40
          rotatesprite 205 165 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatesprite 132 187 32768 16 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 24
        case 23
        case 22
          guniqhudid 40
          rotatesprite 200 160 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatesprite 125 180 32768 0 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 21
        case 20
          guniqhudid 40
          rotatesprite 200 160 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 200 160 32768 0 13968 25 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 120 185 32768 -8 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 19
        case 18
        guniqhudid 40
          rotatesprite 200 160 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 200 160 32768 0 13968 20 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 115 190 32768 -16 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 17
        case 16
        guniqhudid 40
          rotatesprite 200 160 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 200 160 32768 0 13968 15 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 110 195 32768 -24 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        case 15
        case 14
        guniqhudid 40
          rotatesprite 200 160 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 200 160 32768 0 13968 10 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 105 200 32768 -32 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 13
        case 12
        guniqhudid 40
          rotatesprite 205 165 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 205 165 32768 0 13968 5 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 100 205 32768 -40 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
         break
        case 11
        case 10
        guniqhudid 40
          rotatesprite 210 170 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 210 170 32768 0 13968 0 wep_pal 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 95 210 32768 -48 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
         break
        case 9
        case 8
        guniqhudid 40
          rotatesprite 215 175 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 215 175 32768 0 13968 0 32 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 90 215 32768 -56 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 7
        case 6
          ife char_sel_anim 7 sound ESHIELD_RECHARGE
          guniqhudid 40
          rotatesprite 220 180 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 220 180 32768 0 13969 0 0 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 85 220 32768 -64 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 5
        case 4
        guniqhudid 40
          rotatesprite 225 185 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 225 185 34768 0 13969 10 0 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 80 225 32768 -72 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 3
        case 2
        guniqhudid 40
          rotatesprite 230 190 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 230 190 38768 0 13969 20 0 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 42
          rotatesprite 75 230 32768 -80 13967 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
        case 1
        guniqhudid 40
          rotatesprite 235 195 32768 0 13966 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
          guniqhudid 41
          rotatespritea 235 195 40768 0 13969 30 0 4096 -255 windowx1 windowy1 windowx2 windowy2
          guniqhudid 0
        break
    endswitch
    ife CHAR 17 // Kagura
        {
        ifg VOLUME 4
        switch char_sel_anim
            case 30
            case 29
            case 28
            case 27
            ife char_sel_anim 29 screensound JMOVE1
            rotatesprite 160 154 32768 0 24046 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 26
            case 25
            case 24
            case 23
            rotatesprite 160 156 32768 0 24047 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 22
            case 21
            case 20
            case 19
            rotatesprite 160 170 32768 0 24048 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 18
            case 17
            case 16
            case 15
            rotatesprite 160 190 32768 0 24049 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 14
            case 13
            case 12
            case 11
            case 10
            case 9
            case 8
            case 7
            case 6
            case 5
            case 4
            case 3
            case 2
            case 1
            ife char_sel_anim 13 screensound JMOVE6
            ife char_sel_anim 12 { getp[].horiz disp_temp sub disp_temp 5 setp[].horiz disp_temp }
            ife char_sel_anim 11 { getp[].horiz disp_temp add disp_temp 5 setp[].horiz disp_temp }
            set disp_temp 192
            set disp_temp2 14
            sub disp_temp2 char_sel_anim
            mul disp_temp2 5
            add disp_temp disp_temp2
            guniqhudid 40
            rotatesprite 160 disp_temp 32768 0 24050 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
            guniqhudid 0
            break
        endswitch
        else
        switch char_sel_anim
            case 30
            case 29
            case 28
            case 27
            ife char_sel_anim 29 screensound JMOVE6
            rotatesprite 160 154 32768 0 22687 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 26
            case 25
            case 24
            case 23
            rotatesprite 160 174 32768 0 22687 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 22
            case 21
            case 20
            case 19
            ife char_sel_anim 13 screensound JMOVE5
            ife char_sel_anim 21 { getp[].horiz disp_temp sub disp_temp 2 setp[].horiz disp_temp }
            ife char_sel_anim 20 { getp[].horiz disp_temp add disp_temp 2 setp[].horiz disp_temp }
            rotatesprite 160 184 32768 0 22689 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 18
            case 17
            case 16
            case 15
            rotatesprite 160 174 32768 0 22688 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2
            break
            case 14
            case 13
            case 12
            case 11
            case 10
            case 9
            case 8
            case 7
            case 6
            case 5
            case 4
            case 3
            case 2
            case 1
            set disp_temp 192
            set disp_temp2 14
            sub disp_temp2 char_sel_anim
            mul disp_temp2 5
            add disp_temp disp_temp2
            guniqhudid 40
            rotatesprite 160 disp_temp 32768 0 22689 shade wep_pal 4096 windowx1 windowy1 windowx2 windowy2
            guniqhudid 0
            break
        endswitch
        }
    }

ifg camerasprite -1
    {
    ife cameratype 4 state player_huds
    ife cameratype 8 state player_huds
    ife cameratype 9 state player_huds
    }


ifg bomb_throw_power 0
    {
    myospalx 160 156 9025 0 1 2
    set disp_temp bomb_throw_power
    mulvar disp_temp 8
    rotatesprite 160 156 HALFSIZE disp_temp 9026 0 0 0 0 0 xdim ydim
    }

ifg ds_location 0
    {
    ife ds_location 180 screensound WIND_TRANS
    ifg ds_location 150
        {
        set disp_temp -150
        add disp_temp ds_location
        }
    ifl ds_location 30
        {
        set disp_temp 30
        sub disp_temp ds_location
        }
    ifg ds_location 15 rotatespritea 161 141 HALFSIZE 0 ds_picnum 30 4 0 ds_location 0 0 xdim ydim
    rotatespritea 160 140 HALFSIZE 0 ds_picnum disp_temp 0 0 -255 0 0 xdim ydim
    }

ife player[].over_shoulder_on 0
{

ifl water_screen -16
 ife camerasprite -1
    {
    set disp_temp 18168
    add disp_temp water_screen
    rotatespritea 160 100 407680 0 disp_temp water_screen pal 0 -255 0 0 xdim ydim
    }

ifn ANGLE 0 // player in tank?
  ifn userdef[].overhead_on 2
    {
        geta[SET].extra disp_temp2
        digitalnumber DIGITALNUM 160 40 disp_temp2 0 8 0 0 0 xdim ydim // Show tank's health
        ifand gun_firemode 262144 gametextz STARTALPHANUM 160 30 7046 0 8 0 0 0 xdim ydim 42252
        else gametextz STARTALPHANUM 160 30 7045 0 8 0 0 0 xdim ydim 42252
        set x 250
        set y 175
        sub x wepsway_x
        sub y wepsway_y

        ife TANK_MACHINEGUN 7
            {
            add x 2
            add y 2
          state random_AR_flash
          sub x 55
          sub y 55
          rotatespritea x y 32638 0 rot_flash 0 0 0 -255 0 0 xdim ydim
          add x 55
          add y 55
          rotatesprite x y 40960 0 13634 0 pal 0 0 0 xdim ydim // display M249
            }
        else rotatesprite x y 40960 0 13633 0 pal 0 0 0 xdim ydim // display M249

        ifg control_display 0
        {
        minitext 16 60 7040 0 4
        minitext 15 60 7040 0 125

        minitext 16 70 7041 0 4
        minitext 15 70 7041 0 125

        getkeyname 406 12 2
        minitext 16 80 406 0 4
        minitext 15 80 406 0 125

        minitext 26 80 7042 0 4
        minitext 25 80 7042 0 125


        getkeyname 406 6 2
        minitext 16 90 406 0 4
        minitext 15 90 406 0 125

        minitext 26 90 7023 0 4
        minitext 25 90 7023 0 125
        }
}


    ifn userdef[].overhead_on 2
    ifn player_using_mech -1 // Mech HUD
    {
    ifg hc_missile_fire 31
		{
		set disp_temp7 7
		add disp_temp7 mech_hud_shake
		rotatespritea 35 disp_temp7 55000 0 11020 0 106 256 -255 0 0 xdim ydim // Missile Launcher
		rotatesprite 35 disp_temp7 55000 0 11019 0 106 256 0 0 xdim ydim // Missile Launcher

		rotatespritea 285 disp_temp7 55000 1024 11020 0 106 516 -255 0 0 xdim ydim // Missile Launcher
		rotatesprite 285 disp_temp7 55000 1024 11019 0 106 516 0 0 xdim ydim // Missile Launcher
		}
	else
		{
		set disp_temp7 10
		add disp_temp7 mech_hud_shake
		rotatesprite 35 disp_temp7 55000 0 11019 shade pal 256 0 0 xdim ydim // Missile Launcher
		rotatesprite 285 disp_temp7 55000 1024 11019 shade pal 516 0 0 xdim ydim // Missile Launcher
		}


    set disp_temp6 265
    add disp_temp6 wepsway_x
    set disp_temp7 180
    add disp_temp7 wepsway_y
    add disp_temp7 mech_hud_shake
    ifand BITS_PRESS P_SPRINTING add disp_temp7 40

    ifg mech_maingun_fire 24
        {
        add disp_temp6 8
        add disp_temp7 8
        displayrandvar rot_flash 2048
            sub disp_temp6 70
            sub disp_temp7 30
            rotatespritea disp_temp6 disp_temp7 HALFSIZE rot_flash 16114 0 0 512 -255 0 0 xdim ydim
            add disp_temp6 70
            add disp_temp7 30
        set disp_temp8 11212
        }
    else
        {
        ifg disp_temp6 265 sub disp_temp6 1
        ifg disp_temp7 180 sub disp_temp7 1
        set disp_temp8 11131
        }
    rotatesprite disp_temp6 disp_temp7 55000 0 disp_temp8 shade pal 512 0 0 xdim ydim
    ifg mech_maingun_fire 0
     ifl mech_maingun_fire 24
        {
        set disp_temp5 24
        sub disp_temp5 mech_maingun_fire
        rotatespritea disp_temp6 disp_temp7 55000 0 11213 disp_temp5 0 512 -255 0 0 xdim ydim
        }


    ifg mech_startup_sequence 0
    {
    ifl mech_startup_sequence 10 myospal 160 100 4816 20 1057 0
    else ifl mech_startup_sequence 20 myospal 160 100 4816 20 1025 0
    else myospal 160 100 4816 20 1024 0
    ifg mech_startup_sequence 20
     ifl mech_startup_sequence 35
        {
        set disp_temp mech_startup_sequence
        sub disp_temp 10
        ifg disp_temp 25 set disp_temp 25
        rotatesprite 160 100 DOUBLESIZE 0 1261 disp_temp 12 1057 0 0 xdim ydim
        }
    ife mech_startup_sequence 23 { rotatesprite 160 100 282144 1536 351 0 0 1024 0 0 xdim ydim soundonce STATIC_S }
    ife mech_startup_sequence 22 rotatesprite 160 100 282144 1024 351 0 0 1024 0 0 xdim ydim
    ife mech_startup_sequence 21 rotatesprite 160 100 282144 512 351 0 0 1024 0 0 xdim ydim
    ife mech_startup_sequence 20 rotatesprite 160 100 282144 0 351 0 0 1024 0 0 xdim ydim
    set disp_temp mech_startup_sequence
    ifg disp_temp 25 set disp_temp 25
    ife opt_glass_effects YES rotatespritea 160 80 45960 0 3838 20 0 8 -255 0 0 xdim ydim
    rotatesprite 160 50 43960 0 11214 disp_temp pal 8 0 0 xdim ydim // Cockpit

    ifg mech_startup_sequence 20
        {
        ife mech_startup_sequence 170 sound MS_MECH_BLIP
        ifl mech_startup_sequence 170 minitext 40 30 7000 0 8

        ife mech_startup_sequence 160 sound MS_MECH_BLIP
        ifl mech_startup_sequence 160 minitext 40 40 7001 0 8

        ife mech_startup_sequence 150 sound MS_MECH_BLIP
        ifl mech_startup_sequence 150 minitext 40 50 7002 0 8

        ife mech_startup_sequence 140 sound MS_MECH_BLIP
        ifl mech_startup_sequence 140
            {
            getav[player_using_mech].HITAGSAVED disp_temp2
            ife disp_temp2 0 minitext 40 60 7003 0 8
            else minitext 40 60 7004 0 2
            }

        ife mech_startup_sequence 130 sound MS_MECH_BLIP
        ifl mech_startup_sequence 130 minitext 40 70 7005 0 8

        ife mech_startup_sequence 120 sound MS_MECH_BLIP
        ifl mech_startup_sequence 120 minitext 40 80 7006 0 8

        ife mech_startup_sequence 110 sound MS_MECH_BLIP
        ifl mech_startup_sequence 110 minitext 40 90 7007 0 8

        ife mech_startup_sequence 100 sound MS_MECH_BLIP
        ifl mech_startup_sequence 100 minitext 40 100 7009 0 2

        ife mech_startup_sequence 80 sound MS_MECH_BLIP
        ifl mech_startup_sequence 80
            {
            ife CHAR 7 minitext 40 110 7010 0 8
            else
                {
                minitext 40 110 7011 0 2
                minitext 40 120 7012 0 2
                }
            }

        ife mech_startup_sequence 70 sound MS_MECH_BLIP
        ifl mech_startup_sequence 70 minitext 40 130 7013 0 8

        ife mech_startup_sequence 60 sound MS_MECH_BLIP
        ifl mech_startup_sequence 60 minitext 40 150 7014 0 8
        }

    ife mech_startup_sequence 2 soundonce MS_MECH_START
    }
    else
        {
        set disp_temp6 100
        add disp_temp6 mech_hud_shake
        ife opt_glass_effects YES rotatespritea 160 80 45960 0 3838 15 0 8 -255 0 0 xdim ydim
        rotatesprite 160 50 43960 0 11214 disp_temp pal 8 0 0 xdim ydim // Cockpit
        geta[player_using_mech].extra disp_temp2
        digitalnumber DIGITALNUM 160 180 disp_temp2 0 0 0 0 0 xdim ydim // Show mech's health
        }

        ifg control_display 0
            {
            minitext 21 100 7020 0 4
            minitext 20 100 7020 0 125

            minitext 21 110 7021 0 4
            minitext 20 110 7021 0 125

            getkeyname 406 10 2
            minitext 21 120 406 0 4
            minitext 20 120 406 0 125
            minitext 36 120 7022 0 4
            minitext 35 120 7022 0 125

            getkeyname 406 9 2
            minitext 21 130 406 0 4
            minitext 20 130 406 0 125
            minitext 36 130 7023 0 4
            minitext 35 130 7023 0 125
            }

    }


    ifn userdef[].overhead_on 2
    {
        ifn player_using_hovercraft -1 // Hovercraft HUD
        {
        set disp_temp 55
        getp[].horiz disp_temp2
        div disp_temp2 2
        add disp_temp disp_temp2
        rotatesprite 160 disp_temp HALFSIZE 0 11221 shade pal 8 0 0 xdim ydim // show boat hud
        rotatespritea 160 disp_temp HALFSIZE 0 11222 shade pal 8 -255 0 0 xdim ydim // show boat hud
        geta[player_using_hovercraft].extra disp_temp7
        sub disp_temp 72

        add disp_temp 102
        div disp_temp7 300

        // Intentional loop unrolling to improve performance (only draw 1 piece, don't draw them over each other)
        // While a loop looks more elegant, it's also slow as shit

        // RED HEALTH SECTION

        rotatesprite 135 disp_temp 4020 1955 12948 0 124 8 0 0 xdim ydim
        ifg disp_temp7 0 rotatesprite 135 disp_temp 4020 1853 12948 0 124 8 0 0 xdim ydim

        // YELLOW HEALTH SECTION

        ifg disp_temp7 1 rotatesprite 135 disp_temp 4020 1751 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp7 2 rotatesprite 135 disp_temp 4020 1648 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp7 3 rotatesprite 135 disp_temp 4020 1545 12948 0 32 8 0 0 xdim ydim

        // GREEN HEALTH SECTION:

        ifg disp_temp7 4 rotatesprite 135 disp_temp 4020 1442 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 5 rotatesprite 135 disp_temp 4020 1339 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 6 rotatesprite 135 disp_temp 4020 1236 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 7 rotatesprite 135 disp_temp 4020 1133 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 8 rotatesprite 135 disp_temp 4020 1030 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 9 rotatesprite 135 disp_temp 4020 927 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 10 rotatesprite 135 disp_temp 4020 824 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 11 rotatesprite 135 disp_temp 4020 721 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 12 rotatesprite 135 disp_temp 4020 618 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 13 rotatesprite 135 disp_temp 4020 515 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 14 rotatesprite 135 disp_temp 4020 412 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 15 rotatesprite 135 disp_temp 4020 309 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 16 rotatesprite 135 disp_temp 4020 206 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 17 rotatesprite 135 disp_temp 4020 103 12948 0 125 8 0 0 xdim ydim
        ifg disp_temp7 18 rotatesprite 135 disp_temp 4020 0 12948 0 125 8 0 0 xdim ydim


        getav[player_using_hovercraft].forward_accelerate disp_temp6

        ifg disp_temp6 1199 set tilenum 9124 else
        ifg disp_temp6 800 set tilenum 9125 else
        ifg disp_temp6 600 set tilenum 9126 else
        ifg disp_temp6 400 set tilenum 9127 else
        ifg disp_temp6 200 set tilenum 9128 else
        ifg disp_temp6 0 set tilenum 9129 else
        ife disp_temp6 0 set tilenum 9130 else
        ifl disp_temp6 0 set tilenum 2957

        div disp_temp6 60

        // Intentional loop unrolling to improve performance (only draw 1 piece, don't draw them over each other)
        // While a loop looks more elegant, it's also slow as shit

        rotatesprite 185 disp_temp 4020 1955 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 0 rotatesprite 185 disp_temp 4020 1853 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 1 rotatesprite 185 disp_temp 4020 1751 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 2 rotatesprite 185 disp_temp 4020 1648 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 3 rotatesprite 185 disp_temp 4020 1545 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 4 rotatesprite 185 disp_temp 4020 1442 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 5 rotatesprite 185 disp_temp 4020 1339 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 6 rotatesprite 185 disp_temp 4020 1236 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 7 rotatesprite 185 disp_temp 4020 1133 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 8 rotatesprite 185 disp_temp 4020 1030 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 9 rotatesprite 185 disp_temp 4020 927 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 10 rotatesprite 185 disp_temp 4020 824 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 11 rotatesprite 185 disp_temp 4020 721 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 12 rotatesprite 185 disp_temp 4020 618 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 13 rotatesprite 185 disp_temp 4020 515 12948 0 32 8 0 0 xdim ydim
        ifg disp_temp6 14 rotatesprite 185 disp_temp 4020 412 12948 12 2 8 0 0 xdim ydim
        ifg disp_temp6 15 rotatesprite 185 disp_temp 4020 309 12948 12 2 8 0 0 xdim ydim
        ifg disp_temp6 16 rotatesprite 185 disp_temp 4020 206 12948 12 2 8 0 0 xdim ydim
        ifg disp_temp6 17 rotatesprite 185 disp_temp 4020 103 12948 0 124 8 0 0 xdim ydim
        ifg disp_temp6 18 rotatesprite 185 disp_temp 4020 0 12948 0 124 8 0 0 xdim ydim

        digitalnumber DIGITALNUM 186 disp_temp hc_gear 0 0 0 0 0 xdim ydim

        add disp_temp 72
        geta[].pal disp_temp7
        ife CHAR 3 ife disp_temp7 0 set disp_temp7 11 // if it's Highwire, make his legs green if the default colour

        rotatesprite 240 disp_temp 42960 0 CKNEE shade disp_temp7 0 0 0 xdim ydim // Show right leg
        ifand EXTBITS_PRESS 1 add disp_temp 5
        rotatesprite 100 disp_temp 42960 1024 CKNEE shade disp_temp7 4 0 0 xdim ydim // Show left leg
        add disp_temp2 75
        ifand gun_firemode 262144
            {
            ife hc_missile_fire 0 set disp_temp8 8 else set disp_temp8 2
            rotatespritea 60 disp_temp2 QUARTERSIZE -48 11224 0 disp_temp8 0 -255 0 0 xdim ydim // Missile Icon
            }
        else
            {
            ife hc_missile_fire 0 set disp_temp8 8 else set disp_temp8 2
            rotatespritea 60 disp_temp2 QUARTERSIZE -48 11226 0 disp_temp8 0 -255 0 0 xdim ydim // Missile Icon
            }
        sub disp_temp2 20
        ifand BITS_PRESS 4 set disp_temp8 2 else set disp_temp8 8
        rotatespritea 60 disp_temp2 QUARTERSIZE -48 11223 0 disp_temp8 0 -255 0 0 xdim ydim // Machinegun icon
            ifg control_display 0
                {
                minitext 16 60 7030 0 4
                minitext 15 60 7030 0 125

                minitext 16 70 7031 0 4
                minitext 15 70 7031 0 125

                getkeyname 406 12 2

                minitext 16 80 406 0 4
                minitext 15 80 406 0 125

                minitext 26 80 7033 0 4
                minitext 25 80 7033 0 125

                minitext 16 90 7032 0 4
                minitext 15 90 7032 0 125

                getkeyname 406 9 2

                minitext 16 100 406 0 4
                minitext 15 100 406 0 125

                minitext 26 100 7023 0 4
                minitext 25 100 7023 0 125
                }

        }

        ifn player_using_hovertank -1 // hovertank HUD
        {
		geta[player_using_hovertank].pal disp_temp5
        rotatesprite 160 180 36863 0 21596 shade disp_temp5 0 0 0 xdim ydim // show hovertank hud

        geta[player_using_hovertank].extra disp_temp
		ifg disp_temp 7500 set disp_temp2 0
		else ifge disp_temp 5000 set disp_temp2 23
		else ifge disp_temp 2500 set disp_temp2 29
		else set disp_temp2 124
		rotatesprite 146 176 22000 0 21568 0 disp_temp2 8 0 0 xdim ydim // show hovertank hud
        digitalnumber DIGITALNUM 160 184 disp_temp 0 125 16 0 0 xdim ydim // Show tank's health

		rotatesprite 226 178 16000 0 22014 0 0 9 0 0 xdim ydim // show hovertank hud
		geta[player_using_hovertank].ang disp_temp2
		add disp_temp2 512
		rotatesprite 226 178 13000 disp_temp2 21569 0 11 9 0 0 xdim ydim // show hovertank hud


        getav[player_using_hovertank].forward_accelerate disp_temp6

        ifg disp_temp6 1199 set tilenum 15345 else
        ifg disp_temp6 800 set tilenum 15346 else
        ifg disp_temp6 600 set tilenum 15347 else
        ifg disp_temp6 400 set tilenum 15348 else
        ifg disp_temp6 200 set tilenum 15349 else
        ifg disp_temp6 0 set tilenum 15350 else
        ife disp_temp6 0 set tilenum 15343 else
        ifl disp_temp6 0 set tilenum 15350

        rotatespritea 85 175 34000 0 tilenum 0 8 1 -255 0 0 xdim ydim // Speed icon
        digitalnumber DIGITALNUM 95 180 hc_gear 0 125 16 0 0 xdim ydim


            ifg control_display 0
                {
                minitext 16 60 7050 0 4
                minitext 15 60 7050 0 125

                minitext 16 70 7031 0 4
                minitext 15 70 7031 0 125

                minitext 16 80 7032 0 4
                minitext 15 80 7032 0 125

                getkeyname 406 6 2

                minitext 16 90 406 0 4
                minitext 15 90 406 0 125

                minitext 26 90 7023 0 4
                minitext 25 90 7023 0 125
                }

        }


    ifn player_using_fighter -1 // Fighter HUD
        {
            rotatesprite 160 100 HALFSIZE 0 15344 shade pal 1024 0 0 xdim ydim // show fighter hud


        ife hc_gear 6 set tilenum 15345 else
        ife hc_gear 5 set tilenum 15346 else
        ife hc_gear 4 set tilenum 15347 else
        ife hc_gear 3 set tilenum 15348 else
        ife hc_gear 2 set tilenum 15349 else
        ife hc_gear 1 set tilenum 15350 else
        set tilenum 15350

        rotatespritea 10 145 NORMALSIZE 0 tilenum 10 27 13 -255 0 0 xdim ydim // gear icon


        getav[player_using_fighter].forward_accelerate disp_temp6

        ifg disp_temp6 1199 set tilenum 15345 else
        ifg disp_temp6 800 set tilenum 15346 else
        ifg disp_temp6 600 set tilenum 15347 else
        ifg disp_temp6 400 set tilenum 15348 else
        ifg disp_temp6 200 set tilenum 15349 else
        ifg disp_temp6 0 set tilenum 15350 else
        ife disp_temp6 0 set tilenum 15343 else
        ifl disp_temp6 0 set tilenum 15350

        rotatespritea 10 145 NORMALSIZE 0 tilenum 0 0 13 -255 0 0 xdim ydim // Speed icon

        geta[player_using_fighter].extra disp_temp6

        ifg disp_temp6 4500 set tilenum 15345 else
        ifg disp_temp6 3500 set tilenum 15346 else
        ifg disp_temp6 2500 set tilenum 15347 else
        ifg disp_temp6 1500 set tilenum 15348 else
        ifg disp_temp6 500 set tilenum 15349 else
        ifg disp_temp6 0 set tilenum 15350 else
        set tilenum 15343

        rotatespritea 310 145 NORMALSIZE 1024 tilenum 0 0 8 -255 0 0 xdim ydim // health icon

            ifg control_display 0
                {
                minitext 16 60 7030 0 4
                minitext 15 60 7030 0 125

                minitext 16 70 7031 0 4
                minitext 15 70 7031 0 125

                minitext 16 80 7032 0 4
                minitext 15 80 7032 0 125

                getkeyname 406 6 2

                minitext 16 90 406 0 4
                minitext 15 90 406 0 125

                minitext 26 90 7023 0 4
                minitext 25 90 7023 0 125
                }

        }
		
    ifn player_using_submarine -1 // submarine HUD
        {
            rotatesprite 160 100 HALFSIZE 0 15356 shade pal 8 0 0 xdim ydim // show submarine hud
			
			rotatespritea 110 185 8192 -32 29227 0 0 8 -255 0 0 xdim ydim

			rotatespritea 210 185 8192 1056 29227 0 0 12 -255 0 0 xdim ydim
			
			
				set temp framerate
				div temp 60
				set temp2 framerate
				mod temp2 60
				ifn temp2 0
					add temp 1
				ifge cus_fadetics temp
					set cus_fadetics 1
				else
					add cus_fadetics 1
					ife cus_fadetics 1
						add cus_fade 1
				ifge cus_fade 2048 set cus_fade 0
			   	rotatespritea 160 172 10192 cus_fade 22388 0 7 41 -255 0 0 xdim ydim	


        ife hc_gear 6 set tilenum 15345 else
        ife hc_gear 5 set tilenum 15346 else
        ife hc_gear 4 set tilenum 15347 else
        ife hc_gear 3 set tilenum 15348 else
        ife hc_gear 2 set tilenum 15349 else
        ife hc_gear 1 set tilenum 15350 else
        set tilenum 15350

        rotatespritea 10 145 NORMALSIZE 0 tilenum 20 7 13 -255 0 0 xdim ydim // gear icon


        getav[player_using_submarine].forward_accelerate disp_temp6

        ifg disp_temp6 1199 set tilenum 15345 else
        ifg disp_temp6 800 set tilenum 15346 else
        ifg disp_temp6 600 set tilenum 15347 else
        ifg disp_temp6 400 set tilenum 15348 else
        ifg disp_temp6 200 set tilenum 15349 else
        ifg disp_temp6 0 set tilenum 15350 else
        ife disp_temp6 0 set tilenum 15343 else
        ifl disp_temp6 0 set tilenum 15350

        rotatespritea 10 145 NORMALSIZE 0 tilenum 0 7 13 -255 0 0 xdim ydim // Speed icon

        geta[player_using_submarine].extra disp_temp6

        ifg disp_temp6 4500 set tilenum 15345 else
        ifg disp_temp6 3500 set tilenum 15346 else
        ifg disp_temp6 2500 set tilenum 15347 else
        ifg disp_temp6 1500 set tilenum 15348 else
        ifg disp_temp6 500 set tilenum 15349 else
        ifg disp_temp6 0 set tilenum 15350 else
        set tilenum 15343

        rotatespritea 310 145 NORMALSIZE 1024 tilenum 0 7 8 -255 0 0 xdim ydim // health icon

        }
		
    }
}

ife KEYCARDTYPE 0 set disp_temp 9471
else ife KEYCARDTYPE 1 set disp_temp 9470 // Rune key
else ife KEYCARDTYPE 2 set disp_temp 9469 // Egyption Key

switch CUSTOMKEYCARDPOS
 case 0
  break
 case 1
 guniqhudid 40
 rotatesprite 254 190 40960 0 CKEYCARDTILE3 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 2
 guniqhudid 40
 rotatespritea 130 150 73728 0 disp_temp 28 33 4096 -255 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 251 185 40960 0 CKEYCARDTILE3 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 3
 guniqhudid 40
 rotatespritea 130 150 69632 0 disp_temp 24 33 4096 -255 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 248 180 40960 0 CKEYCARDTILE3 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 4
 guniqhudid 40
 rotatespritea 130 150 65536 0 disp_temp 20 33 4096 -255 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 245 175 40960 0 CKEYCARDTILE3 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 5
 guniqhudid 40
 rotatespritea 130 150 61440 0 disp_temp 16 33 4096 -255 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 242 170 40960 0 CKEYCARDTILE2 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 6
 guniqhudid 40
 rotatespritea 130 150 57344 0 disp_temp 12 33 4096 -255 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 239 165 40960 0 CKEYCARDTILE2 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 7
 guniqhudid 40
 rotatespritea 130 150 53248 0 disp_temp 8 33 4096 -255 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 236 160 40960 0 CKEYCARDTILE2 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 8
 guniqhudid 40
 rotatespritea 130 150 49152 0 disp_temp 4 33 4096 -255 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 233 155 40960 0 CKEYCARDTILE2 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 9
 guniqhudid 40
 rotatesprite 130 150 45056 0 disp_temp 0 33 4096 0 0 xdim ydim // card disapear
 guniqhudid 41
 rotatesprite 230 150 40960 0 CKEYCARDTILE2 shade arm_pal 4096 0 0 xdim ydim
 guniqhudid 0
  break
 case 10
 guniqhudid 40
 rotatesprite 130 150 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
 guniqhudid 41
 rotatesprite 200 155 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 11
 case 12
 guniqhudid 40
 rotatesprite 130 155 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
 guniqhudid 41
 rotatesprite 200 160 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 13
 guniqhudid 40
 rotatesprite 130 160 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
 guniqhudid 41
 rotatesprite 200 165 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 14
 guniqhudid 40
 rotatesprite 130 165 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 170 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 15
 guniqhudid 40
 rotatesprite 130 170 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 175 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 16
 guniqhudid 40
 rotatesprite 130 175 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 180 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 17
 guniqhudid 40
 rotatesprite 130 180 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 185 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 18
 guniqhudid 40
 rotatesprite 130 185 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 190 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 19
 guniqhudid 40
 rotatesprite 130 190 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 195 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 20
 guniqhudid 40
 rotatesprite 130 195 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 200 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
 guniqhudid 0
  break
 case 21
 guniqhudid 40
 rotatesprite 130 200 45056 0 disp_temp shade CKEYCARDPAL 4096 0 0 xdim ydim // card
  guniqhudid 41
 rotatesprite 200 205 40960 0 CKEYCARDTILE shade arm_pal 4096 0 0 xdim ydim // hand
  guniqhudid 0
  break
endswitch

// PDU SCREEN

    ifn DOCUMENT -1
        {
        ife DOCUMENT 7935
            {
            rotatesprite 160 100 16384 0 7935 0 0 1 0 0 xdim ydim
            }
        else
            {
            set disp_temp4 tilesizx[DOCUMENT]
			add disp_temp4 tilesizy[DOCUMENT]
            mul disp_temp4 48
			set disp_temp5 65536
			sub disp_temp5 disp_temp4
            // ifg disp_temp4 30000 set disp_temp4 30000
            rotatesprite 160 100 disp_temp5 0 DOCUMENT 0 0 0 0 0 xdim ydim
            ifg MAXPAGES 0
                {
                set disp_temp2 tilesizx[DOCUMENT]
                div disp_temp2 5
                set disp_temp3 100
                sub disp_temp3 disp_temp2

                ifn PAGENUMBER 0
                    {
                    rotatespritea disp_temp3 100 HALFSIZE 1024 2488 disp_pulse 0 4 -255 0 0 xdim ydim // Left Arrow
                    getkeyname 406 15 2
                    mulvar disp_temp3 2
                    gametext STARTALPHANUM disp_temp3 100 406 0 2 16 0 0 xdim ydim
                    }
                set disp_temp3 220
                add disp_temp3 disp_temp2
                ifvarvarn PAGENUMBER MAXPAGES
                    {
                    rotatespritea disp_temp3 100 HALFSIZE 0 2488 disp_pulse 0 0 -255 0 0 xdim ydim // Right arrow
                    getkeyname 406 16 2
                    mulvar disp_temp3 2
                    gametext STARTALPHANUM disp_temp3 100 406 0 2 16 0 0 xdim ydim
                    }
                }
            }
        state helmet_huds
        }

ifn MISSION_UP 0
{
set disp_temp5 0
ife MISSIONSCREEN 0 // Mission screen
    {
    set disp_temp 3611
    set disp_temp2 3261
    }
else
ife MISSIONSCREEN 1 // Item screen
    {
    set disp_temp 3631
    set disp_temp2 3262
    }
else
ife MISSIONSCREEN 2 // key screen
    {
    set disp_temp 3631
    set disp_temp2 3263
    }
else
ife MISSIONSCREEN 3 // ammo types
    {
    set disp_temp 3631
    set disp_temp2 3264
    }
else
ife MISSIONSCREEN 4 // stat screen
    {
    set disp_temp 3611
    set disp_temp2 3265
    }
else
ife MISSIONSCREEN 5 // Scanner
{
	minitext 30 20 326 0 126
	ife scan_mode 0 { minitext 30 27 324 0 124 minitext 30 34 327 0 125 }
	else ife scan_mode 1 { minitext 30 27 325 0 124 minitext 30 34 328 0 125 }
	else ife scan_mode 2 { minitext 30 27 343 0 124 minitext 30 34 329 0 125 }
	ifg scan_mode 0
	{
		qputs 342 Available supplies: %d
		qsprintf 342 342 SUPPLY_LEVEL
		minitext 30 41 342 0 32
	}
    set disp_temp 10332
    ife MISSIONPOS 100 { set disp_temp4 0 set disp_temp5 4129 } else { set disp_temp4 20 set disp_temp5 4096 }
    guniqhudid 50
    rotatesprite 160 MISSIONPOS 34734 0 10333 disp_temp4 0 disp_temp5 0 0 xdim ydim
    set disp_temp2 3266

	ifge scan_mode 1
	{
		ifg airdrop_cooldown 0
		{
			ifg airdrop_cooldown 0 rotatespritea 106 140 6320 1751 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 20 rotatespritea 106 140 6320 1648 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 40 rotatespritea 106 140 6320 1545 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 60 rotatespritea 106 140 6320 1442 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 80 rotatespritea 106 140 6320 1339 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 100 rotatespritea 106 140 6320 1236 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 120 rotatespritea 106 140 6320 1133 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 140 rotatespritea 106 140 6320 1030 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 160 rotatespritea 106 140 6320 927 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 180 rotatespritea 106 140 6320 824 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 200 rotatespritea 106 140 6320 721 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 220 rotatespritea 106 140 6320 618 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 240 rotatespritea 106 140 6320 515 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 260 rotatespritea 106 140 6320 412 12948 0 23 265 -255 0 0 xdim ydim
			ifg airdrop_cooldown 280 rotatespritea 106 140 6320 309 12948 0 23 265 -255 0 0 xdim ydim
		}
		else ifand BITS_PRESS 4 ifg hold_down 0
		{
			rotatespritea 106 140 6320 1853 12948 0 125 264 -255 0 0 xdim ydim
			ifg hold_down 3 rotatespritea 106 140 6320 1751 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 6 rotatespritea 106 140 6320 1648 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 9 rotatespritea 106 140 6320 1545 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 12 rotatespritea 106 140 6320 1442 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 15 rotatespritea 106 140 6320 1339 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 18 rotatespritea 106 140 6320 1236 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 21 rotatespritea 106 140 6320 1133 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 24 rotatespritea 106 140 6320 1030 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 27 rotatespritea 106 140 6320 927 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 30 rotatespritea 106 140 6320 824 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 33 rotatespritea 106 140 6320 721 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 36 rotatespritea 106 140 6320 618 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 39 rotatespritea 106 140 6320 515 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 42 rotatespritea 106 140 6320 412 12948 0 125 265 -255 0 0 xdim ydim
			ifg hold_down 45 rotatespritea 106 140 6320 309 12948 0 125 265 -255 0 0 xdim ydim

			rotatespritea 106 140 6320 206 12948 15 125 265 -255 0 0 xdim ydim
		}
	}
}


guniqhudid 51
rotatesprite 160 MISSIONPOS 34734 0 disp_temp 0 0 4096 0 0 xdim ydim
guniqhudid 52
ife CHAR 9 rotatesprite 160 MISSIONPOS 34734 0 12140 shade pal 4096 0 0 xdim ydim
else rotatesprite 160 MISSIONPOS 34734 0 10332 shade pal 4096 0 0 xdim ydim
ife MISSIONPOS 100
 ifn MISSIONSCREEN 5
{
guniqhudid 53
ifn mission_scare 0
    {
    guniqhudid 55
      rotatespritea 160 100 88000 0 11013 20 0 4096 -255 0 0 xdim ydim
      guniqhudid 56
      rotatespritea 110 100 10384 0 21341 0 0 4096 -255 0 0 xdim ydim // SPOOPY
      guniqhudid 57
      rotatespritea 210 100 10384 0 21341 0 0 4096 -255 0 0 xdim ydim // SPOOPY
      guniqhudid 53
    }
else ifn tl_pic -1 rotatespritea 160 100 40734 0 tl_pic 20 0 4096 -255 0 0 xdim ydim // translator pic
else ife CHAR 9 rotatespritea 160 100 40734 0 12139 20 0 4096 -255 0 0 xdim ydim // Cultist
else ife CHAR 10 rotatespritea 160 100 40734 0 12163 20 0 4096 -255 0 0 xdim ydim // Bombshell
else ife CHAR 12 ifl VOLUME 4 rotatespritea 160 100 40734 0 12163 20 0 4096 -255 0 0 xdim ydim
else ife CHAR 3 ife TIMEZONE 1 rotatespritea 160 100 40734 0 12163 20 0 4096 -255 0 0 xdim ydim // Highwire revolution
else ife TIMEZONE 5 rotatespritea 160 100 40734 0 23669 20 0 4096 -255 0 0 xdim ydim // Snowfall future
else ife TIMEZONE 6 rotatespritea 160 100 40734 0 23669 20 0 4096 -255 0 0 xdim ydim // Snowfall VR future
else ife TIMEZONE 2 // Micky begins
    {
    ife CHAR 0 rotatespritea 160 100 40734 0 12163 20 0 4096 -255 0 0 xdim ydim // James IW flashback
    else rotatespritea 160 100 56734 0 12141 20 0 4096 -255 0 0 xdim ydim // Adelaide
    }
else
    {
      add WHEEL_ROTATE 1
      ifg WHEEL_ROTATE 2048 set WHEEL_ROTATE 0
      rotatespritea 160 100 40734 WHEEL_ROTATE 12256 20 0 4096 -255 0 0 xdim ydim // AMC LOGO
    }
guniqhudid 54
rotatespritea 56 132 34734 0 disp_temp2 disp_pulse 21 4096 -255 0 0 xdim ydim
ife RADIO_CONTACT YES
    {
    guniqhudid 55
    ifoutside set disp_temp 3246 else set disp_temp 3247
    rotatesprite 291 51 34734 0 disp_temp 0 0 4096 0 0 xdim ydim
    }

ife airdrop_available 1 nullop else
    {
    guniqhudid 56
    rotatesprite 291 65 34734 0 3244 0 0 4096 0 0 xdim ydim
    }

guniqhudid 0
// Mission button
set gui_pos_x 52
set gui_pos_y 95
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 0
    ifl gui_pos_x_temp 25
     ifg gui_pos_x_temp -25
        ifl gui_pos_y_temp 6
         ifg gui_pos_y_temp -6
            {
            rotatespritea 56 132 34734 0 3261 disp_pulse 21 0 -255 0 0 xdim ydim
            ifand BITS_PRESS 4
                {
                sound PDU_MOVE
                set MISSIONSCREEN 0
                }
            }

// item button
set gui_pos_y 108
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 1
    ifl gui_pos_x_temp 25
     ifg gui_pos_x_temp -25
        ifl gui_pos_y_temp 6
         ifg gui_pos_y_temp -6
            {
            rotatespritea 56 132 34734 0 3262 disp_pulse 21 0 -255 0 0 xdim ydim
            ifand BITS_PRESS 4
                {
                sound PDU_MOVE
                set MISSIONSCREEN 1
                }
            }

// key button
set gui_pos_y 119
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 2
    ifl gui_pos_x_temp 25
     ifg gui_pos_x_temp -25
        ifl gui_pos_y_temp 6
         ifg gui_pos_y_temp -6
            {
            rotatespritea 56 132 34734 0 3263 disp_pulse 21 0 -255 0 0 xdim ydim
            ifand BITS_PRESS 4
                {
                sound PDU_MOVE
                set MISSIONSCREEN 2
                }
            }

// special ammo button
set gui_pos_y 132
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 3
    ifl gui_pos_x_temp 25
     ifg gui_pos_x_temp -25
        ifl gui_pos_y_temp 6
         ifg gui_pos_y_temp -6
            {
            rotatespritea 56 132 34734 0 3264 disp_pulse 21 0 -255 0 0 xdim ydim
            ifand BITS_PRESS 4
                {
                sound PDU_MOVE
                set MISSIONSCREEN 3
                }
            }

// stats button
set gui_pos_y 145
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 4
    ifl gui_pos_x_temp 25
     ifg gui_pos_x_temp -25
        ifl gui_pos_y_temp 6
         ifg gui_pos_y_temp -6
            {
            rotatespritea 56 132 34734 0 3265 disp_pulse 21 0 -255 0 0 xdim ydim
            ifand BITS_PRESS 4
                {
                sound PDU_MOVE
                set MISSIONSCREEN 4
                }
            }

// scan button
set gui_pos_y 157
state CURSOR_OVER_ITEM
 ifn MISSIONSCREEN 5
    ifl gui_pos_x_temp 25
     ifg gui_pos_x_temp -25
        ifl gui_pos_y_temp 6
         ifg gui_pos_y_temp -6
            {
            rotatespritea 56 132 34734 0 3266 disp_pulse 21 0 -255 0 0 xdim ydim
            ifand BITS_PRESS 4
                {
                sound PDU_MOVE
                set MISSIONSCREEN 5
                }
            }

// abort mission button
set gui_pos_y 171
state CURSOR_OVER_ITEM
    ifl gui_pos_x_temp 25
     ifg gui_pos_x_temp -25
        ifl gui_pos_y_temp 8
         ifg gui_pos_y_temp -8
            {
            rotatespritea 56 132 34734 0 3267 disp_pulse 21 0 -255 0 0 xdim ydim
            set mouse_hint 580 // refers to quote in user.con
            sub mouse_hint_timer 2
            }


}
guniqhudid 57
set disp_temp MISSIONPOS
add disp_temp 80
    ife FIRE_SUIT 1 rotatesprite 310 disp_temp DOUBLESIZE 0 9436 shade 13 4096 0 0 xdim ydim
    else ife JUGGERN_SUIT 1 rotatesprite 310 disp_temp DOUBLESIZE 0 9429 shade pal 4096 0 0 xdim ydim
    else ife SPACE_SUIT 1 rotatesprite 310 disp_temp DOUBLESIZE 0 23085 shade pal 4096 0 0 xdim ydim
    else rotatesprite 310 disp_temp NORMALSIZE 0 CHOLDING_R shade arm_pal 4096 0 0 xdim ydim
guniqhudid 0
ife MISSIONPOS 100
    {
    getp[].palookup pal

    ife MISSIONSCREEN 0 // Mission text!
        {
        state agent_name_pdu
        ifn mission_scare 0
            {
            ife mission_scare 1 { screensound I_SEE_YOU set mission_scare 2 }
            ifrnd 84 qputs 340 ^2USELESS USELESS USELESS USELESS USELESS
            else ifrnd 127 qputs 340 ^2JOIN US JOIN ME JOIN US JOIN ME JOIN US
            else qputs 340 ^2COME TO US COME TO ME COME TO US COME TO ME
            screentext STARTALPHANUM 25 40 34252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
            screentext STARTALPHANUM 25 45 34252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
            screentext STARTALPHANUM 25 50 34252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
            screentext STARTALPHANUM 25 55 34252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
            screentext STARTALPHANUM 25 60 34252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
            screentext STARTALPHANUM 25 65 34252 0 0 340 0 2 16 0 2 0 1 1 0 0 0 xdim ydim
            }
        else
            {
            ifn MISSIONLINE1 0 screentext STARTALPHANUM 25 40 30720 0 0 MISSIONLINE1 0 2 16 0 5 8 1 1 0 0 0 xdim ydim
            ifn MISSIONLINE2 0 screentext STARTALPHANUM 25 45 30720 0 0 MISSIONLINE2 0 2 16 0 5 8 1 1 0 0 0 xdim ydim
            ifn MISSIONLINE3 0 screentext STARTALPHANUM 25 50 30720 0 0 MISSIONLINE3 0 2 16 0 5 8 1 1 0 0 0 xdim ydim
            ifn MISSIONLINE4 0 screentext STARTALPHANUM 25 55 30720 0 0 MISSIONLINE4 0 2 16 0 5 8 1 1 0 0 0 xdim ydim
            ifn MISSIONLINE5 0 screentext STARTALPHANUM 25 60 30720 0 0 MISSIONLINE5 0 2 16 0 5 8 1 1 0 0 0 xdim ydim
            ifn MISSIONLINE6 0 screentext STARTALPHANUM 25 65 30720 0 0 MISSIONLINE6 0 2 16 0 5 8 1 1 0 0 0 xdim ydim
            }

        gettimedate disp_temp disp_temp2 disp_temp3 disp_temp4 disp_temp5 disp_temp6 disp_temp7 disp_temp7
        digitalnumber 2837 100 175 disp_temp3 0 21 0 0 0 xdim ydim // Hours
        myospal 105 175 2847 0 0 21
        ifl disp_temp2 10 // Add the extra '0' infront of the number
                {
                myospal 115 175 2837 0 0 21
                digitalnumber 2837 125 175 disp_temp2 0 21 0 0 0 xdim ydim // minutes
                }
                else
            digitalnumber 2837 120 175 disp_temp2 0 21 0 0 0 xdim ydim // minutes
        myospal 130 175 2847 0 0 21
            ifl disp_temp 10 // Add the extra '0' infront of the number
                {
                myospal 140 175 2837 0 0 21
                digitalnumber 2837 150 175 disp_temp 0 21 0 0 0 xdim ydim // minutes
                }
            else
            digitalnumber 2837 145 175 disp_temp 0 21 0 0 0 xdim ydim // seconds

        digitalnumber 2837 184 175 disp_temp4 0 21 0 0 0 xdim ydim // Day
        myospal 192 175 2836 0 0 21
        add disp_temp5 1
        digitalnumber 2837 205 175 disp_temp5 0 21 0 0 0 xdim ydim // Month
        myospal 210 175 2836 0 0 21
        digitalnumber 2837 240 175 disp_temp6 0 21 0 0 0 xdim ydim // Year

        }
    else
    ife MISSIONSCREEN 1 // Inventory display
        {
        set gui_pos_x 45
        set gui_pos_y 35
        ifg GOT_EXPLOSIVE 0
            {
            rotatesprite gui_pos_x gui_pos_y 22000 0 C4_EXPLOSIVE 0 0 0 0 0 xdim ydim
            digitalnumber 2837 gui_pos_x gui_pos_y GOT_EXPLOSIVE 0 32 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3020 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 31
        ife AIR_FILTER 1
            {
            rotatesprite gui_pos_x gui_pos_y 22000 0 REBREATHER 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3023 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 31
        ife GOT_FLIPPER 1
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 FLIPPER 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3100 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 30
        ifg GAS_MASK 0
            {
            rotatesprite gui_pos_x gui_pos_y 40768 0 GASMASK 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3025 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 29
        ifg COGS 0
            {
            rotatesprite gui_pos_x gui_pos_y 42768 0 COG_PICKUP 0 0 0 0 0 xdim ydim
            digitalnumber 2837 gui_pos_x gui_pos_y COGS 0 32 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3027 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 31
        ife TOOLBOX 1
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 TOOLBOX_PICKUP 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3028 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 30
        ife ROPE 1
            {
            rotatesprite gui_pos_x gui_pos_y 16000 0 ROPE_PICKUP 0 0 0 0 0 xdim ydim
            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3102 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 30
        ifand EGYPT_ARTIFACTS 1
            {
            rotatesprite gui_pos_x gui_pos_y 14000 0 16835 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3101 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }

        set gui_pos_x 44
        add gui_pos_y 30
        ifand EGYPT_ARTIFACTS 2
            {
            rotatesprite gui_pos_x gui_pos_y 18000 0 16836 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3103 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }

        add gui_pos_x 31
        ifand EGYPT_ARTIFACTS 4
            {
            rotatesprite gui_pos_x gui_pos_y 16000 0 16837 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3104 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }

        add gui_pos_x 31
        ifand EGYPT_ARTIFACTS 8
            {
            rotatesprite gui_pos_x gui_pos_y 16000 0 16838 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3105 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }



        add gui_pos_x 31
        ife AIRSTRIKE_MARKER 1
            {
            rotatesprite gui_pos_x gui_pos_y 16000 0 ASTRIKE_MARKER 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3106 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }

        add gui_pos_x 31
        ife GOT_FIREWALL 1
            {
            rotatesprite gui_pos_x gui_pos_y 16000 0 FIREWALL_CHIP 0 0 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3107 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }

        add gui_pos_x 30
            ifpinventory GET_FIRSTAID 0
            {
            rotatesprite gui_pos_x gui_pos_y INVENSIZE 0 c_medikit 0 0 0 0 0 xdim ydim
            getp[].firstaid_amount disp_temp2
            digitalnumber 2837 gui_pos_x gui_pos_y disp_temp2 0 27 0 0 0 xdim ydim
            }

        add gui_pos_x 30
            ifpinventory GET_BOOTS 0
            {
            rotatesprite gui_pos_x gui_pos_y INVENSIZE 0 c_boots 0 0 0 0 0 xdim ydim
            getp[].boot_amount disp_temp2
            div disp_temp2 2
            digitalnumber 2837 gui_pos_x gui_pos_y disp_temp2 0 27 0 0 0 xdim ydim
            }

        add gui_pos_x 30
            ifg player[].holoduke_amount 0
            {
            rotatesprite gui_pos_x gui_pos_y 22000 0 c_holoduke 0 0 0 0 0 xdim ydim
            div disp_temp2 24
            digitalnumber 2837 gui_pos_x gui_pos_y disp_temp2 0 27 0 0 0 xdim ydim
            }

        set gui_pos_x 107
        add gui_pos_y 30
            ifpinventory GET_JETPACK 0
            {
            rotatesprite gui_pos_x gui_pos_y INVENSIZE 0 c_jetpack 0 0 0 0 0 xdim ydim
            getp[].jetpack_amount disp_temp2
            div disp_temp2 16
            digitalnumber 2837 gui_pos_x gui_pos_y disp_temp2 0 27 0 0 0 xdim ydim
            }
        add gui_pos_x 30
            ifpinventory GET_HEATS 0
            {
            rotatesprite gui_pos_x gui_pos_y INVENSIZE 0 disp_nvg 0 0 0 0 0 xdim ydim
            getp[].heat_amount disp_temp2
            div disp_temp2 48
            digitalnumber 2837 gui_pos_x gui_pos_y disp_temp2 0 27 0 0 0 xdim ydim
            }
        add gui_pos_x 30
            ifpinventory GET_SCUBA 0
            {
            rotatesprite gui_pos_x gui_pos_y INVENSIZE 0 c_scuba 0 0 0 0 0 xdim ydim
            getp[].scuba_amount disp_temp2
            ife CHAR 0 div disp_temp2 128 else div disp_temp2 64
            digitalnumber 2837 gui_pos_x gui_pos_y disp_temp2 0 27 0 0 0 xdim ydim
            }
        add gui_pos_x 31
            ifpinventory GET_STEROIDS 0
            {
            rotatesprite gui_pos_x gui_pos_y INVENSIZE 0 c_steroids 0 0 0 0 0 xdim ydim
            getp[].steroids_amount disp_temp2
            div disp_temp2 4
            digitalnumber 2837 gui_pos_x gui_pos_y disp_temp2 0 27 0 0 0 xdim ydim
            }
        }
    else
    ife MISSIONSCREEN 2 // Check keys!
        {
        ifand PLUGKEY 1 rotatesprite 42 33 22000 0 3463 0 0 0 0 0 xdim ydim
        ifand PLUGKEY 2 rotatesprite 46 37 22000 0 3464 0 0 0 0 0 xdim ydim
        ifand PLUGKEY 4 rotatesprite 50 41 22000 0 3465 0 0 0 0 0 xdim ydim
        ifand player[].got_access 1 rotatesprite 72 32 22000 0 60 0 0 0 0 0 xdim ydim
        ifand player[].got_access 2 rotatesprite 76 36 22000 0 60 0 21 0 0 0 xdim ydim
        ifand player[].got_access 4 rotatesprite 80 40 22000 0 60 0 23 0 0 0 xdim ydim
        ifand ACCESSKEY2 1 rotatesprite 102 32 22000 0 60 0 12 0 0 0 xdim ydim
        ifand ACCESSKEY2 2 rotatesprite 106 36 22000 0 60 0 11 0 0 0 xdim ydim
        ifand ACCESSKEY2 4 rotatesprite 110 40 22000 0 60 0 15 0 0 0 xdim ydim
        ifand ACCESSKEY2 8 rotatesprite 133 32 22000 0 60 0 49 0 0 0 xdim ydim
        ifand ACCESSKEY2 16 rotatesprite 137 36 22000 0 60 0 10 0 0 0 xdim ydim
        ifand ACCESSKEY2 32 rotatesprite 141 40 22000 0 60 0 22 0 0 0 xdim ydim
        ifand ACCESSKEY2 64 rotatesprite 168 36 22000 0 60 0 16 0 0 0 xdim ydim

        ifand RUNEKEYS 1 rotatesprite 193 32 22000 0 66 0 0 0 0 0 xdim ydim
        ifand RUNEKEYS 2 rotatesprite 197 36 22000 0 66 0 21 0 0 0 xdim ydim
        ifand RUNEKEYS 4 rotatesprite 201 40 22000 0 66 0 23 0 0 0 xdim ydim

        ifand RUNEKEYS 8 rotatesprite 223 32 22000 0 66 0 12 0 0 0 xdim ydim
        ifand RUNEKEYS 16 rotatesprite 227 36 22000 0 66 0 11 0 0 0 xdim ydim
        ifand RUNEKEYS 32 rotatesprite 231 40 22000 0 66 0 49 0 0 0 xdim ydim

        ifand SCARABKEYS 1 rotatesprite 252 31 12000 0 10088 0 0 0 0 0 xdim ydim
        ifand SCARABKEYS 2 rotatesprite 258 31 12000 0 10088 0 21 0 0 0 xdim ydim
        ifand SCARABKEYS 4 rotatesprite 264 31 12000 0 10088 0 23 0 0 0 xdim ydim
        ifand SCARABKEYS 8 rotatesprite 255 41 12000 0 10088 0 11 0 0 0 xdim ydim
        ifand SCARABKEYS 16 rotatesprite 261 41 12000 0 10088 0 49 0 0 0 xdim ydim

        ifand SCARABKEYS 32 rotatesprite 40 62 12000 0 10088 0 35 0 0 0 xdim ydim
        ifand SCARABKEYS 64 rotatesprite 51 62 12000 0 10088 0 15 0 0 0 xdim ydim
        ifand SCARABKEYS 128 rotatesprite 43 74 12000 0 10088 0 37 0 0 0 xdim ydim
        ifand SCARABKEYS 256 rotatesprite 54 74 12000 0 10088 0 12 0 0 0 xdim ydim

        ifand OLDKEYS 1 rotatesprite 76 66 26000 0 7952 0 0 0 0 0 xdim ydim
        ifand OLDKEYS 2 rotatesprite 107 66 26000 0 7953 0 0 0 0 0 xdim ydim
        ifand OLDKEYS 4 rotatesprite 138 66 26000 0 7954 0 0 0 0 0 xdim ydim
        ifand OLDKEYS 8 rotatesprite 169 66 26000 0 7955 0 0 0 0 0 xdim ydim
        ifand OLDKEYS 16 rotatesprite 198 66 26000 0 7956 0 0 0 0 0 xdim ydim
        ifand OLDKEYS 32 rotatesprite 228 66 26000 0 7941 0 0 0 0 0 xdim ydim

        ifand ABYSS_KEYS 1 rotatesprite 254 63 16000 0 ABYSS_KEY 0 0 0 0 0 xdim ydim
        ifand ABYSS_KEYS 2 rotatesprite 258 67 16000 0 ABYSS_KEY 0 21 0 0 0 xdim ydim
        ifand ABYSS_KEYS 4 rotatesprite 262 71 16000 0 ABYSS_KEY 0 23 0 0 0 xdim ydim

        ifand ABYSS_KEYS 8 rotatesprite 107 92 16000 0 ABYSS_KEY 0 11 0 0 0 xdim ydim
        ifand ABYSS_KEYS 16 rotatesprite 107 102 16000 0 ABYSS_KEY 0 49 0 0 0 xdim ydim

        ifand SW_KEYS 1 rotatesprite 130 92 25000 0 SW_TECHCARD 0 0 0 0 0 xdim ydim
        ifand SW_KEYS 2 rotatesprite 130 101 25000 0 SW_TECHCARD 0 10 0 0 0 xdim ydim
        ifand SW_KEYS 4 rotatesprite 144 92 25000 0 SW_TECHCARD 0 11 0 0 0 xdim ydim
        ifand SW_KEYS 8 rotatesprite 144 101 25000 0 SW_TECHCARD 0 23 0 0 0 xdim ydim

        ifand SW_KEYS 16 rotatesprite 167 87 16000 0 SW_OLDKEY 0 15 0 0 0 xdim ydim
        ifand SW_KEYS 32 rotatesprite 167 93 16000 0 SW_OLDKEY 0 12 0 0 0 xdim ydim
        ifand SW_KEYS 64 rotatesprite 167 99 16000 0 SW_OLDKEY 0 83 0 0 0 xdim ydim
        ifand SW_KEYS 128 rotatesprite 167 105 16000 0 SW_OLDKEY 0 10 0 0 0 xdim ydim

        ifand NORMAL_KEYS 1 rotatesprite 198 97 26000 0 DIAMOND_KEY 0 0 0 0 0 xdim ydim
        ifand NORMAL_KEYS 2 rotatesprite 228 97 26000 0 CLUB_KEY 0 0 0 0 0 xdim ydim
        ifand NORMAL_KEYS 4 rotatesprite 258 97 26000 0 SPADE_KEY 0 0 0 0 0 xdim ydim
        ifand NORMAL_KEYS 8 rotatesprite 107 128 26000 0 HEART_KEY 0 0 0 0 0 xdim ydim
        ifand NORMAL_KEYS 16 rotatesprite 138 128 26000 0 NORMAL_KEY5 0 0 0 0 0 xdim ydim

        ifg GENERIC_KEYS 0
        {
            rotatesprite 169 128 28000 0 GENERICKEY 0 0 0 0 0 xdim ydim
            digitalnumber 2472 169 134 GENERIC_KEYS 0 0 0 0 0 xdim ydim
        }

        ifand temple_key 1 rotatesprite 198 126 20000 0 22377 0 0 0 0 0 xdim ydim
        else ifand temple_key 2 rotatesprite 198 126 20000 0 22378 0 0 0 0 0 xdim ydim
        else ifand temple_key 4 rotatesprite 198 126 20000 0 22376 0 0 0 0 0 xdim ydim


        ifand HELLGKEYS 1 rotatesprite 220 122 16000 0 7663 0 0 0 0 0 xdim ydim
        ifand HELLGKEYS 2 rotatesprite 235 122 16000 0 7664 0 0 0 0 0 xdim ydim
        ifand HELLGKEYS 4 rotatesprite 228 133 16000 0 7665 0 0 0 0 0 xdim ydim

        ifand HELLGKEYS 8 rotatesprite 252 126 16000 0 7666 0 0 0 0 0 xdim ydim
        ifand HELLGKEYS 16 rotatesprite 265 126 16000 0 7667 0 0 0 0 0 xdim ydim

        ife SWIPECARDS 64 rotatesprite 106 157 24000 0 SWIPE_MASTER 0 0 0 0 0 xdim ydim
        else
        {
        ifand SWIPECARDS 1 rotatesprite 102 154 15000 0 SWIPE_CARD 0 0 0 0 0 xdim ydim
        ifand SWIPECARDS 2 rotatesprite 107 158 15000 0 SWIPE_CARD 0 21 0 0 0 xdim ydim
        ifand SWIPECARDS 4 rotatesprite 111 162 15000 0 SWIPE_CARD 0 23 0 0 0 xdim ydim
        ifand SWIPECARDS 8 rotatesprite 133 154 15000 0 SWIPE_CARD 0 12 0 0 0 xdim ydim
        ifand SWIPECARDS 16 rotatesprite 138 158 15000 0 SWIPE_CARD 0 11 0 0 0 xdim ydim
        ifand SWIPECARDS 32 rotatesprite 142 162 15000 0 SWIPE_CARD 0 49 0 0 0 xdim ydim
        }


        }
    else
    ife MISSIONSCREEN 3 // ammo display
        {
        set gui_pos_x 45
        set gui_pos_y 35
        ifg dragon_shells 0
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 DRAGONS_SHELLS 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 64 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y dragon_shells 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3034 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }
        add gui_pos_x 31
        ifg silver_ammo 0
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 SILVERAMMO_DRUM 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 2 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y silver_ammo 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3021 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }
        add gui_pos_x 31
        ifg explosive_shells 0
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 EXPL_SHELLS 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 1 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y explosive_shells 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3022 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 31
        ifg tesla_ammo 0
            {
            rotatesprite gui_pos_x gui_pos_y 22000 0 TESLA_AMMO_SPRITE 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 8 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y tesla_ammo 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3026 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 31
        ifg flechete_shells 0
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 FLECHETE_SHELLS 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 1 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y flechete_shells 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3029 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }

        add gui_pos_x 29
        ifg silver_bolts 0
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 SILVER_CROSSBOW_BOLTS 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 16 ifand AMMO_TYPES[cur_weap] 16 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y silver_bolts 0 disp_temp9 0 0 0 xdim ydim
            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 3030 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }

        add gui_pos_x 31
        ifg micro_torpedo 0
            {
            rotatesprite gui_pos_x gui_pos_y 22000 0 MICRO_TORPEDO_PACK 0 0 0 0 0 xdim ydim
            ife cur_weap 0 ife temp_weap 30 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y micro_torpedo 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 3031 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 30
        ifg magnum_shells 0
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 MAGNUM_SHELLS 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 4 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y magnum_shells 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM

                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 3032 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        set gui_pos_x 45
        add gui_pos_y 30
        ifg HEAT_SINKS 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 6542 0 0 0 0 0 xdim ydim
            digitalnumber 2837 gui_pos_x gui_pos_y HEAT_SINKS 0 27 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM

                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 3033 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 31
        ifg heat_seek_card 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 HEAT_SEEK_CARD_PICKUP 0 0 0 0 0 xdim ydim
            ife cur_weap 0 ife temp_weap 32 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y heat_seek_card 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM

                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5000 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 31
        ifg atomic_bomb 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 ATOMIC_BOMB_PICKUP 0 0 0 0 0 xdim ydim
            ife cur_weap 0 ife temp_weap 32 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y atomic_bomb 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM

                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5001 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 31
        ifg DUP_missile_ammo 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 DUP_MISSILES_PICKUP 0 0 0 0 0 xdim ydim
            ife cur_weap 0 ife temp_weap 32 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y DUP_missile_ammo 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM

                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5002 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 31
        ifg fortymm_grenades 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 5411 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 2 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_grenades 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM

                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5003 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 29
        ifg fortymm_caseless 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 6128 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 8 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_caseless 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5004 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 31
        ifg fortymm_slug 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 6129 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 8 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_slug 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5008 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }

        add gui_pos_x 30
        ifg fortymm_MIA_shells 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 5463 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 2 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_MIA_shells 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5006 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }
        set gui_pos_x 107
        add gui_pos_y 30
        ifg fortymm_plasma 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 5476 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 2 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_plasma 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5007 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }
        add gui_pos_x 29
        ifg fortymm_shells 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 FORTYMM_SHELLS 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 2 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_shells 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5005 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }
        add gui_pos_x 31
        ifg fortymm_electro 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 FORTYMM_ELECTRO 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 8 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_electro 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM

                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5009 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }
        add gui_pos_x 31
        ifg fortymm_cryo 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 FORTYMM_CRYO 0 0 0 0 0 xdim ydim
            ifand weap_special[cur_weap] 8 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y fortymm_cryo 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
                ifl gui_pos_x_temp 10
                 ifg gui_pos_x_temp -10
                    ifl gui_pos_y_temp 10
                     ifg gui_pos_y_temp -10
                        {
                        set mouse_hint 5010 // refers to quote in user.con
                        sub mouse_hint_timer 2
                        }
            }
        add gui_pos_x 29
        ifg void_bolts 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 VOID_CROSSBOW_BOLTS 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 16 ifand AMMO_TYPES[cur_weap] 16384 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y void_bolts 0 disp_temp9 0 0 0 xdim ydim
            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 5011 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }
        set gui_pos_x 107
        add gui_pos_y 30
        ifg p_blue_mana 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 BLUE_MANA_PICKUP 0 0 0 0 0 xdim ydim
            digitalnumber 2837 gui_pos_x gui_pos_y p_blue_mana 0 27 0 0 0 xdim ydim
            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 5012 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }
        add gui_pos_x 31
        ifg p_green_mana 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 GREEN_MANA_PICKUP 0 0 0 0 0 xdim ydim
            digitalnumber 2837 gui_pos_x gui_pos_y p_green_mana 0 27 0 0 0 xdim ydim
            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 5013 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }
        add gui_pos_x 31
        ifg p_orange_mana 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 ORANGE_MANA_PICKUP 0 0 0 0 0 xdim ydim
            digitalnumber 2837 gui_pos_x gui_pos_y p_orange_mana 0 27 0 0 0 xdim ydim
            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 5014 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }
        add gui_pos_x 31
        ifg p_purple_mana 0
            {
            rotatesprite gui_pos_x gui_pos_y HALFSIZE 0 PURPLE_MANA_PICKUP 0 0 0 0 0 xdim ydim
            digitalnumber 2837 gui_pos_x gui_pos_y p_purple_mana 0 27 0 0 0 xdim ydim
            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 5015 // refers to quote in user.con
                sub mouse_hint_timer 2
                }
            }
        add gui_pos_x 31
        ifg incend_ammo 0
            {
            rotatesprite gui_pos_x gui_pos_y 28000 0 INCEND_AMMO_DRUM 0 0 0 0 0 xdim ydim
            ifand GUN_AMMO_TYPES 2 set disp_temp9 32 else set disp_temp9 27
            digitalnumber 2837 gui_pos_x gui_pos_y incend_ammo 0 disp_temp9 0 0 0 xdim ydim

            state CURSOR_OVER_ITEM
            ifl gui_pos_x_temp 10
             ifg gui_pos_x_temp -10
              ifl gui_pos_y_temp 10
                ifg gui_pos_y_temp -10
                {
                set mouse_hint 1735 // refers to quote in user.con
                sub mouse_hint_timer 2
                }

            }
        }
    else
    ife MISSIONSCREEN 4 // Player status!
        {
        state agent_name_pdu
        qputs 409 Health: %ld
        qsprintf 409 409 PHEALTH
        ifg PHEALTH pmax_health set disp_temp 8 else set disp_temp 21
        gametextz STARTALPHANUM 60 40 409 0 disp_temp 0 0 0 xdim ydim 42252
        qputs 409 Max Health: %ld
        qsprintf 409 409 pmax_health
        gametextz STARTALPHANUM 60 50 409 0 27 0 0 0 xdim ydim 42252

        qputs 409 Armour: %ld
        qsprintf 409 409 PARMOUR
        gametextz STARTALPHANUM 317 40 409 0 27 0 0 0 xdim ydim 42252

        qputs 409 Spirit Armour: %ld
        qsprintf 409 409 P_SPIRIT_ARMOUR
        gametextz STARTALPHANUM 317 50 409 0 1 0 0 0 xdim ydim 42252

        qputs 409 Fire Armour: %ld
        qsprintf 409 409 P_FIRE_ARMOUR
        gametextz STARTALPHANUM 60 60 409 0 2 0 0 0 xdim ydim 42252

		ife movement_level 2 qputs 409 Movement Lvl: Superhuman
		else ife movement_level 1 qputs 409 Movement Lvl: Heroic
        else ife movement_level 0 qputs 409 Movement Lvl: Standard
        gametextz STARTALPHANUM 60 70 409 0 8 0 0 0 xdim ydim 42252

		ife player_dodge 2 qputs 409 Dodge Lvl: Air dodge
		else ife player_dodge 1 qputs 409 Dodge Lvl: Side dodge
        else ife player_dodge 0 qputs 409 Dodge Lvl: Roll
        gametextz STARTALPHANUM 317 70 409 0 2 0 0 0 xdim ydim 42252

		ife MEAL_BUFF[CHAR] 1 qputs 409 Meal Buff: +10 max HP
		else ife MEAL_BUFF[CHAR] 2 qputs 409 Meal Buff: +5% run speed
		else ife MEAL_BUFF[CHAR] 3 qputs 409 Meal Buff: +50% fire reduction
		else ife MEAL_BUFF[CHAR] 4 qputs 409 Meal Buff: +25 spirit shield
		else ife MEAL_BUFF[CHAR] 5 qputs 409 Meal Buff: +50% ice reduction
        else qputs 409 No Meal Buff :(
        gametextz STARTALPHANUM 60 80 409 0 32 0 0 0 xdim ydim 42252

        qputs 409 Supply Lvl: %ld
        qsprintf 409 409 SUPPLY_LEVEL
        gametextz STARTALPHANUM 190 90 409 0 28 0 0 0 xdim ydim 42252

        qputs 409 Budget: %ld
        qsprintf 409 409 AMC_BUDGET
        gametextz STARTALPHANUM 190 100 409 0 125 0 0 0 xdim ydim 42252

        ife cheated 1 gametextz STARTALPHANUM 190 165 8500 0 8 0 0 0 xdim ydim 42252

        qputs 2090 POLYMERS: %d
        qsprintf 2090 2090 POLYMERS
        gametextz STARTALPHANUM 190 176 2090 0 1 0 0 0 xdim ydim 42252
        }

    }
}

// EQUIPMENT AND SCUBA GEAR SCREEN DRAWING

ife camerasprite -1
{

ifn pal 1
ifn pal 2
ifn pal 4
ifn pal 7
ifn pal 8
ifn pal 17
ifn pal 19
{
getp[].palookup pal
ife CHAR 3 ife pal 0 set pal 11
}

 ife player[].over_shoulder_on 0
{

    ifg caught_in_net 0
    {

    ifg caught_in_net 32 set disp_temp 10293 else
    ifg caught_in_net 24 set disp_temp 10294 else
    ifg caught_in_net 16 set disp_temp 10295 else
    ifg caught_in_net 8 set disp_temp 10296 else
    ifg caught_in_net 0 set disp_temp 10297

    myospal 160 100 disp_temp shade 1024 pal

    ifn shotgun_struggle -1
        {
        ifand BITS_PRESS 536870912 set disp_temp CKEYCARDTILE2 else set disp_temp CKEYCARDTILE3
        rotatesprite 110 190 40960 0 disp_temp shade pal 0 0 0 xdim ydim
        ife CHAR 4 { ifand BITS_PRESS 536870912 set disp_temp 6390 else set disp_temp 6389 }
        rotatesprite 190 180 40960 1024 disp_temp shade pal 4 0 0 xdim ydim
        }
    }

    ifg phantasm_stick -1
    {
    rotatesprite 160 100 DOUBLESIZE 0 13228 shade pal 0 0 0 xdim ydim
    }

    ifg shotgun_struggle -1
    {

    set disp_temp2 155
    displayrandvar disp_temp4 10 // Add a random number to the X position
    add disp_temp2 disp_temp4
    set disp_temp3 105
    displayrandvar disp_temp4 10 // Add a random number to the Y position
    add disp_temp3 disp_temp4

    ife shotgun_struggle_num -100 rotatesprite disp_temp2 disp_temp3 80000 0 7830 shade cultist_pal 8 0 0 xdim ydim
    else ifg shotgun_struggle_num 75 rotatesprite disp_temp2 disp_temp3 80000 0 7829 shade cultist_pal 8 0 0 xdim ydim
    else rotatesprite disp_temp2 disp_temp3 80000 0 7828 shade cultist_pal 8 0 0 xdim ydim
    ifg shotgun_struggle_num 75 set disp_temp 9424 else
    ifg shotgun_struggle_num 25 set disp_temp 9423 else
    ifg shotgun_struggle_num -10 set disp_temp 9422 else
    ifg shotgun_struggle_num -25 set disp_temp 9421 else
    ifg shotgun_struggle_num -50 set disp_temp 9420
    ife shotgun_struggle_num -100
        {
        rotatespritea 160 100 QUARTERSIZE 0 16114 0 pal 0 -255 0 0 xdim ydim
        set shotgun_struggle -1
        }
    set disp_temp2 155
    displayrandvar disp_temp4 10 // Add a random number to the X position
    add disp_temp2 disp_temp4
    set disp_temp3 95
    displayrandvar disp_temp4 10 // Add a random number to the Y position
    add disp_temp3 disp_temp4

    ifl shotgun_struggle_num -10
    rotatesprite disp_temp2 190 NORMALSIZE 0 7812 shade cultist_pal 0 0 0 xdim ydim

    myospal disp_temp2 disp_temp3 disp_temp shade 0 pal

     ifg shotgun_struggle_num -10
        {
        add disp_temp3 80
        ifg shotgun_struggle_num 75 rotatesprite disp_temp2 disp_temp3 32768 1024 CHOLDING_L shade pal 4 0 0 xdim ydim
        else ifg shotgun_struggle_num 25 rotatesprite disp_temp2 disp_temp3 36864 1024 CHOLDING_L shade pal 4 0 0 xdim ydim
        else rotatesprite disp_temp2 disp_temp3 40960 1024 CHOLDING_L shade pal 4 0 0 xdim ydim
        add disp_temp2 25
        add disp_temp3 30
        ifg shotgun_struggle_num 75 nullop
        else ifg shotgun_struggle_num 25 rotatesprite disp_temp2 disp_temp3 36864 0 CHOLDING_R shade pal 0 0 0 xdim ydim
        else rotatesprite disp_temp2 disp_temp3 40960 0 CHOLDING_R shade pal 0 0 0 xdim ydim
        }

    }

ifg ninja_struggle -1
    {
    set disp_temp3 105
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    rotatesprite 160 disp_temp3 32660 0 12176 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2

    set disp_temp3 125
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    set disp_temp2 120
    displayrandvar disp_temp4 10 // Add a random number to the X position
    add disp_temp2 disp_temp4
    rotatesprite disp_temp2 disp_temp3 32660 0 12179 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2

    ife CHAR 17 // Kagura uses Yo
        {
        set disp_temp3 195
        displayrandvar disp_temp4 3 // Add a random number to the Y position
        add disp_temp3 disp_temp4
        rotatesprite disp_temp2 disp_temp3 27331 0 27331 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2 // Sword Graphic
        }
    else
        {
        set disp_temp3 195
        displayrandvar disp_temp4 3 // Add a random number to the Y position
        add disp_temp3 disp_temp4
        rotatesprite disp_temp2 disp_temp3 NORMALSIZE 0 12155 shade wep_pal 8 windowx1 windowy1 windowx2 windowy2 // Sword Graphic
        }
    }

ifg chainsaw_struggle -1
    {
    set disp_temp3 105
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    ifphealthl 40 rotatesprite 160 disp_temp3 44660 0 10819 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
    else rotatesprite 160 disp_temp3 44660 0 10818 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2

    set disp_temp5 265
    sub disp_temp5 chainsaw_struggle
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp5 disp_temp4
    rotatesprite 160 disp_temp5 44660 0 10820 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2

    set disp_temp5 265
    sub disp_temp5 chainsaw_struggle
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp5 disp_temp4
    displayrandvar rot_flash 2048
    rotatesprite 90 disp_temp5 65536 rot_flash 2244 shade 0 8 windowx1 windowy1 windowx2 windowy2
    }

ifg npc_chainsaw_struggle -1
    {
    set disp_temp3 145
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp3 disp_temp4
	sub disp_temp3 npc_chainsaw_struggle
	// liztroop
	ife npc_chainsaw_id 1 rotatesprite 160 disp_temp3 44660 0 17232 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
	// cultist
	ife npc_chainsaw_id 2 rotatesprite 160 disp_temp3 44660 0 17233 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
	// thoth
	ife npc_chainsaw_id 3 rotatesprite 160 disp_temp3 44660 0 17234 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
	// guardian
	ife npc_chainsaw_id 4 rotatesprite 160 disp_temp3 44660 0 17235 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
	// flesh wizard
	ife npc_chainsaw_id 5 rotatesprite 160 disp_temp3 44660 0 17236 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
	// infernal
	ife npc_chainsaw_id 6 rotatesprite 160 disp_temp3 44660 0 17237 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
	// paradigm
	ife npc_chainsaw_id 7 rotatesprite 160 disp_temp3 44660 0 17238 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2
	// orc
	ife npc_chainsaw_id 8 rotatesprite 160 disp_temp3 44660 0 17239 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2

    set disp_temp5 265
    sub disp_temp5 npc_chainsaw_struggle
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp5 disp_temp4
	set disp_temp6 100
	sub disp_temp6 npc_chainsaw_struggle
    rotatesprite disp_temp6 disp_temp5 44660 0 17225 shade WEP0_BLOODY 8 windowx1 windowy1 windowx2 windowy2

    set disp_temp5 205
    sub disp_temp5 npc_chainsaw_struggle
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp5 disp_temp4
    rotatesprite 90 disp_temp5 HALFSIZE 0 17226 shade WEP0_BLOODY 8 windowx1 windowy1 windowx2 windowy2
    }

ifg troll_struggle -1
    {
    set disp_temp3 105
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    rotatesprite 160 disp_temp3 44660 0 26698 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2


    set disp_temp2 30
    displayrandvar disp_temp4 10 // Add a random number to the X position
    add disp_temp2 disp_temp4
    set disp_temp3 145
    displayrandvar disp_temp4 10 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    rotatesprite disp_temp2 disp_temp3 140000 0 26699 shade cultist_pal 264 windowx1 windowy1 windowx2 windowy2

    set disp_temp2 230
    displayrandvar disp_temp4 10 // Add a random number to the X position
    add disp_temp2 disp_temp4
    set disp_temp3 205
    displayrandvar disp_temp4 10 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    rotatesprite disp_temp2 disp_temp3 140000 0 26700 shade cultist_pal 520 windowx1 windowy1 windowx2 windowy2
    }

ifg succubus_struggle -1
    {
    set disp_temp3 110
    displayrandvar disp_temp4 3 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    rotatesprite 160 disp_temp3 84660 0 18916 shade cultist_pal 8 windowx1 windowy1 windowx2 windowy2


    set disp_temp2 30
    displayrandvar disp_temp4 10 // Add a random number to the X position
    add disp_temp2 disp_temp4
    set disp_temp3 145
    displayrandvar disp_temp4 10 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    rotatesprite disp_temp2 disp_temp3 140000 0 18917 shade cultist_pal 264 windowx1 windowy1 windowx2 windowy2

    set disp_temp2 230
    displayrandvar disp_temp4 10 // Add a random number to the X position
    add disp_temp2 disp_temp4
    set disp_temp3 205
    displayrandvar disp_temp4 10 // Add a random number to the Y position
    add disp_temp3 disp_temp4
    rotatesprite disp_temp2 disp_temp3 140000 0 18918 shade cultist_pal 520 windowx1 windowy1 windowx2 windowy2
    }

    ifg CHOKE 0
    {
    set disp_temp 190
    getp[].horiz disp_temp2
    ifg disp_temp2 100 { div disp_temp2 5 add disp_temp disp_temp2 }
    rotatesprite 160 disp_temp NORMALSIZE 0 7812 shade cultist_pal 0 0 0 xdim ydim
    }

    ifg FCHOKE 0
    {
    set disp_temp 190
    getp[].horiz disp_temp2
    ifg disp_temp2 100 { div disp_temp2 5 add disp_temp disp_temp2 }
    rotatesprite 160 disp_temp NORMALSIZE 0 7812 0 27 33 0 0 xdim ydim
    }

    ife SPACE_SUIT 1
     ifn CHAR 13
      ifn CHAR 14
       ifn CHAR 12
        {
        ifl player_shade_diff -5
            {
            set weap_disp_temp3 player_shade_diff
            mulvar weap_disp_temp3 2
            sub y 35
            rotatespritea 160 100 54784 0 22782 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass
            }
        rotatesprite 160 100 NORMALSIZE 0 7864 0 0 1024 0 0 xdim ydim
        rotatespritea 160 100 NORMALSIZE 0 7865 0 0 1024 -254 0 0 xdim ydim

        set hud_disp_temp LIFE_SUPPORT
        div hud_disp_temp 60
        qsprintf 1400 1401 hud_disp_temp
        screentext 2472 30 42 NORMALSIZE 0 0 1400 0 27 256 -255 5 16 0 0 524290 0 0 xdim ydim
        rotatespritea 30 52 HALFSIZE 0 22448 0 0 256 -255 0 0 xdim ydim

        }

    ife FIRE_SUIT 1
     ifn CHAR 12
      ifn CHAR 13
       ifn CHAR 14
        {
        state water_driplets
        ifl player_shade_diff -5
            {
            set weap_disp_temp3 player_shade_diff
            mulvar weap_disp_temp3 2
            sub y 35
            rotatespritea 160 100 54784 0 22782 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass
            }
        rotatesprite 160 100 NORMALSIZE 0 22773 0 0 0 0 0 xdim ydim
        rotatespritea 160 100 NORMALSIZE 0 22774 0 121 4097 -253 0 0 xdim ydim
        }

    ife JUGGERN_SUIT 1
     ifn CHAR 12
      ifn CHAR 13
       ifn CHAR 14
        {
        state water_driplets
        ifl player_shade_diff -5
            {
            set weap_disp_temp3 player_shade_diff
            mulvar weap_disp_temp3 2
            sub y 35
            rotatespritea 160 100 54784 0 22782 player_shade_diff wall_pal 33 weap_disp_temp3 0 0 xdim ydim // Glass
            }
        rotatesprite 60 23 NNORMALSIZE 0 23957 shade pal 256 0 0 xdim ydim
        rotatesprite 260 23 NNORMALSIZE 1024 23957 shade pal 516 0 0 xdim ydim
        }

	ifg shield_reg_disp 0
		{
		ifg shield_reg_disp 20 rotatespritea 160 100 56250 0 19944 shield_reg_disp 23 0 -255 0 0 xdim ydim
		else ifg shield_reg_disp 15 rotatespritea 160 100 56250 0 19945 shield_reg_disp 23 0 -255 0 0 xdim ydim
		else ifg shield_reg_disp 10 rotatespritea 160 100 56250 0 19946 shield_reg_disp 23 0 -255 0 0 xdim ydim
		else ifg shield_reg_disp 5 rotatespritea 160 100 56250 0 19947 shield_reg_disp 23 0 -255 0 0 xdim ydim
		else rotatespritea 160 100 56250 0 19948 shield_reg_disp 23 0 -255 0 0 xdim ydim
		}
	else
	ifl shield_reg_disp 0
		{
		set disp_temp6 30
		add disp_temp6 shield_reg_disp
		ifl shield_reg_disp -20 rotatespritea 160 100 56250 0 19944 disp_temp6 23 0 -255 0 0 xdim ydim
		else ifl shield_reg_disp -15 rotatespritea 160 100 56250 0 19945 disp_temp6 23 0 -255 0 0 xdim ydim
		else ifl shield_reg_disp -10 rotatespritea 160 100 56250 0 19946 disp_temp6 23 0 -255 0 0 xdim ydim
		else ifl shield_reg_disp -5 rotatespritea 160 100 56250 0 19947 disp_temp6 23 0 -255 0 0 xdim ydim
		else rotatespritea 160 100 56250 0 19948 disp_temp6 23 0 -255 0 0 xdim ydim
		}

    ife GAS_MASK 2
    ifge ingas 26
    ifn CHAR 12
        {
        set disp_temp6 4000
        // GASK MASK ON
        ifg GAS_MASK_PUTON 10
         ifn CHAR 13
          ifn CHAR 14
            {
            mulvarvar disp_temp6 GAS_MASK_PUTON
            ifl player_shade_diff -5
                {
                set weap_disp_temp3 player_shade_diff
                mulvar weap_disp_temp3 2
                guniqhudid 60
                rotatespritea 160 100 disp_temp6 0 22782 player_shade_diff wall_pal 4129 weap_disp_temp3 0 0 xdim ydim // Glass
                }
            guniqhudid 61
            rotatesprite 160 100 disp_temp6 0 7923 shade pal 5120 0 0 xdim ydim
            guniqhudid 0
            }
        else
        ifl GAS_MASK_PUTON 8 // PUTTING IT ON
        ifg GAS_MASK_PUTON 0
            {
            set disp_temp8 1000
            mulvarvar disp_temp8 GAS_MASK_PUTON
            add disp_temp8 NORMALSIZE
            set disp_temp7 80
            sub disp_temp7 GAS_MASK_PUTON
            mulvar disp_temp7 2
            guniqhudid 60
            ife CHAR 12 rotatesprite 160 disp_temp7 disp_temp8 0 9440 shade pal 5120 0 0 xdim ydim
            else ife CHAR 13 rotatesprite 160 disp_temp7 disp_temp8 0 9440 shade pal 5120 0 0 xdim ydim
            else ife CHAR 14 rotatesprite 160 disp_temp7 disp_temp8 0 9440 shade pal 5120 0 0 xdim ydim
            else rotatesprite 160 disp_temp7 disp_temp8 0 9442 shade pal 5120 0 0 xdim ydim
            div disp_temp8 3
            mul disp_temp8 2
            guniqhudid 61
            rotatesprite 90 disp_temp7 disp_temp8 5120 CHOLDING_L shade pal 1028 0 0 xdim ydim
            guniqhudid 62
            rotatesprite 230 disp_temp7 disp_temp8 0 CHOLDING_R shade pal 5120 0 0 xdim ydim
            guniqhudid 0
            }
        else
        ifl GAS_MASK_PUTON 11
        ifg GAS_MASK_PUTON 7
            {
            guniqhudid 60
            rotatesprite 160 100 NNORMALSIZE 0 3584 30 4 5120 0 0 xdim ydim
            guniqhudid 0
            }

        getp[].fta disp_temp
            ifg disp_temp 0
                {
                getp[].ftq disp_temp2
                gametext 2822 320 7 disp_temp2 0 0 0 0 0 xdim ydim
                }
        }

    ife GAS_MASK 2
    ifg ingas 0
    ifl ingas 26
    ifn CHAR 12
        {
        set disp_temp6 4000
        // TAKING GAS MASK OFF
        ifg ingas 10
         ifn CHAR 13
          ifn CHAR 14
            {
            mulvarvar disp_temp6 ingas
            guniqhudid 60
            rotatesprite 160 100 disp_temp6 0 7923 20 pal 5153 0 0 xdim ydim
            add disp_temp6 2000
            guniqhudid 61
            rotatesprite 160 100 disp_temp6 0 7923 20 pal 5121 0 0 xdim ydim
            add disp_temp6 2000
            guniqhudid 62
            rotatesprite 160 100 disp_temp6 0 7923 20 pal 5120 0 0 xdim ydim
            guniqhudid 0
            }
        else
        ifl ingas 8
        ifg ingas 0 // take OFF gas mask
            {
            set disp_temp8 1000
            mulvarvar disp_temp8 ingas
            add disp_temp8 NORMALSIZE
            set disp_temp7 80
            sub disp_temp7 ingas
            mulvar disp_temp7 2
            guniqhudid 60
            ife CHAR 12 rotatesprite 160 disp_temp7 disp_temp8 0 9440 shade pal 5120 0 0 xdim ydim
            else ife CHAR 13 rotatesprite 160 disp_temp7 disp_temp8 0 9440 shade pal 5120 0 0 xdim ydim
            else ife CHAR 14 rotatesprite 160 disp_temp7 disp_temp8 0 9440 shade pal 5120 0 0 xdim ydim
            else rotatesprite 160 disp_temp7 disp_temp8 0 9442 shade pal 5120 0 0 xdim ydim
            div disp_temp8 3
            mul disp_temp8 2
            guniqhudid 61
            rotatesprite 90 disp_temp7 disp_temp8 1024 CHOLDING_L shade pal 5124 0 0 xdim ydim
            guniqhudid 62
            rotatesprite 230 disp_temp7 disp_temp8 0 CHOLDING_R shade pal 5120 0 0 xdim ydim
            guniqhudid 0
            }
        else
        ifl ingas 11
        ifg ingas 7
            {
            rotatesprite 160 100 NNORMALSIZE 0 3584 30 4 1024 0 0 xdim ydim
            }


        getp[].fta disp_temp
            ifg disp_temp 0
                {
                getp[].ftq disp_temp2
                gametext 2822 320 7 disp_temp2 0 0 0 0 0 xdim ydim
                }
        }

}

// can't remember if I made this code or M210 did for his old Blood Eduke mod...apologies to him if it is and I forgot
ifg fire_damage 0
{
	state drawfirehudring

	// Don't always draw the bar, it's kinda silly for it to appear and disappear if we're taking little damage
	ifg start_fire_damage 10
		state drawfirehudbar
}

ifg acid_damage 0
	state drawacidhudring

ifg emp_damage 0
{
	set disp_temp 30
	sub disp_temp emp_damage
	clamp disp_temp -127 30
	set disp_temp2 56250
	set disp_temp3 256
	mul disp_temp3 emp_damage
	sub disp_temp2 disp_temp3
	clamp disp_temp2 32768 DOUBLESIZE
	guniqhudid 71
	rotatespritea 160 100 disp_temp2 0 30160 disp_temp 0 5120 -255 0 0 xdim ydim
	guniqhudid 0
}

ifg ice_damage 0
{
	set disp_temp 30
	sub disp_temp ice_damage
	clamp disp_temp -127 30
	set disp_temp2 75000
	set disp_temp3 256
	mul disp_temp3 ice_damage
	sub disp_temp2 disp_temp3
	clamp disp_temp2 67576 DOUBLESIZE
	guniqhudid 71
	rotatespritea 160 100 disp_temp2 0 16561 disp_temp 0 5120 -255 0 0 xdim ydim
	guniqhudid 0
}

ifg kag_blush 0
{
	sub kag_blush 1
	set disp_temp 30
	sub disp_temp kag_blush
	clamp disp_temp -127 30
	set disp_temp2 75000
	set disp_temp3 580
	mul disp_temp3 kag_blush
	sub disp_temp2 disp_temp3
	clamp disp_temp2 58180 DOUBLESIZE
	guniqhudid 72
	rotatespritea 160 100 disp_temp2 0 27122 disp_temp 0 5120 -255 0 0 xdim ydim
	guniqhudid 0
}

// Do not display stamina bar if using an interface, it can crash the game for some reason
ife MOUSEUP 0
ifl p_stamina pmax_stamina // Bar code from DukePlus by DeeperThought
        {
        // Center the sprinting bar
        set digx 158
        set disp_temp5 pmax_stamina
        div disp_temp5 2
        sub digx disp_temp5

        // Store the position so we don't have to recompute it
        set disp_temp6 digx

        set disp_temp3 digx
        add disp_temp3 p_stamina

        // handles the additive shade value
        // Once the sprint bar is close to being full, it's supposed to disappear.
        // Explicitly check that p_stamina > disp_temp2 to prevent an underflow from occurring.
        set disp_temp2 pmax_stamina
        sub disp_temp2 30
        ifg p_stamina disp_temp2 {
            mulvar disp_temp2 -1
            add disp_temp2 p_stamina
        } else set disp_temp2 0

        set disp_temp 0
        whilevarn disp_temp 1
            {
            ifg digx disp_temp3 set disp_temp 1
            ife GUN_SIZE 0 set disp_temp4 1
            else ife GUN_SIZE 1 set disp_temp4 8
            else ife GUN_SIZE 2 set disp_temp4 21
            else ife GUN_SIZE 3 set disp_temp4 10
		set digy 175
		ifg stamina_shake 0
			{
			displayrandvarvar disp_temp5 stamina_shake
			ifrnd 128 inv disp_temp5
			add digx disp_temp5
			add digy disp_temp5
			}

            rotatespritea digx digy QUARTERSIZE 0 4732 disp_temp2 disp_temp4 0 -255 0 0 xdim ydim
            add digx 1
            }
        ifl p_stamina 0 set disp_temp3 27 else set disp_temp3 disp_temp4
        set digx disp_temp6
        sub digx 10
		set digy 175
		ifg stamina_shake 0
			{
			add digx disp_temp5
			add digy disp_temp5
			}
        rotatespritea digx digy HALFSIZE 0 2098 disp_temp2 disp_temp3 0 -255 0 0 xdim ydim
        }

ife CONTROL_VR -1 ife camerasprite -1 ife SLO_MO_SHOWOFF 0 ifn userdef[].overhead_on 2
	{
	ifn ALLYSLOT1 -1
		{
		set ally_slot_id ALLYSLOT1
		set ally_slot_x 20
		set ally_slot_y 40
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	ifn ALLYSLOT2 -1
		{
		set ally_slot_id ALLYSLOT2
		set ally_slot_x 47
		set ally_slot_y 55
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	ifn ALLYSLOT3 -1
		{
		set ally_slot_id ALLYSLOT3
		set ally_slot_x 20
		set ally_slot_y 70
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	ifn ALLYSLOT4 -1
		{
		set ally_slot_id ALLYSLOT4
		set ally_slot_x 47
		set ally_slot_y 85
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	ifn ALLYSLOT5 -1
		{
		set ally_slot_id ALLYSLOT5
		set ally_slot_x 20
		set ally_slot_y 100
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	ifn ALLYSLOT6 -1
		{
		set ally_slot_id ALLYSLOT6
		set ally_slot_x 47
		set ally_slot_y 115
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	ifn ALLYSLOT7 -1
		{
		set ally_slot_id ALLYSLOT7
		set ally_slot_x 20
		set ally_slot_y 130
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	ifn ALLYSLOT8 -1
		{
		set ally_slot_id ALLYSLOT8
		set ally_slot_x 47
		set ally_slot_y 145
		ife CHAR 2 add ally_slot_y 30
		ife CHAR 17 add ally_slot_y 30
		ife ally_slot_id -1 nullop else state ALLY_STATUS_STUFF
		}
	}

ife fire_mode_menu 1
	{
	ifand GUN_AMMO_TYPES 1 // standard special shells
		{
		// shadows
		gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
		ifg explosive_shells 0 gametextz 2822 11 75 701 0 4 289 0 0 xdim ydim HALFSIZE
		ifg flechete_shells 0 gametextz 2822 11 79 702 0 4 289 0 0 xdim ydim HALFSIZE
		ifn cur_weap 0 ifg cur_ammo 0 { gametextz 2822 11 83 703 0 4 289 0 0 xdim ydim HALFSIZE}
		else ifg normal_ammo 0 { gametextz 2822 11 83 703 0 4 289 0 0 xdim ydim HALFSIZE }

		// regular text
		gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
		qputs 701 1. Explosive shells: %d
		ifg explosive_shells 0 { qsprintf 701 701 explosive_shells gametextz 2822 10 74 701 0 2 256 0 0 xdim ydim HALFSIZE }
		qputs 702 2. Flechette shells: %d
		ifg flechete_shells 0 { qsprintf 702 702 flechete_shells gametextz 2822 10 78 702 0 8 256 0 0 xdim ydim HALFSIZE }

		qputs 703 3. Regular shells: %d
		set ammo_forweaponidx 2
		state ammo_getdefs
		ifn cur_weap 0 ifg cur_ammo 0 { qsprintf 703 703 ammo_normalammoremaining gametextz 2822 10 82 703 0 27 256 0 0 xdim ydim HALFSIZE }
		else ifg normal_ammo 0 { qsprintf 703 703 normal_ammo gametextz 2822 10 82 703 0 27 256 0 0 xdim ydim HALFSIZE }
		}
	ifand GUN_AMMO_TYPES 4 // advanced special shells
		{
		// shadows
		ifg magnum_shells 0 gametextz 2822 11 87 704 0 4 289 0 0 xdim ydim HALFSIZE
		ifg dragon_shells 0 gametextz 2822 11 91 705 0 4 289 0 0 xdim ydim HALFSIZE

		gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE

		// regular text
		qputs 704 4. Magnum buck shells: %d
		ifg magnum_shells 0 { qsprintf 704 704 magnum_shells gametextz 2822 11 86 704 0 7 256 0 0 xdim ydim HALFSIZE }
		qputs 705 5. Dragon's breath shells: %d
		ifg dragon_shells 0 { qsprintf 705 705 dragon_shells gametextz 2822 11 90 705 0 28 256 0 0 xdim ydim HALFSIZE }
		}

	gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
	}

ife fire_mode_menu 2
	{
	// shadows
	gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
	ifg silver_ammo 0 gametextz 2822 11 75 710 0 4 289 0 0 xdim ydim HALFSIZE
	ifg normal_ammo 0 gametextz 2822 11 79 711 0 4 289 0 0 xdim ydim HALFSIZE
	else ifn cur_weap 0 ifg cur_ammo 0 gametextz 2822 11 79 711 0 4 289 0 0 xdim ydim HALFSIZE
	ifg incend_ammo 0 gametextz 2822 11 83 712 0 4 289 0 0 xdim ydim HALFSIZE

	// regular text
	gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
	qputs 710 1. Silver bullets: %d
	ifg silver_ammo 0 { qsprintf 710 710 silver_ammo gametextz 2822 10 74 710 0 60 256 0 0 xdim ydim HALFSIZE }
	qputs 711 2. Regular bullets: %d
	ifn cur_weap 0 ifg cur_ammo 0 { qsprintf 711 711 player[].ammo_amount cur_weap gametextz 2822 10 78 711 0 0 256 0 0 xdim ydim HALFSIZE }
	else ifg normal_ammo 0 { qsprintf 711 711 normal_ammo gametextz 2822 10 78 711 0 0 256 0 0 xdim ydim HALFSIZE }

	qputs 712 3. Incendiary bullets: %d
	ifg incend_ammo 0 { qsprintf 712 712 incend_ammo gametextz 2822 10 82 712 0 50 256 0 0 xdim ydim HALFSIZE }

	gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
	}

ife fire_mode_menu 3
	{
	gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
	ifand gun_firemode 32768 gametextz 2822 11 75 721 0 4 289 0 0 xdim ydim HALFSIZE
	else gametextz 2822 11 75 720 0 4 289 0 0 xdim ydim HALFSIZE

	gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
	ifand gun_firemode 32768 gametextz 2822 10 74 721 0 27 256 0 0 xdim ydim HALFSIZE
	else gametextz 2822 10 74 720 0 27 256 0 0 xdim ydim HALFSIZE

	gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
	}

ife fire_mode_menu 4
	{
	// shadows
	gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
	ifg silver_bolts 0 gametextz 2822 11 75 730 0 4 289 0 0 xdim ydim HALFSIZE
	ifg normal_ammo 0 gametextz 2822 11 79 731 0 4 289 0 0 xdim ydim HALFSIZE
	ifg void_bolts 0 gametextz 2822 11 83 732 0 4 289 0 0 xdim ydim HALFSIZE

	// regular text
	gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
	qputs 730 1. Silver Bolts: %d
	ifg silver_bolts 0 { qsprintf 730 730 silver_bolts gametextz 2822 10 74 730 0 60 256 0 0 xdim ydim HALFSIZE }

	qputs 731 2. Normal Bolts: %d
	ifn cur_weap 0 ifg cur_ammo 0 { qsprintf 731 731 player[].ammo_amount 2 gametextz 2822 10 78 731 0 0 256 0 0 xdim ydim HALFSIZE }
	else ifg normal_ammo 0 { qsprintf 731 731 normal_ammo gametextz 2822 10 78 731 0 0 256 0 0 xdim ydim HALFSIZE }

	qputs 732 3. Void Bolts: %d
	ifg void_bolts 0 { qsprintf 732 732 void_bolts gametextz 2822 10 82 732 0 30 256 0 0 xdim ydim HALFSIZE }

	gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
	}

ife fire_mode_menu 5
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 740 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 741 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 740 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 741 0 0 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 6
{
// shadows
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 745 0 4 289 0 0 xdim ydim HALFSIZE
ifg DUP_missile_ammo 0 gametextz 2822 11 79 746 0 4 289 0 0 xdim ydim HALFSIZE

// regular text
gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 745 0 27 256 0 0 xdim ydim HALFSIZE

qputs 746 2. DUP-head Missiles: %d
ifg DUP_missile_ammo 0 { qsprintf 746 746 DUP_missile_ammo gametextz 2822 10 78 746 0 8 256 0 0 xdim ydim HALFSIZE }

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 7
{
	gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
	ifg fortymm_grenades 0 gametextz 2822 11 75 760 0 4 289 0 0 xdim ydim HALFSIZE
	ifg fortymm_shells 0 gametextz 2822 11 79 761 0 4 289 0 0 xdim ydim HALFSIZE
	ifg fortymm_MIA_shells 0 gametextz 2822 11 83 762 0 4 289 0 0 xdim ydim HALFSIZE
	ifg fortymm_plasma 0 gametextz 2822 11 87 763 0 4 289 0 0 xdim ydim HALFSIZE

	gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
	ifg fortymm_grenades 0 gametextz 2822 10 74 760 0 0 256 0 0 xdim ydim HALFSIZE
	ifg fortymm_shells 0 gametextz 2822 10 78 761 0 2 256 0 0 xdim ydim HALFSIZE
	ifg fortymm_MIA_shells 0 gametextz 2822 10 82 762 0 7 256 0 0 xdim ydim HALFSIZE
	ifg fortymm_plasma 0 gametextz 2822 10 86 763 0 8 256 0 0 xdim ydim HALFSIZE

	gametextz 2822 11 107 769 0 4 289 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 106 769 0 0 256 0 0 xdim ydim HALFSIZE
	gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
	gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife fire_mode_menu 8
{
gametextz 2822 11 71 700 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_caseless 0 gametextz 2822 11 75 760 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_slug 0 gametextz 2822 11 79 771 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_electro 0 gametextz 2822 11 83 772 0 4 289 0 0 xdim ydim HALFSIZE
ifg fortymm_cryo 0 gametextz 2822 11 87 773 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 700 0 27 256 0 0 xdim ydim HALFSIZE
ifg fortymm_caseless 0 gametextz 2822 10 74 760 0 0 256 0 0 xdim ydim HALFSIZE
ifg fortymm_slug 0 gametextz 2822 10 78 771 0 2 256 0 0 xdim ydim HALFSIZE
ifg fortymm_electro 0 gametextz 2822 10 82 772 0 1 256 0 0 xdim ydim HALFSIZE
ifg fortymm_cryo 0 gametextz 2822 10 86 773 0 7 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 107 769 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 769 0 0 256 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}

ife voice_comm_menu 9
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 590 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 591 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT1 -1 gametextz 2822 11 83 592 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT2 -1 gametextz 2822 11 87 593 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT3 -1 gametextz 2822 11 91 594 0 4 289 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT4 -1 gametextz 2822 11 95 589 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 590 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 591 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT1 -1 gametextz 2822 10 82 592 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT2 -1 gametextz 2822 10 86 593 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT3 -1 gametextz 2822 10 90 594 0 27 256 0 0 xdim ydim HALFSIZE
ifn ALLYSLOT4 -1 gametextz 2822 10 94 589 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 1
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 601 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 602 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 603 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 604 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 91 605 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 95 606 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 99 607 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 103 608 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 107 609 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 601 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 602 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 603 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 604 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 90 605 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 94 606 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 98 607 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 102 608 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 609 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 2
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 611 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 612 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 613 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 614 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 91 615 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 95 616 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 99 617 0 4 289 10 0 xdim ydim HALFSIZE
gametextz 2822 11 103 618 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 107 619 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE


gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 611 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 612 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 613 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 614 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 90 615 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 94 616 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 98 617 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 102 618 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 619 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 3
{
gametextz 2822 11 71 600 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 621 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 622 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 623 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 624 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 91 625 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 95 626 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 99 627 0 4 289 10 0 xdim ydim HALFSIZE
gametextz 2822 11 103 628 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 107 629 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE


gametextz 2822 10 70 600 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 621 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 622 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 623 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 624 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 90 625 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 94 626 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 98 627 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 102 628 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 106 629 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 5 // Ally 1 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 6 // Ally 2 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 7 // Ally 3 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
else
ife voice_comm_menu 8 // Ally 4 menu
{
gametextz 2822 11 71 599 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 75 595 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 79 596 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 83 597 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 11 87 598 0 4 289 0 0 xdim ydim HALFSIZE

gametextz 2822 10 70 599 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 74 595 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 78 596 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 82 597 0 27 256 0 0 xdim ydim HALFSIZE
gametextz 2822 10 86 598 0 27 256 0 0 xdim ydim HALFSIZE

gametextz 2822 11 111 610 0 4 289 0 0 xdim ydim HALFSIZE
gametextz 2822 10 110 610 0 27 256 0 0 xdim ydim HALFSIZE
}
}

ifn CONTROL_VR -1
    {
    add vr_bar_right 1
    ifg vr_bar_right 169 set vr_bar_right 42
    rotatesprite 280 vr_bar_right 57344 0 12417 0 0 520 0 0 xdim ydim

    sub vr_bar_left 1
    ifl vr_bar_left 42 set vr_bar_left 169
    rotatesprite 40 vr_bar_left 57344 1024 12417 0 0 268 0 0 xdim ydim

    rotatesprite 160 6 49152 0 12513 0 0 8 0 0 xdim ydim
    rotatesprite 160 189 49152 0 12529 0 0 8 0 0 xdim ydim

    digitalnumberz DIGITALNUM 137 192 VR_ACTION_POINTS 0 125 0 0 0 xdim ydim 55536

    getp[].fta disp_temp // Gets any quotes that are being displayed
        ifg disp_temp 0
            {
            getp[].ftq disp_temp2
            gametext 2822 320 53 disp_temp2 0 0 0 0 0 xdim ydim
            }

    }

ifn rendmode 0
 ifn opt_photosensitivity_mode 1
  ife camerasprite -1
	state custom_fade


ife camerasprite -1
ife CONTROL_VR -1
ife DOCUMENT -1
ife player[].newowner -1
ife PCINTER 0
ife CHARSELECT 0
ife MISSION_UP 0
state player_huds

 ife player_using_train 0
  ife MISSION_UP 0
    {
    ife hc_gear -1 rotatespritea 160 140 QUARTERSIZE 0 22744 0 27 0 -255 0 0 xdim ydim
    ife hc_gear 0 rotatespritea 160 140 QUARTERSIZE 0 22744 0 0 0 -255 0 0 xdim ydim
    ife hc_gear 1 rotatespritea 160 140 QUARTERSIZE 0 22745 0 0 0 -255 0 0 xdim ydim
    ife hc_gear 2 rotatespritea 160 140 QUARTERSIZE 0 22746 0 0 0 -255 0 0 xdim ydim
    ife hc_gear 3 rotatespritea 160 140 QUARTERSIZE 0 22747 0 0 0 -255 0 0 xdim ydim
    ife hc_gear 4 rotatespritea 160 140 QUARTERSIZE 0 22748 0 0 0 -255 0 0 xdim ydim
    ife hc_gear 5 rotatespritea 160 140 QUARTERSIZE 0 22749 0 0 0 -255 0 0 xdim ydim
    }

    ifn HACKING_PROGRESS -1
    {
    set disp_temp HACKING_PROGRESS
    ifl disp_temp 13 set disp_temp3 10675 else
    ifl disp_temp 26 set disp_temp3 10676 else
    ifl disp_temp 39 set disp_temp3 10677 else
    ifl disp_temp 52 set disp_temp3 10678 else
    ifl disp_temp 65 set disp_temp3 10679 else
    ifl disp_temp 78 set disp_temp3 10680 else
    ifl disp_temp 91 set disp_temp3 10681 else
    ifl disp_temp 104 set disp_temp3 10682 else
    ifl disp_temp 117 set disp_temp3 10683 else
    ifl disp_temp 130 set disp_temp3 10684 else
    set disp_temp3 10675
    rotatesprite 160 60 HALFSIZE 0 disp_temp3 0 0 0 0 0 xdim ydim

    }

    ife camerasprite -1
    {
    ifn SHIP_INTEGRITY -1
        {
        set disp_temp SHIP_INTEGRITY
        div disp_temp 10
        ife disp_temp 100 set disp_temp3 10675 else
        ifg disp_temp 90 set disp_temp3 10676 else
        ifg disp_temp 80 set disp_temp3 10677 else
        ifg disp_temp 70 set disp_temp3 10678 else
        ifg disp_temp 60 set disp_temp3 10679 else
        ifg disp_temp 50 set disp_temp3 10680 else
        ifg disp_temp 40 set disp_temp3 10681 else
        ifg disp_temp 30 set disp_temp3 10682 else
        ifg disp_temp 20 set disp_temp3 10683 else
        ifg disp_temp 10 set disp_temp3 10684 else
        set disp_temp3 10685
        rotatesprite 160 15 HALFSIZE 0 disp_temp3 0 0 0 0 0 xdim ydim
        rotatesprite 160 15 HALFSIZE 0 16623 0 0 0 0 0 xdim ydim
        }

    ifn HUGE_BOSS_HEALTH -1
        {
        set disp_temp HUGE_BOSS_HEALTH
        div disp_temp 10


        rotatesprite 160 35 16384 0 11184 0 0 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 37 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
        rotatesprite 160 35 16384 0 11185 0 0 0 0 0 xdim ydim

        }
    }

    ifn REACTOR_VAR -1
    {
    set disp_temp REACTOR_VAR
    div disp_temp 10
    ife disp_temp 100 set disp_temp3 10675 else
    ifg disp_temp 90 set disp_temp3 10676 else
    ifg disp_temp 80 set disp_temp3 10677 else
    ifg disp_temp 70 set disp_temp3 10678 else
    ifg disp_temp 60 set disp_temp3 10679 else
    ifg disp_temp 50 set disp_temp3 10680 else
    ifg disp_temp 40 set disp_temp3 10681 else
    ifg disp_temp 30 set disp_temp3 10682 else
    ifg disp_temp 20 set disp_temp3 10683 else
    ifg disp_temp 10 set disp_temp3 10684 else
    set disp_temp3 10685
    rotatesprite 160 20 HALFSIZE 0 disp_temp3 0 0 0 0 0 xdim ydim
    rotatesprite 160 10 HALFSIZE 0 10674 0 0 0 0 0 xdim ydim
    ifg REACTOR_BREACH 0 rotatesprite 160 30 HALFSIZE 0 10686 0 0 0 0 0 xdim ydim
    }


    ifg opt_boss_healthbar_toggle 0
     ifn CURBOSS -1
      ife camerasprite -1
    {
    geta[CURBOSS].extra disp_temp
    ifl disp_temp 1 set CURBOSS -1

    // If boss active, check if it is a new boss -- if so, store old boss and replace
    ifn CURBOSS -1
    {
        ifn BOSS_STACK[BOSS_IDX] CURBOSS ifl BOSS_IDX 15 {
            add BOSS_IDX 1
            setarray BOSS_STACK[BOSS_IDX] CURBOSS
        }
        geta[CURBOSS].picnum disp_temp2
    }
    else // boss dead --> retrieve old boss if exists
    {
        ifg BOSS_IDX 0
        {
            set CURBOSS BOSS_STACK[BOSS_IDX]
            sub BOSS_IDX 1
        }
    }
    // set boss type inside switch in future
    switch disp_temp2
    case BRUISER
        div disp_temp 21
        set BOSS_TYPE 2
        qputs 1666 Balgaar
        break
    case MISTERH
        div disp_temp 41
        set BOSS_TYPE 5
        ife sprite[CURBOSS].pal 41 qputs 1666 Abomination
        else qputs 1666 Mr Hyde
        break
    case BATTLELORD
        div disp_temp 46
        set BOSS_TYPE 1
        ife sprite[CURBOSS].pal 21 qputs 1666 Battlelord
		else qputs 1666 Battlebaron
        break
    case BOSS2
        div disp_temp 46
        set BOSS_TYPE 1
        qputs 1666 Cycloid Emperor
        break
    case BOSS3
        div disp_temp 46
        set BOSS_TYPE 1
        qputs 1666 Cycloid Overlord
        break
    case BOSS4
        div disp_temp 61
        set BOSS_TYPE 1
        qputs 1666 Alien Queen
        break
    case TROLL
        div disp_temp 31
        set BOSS_TYPE 3
        qputs 1666 Troll
        break
    case HYDRA
        div disp_temp 21
        set BOSS_TYPE 3
        qputs 1666 Hydra
        break
	case CONSERVATOR
		div disp_temp 41
        set BOSS_TYPE 4
        qputs 1666 Conservator
        break
    case DRAGON_FLIGHT
	case DRAGON
		ifn CURBOSS -1
		{
			getav[CURBOSS].XVELSAVED temp
			ife temp 0
				div disp_temp 95
			else
			ife temp 1
				div disp_temp 46
			else
				div disp_temp 31
			set BOSS_TYPE 3

			ife temp 0
				qputs 1666 Dragon
			else
			{
				getav[CURBOSS].PALSAVED temp2

				// TODO temp names for dragon bros in skycaves
				ife temp2 43
					qputs 1666 Naaslaarum
				else ife temp2 35
					qputs 1666 Voslaarum
				else
					qputs 1666 Dragon
			}
		}
        break
    case SVEDR
        ife svedr_boss_stage 2 div disp_temp 61
        else div disp_temp 31
        set BOSS_TYPE 3
        qputs 1666 Svedr
        break
    case SUCCUBUS
        div disp_temp 31
        set BOSS_TYPE 8
        qputs 1666 Succubus
        break
	case KRAKEN
        div disp_temp 15
        set BOSS_TYPE 3
        qputs 1666 Kraken
        break
	case JEDRIK
		ife sprite[CURBOSS].pal 121 // Islands boss
			{
			div disp_temp 51
			set BOSS_TYPE 3
			qputs 1666 Shade of Jedrik's Lament
			}
		else
			{
			div disp_temp 81
			set BOSS_TYPE 3
			qputs 1666 Jedrik Demonhorn
			}
        break
	case MAARTEN
		getav[CURBOSS].PALSAVED PALSAVED
		ife PALSAVED 3
			div disp_temp 32
		else
			div disp_temp 54
        set BOSS_TYPE 3
        qputs 1666 Maarten
        break
	case NAALDIR
		div disp_temp 81
        set BOSS_TYPE 5
        qputs 1666 Naaldir's Body
        break
	case NMIND
		div disp_temp 81
        set BOSS_TYPE 5
        qputs 1666 Naaldir's Mind
        break
	case NSOUL
		div disp_temp 31
        set BOSS_TYPE 5
        qputs 1666 Naaldir's Soul
        break
    case VEGUNTH
        div disp_temp 51
        set BOSS_TYPE 3
        qputs 1666 Vegunth
        break
    case LAVA_BEAST
        div disp_temp 41
        set BOSS_TYPE 7
        qputs 1666 Fire Serpent
        break
    case ALUDRAN
        div disp_temp 31
        set BOSS_TYPE 7
        qputs 1666 Aludran Highlander
        break
    case LIZBOSS
        div disp_temp 61
        set BOSS_TYPE 1
        qputs 1666 X-42 Cyber Enforcer
        break
    case PIGBOSS
        div disp_temp 46
        set BOSS_TYPE 1
        qputs 1666 Pigcop Chieftain
        break
    case BOSS5
        div disp_temp 91
        set BOSS_TYPE 1
        qputs 1666 Cycloid High Emperor
        break
    case HPOWERSUIT
			div disp_temp 51
			set BOSS_TYPE 4
			qputs 1666 Heavy Powersuit
        break
    case PATCOS
        div disp_temp 51
        set BOSS_TYPE 4
        qputs 1666 PATCOS
        break
    case VILMOS_ROBOT
        ife sprite[CURBOSS].pal 21
            {
            div disp_temp 51
            set BOSS_TYPE 6
            qputs 1666 Zilla. Inc Powersuit
            }
        else
        ife sprite[CURBOSS].pal 9
            {
            div disp_temp 51
            set BOSS_TYPE 6
            qputs 1666 Zilla. Inc Powersuit
            }
        else
            {
            div disp_temp 91
            set BOSS_TYPE 4
            qputs 1666 Heavy Mech
            }
        break
    case TRENTON_SOLARI
        div disp_temp 101
        set BOSS_TYPE 8
        qputs 1666 Trenton Solari
		break
    case ABYSS_DESPOT
        ife sprite[CURBOSS].pal 3
        {
        div disp_temp 61
        set BOSS_TYPE 2
        qputs 1666 Abyssal Overseer
        }
        else
        {
        div disp_temp 121
        set BOSS_TYPE 2
        qputs 1666 Abyssal Despot
        }
        break
    case SCARAB_DEMON
        div disp_temp 81
        set BOSS_TYPE 7
        qputs 1666 Scarab Demon
        break
    case CYBERDEMON
        div disp_temp 61
        set BOSS_TYPE 2
        qputs 1666 Cyberdemon
        break
    case 5460 // Zaxtor Boss ?
        div disp_temp 6
        set BOSS_TYPE 0
        qputs 1666
        break
    case 10752 // E1 Boss (name intentionally left blank)
        div disp_temp 151
        set BOSS_TYPE 2
        qputs 1666
        break
    case DARKAVATAR
		div disp_temp 81
		set BOSS_TYPE 5
		qputs 1666 Dark Avatar
        break
    case SERPENT_GOD
		div disp_temp 81
		set BOSS_TYPE 6
		qputs 1666 Serpent God
        break
    case MADRAX
        div disp_temp 51
        set BOSS_TYPE 0
        qputs 1666 Madrax
        break
    case 21341 // Zaxtor Boss Eyes?
        div disp_temp 81
        set BOSS_TYPE 2
        qputs 1666
        break
    case LESANG
        ife actorvar[CURBOSS].actor_pal 3 div disp_temp 121 // 12000 HP
        else div disp_temp 81 // 8000 HP
        set BOSS_TYPE 7
        qputs 1666 Le Sang
        break
    case SCORPIONESS
        ife sprite[CURBOSS].pal 42 div disp_temp 26
        else div disp_temp 11
        set BOSS_TYPE 7
        qputs 1666 Scorpion Queen
        break
    case SHAMBLER
        div disp_temp 31
        set BOSS_TYPE 5
        qputs 1666 Dimensional Shambler
        break
    case HYDRADIRECTOR
        // hydra_boss_stage is a global variable currently
        ife hydra_boss_stage 1
        {
            div disp_temp 21
            set BOSS_TYPE 3
            qputs 1666 Sea Serpent
        }
        else
        {
            div disp_temp 161
            set BOSS_TYPE 3
            qputs 1666 Hydra
        }
        break
    case MONGUR
        div disp_temp 61
        set BOSS_TYPE 3
        qputs 1666 Mongur
        break
    default
        set BOSS_TYPE -1
        qputs 1666
        break
    endswitch

    // 0 - disabled, 1 - basic, 2 - basic with name,  3 - fancy no name, 4 - fancy with name
    switch opt_boss_healthbar_toggle
        case 1
            qputs 1666
        case 2
            set BOSS_TYPE 0
            break
        case 3
            qputs 1666
            break
    endswitch

    // revise (not using switch statement because of break in while loop...)
    ife BOSS_TYPE 0
    {
        rotatesprite 158 25 40958 0 3648 0 0 0 0 0 xdim ydim
        set digx 110
        // sub digx disp_temp

        set disp_temp3 digx

        add disp_temp3 disp_temp
        set disp_temp 0
        whilevarn disp_temp 1
            {
			ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
            ife disp_temp2 VILMOS_ROBOT set disp_temp4 12
            else ife disp_temp2 HPOWERSUIT set disp_temp4 12
            else ife disp_temp2 DARKAVATAR set disp_temp4 0
            else set disp_temp4 21
                  ifg digx disp_temp3 set disp_temp 1
                  rotatespritea digx 25 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                  add digx 1
            }
        rotatesprite 158 25 40958 0 3646 0 0 0 0 0 xdim ydim
            gametextz STARTALPHANUM 320 39 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 1 // Cycloid
        {
        rotatesprite 158 25 16384 0 11186 0 0 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 27 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
        rotatesprite 158 25 16384 0 11187 0 0 0 0 0 xdim ydim
            gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 2 // Demonic
        {
        rotatesprite 158 22 16384 0 11184 0 0 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 25 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
        rotatesprite 158 22 16384 0 11185 0 0 0 0 0 xdim ydim
            gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 3 // Medievil
        {
        rotatesprite 158 25 16384 0 11188 0 0 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 25 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
        rotatesprite 158 25 16384 0 11189 0 0 0 0 0 xdim ydim
            gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 4 // Robotic/Mech
        {
        rotatesprite 158 15 16384 0 11192 0 0 8 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 17 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
        rotatesprite 158 15 16384 0 11197 0 0 8 0 0 xdim ydim
            gametextz STARTALPHANUM 320 32 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 5 // Paranormal
        {
        rotatesprite 158 25 16384 0 11193 0 49 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 26 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
            gametextz STARTALPHANUM 320 38 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 6 // Japanese/Shadow Realm
        {
        rotatesprite 158 25 18384 0 11194 0 0 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 26 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
            gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 7 // Egypt
        {
        rotatesprite 158 25 16384 0 11190 0 0 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 27 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
        rotatesprite 158 28 9192 0 11191 0 0 0 0 0 xdim ydim
            gametextz STARTALPHANUM 320 41 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    else ife BOSS_TYPE 8 // Vampire
        {
        rotatesprite 158 25 16384 0 11195 0 0 0 0 0 xdim ydim
            set digx 110
            // sub digx disp_temp

            set disp_temp3 digx

            add disp_temp3 disp_temp
            set disp_temp 0
            whilevarn disp_temp 1
                {
				ifg sprite[CURBOSS].htextra 0 set disp_temp4 32 else
                set disp_temp4 21
                      ifg digx disp_temp3 set disp_temp 1
                      rotatespritea digx 24 QUARTERSIZE 0 3647 0 disp_temp4 0 -255 0 0 xdim ydim
                      add digx 1
                }
        rotatesprite 158 24 16384 0 11196 0 0 0 0 0 xdim ydim
            gametextz STARTALPHANUM 320 40 1666 0 24 0 0 0 xdim ydim HALFSIZE
        }

    }


ifg PBEENHIT 0
    {
    sub PBEENHIT 1
    set disp_temp3 0
    whilevarn disp_temp3 16
        {
        ifg AR_PBEENHIT[disp_temp3] 0
            {
            set disp_temp4 AR_PBEENHIT[disp_temp3]
            sub disp_temp4 1
            setarray AR_PBEENHIT[disp_temp3] disp_temp4
            ifl AR_PBEENHIT[disp_temp3] 6
                {
                set disp_temp AR_PBEENHIT[disp_temp3]
                set disp_temp2 10
                sub disp_temp2 disp_temp
                mulvar disp_temp2 2
                }
                else set disp_temp2 0
            rotatespritea 160 100 QUARTERSIZE AR_PHITANGLE[disp_temp3] 3612 disp_temp2 0 1 -255 0 0 xdim ydim
            }
        add disp_temp3 1
        }
    }

ifl PBEENHIT 0
    {
    add PBEENHIT 1
    set disp_temp3 0
    whilevarn disp_temp3 16
        {
        ifl AR_PBEENHIT[disp_temp3] 0
            {
            set disp_temp4 AR_PBEENHIT[disp_temp3]
            add disp_temp4 1
            setarray AR_PBEENHIT[disp_temp3] disp_temp4
            ifg AR_PBEENHIT[disp_temp3] -6
                {
                set disp_temp AR_PBEENHIT[disp_temp3]
                mulvar disp_temp -1
                set disp_temp2 10
                sub disp_temp2 disp_temp
                mulvar disp_temp2 2
                }
                else set disp_temp2 0
            ifg P_ENERGYSHIELD 0 rotatespritea 160 100 QUARTERSIZE AR_PHITANGLE[disp_temp3] 3612 disp_temp2 32 1 -255 0 0 xdim ydim
            else rotatespritea 160 100 QUARTERSIZE AR_PHITANGLE[disp_temp3] 3612 disp_temp2 27 1 -255 0 0 xdim ydim
            }
        add disp_temp3 1
        }
    }

ife camerasprite -1
ife MISSION_UP 0
{
    ifl player_swap 26
    {
    ifg player_swap 16 set disp_temp 33 else
    ifg player_swap 10 set disp_temp 1 else
    set disp_temp 0
    getkeyname 406 6 2
    ifl player_swap 22
        {
        set disp_temp2 1500
        mul disp_temp2 disp_pulse
        add disp_temp2 6000
        rotatespritea 130 160 20000 0 WEAPON_TILE[0] player_swap 0 disp_temp -255 0 0 xdim ydim
        rotatespritea 160 160 disp_temp2 512 3675 player_swap 0 disp_temp -255 0 0 xdim ydim
        rotatespritea 190 160 20000 0 swap_tile player_swap 0 disp_temp -255 0 0 xdim ydim
        gametextz STARTALPHANUM 320 165 406 player_swap 2 0 0 0 xdim ydim HALFSIZE
        }
    }

    ifl player_use 26
    ife door_locked 26
    {
    ifg player_use 16 set disp_temp 33 else
    ifg player_use 10 set disp_temp 1 else
    set disp_temp 0
    getkeyname 406 6 2
    ifl player_use 22
        {
		ife opt_prompt_position 0
			{
			ifl player_use 0 rotatespritea 170 110 12288 0 2095 player_use 0 disp_temp -255 0 0 xdim ydim
			else rotatespritea 170 110 12288 0 2096 player_use 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 340 115 406 player_use 2 0 0 0 xdim ydim HALFSIZE
			}
		else
			{
			ifl player_use 0 rotatespritea 160 160 QUARTERSIZE 0 2095 player_use 0 disp_temp -255 0 0 xdim ydim
			else rotatespritea 160 160 QUARTERSIZE 0 2096 player_use 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 player_use 2 0 0 0 xdim ydim HALFSIZE
			}
        }
    }

    ifl player_unlock 26
    {
    ifg player_unlock 16 set disp_temp 33 else
    ifg player_unlock 10 set disp_temp 1 else
    set disp_temp 0
    getkeyname 406 6 2
    ifl player_unlock 22
        {
		ife opt_prompt_position 0
			{
			rotatespritea 170 110 12288 0 3638 player_unlock 2 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 340 115 406 player_unlock 2 0 0 0 xdim ydim HALFSIZE
			}
		else
			{
			rotatespritea 160 160 15000 0 3638 player_unlock 2 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 player_unlock 2 0 0 0 xdim ydim HALFSIZE
			}
		}
    }

    ifl player_door 26
    ife door_locked 26
    {
    ifg player_door 16 set disp_temp 33 else
    ifg player_door 10 set disp_temp 1 else
    set disp_temp 0
    getkeyname 406 6 2
    ifl player_door 22
        {
		ife opt_prompt_position 0
			{
			ifl player_door 0 rotatespritea 170 110 12288 0 2101 player_door 0 disp_temp -255 0 0 xdim ydim
			else rotatespritea 170 110 12288 0 2100 player_door 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 340 115 406 player_door 2 0 0 0 xdim ydim HALFSIZE
			}
		else
			{
			ifl player_door 0 rotatespritea 160 160 20000 0 2101 player_door 0 disp_temp -255 0 0 xdim ydim
			else rotatespritea 160 160 20000 0 2100 player_door 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 player_door 2 0 0 0 xdim ydim HALFSIZE
			}
        }
    }

    ifl player_ship 26
    {
    ifg player_ship 16 set disp_temp 33 else
    ifg player_ship 10 set disp_temp 1 else
    set disp_temp 0
    getkeyname 406 6 2
    ifl player_ship 22
        {
		ife opt_prompt_position 0
			{
			rotatespritea 170 110 10000 0 3796 player_ship 2 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 340 115 406 player_ship 2 0 0 0 xdim ydim HALFSIZE
			}
		else
			{
			rotatespritea 160 160 15000 0 3796 player_ship 2 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 player_ship 2 0 0 0 xdim ydim HALFSIZE
			}
        }
    }

    ifl player_bipod 26
    {
    ifg player_bipod 16 set disp_temp 33 else
    ifg player_bipod 10 set disp_temp 1 else
    set disp_temp 0
    ifl player_bipod 22
        {
		ife opt_prompt_position 0
			{
			rotatespritea 170 110 15000 0 6097 player_bipod 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 340 115 277 player_bipod 2 0 0 0 xdim ydim HALFSIZE
			}
		else
			{
			rotatespritea 160 160 20000 0 6097 player_bipod 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 277 player_bipod 2 0 0 0 xdim ydim HALFSIZE
			}
        }
    }

    ifl door_locked 26
    {
    ifg door_locked 16 set disp_temp 33 else
    ifg door_locked 10 set disp_temp 1 else
    set disp_temp 0
    set disp_temp2 1300
    mulvarvar disp_temp2 door_locked
    ifl door_locked 22
        {
		ife opt_prompt_position 0
			{
			rotatespritea 170 110 disp_temp2 0 3794 door_locked 0 disp_temp -255 0 0 xdim ydim
			ife key_icon ROPE_PICKUP rotatesprite 170 110 10000 0 ROPE_PICKUP 0 key_pal 1 0 0 xdim ydim
			else rotatesprite 170 110 24000 0 key_icon 0 key_pal 0 0 0 xdim ydim
			}
		else
			{
			rotatespritea 160 160 disp_temp2 0 3794 door_locked 0 disp_temp -255 0 0 xdim ydim
			ife key_icon ROPE_PICKUP rotatesprite 160 160 14000 0 ROPE_PICKUP 0 key_pal 1 0 0 xdim ydim
			else rotatesprite 160 160 24000 0 key_icon 0 key_pal 0 0 0 xdim ydim
			}
        }
    }

    ifl player_ninja 26
    {
    ifg player_ninja 16 set disp_temp 33 else
    ifg player_ninja 10 set disp_temp 1 else
    set disp_temp 0
    getkeyname 406 10 2
    ifl player_ninja 22
        {
		ife opt_prompt_position 0
			{
			rotatespritea 170 110 8096 0 17401 player_ninja 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 340 115 406 player_ninja 2 0 0 0 xdim ydim HALFSIZE
			}
		else
			{
			rotatespritea 160 160 8096 0 17401 player_ninja 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 406 player_ninja 2 0 0 0 xdim ydim HALFSIZE
			}
        }
    }

    ifl player_fire 26
    {
    ifg player_fire 16 set disp_temp 33 else
    ifg player_fire 10 set disp_temp 1 else
    set disp_temp 0

    ifl player_fire 22
        {
		ife opt_prompt_position 0
			{
			rotatespritea 170 110 12288 0 2099 player_fire 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 340 115 234 player_fire 2 0 0 0 xdim ydim HALFSIZE
			}
		else
			{
			rotatespritea 160 160 QUARTERSIZE 0 2099 player_fire 0 disp_temp -255 0 0 xdim ydim
			gametextz STARTALPHANUM 320 165 234 player_fire 2 0 0 0 xdim ydim HALFSIZE
			}
        }
    }

    ife camerasprite -1
    {
    ifg COMM_COUNTD 130
        {
        set disp_temp2 1000
        mul disp_temp2 disp_pulse
        add disp_temp2 12000
        getkeyname 406 42 2
            rotatespritea 160 160 disp_temp2 0 2097 disp_pulse 0 0 -255 0 0 xdim ydim
            gametextz STARTALPHANUM 320 165 406 0 2 0 0 0 xdim ydim HALFSIZE
        }
    ifl COMM_COUNTD -130
        {
        set disp_temp2 1000
        mul disp_temp2 disp_pulse
        add disp_temp2 12000
        getkeyname 406 42 2
            rotatespritea 160 160 disp_temp2 0 2102 disp_pulse 0 0 -255 0 0 xdim ydim
            gametextz STARTALPHANUM 320 165 406 0 2 0 0 0 xdim ydim HALFSIZE
        }

    ifg mission_update 0
        {
        set disp_temp2 1000
        mul disp_temp2 disp_pulse
        add disp_temp2 HALFSIZE
            getkeyname 406 42 2
            rotatespritea 160 160 disp_temp2 0 7833 disp_pulse 0 0 -255 0 0 xdim ydim
            gametextz STARTALPHANUM 320 165 406 0 2 0 0 0 xdim ydim HALFSIZE
        }
    ifl mission_update 0
        {
        set disp_temp2 800
        mul disp_temp2 disp_pulse
        add disp_temp2 16384
            getkeyname 406 42 2
            rotatespritea 160 160 disp_temp2 0 7831 disp_pulse 0 0 -255 0 0 xdim ydim
            gametextz STARTALPHANUM 320 165 406 0 2 0 0 0 xdim ydim HALFSIZE
        }
    }
}

ifg hit_key 0
    {
    sub hit_key 1
    set disp_temp2 200
    mul disp_temp2 hit_key
    rotatespritea 160 160 disp_temp2 0 3605 0 2 0 -255 0 0 xdim ydim
    }

ifg SLO_MO_SHOWOFF 2
{
    set hud_disp 0
    ife FISSION_MAILED 1
        {
        rotatesprite 160 100 NNORMALSIZE 0 3542 0 0 1024 0 0 xdim ydim
        myospal 160 100 3031 0 0 0
        }
    else
        rotatesprite 160 100 NNORMALSIZE 0 3542 0 0 1024 0 0 xdim ydim
}
else
ifg SLO_MO_SHOWOFF 0 ife char_sel_anim 0 set hud_disp 1


// **********************************************************************************
// ITEM BOX CONTAINER
// **********************************************************************************

ifn CHECKBOX -1
{
rotatesprite 160 100 49152 0 3309 0 0 0 0 0 xdim ydim

ifg MOUSEX 232
 ifl MOUSEX 243
  ifg MOUSEY 28
   ifl MOUSEY 41
    {
    rotatesprite 239 36 49152 0 3293 0 0 0 0 0 xdim ydim
    }

ifn CHECKBOX -1
    {
    getav[CHECKBOX].CBOXSLOT1 CBOXSLOT1
    getav[CHECKBOX].CBOXSLOT1PAL CBOXSLOT1PAL
    getav[CHECKBOX].CBOXSLOT2 CBOXSLOT2
    getav[CHECKBOX].CBOXSLOT3 CBOXSLOT3
    getav[CHECKBOX].CBOXSLOT4 CBOXSLOT4
    getav[CHECKBOX].CBOXSLOT5 CBOXSLOT5
    getav[CHECKBOX].CBOXSLOT6 CBOXSLOT6
    set disp_temp CBOXSLOT1
    }

ife CBOXSLOT1 -1 rotatesprite 175 62 HALFSIZE 0 0 0 4 1 0 0 xdim ydim
ife CBOXSLOT2 -1 rotatesprite 210 62 HALFSIZE 0 0 0 4 1 0 0 xdim ydim
ife CBOXSLOT3 -1 rotatesprite 175 99 HALFSIZE 0 0 0 4 1 0 0 xdim ydim
ife CBOXSLOT4 -1 rotatesprite 210 99 HALFSIZE 0 0 0 4 1 0 0 xdim ydim
ife CBOXSLOT5 -1 rotatesprite 175 134 HALFSIZE 0 0 0 4 1 0 0 xdim ydim
ife CBOXSLOT6 -1 rotatesprite 210 134 HALFSIZE 0 0 0 4 1 0 0 xdim ydim

ife SELSLOT 1 rotatesprite 175 62 HALFSIZE 0 0 40 140 0 0 0 xdim ydim
ife SELSLOT 2 rotatesprite 210 62 HALFSIZE 0 0 40 140 0 0 0 xdim ydim
ife SELSLOT 3 rotatesprite 175 99 HALFSIZE 0 0 40 140 0 0 0 xdim ydim
ife SELSLOT 4 rotatesprite 210 99 HALFSIZE 0 0 40 140 0 0 0 xdim ydim
ife SELSLOT 5 rotatesprite 175 134 HALFSIZE 0 0 40 140 0 0 0 xdim ydim
ife SELSLOT 6 rotatesprite 210 134 HALFSIZE 0 0 40 140 0 0 0 xdim ydim

set disp_temp CBOXSLOT1
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT1 -1
	{
	set disp_temp4 tilesizx[disp_temp]
	add disp_temp4 tilesizy[disp_temp]
	mul disp_temp4 128
	set disp_temp5 32768
	sub disp_temp5 disp_temp4
	clamp disp_temp5 8192 NORMALSIZE									 
	rotatesprite 175 62 disp_temp5 0 disp_temp 0 CBOXSLOT1PAL 0 0 0 xdim ydim
	}

set disp_temp CBOXSLOT2
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT2 -1
	{
	set disp_temp4 tilesizx[disp_temp]
	add disp_temp4 tilesizy[disp_temp]
	mul disp_temp4 128
	set disp_temp5 32768
	sub disp_temp5 disp_temp4
	clamp disp_temp5 8192 NORMALSIZE									 
	rotatesprite 210 62 disp_temp5 0 disp_temp 0 0 0 0 0 xdim ydim
	}

set disp_temp CBOXSLOT3
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT3 -1
	{
	set disp_temp4 tilesizx[disp_temp]
	add disp_temp4 tilesizy[disp_temp]
	mul disp_temp4 128
	set disp_temp5 32768
	sub disp_temp5 disp_temp4
	clamp disp_temp5 8192 NORMALSIZE								 
	rotatesprite 175 99 disp_temp5 0 disp_temp 0 0 0 0 0 xdim ydim
	}

set disp_temp CBOXSLOT4
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT4 -1
	{
	set disp_temp4 tilesizx[disp_temp]
	add disp_temp4 tilesizy[disp_temp]
	mul disp_temp4 128
	set disp_temp5 32768
	sub disp_temp5 disp_temp4
	clamp disp_temp5 8192 NORMALSIZE							 
	rotatesprite 210 99 disp_temp5 0 disp_temp 0 0 0 0 0 xdim ydim
	}

set disp_temp CBOXSLOT5
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT5 -1
	{
	set disp_temp4 tilesizx[disp_temp]
	add disp_temp4 tilesizy[disp_temp]
	mul disp_temp4 128
	set disp_temp5 32768
	sub disp_temp5 disp_temp4
	clamp disp_temp5 8192 NORMALSIZE				
	rotatesprite 175 134 disp_temp5 0 disp_temp 0 0 0 0 0 xdim ydim
	}

set disp_temp CBOXSLOT6
state ITEM_BOX_DISP_STUFF
ifn CBOXSLOT6 -1
	{
	set disp_temp4 tilesizx[disp_temp]
	add disp_temp4 tilesizy[disp_temp]
	mul disp_temp4 128
	set disp_temp5 32768
	sub disp_temp5 disp_temp4
	clamp disp_temp5 8192 NORMALSIZE			   
	rotatesprite 210 134 disp_temp5 0 disp_temp 0 0 0 0 0 xdim ydim
	}

rotatesprite 160 100 49152 0 3308 0 0 0 0 0 xdim ydim

geta[CHECKBOX].picnum disp_temp
rotatesprite 105 100 49152 0 disp_temp 0 0 0 0 0 xdim ydim

}

ifn ALARM_DETECT 0
    {
    rotatespritea 160 20 HALFSIZE 0 3607 0 10 0 -255 0 0 xdim ydim
    ifg ALARM_ACTIVE 0 rotatesprite 160 20 HALFSIZE 1024 551 0 0 0 0 0 xdim ydim
    else rotatesprite 160 20 HALFSIZE 1024 553 0 0 0 0 0 xdim ydim

    ifg ALARM_COUNTER 0
    ife ALARM_ACTIVE 0
        {
        set digx 110

        set disp_temp3 digx
        add disp_temp3 ALARM_COUNTER
        set disp_temp 0
        whilevarn disp_temp 1
            {
                  ifg digx disp_temp3 set disp_temp 1
                  ifg ALARM_COUNTER 60 set disp_temp4 10 else
                  ifg ALARM_COUNTER 20 set disp_temp4 21 else
                  set disp_temp4 11
                  rotatespritea digx 25 QUARTERSIZE 0 4732 0 disp_temp4 0 -255 0 0 xdim ydim
                  add digx 1
            }
        rotatesprite 210 25 8192 0 121 0 4 1 0 0 xdim ydim
        }

    }

ifg camera_bars -18
{
rotatesprite 160 camera_bars NORMALSIZE 0 3182 0 0 1024 0 0 xdim ydim
set disp_temp 200
sub disp_temp camera_bars
rotatesprite 160 disp_temp NORMALSIZE 0 3182 0 0 1024 0 0 xdim ydim
}

ife cuts_txt -1 // cutscene dialogue takes presidence over this
{
ifg gp_subt 0
    {
    ifn subt_id 0 screentext STARTALPHANUM 160 142 28672 0 0 subt_id 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
    else screentext STARTALPHANUM 160 142 28672 0 0 7500 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
    }
ifg ally_subt 0
 ife camerasprite -1
    {
    gametextz STARTALPHANUM 320 150 ALLY_SUBTITLE 0 0 0 0 0 xdim ydim HALFSIZE
    }
}

ifn cuts_txt -1 // Is there supposed to be text on the screen?
{
ife camerasprite -1
 ifn radio_portrait -1
	{
	rotatesprite 60 120 radio_size 0 radio_portrait 0 0 1 0 0 xdim ydim
	rotatespritea 60 120 24000 0 19190 0 0 1 -255 0 0 xdim ydim
	rotatesprite 60 120 QUARTERSIZE 0 14749 0 radio_pal 1 0 0 xdim ydim
	}
 ife opt_show_subtitles YES
    {
    ife camerasprite -1 // not in a cutscene? have the text higher
        {
        ifg cs_textl 0 screentext STARTALPHANUM 160 147 28672 0 0 350 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 1 screentext STARTALPHANUM 160 152 28672 0 0 351 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 2 screentext STARTALPHANUM 160 157 28672 0 0 352 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 3 screentext STARTALPHANUM 160 162 28672 0 0 353 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 4 screentext STARTALPHANUM 160 167 28672 0 0 354 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 5 screentext STARTALPHANUM 160 172 28672 0 0 355 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        }
    else
        {
		ifg cs_textl 0 screentext STARTALPHANUM 160 172 28672 0 0 350 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 1 screentext STARTALPHANUM 160 177 28672 0 0 351 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 2 screentext STARTALPHANUM 160 182 28672 0 0 352 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 3 screentext STARTALPHANUM 160 187 28672 0 0 353 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 4 screentext STARTALPHANUM 160 192 28672 0 0 354 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        ifg cs_textl 5 screentext STARTALPHANUM 160 197 28672 0 0 355 0 0 16 0 5 8 1 1 2 0 0 xdim ydim
        }
    }
}

ifg FORTUNE_TIMER 0
    {
    gametextz STARTALPHANUM 320 165 FORTUNE_QUOTE 0 12 0 0 0 xdim ydim HALFSIZE
    set disp_temp4 FORTUNE_QUOTE
    add disp_temp4 100
    gametextz STARTALPHANUM 320 170 disp_temp4 0 6 0 0 0 xdim ydim HALFSIZE
    }

ifg cameraend 0
{
rotatesprite 160 100 NORMALSIZE 0 3584 20 4 1024 0 0 xdim ydim // BG
}

ife CHARSELECT 1
ife cameraend 0
ifn TIMEZONE 9
ife camerasprite -1
{
	state charselectionui_display
}
else ife load_disp_files 1 set load_disp_files 0 // reset

// ## END OF CHARACTER SELECT SECTION

	// Decide which interface to show
	ifg MOUSEUP 0
	{
		ife PCINTER 1 state PC_INTERFACE
		ife PCINTER 3 state EVIDENCE_INTERFACE
		ife PCINTER 4 state PERSONAL_INTERFACE
		ife PCINTER 6 state UPGRADES_INTERFACE
		ife PCINTER 7 state RESEARCH_INTERFACE
		ife PCINTER 8 state LOADOUT_INTERFACE
		ife PCINTER 10 state TRAINING_INTERFACE
		ife PCINTER 11 state CONVERSATION_INTERFACE
		ife PCINTER 12 state WEAPON_SHOP_INTERFACE
		ife PCINTER 13 state COMMAND_INTERFACE_DISPLAY
		ife PCINTER 14 state ELYSION_PAPER_MAP
		ife PCINTER 15 state FISHSHOP_INTERFACE
		ife PCINTER 16 state CINEMA_INTERFACE
		ife PCINTER 17 state RINGWORLD_SHOP_INTERFACE
		ife PCINTER 18 state RINGWORLD_UPGRADES_INTERFACE
		ife PCINTER 19 state BASE_MUSIC_INTERFACE
		ife PCINTER 20 state KITCHEN_INTERFACE
		ife PCINTER 21 state BASE_CUSTOMISE_INTERFACE
	}

ifn player[].invdisptime 0
ife camerasprite -1
{

// get angle and compute cursor position
getangle temp9 invwheel_x invwheel_y
cos temp4 temp9
sin temp5 temp9

scalevar temp temp4 CHEVRON_RADIUS 16384
shiftl temp 12
add temp 10485760

scalevar temp2 temp5 CHEVRON_RADIUS 16384
shiftl temp2 12
add temp2 6553600

// chevron 7 locked
guniqhudid 90
rotatespritea temp temp2 32684 temp9 2452 0 0 6150 -255 0 0 xdim ydim
guniqhudid 0
// slot 0
set WH_SLOT_X 122 set WH_SLOT_Y 62
set THIS_SLOT 0
state INVENTORY_SLOTS_DEV
// slot 1
set WH_SLOT_X 160 set WH_SLOT_Y 50
set THIS_SLOT 1
state INVENTORY_SLOTS_DEV
// slot 2
set WH_SLOT_X 198 set WH_SLOT_Y 62
set THIS_SLOT 2
state INVENTORY_SLOTS_DEV
// slot 3
set WH_SLOT_X 210 set WH_SLOT_Y 100
set THIS_SLOT 3
state INVENTORY_SLOTS_DEV
// slot 4
set WH_SLOT_X 198 set WH_SLOT_Y 138
set THIS_SLOT 4
state INVENTORY_SLOTS_DEV
// slot 5
set WH_SLOT_X 160 set WH_SLOT_Y 150
set THIS_SLOT 5
state INVENTORY_SLOTS_DEV
// slot 6
set WH_SLOT_X 122 set WH_SLOT_Y 138
set THIS_SLOT 6
state INVENTORY_SLOTS_DEV
// slot 7
set WH_SLOT_X 110 set WH_SLOT_Y 100
set THIS_SLOT 7
state INVENTORY_SLOTS_DEV

}

ifn countdown -1
{
qsprintf 570 571 countdown_minutes
screentext 13022 140 45 8192 0 0 570 0 10 0 -255 5 16 0 0 524290 0 0 xdim ydim
rotatespritea 145 45 QUARTERSIZE 0 14496 0 0 0 -255 0 0 xdim ydim
ifl countdown_seconds 10 rotatespritea 152 45 8192 0 13022 0 10 0 -255 0 0 xdim ydim
qsprintf 570 571 countdown_seconds
screentext 13022 165 45 8192 0 0 570 0 10 0 -255 5 16 0 0 524290 0 0 xdim ydim
}

// Weapon bar code separated to own file (DISPLAYWEAPONBAR.CON)
state display_weaponbar

ifl DISP_GUN 40
    {
    add DISP_GUN 1
    set disp_temp2 DISP_GUN
    clamp disp_temp2 -127 127
    rotatespritea 160 145 14000 0 3605 disp_temp2 0 0 -255 0 0 xdim ydim
    add WHEEL_ROTATE 2
    ifg WHEEL_ROTATE 2048 set WHEEL_ROTATE 0
    rotatespritea 160 140 8000 WHEEL_ROTATE 3228 disp_temp2 0 0 -255 0 0 xdim ydim
    set disp_temp DISP_GUN
    add disp_temp 120
	clamp disp_temp 0 127
    rotatespritea 160 140 INVENSIZE 0 DISP_GUN_PIC 0 0 0 disp_temp 0 0 xdim ydim
	rotatespritea 155 150 NNORMALSIZE 0 DISP_GUN_CHAR 0 0 0 disp_temp 0 0 xdim ydim
    }

ifl DISP_KEY 40
    {
    add DISP_KEY 1
    set disp_temp2 DISP_KEY
    clamp disp_temp2 -127 127
    rotatespritea 160 145 14000 0 3605 disp_temp2 DISP_KEY_PAL 0 -255 0 0 xdim ydim
    add WHEEL_ROTATE 2
    ifg WHEEL_ROTATE 2048 set WHEEL_ROTATE 0
    rotatespritea 160 140 8000 WHEEL_ROTATE 3228 disp_temp2 DISP_KEY_PAL 0 -255 0 0 xdim ydim
    set disp_temp DISP_KEY
    add disp_temp 120
	clamp disp_temp 0 127
    rotatespritea 160 140 20000 0 DISP_KEY_PIC 0 DISP_KEY_PAL 0 disp_temp 0 0 xdim ydim
    }

ifl DISP_RES 40
    {
    set disp_temp DISP_RES
    ifl disp_temp -120 set disp_temp -120
    add DISP_RES 1
    rotatespritea 160 145 14000 0 3605 disp_temp DISP_RES_PAL 0 -255 0 0 xdim ydim
    add WHEEL_ROTATE 2
    ifg WHEEL_ROTATE 2048 set WHEEL_ROTATE 0
    rotatespritea 160 140 8000 WHEEL_ROTATE 3228 disp_temp DISP_RES_PAL 0 -255 0 0 xdim ydim
    set disp_temp DISP_RES
    add disp_temp 120
	clamp disp_temp 0 127
    rotatespritea 160 140 20000 0 DISP_RES_PIC 0 0 0 disp_temp 0 0 xdim ydim
    }

ife CUSENDLEVEL 1
    {
    qgetsysstr 3511 STR_MAPNAME
    gametext 2822 320 20 3511 0 0 0 0 0 xdim ydim
    gametext STARTALPHANUM 25 60 3504 0 10 0 0 0 xdim ydim
    getplayer[THISACTOR].actors_killed disp_temp
    getplayer[THISACTOR].max_actors_killed disp_temp2
    ife disp_temp disp_temp2
        {
        rotatesprite 170 50 HALFSIZE 0 3190 0 125 0 0 0 xdim ydim
        gametext STARTALPHANUM 25 50 3503 0 125 0 0 0 xdim ydim
        digitalnumber 2837 150 50 disp_temp 0 125 0 0 0 xdim ydim
        }
    else
        {
        gametext STARTALPHANUM 25 50 3503 0 124 0 0 0 xdim ydim
        digitalnumber 2837 150 50 disp_temp 0 124 0 0 0 xdim ydim
        }
    subvarvar disp_temp2 disp_temp
    ifl disp_temp2 0 setvar disp_temp2 0
    digitalnumber 2837 145 60 disp_temp2 0 124 0 0 0 xdim ydim

    getplayer[THISACTOR].secret_rooms disp_temp
    getplayer[THISACTOR].max_secret_rooms disp_temp2
    ifg disp_temp2 0
        {
        gametext STARTALPHANUM 25 90 3506 0 10 0 0 0 xdim ydim
        ife disp_temp disp_temp2
            {
            rotatesprite 170 80 HALFSIZE 0 3190 0 125 0 0 0 xdim ydim
            gametext STARTALPHANUM 25 80 3505 0 125 0 0 0 xdim ydim
            digitalnumber 2837 145 80 disp_temp 0 125 0 0 0 xdim ydim
            }
        else
            {
            gametext STARTALPHANUM 25 80 3505 0 124 0 0 0 xdim ydim
            digitalnumber 2837 145 80 disp_temp 0 124 0 0 0 xdim ydim
            }
        setvarvar temp3 disp_temp2
        subvarvar temp3 disp_temp
        digitalnumber 2837 145 90 temp3 0 124 0 0 0 xdim ydim
        }
    gametext STARTALPHANUM 320 160 3509 disp_pulse 0 0 0 0 xdim ydim
    }


ifg loading 0
{
sub loading 1
set disp_temp6 30
sub disp_temp6 loading
rotatespritea 40 160 QUARTERSIZE 0 3604 disp_temp6 0 0 -255 0 0 xdim ydim
  getticks curtick
  ife prevtick -1 set disp_temp 0 else
  {
    set disp_temp curtick
    sub disp_temp prevtick
  }
  add disp_temp5 2
  ifg disp_temp5 2048 set disp_temp5 0
  add disp_temp6 10
  rotatespritea 10 135 INVENSIZE disp_temp5 3228 disp_temp6 12 256 -255 0 0 xdim ydim
  sub disp_temp6 10
  sub disp_temp4 4
  ifl disp_temp4 -2048 set disp_temp4 0
  rotatespritea 10 135 QUARTERSIZE disp_temp4 3228 disp_temp6 12 256 -255 0 0 xdim ydim
  set prevtick curtick
}

ifg saving 0
{
set disp_temp6 30
sub disp_temp6 saving
rotatespritea 40 160 QUARTERSIZE 0 3628 disp_temp6 0 0 -255 0 0 xdim ydim
  getticks curtick
  ife prevtick -1 set disp_temp 0 else
  {
    set disp_temp curtick
    sub disp_temp prevtick
  }
  add disp_temp5 2
  ifg disp_temp5 2048 set disp_temp5 0
  add disp_temp6 10
  rotatespritea 10 135 INVENSIZE disp_temp5 3228 disp_temp6 12 256 -255 0 0 xdim ydim
  sub disp_temp6 10
  sub disp_temp4 4
  ifl disp_temp4 -2048 set disp_temp4 0
  rotatespritea 10 135 QUARTERSIZE disp_temp4 3228 disp_temp6 12 256 -255 0 0 xdim ydim
  set prevtick curtick
}

ifl player[].player_par 90
{
  getticks curtick
  ife prevtick -1 set disp_temp 0 else
  {
    set disp_temp curtick
    sub disp_temp prevtick
  }
  add disp_temp5 2
  ifg disp_temp5 2048 set disp_temp5 0
  set disp_temp6 player[].player_par
  add disp_temp6 10
  rotatespritea 10 135 INVENSIZE disp_temp5 3228 disp_temp6 12 256 -255 0 0 xdim ydim
  sub disp_temp4 4
  ifl disp_temp4 -2048 set disp_temp4 0
  rotatespritea 10 135 QUARTERSIZE disp_temp4 3228 player[].player_par 12 256 -255 0 0 xdim ydim
  ifn loading_tile 3587 ifl player[].player_par 30 ife camerasprite -1 rotatespritea 160 100 NORMALSIZE 0 loading_tile player[].player_par 0 0 -255 0 0 xdim ydim
  set prevtick curtick
}

ifg END_LEVEL 0
	set END_LEVEL_TRIGGERED 1

ife END_LEVEL_TRIGGERED 1
{
	ifg END_LEVEL 0
		sub END_LEVEL 1

	set disp_temp7 END_LEVEL
	mulvar disp_temp7 -1
	add disp_temp7 60
	rotatespritea 160 100 DOUBLESIZE 0 22775 disp_temp7 0 0 -254 0 0 xdim ydim

	set disp_temp2 END_LEVEL
	sub disp_temp2 30
	clamp disp_temp2 -127 127

	state load_tile_pic
	ifn loading_tile 3587 rotatespritea 160 100 NORMALSIZE 0 loading_tile disp_temp2 0 0 -255 0 0 xdim ydim

	rotatespritea 40 160 QUARTERSIZE 0 3604 disp_temp2 0 0 -255 0 0 xdim ydim

	  getticks curtick
	  ife prevtick -1 set disp_temp 0 else
	  {
		set disp_temp curtick
		sub disp_temp prevtick
	  }
	  add WHEEL1 2
	  ifg WHEEL1 2048 set WHEEL1 0
	  set disp_temp6 END_LEVEL
	  sub disp_temp6 30
	  ifl disp_temp6 20 set disp_temp6 20
	  rotatespritea 10 135 INVENSIZE WHEEL1 3228 disp_temp6 12 256 -255 0 0 xdim ydim
	  sub disp_temp6 10
	  sub WHEEL2 4
	  ifl WHEEL2 -2048 set WHEEL2 0
	  // ifl disp_temp6 10 set disp_temp6 10
	  rotatespritea 10 135 QUARTERSIZE WHEEL2 3228 disp_temp6 12 256 -255 0 0 xdim ydim
	  ife END_LEVEL 1
		{
		savegamevar WHEEL1
		savegamevar WHEEL2
		}
	  set prevtick curtick
}

// glow preload test

/*
ife player.player_par 0
    {
    set disp_temp 8191
    whilevarn disp_temp 8300
        {
        add disp_temp 1
        rotatesprite 160 100 8192 0 disp_temp 0 0 256 0 0 xdim ydim
        }
    }
*/

endevent

onevent EVENT_DISPLAYCAMERAOSD
set RETURN 1

rotatespritea 25 25 NORMALSIZE 0 2482 0 0 256 -255 0 0 xdim ydim
rotatespritea 25 175 NORMALSIZE 1024 2483 0 0 256 -255 0 0 xdim ydim
rotatespritea 295 175 NORMALSIZE 0 2483 0 0 516 -255 0 0 xdim ydim
rotatespritea 295 25 NORMALSIZE 0 2483 0 0 512 -255 0 0 xdim ydim
rotatesprite 48 24 NORMALSIZE 0 2485 0 0 256 0 0 xdim ydim

ifn PCAMERA 0 // Is the player in control of a security camera?
ifn CAMID -1
    {
    getav[CAMID].EXTRASAVED disp_temp
    ife disp_temp 1
            {

            rotatespritea 20 100 HALFSIZE 1024 2488 0 0 260 -255 0 0 xdim ydim  // Left Arrow
            rotatespritea 300 100 HALFSIZE 0 2488 0 0 512 -255 0 0 xdim ydim  // Right arrow
            rotatespritea 160 20 HALFSIZE 1536 2488 0 0 0 -255 0 0 xdim ydim // Up arrow
            rotatespritea 160 180 HALFSIZE 512 2488 0 0 0 -255 0 0 xdim ydim // Down Arrow

        /* Disabling this for the release; want to see if maybe this is causing the crashes
        ifl input[].avel 0 rotatespritea 20 100 HALFSIZE 1024 2488 0 2 260 -255 0 0 xdim ydim // Make left arrow light up

        ifg input[].avel 0 rotatespritea 300 100 HALFSIZE 0 2488 0 2 512 -255 0 0 xdim ydim // Make right arrow light up


            ifand EXTBITS_PRESS 16 rotatespritea 20 100 HALFSIZE 1024 2488 0 2 260 -255 0 0 xdim ydim // Make left arrow light up
            ifand EXTBITS_PRESS 32 rotatespritea 300 100 HALFSIZE 0 2488 0 2 512 -255 0 0 xdim ydim // Make right arrow light up
            ifand BITS_PRESS 8192 rotatespritea 160 20 HALFSIZE 1536 2488 0 2 0 -255 0 0 xdim ydim // Make up arrow light up
            ifand BITS_PRESS 16384 rotatespritea 160 180 HALFSIZE 512 2488 0 2 0 -255 0 0 xdim ydim // Make down arrow light up
            ifand BITS_PRESS 8 rotatespritea 160 20 HALFSIZE 1536 2488 0 2 0 -255 0 0 xdim ydim // Make up arrow light up
            ifand BITS_PRESS 16 rotatespritea 160 180 HALFSIZE 512 2488 0 2 0 -255 0 0 xdim ydim // Make down arrow light up
        */

            }
    }

endevent

var xhair_col 0 1

defstate DISP_crosshair
                getu .crosshairscale disp_temp3
                mulvarvar disp_temp3 300

                set disp_acc GUN_ACCURACY
                ifn ANGLE 0 set disp_acc 24
                add disp_acc gun_spread
                div disp_acc 6

                ifg disp_vis disp_acc sub disp_vis 1
                else ifl disp_vis disp_acc add disp_vis 1


				// fire mode shower
				ife userdef[].althud 0
				 ifg firekey_indicator 0
					{
					set disp_temp2 10
					ifg player[].weapon_pos 0 sub disp_temp2 player[].weapon_pos
					ifand weap_special[cur_weap] 32768 rotatespritea 160 70 HALFSIZE 0 3233 disp_temp2 13 4096 -255 0 0 xdim ydim // tert-fire
					ifand weap_special[cur_weap] 16384 rotatespritea 190 130 HALFSIZE 768 3233 disp_temp2 13 4096 -255 0 0 xdim ydim // alt-fire
					rotatespritea 130 130 HALFSIZE 256 3233 disp_temp2 13 4100 -255 0 0 xdim ydim // normal fire
					}

                ife weapon_type 0
                    {
                    set xhair_y 100
                    sub xhair_y disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea 160 xhair_y disp_temp3 0 13535 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair

                    set xhair_x 160
                    add xhair_x disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x 100 disp_temp3 0 13536 0 xhair_col 4096 -255 0 0 xdim ydim // right part of xhair

                    set xhair_y 100
                    add xhair_y disp_vis
                    ifg xhair_y 200 set xhair_y 200
                    guniqhudid 73
                    rotatespritea 160 xhair_y disp_temp3 0 13537 0 xhair_col 4096 -255 0 0 xdim ydim // bottom part of xhair

                    set xhair_x 160
                    sub xhair_x disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 74
                    rotatespritea xhair_x 100 disp_temp3 0 13538 0 xhair_col 4096 -255 0 0 xdim ydim    // left part of xhair
                    guniqhudid 75
                    rotatespritea 160 100 disp_temp3 0 5131 0 xhair_col 4096 -255 0 0 xdim ydim // center bit of xhair
                    }
                ife weapon_type 1
                    {
                    set xhair_y 100
                    sub xhair_y disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea 160 xhair_y disp_temp3 0 13551 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair

                    set xhair_x 160
                    add xhair_x disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x 100 disp_temp3 0 13552 0 xhair_col 4096 -255 0 0 xdim ydim // right part of xhair

                    set xhair_y 100
                    add xhair_y disp_vis
                    ifg xhair_y 200 set xhair_y 200
                    guniqhudid 73
                    rotatespritea 160 xhair_y disp_temp3 0 13553 0 xhair_col 4096 -255 0 0 xdim ydim // bottom part of xhair

                    set xhair_x 160
                    sub xhair_x disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 74
                    rotatespritea xhair_x 100 disp_temp3 0 13554 0 xhair_col 4096 -255 0 0 xdim ydim    // left part of xhair
                    guniqhudid 75
                    rotatespritea 160 100 disp_temp3 0 5131 0 xhair_col 4096 -255 0 0 xdim ydim // center bit of xhair
                    }
                ife weapon_type 2
                    {
                    set xhair_y 100
                    sub xhair_y disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea 160 xhair_y disp_temp3 0 13525 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair
                    set xhair_x 160
                    add xhair_x disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x 100 disp_temp3 0 13526 0 xhair_col 4096 -255 0 0 xdim ydim // right part of xhair
                    set xhair_y 100
                    add xhair_y disp_vis
                    ifg xhair_y 200 set xhair_y 200
                    guniqhudid 73
                    rotatespritea 160 xhair_y disp_temp3 0 13527 0 xhair_col 4096 -255 0 0 xdim ydim // bottom part of xhair
                    set xhair_x 160
                    sub xhair_x disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 74
                    rotatespritea xhair_x 100 disp_temp3 0 13528 0 xhair_col 4096 -255 0 0 xdim ydim    // left part of xhair
                    guniqhudid 75
                    rotatespritea 160 100 disp_temp3 0 13529 0 0 4096 -255 0 0 xdim ydim // center bit of xhair
                    }
                ife weapon_type 3
                    {
                    set xhair_y 100
                    sub xhair_y disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea 160 xhair_y disp_temp3 0 13551 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair
                    set xhair_x 160
                    add xhair_x disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x 100 disp_temp3 0 13552 0 xhair_col 4096 -255 0 0 xdim ydim // right part of xhair
                    set xhair_y 100
                    add xhair_y disp_vis
                    ifg xhair_y 200 set xhair_y 200
                    guniqhudid 73
                    rotatespritea 160 xhair_y disp_temp3 0 13553 0 xhair_col 4096 -255 0 0 xdim ydim // bottom part of xhair
                    set xhair_x 160
                    sub xhair_x disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 74
                    rotatespritea xhair_x 100 disp_temp3 0 13554 0 xhair_col 4096 -255 0 0 xdim ydim    // left part of xhair
                    guniqhudid 75
                    rotatespritea 160 100 disp_temp3 0 13555 0 7 4096 -255 0 0 xdim ydim // center bit of xhair
                    }
                    guniqhudid 76
                ife weapon_type 4 rotatespritea 160 100 disp_temp3 0 13524 0 0 4096 -255 0 0 xdim ydim
                ife weapon_type 5 // bow
                    {
                    set xhair_y 100
                    sub xhair_y disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea 160 xhair_y disp_temp3 0 13520 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    add xhair_x disp_vis
                    add xhair_y disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x xhair_y disp_temp3 0 13521 0 xhair_col 4096 -255 0 0 xdim ydim // right part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    sub xhair_x disp_vis
                    add xhair_y disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 73
                    rotatespritea xhair_x xhair_y disp_temp3 0 13522 0 xhair_col 4096 -255 0 0 xdim ydim    // left part of xhair
                    guniqhudid 74
                    rotatespritea 160 100 disp_temp3 0 13523 0 0 4096 -255 0 0 xdim ydim // center bit of xhair
                    }
                ife weapon_type 6 rotatespritea 160 100 disp_temp3 0 13557 0 0 4096 -255 0 0 xdim ydim
                ife weapon_type 7 // Silver ammo
                    {
                    set xhair_y 100
                    sub xhair_y disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea 160 xhair_y disp_temp3 0 15102 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair
                    set xhair_x 160
                    add xhair_x disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x 100 disp_temp3 512 15102 0 xhair_col 4096 -255 0 0 xdim ydim // right part of xhair
                    set xhair_y 100
                    add xhair_y disp_vis
                    ifg xhair_y 200 set xhair_y 200
                    guniqhudid 73
                    rotatespritea 160 xhair_y disp_temp3 1024 15102 0 xhair_col 4096 -255 0 0 xdim ydim // bottom part of xhair
                    set xhair_x 160
                    sub xhair_x disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 74
                    rotatespritea xhair_x 100 disp_temp3 1536 15102 0 xhair_col 4096 -255 0 0 xdim ydim // left part of xhair
                    guniqhudid 75
                    rotatespritea 160 100 disp_temp3 0 15103 0 0 4096 -255 0 0 xdim ydim // center bit of xhair
                    }
                ife weapon_type 8 // Projectile
                    {
                    set xhair_y 100
                    set xhair_x 160
                    sub xhair_y disp_vis
                    add xhair_x disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea xhair_x xhair_y disp_temp3 0 15101 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    add xhair_x disp_vis
                    add xhair_y disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x xhair_y disp_temp3 0 15101 0 xhair_col 4100 -255 0 0 xdim ydim // right part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    sub xhair_x disp_vis
                    add xhair_y disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 73
                    rotatespritea xhair_x xhair_y disp_temp3 1024 15101 0 xhair_col 4096 -255 0 0 xdim ydim // left part of xhair
                    set xhair_y 100
                    set xhair_x 160
                    sub xhair_y disp_vis
                    sub xhair_x disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 74
                    rotatespritea xhair_x xhair_y disp_temp3 1024 15101 0 xhair_col 4100 -255 0 0 xdim ydim // top part of xhair
                    }
                ife weapon_type 9 // AP projectile
                    {
                    set xhair_y 100
                    set xhair_x 160
                    sub xhair_y disp_vis
                    add xhair_x disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea xhair_x xhair_y disp_temp3 0 15100 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    add xhair_x disp_vis
                    add xhair_y disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x xhair_y disp_temp3 0 15100 0 xhair_col 4100 -255 0 0 xdim ydim // right part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    sub xhair_x disp_vis
                    add xhair_y disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 73
                    rotatespritea xhair_x xhair_y disp_temp3 1024 15100 0 xhair_col 4096 -255 0 0 xdim ydim // left part of xhair
                    set xhair_y 100
                    set xhair_x 160
                    sub xhair_y disp_vis
                    sub xhair_x disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 74
                    rotatespritea xhair_x xhair_y disp_temp3 1024 15100 0 xhair_col 4100 -255 0 0 xdim ydim // top part of xhair
                    }
                ife weapon_type 10 // nuke
                    {
                    set xhair_y 100
                    sub xhair_y disp_vis
                    ifl xhair_y 0 set xhair_y 0
                    guniqhudid 71
                    rotatespritea 160 xhair_y disp_temp3 0 15097 0 xhair_col 4096 -255 0 0 xdim ydim // top part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    add xhair_x disp_vis
                    add xhair_y disp_vis
                    ifg xhair_x 320 set xhair_x 320
                    guniqhudid 72
                    rotatespritea xhair_x xhair_y disp_temp3 0 15098 0 xhair_col 4096 -255 0 0 xdim ydim // right part of xhair
                    set xhair_x 160
                    set xhair_y 100
                    sub xhair_x disp_vis
                    add xhair_y disp_vis
                    ifl xhair_x 0 set xhair_x 0
                    guniqhudid 73
                    rotatespritea xhair_x xhair_y disp_temp3 1024 15098 0 xhair_col 4100 -255 0 0 xdim ydim // left part of xhair
                    guniqhudid 74
                    rotatespritea 160 100 disp_temp3 0 15099 0 0 4096 -255 0 0 xdim ydim // center bit of xhair
                    }

ife opt_protected_ding YES
ifl hit_indic 30
    {
    add hit_indic 1
    guniqhudid 77
    rotatespritea 160 100 49152 0 13555 hit_indic hit_indic_pal 4096 -255 0 0 xdim ydim
    }
guniqhudid 0
ends

onevent EVENT_DISPLAYCROSSHAIR
set RETURN -1
ifn camerasprite -1 nullop
else ife player[].holster_weapon 1 nullop
else ifg cameraend 0 nullop
else ife hud_disp 0 nullop
else ifg MOUSEUP 0 nullop
else ife CHARSELECT 1 nullop
else ife CHAR -1 nullop
else ife MISSION_UP 1 nullop
else ifg END_LEVEL 0 nullop
else ifn DOCUMENT -1 nullop
else ifn injured 0 nullop
else ifn CONTROL_VR -1 nullop
else ife hide_xhair 1
	{
	ife opt_protected_ding YES
	ifl hit_indic 30
		{
		add hit_indic 1
		guniqhudid 77
		rotatespritea 160 100 49152 0 13555 hit_indic hit_indic_pal 4096 -255 0 0 xdim ydim
		}
	}
else ifg mech_startup_sequence 0 nullop
else ife cur_weap 0 ife temp_weap 0 nullop
else ifn scope 0
	{
	ife opt_protected_ding YES
	ifl hit_indic 30
		{
		add hit_indic 1
		guniqhudid 77
		ifl hit_indic 0 rotatespritea 160 100 59152 0 13555 hit_indic 106 4096 -255 0 0 xdim ydim
		guniqhudid 78
		rotatespritea 160 100 49152 0 13555 hit_indic hit_indic_pal 4096 -255 0 0 xdim ydim
		}
	}
else
        {
        getu .crosshair disp_temp
        ifn disp_temp 0 // Crosshairs not disabled?
            {
            ifand gun_firemode 32768
                {
                rotatespritea 160 100 HALFSIZE 0 12287 0 0 0 -255 0 0 xdim ydim
                set disp_temp5 6553600
                set disp_temp4 DISTANCE
                mulvar disp_temp4 32
                add disp_temp5 disp_temp4
                ifg disp_temp5 20971520 set disp_temp5 20971520
                ifl disp_temp5 0 set disp_temp5 0
                rotatesprite16 10485760 disp_temp5 NORMALSIZE 0 12285 0 0 0 0 0 xdim ydim
                }
                else
                state DISP_crosshair
            }
        }
endevent

onevent EVENT_DISPLAYWEAPON
ifn sprite[].sectnum -1 ifn sprite[].sectnum 4096 gets[].floorpal temp else set temp 0
switch temp
        default
    set wep_pal temp
	set arm_pal wep_pal
    break
        case 0
        case 3
        case 5
        case 9
        case 10
        case 11
        case 12
        case 13
        case 14
        case 15
        case 16
        case 17
        case 18
        case 19
        case 20
        case 21
        case 22
        case 23
        case 24
        case 25
        case 36
        case 37
        case 38
        case 39
        case 40
        case 41
        case 42
        case 43
        case 44
        case 45
        case 46
        case 47
        case 48
        case 49
			set wep_pal 0
			ife CHAR 3 ifand CHAR_APP 16 set arm_pal 11 else
			set arm_pal 0
			break
        case 128 // Fog pals, only do this if fog is considered strong
        case 129
        case 130
        case 131
        case 132
		case 140
		case 141
		case 142
		case 143
		case 144
		case 145
			ifge sector[].floorshade 10
				{
				set wep_pal temp
				set arm_pal temp
				}
			else
				{
				set wep_pal 0
				ife CHAR 3 ifand CHAR_APP 16 set arm_pal 11 else
				set arm_pal 0
				}
			break
endswitch

  ifn ANGLE 0
  {
    set RETURN 1
    break
  }

  ifg player[].fist_incs 0 { set RETURN 1 break }

    ife on_tripwire 1
    {
    set disp_temp 190
    getp[].horiz disp_temp2
    div disp_temp2 5 add disp_temp disp_temp2
    rotatesprite 240 disp_temp 49152 0 CKNEE shade pal 0 0 0 xdim ydim
    rotatesprite 80 disp_temp 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
    }


 ifn using_turret -1 // draw turrets
  ife player[].over_shoulder_on 0
    {
    ife turret_type 0 // minigun
        {
        ifg firing_count 96 myospal 160 80 3668 shade 1 pal else
        ifg firing_count 48 myospal 160 80 3668 shade 33 pal
        ifand BITS_PRESS 4 ifg current_sg_ammo 0
            {
            displayrandvar rot_flash 2048
            rotatespritea 160 150 19000 rot_flash 16115 0 0 0 -255 0 0 xdim ydim
            rotatesprite 160 160 40960 0 8253 0 pal 0 0 0 xdim ydim
            }
        else
        rotatesprite 160 160 40960 0 8251 shade pal 0 0 0 xdim ydim
        digitalnumber 2472 160 170 current_sg_ammo 0 0 0 0 0 xdim ydim
        }
    ife turret_type 1 // 50cal
        {
        set y 180
        ifg shield_shake 0
            {
            displayrandvarvar shake_rand shield_shake
            add y shake_rand
            sub shield_shake 1
            }
        ifg gun_turret_sh_temp 300 rotatesprite 160 y HALFSIZE 0 22653 shade pal 0 0 0 xdim ydim
        else ifg gun_turret_sh_temp 100 rotatesprite 160 y HALFSIZE 0 22654 shade pal 0  0 0 xdim ydim
        else rotatesprite 160 y HALFSIZE 0 22655 shade pal 0  0 0 xdim ydim
        ifand BITS_PRESS 4 ifg firing_count 3
            {
            state random_AR_flash
            rotatespritea 169 130 27000 0 rot_flash 0 0 0 -255 0 0 xdim ydim
            rotatesprite 169 163 NORMALSIZE 0 22444 0 pal 0 0 0 xdim ydim
            rotatesprite 169 163 NORMALSIZE 0 22445 0 pal 0 0 0 xdim ydim
            qsprintf 570 571 current_sg_ammo
            screentext 2472 100 100 NORMALSIZE 0 0 570 0 1 0 -255 5 16 0 0 524290 0 0 xdim ydim
            }
        else
            {
            rotatesprite 169 160 NORMALSIZE 0 22443 shade pal 0 0 0 xdim ydim
            rotatesprite 169 160 NORMALSIZE 0 22445 0 pal 0 0 0 xdim ydim
            qsprintf 570 571 current_sg_ammo
            screentext 2472 100 97 NORMALSIZE 0 0 570 0 1 0 -255 5 16 0 0 524290 0 0 xdim ydim
            }
        // digitalnumber 2472 100 97 current_sg_ammo 0 1 0 0 0 xdim ydim
        }
    ife turret_type 2 // dark elf ballista
        {
        ifg firing_count 0
            {
            set disp_temp2 4096
            mul disp_temp2 firing_count
            add disp_temp2 32768
            }
            else
            set disp_temp2 32768
        rotatesprite 240 0 disp_temp2 0 28298 shade pal 16 0 0 xdim ydim
        rotatesprite 80 0 disp_temp2 1024 28298 shade pal 20 0 0 xdim ydim
        digitalnumber 2472 160 170 current_sg_ammo 0 0 0 0 0 xdim ydim
        }
    ife turret_type 3 // ballista
        {
        ifg firing_count 0
            {
            set disp_temp2 2
            mul disp_temp2 firing_count
            add disp_temp2 160
            }
		else set disp_temp2 160
		set disp_temp3 160
		add disp_temp3 gun_recoil
        rotatesprite 220 disp_temp3 HALFSIZE 0 28310 shade pal 16 0 0 xdim ydim
		ifg current_sg_ammo 0 rotatesprite 160 disp_temp2 HALFSIZE 0 28299 shade pal 0 0 0 xdim ydim
        rotatesprite 100 disp_temp3 HALFSIZE 1024 28310 shade pal 20 0 0 xdim ydim
        digitalnumber 2472 160 170 current_sg_ammo 0 0 0 0 0 xdim ydim
        }
    ife turret_type 4 // cannon
        {
        ifg firing_count 0
            {
            set disp_temp2 2048
            mul disp_temp2 firing_count
            add disp_temp2 45960
            set disp_temp3 2
            mul disp_temp3 firing_count
            add disp_temp3 160
            }
            else
			{
            set disp_temp2 40960
			set disp_temp3 160
			}
        ifand BITS_PRESS 4 ife firing_count 15
            {
            displayrandvar rot_flash 2048
            rotatespritea 160 150 HALFSIZE rot_flash 16115 0 0 0 -255 0 0 xdim ydim
			rotatesprite 160 160 45960 0 9403 0 0 0 0 0 xdim ydim
            }
			else
			rotatesprite 160 disp_temp3 disp_temp2 0 9402 0 0 0 0 0 xdim ydim
        digitalnumber 2472 160 170 current_sg_ammo 0 0 0 0 0 xdim ydim
        }
    }

ife CHAR -1 set RETURN 1

    ifn player_using_horse -1
        {
          geta[player_using_horse].ang disp_temp2
          getp[].ang disp_temp3
          getincangle disp_temp4 disp_temp2 disp_temp3
          ifg disp_temp4 -375
           ifl disp_temp4 375
            {
             geta[player_using_horse].ang e1
              getp[].ang e2
              sub e1 e2
              sin e3 e1
              cos e4 e1
              mulvar e3 160
              ifn e4 0 divvarvar e3 e4
              add e3 160
              // set e1 0
              set BIKEHUD_X e3
              getp[].horiz BIKEHUD_Y
              add BIKEHUD_Y 124

                getav[player_using_horse].forward_accelerate disp_temp
                set disp_temp2 player[].player_par
                set disp_temp4 THISACTOR
                ifand disp_temp4 1 add disp_temp4 4096
                add disp_temp2 disp_temp4
                shiftvarl disp_temp2 6
                sin disp_temp disp_temp2
                getav[player_using_horse].forward_accelerate disp_temp5
                ifl disp_temp5 200 set disp_temp 0
                else ifl disp_temp5 400 shiftvarr disp_temp 16
                else ifl disp_temp5 800 shiftvarr disp_temp 14
                else ifl disp_temp5 1000 shiftvarr disp_temp 12
                else shiftvarr disp_temp 10
                sub BIKEHUD_Y disp_temp

              set BIKEZ 16777216
              getav[player_using_horse].forward_accelerate e1
              ifl e1 200 set e1 200
              div e1 100
              ifn e1 0 divvarvar BIKEZ e1
              ifg BIKEZ 55000 set BIKEZ 55000
              getsector[].floorshade disp_temp6
              getsector[].floorpal disp_temp7
               guniqhudid 110
              rotatesprite BIKEHUD_X BIKEHUD_Y BIKEZ 0 21766 disp_temp6 disp_temp7 4096 0 0 xdim ydim
               guniqhudid 0
              }
		ife GUN_HANDS 2 set RETURN 1 else set RETURN 0
        }

 ifg player_bike 0 state theebikehudstate

  ife player_in_vehicle 1 set RETURN 1

  ifn CONTROL_VR -1 set RETURN 1

   // ife player[].weapon_pos 10 { set RETURN 1 break }

 ifn MISSION_UP 0 { set RETURN 1 break }

ifn sprite[].sectnum -1
ifn sprite[].sectnum 4096
    {
    gets[].floorpal temp
    ife temp 3
    ife temp 5
    ife temp 9
    ife temp 10
    ife temp 11
    ife temp 12
    ife temp 13
    ife temp 14
    ife temp 15
    ife temp 16
    ife temp 17
    ife temp 18
    ife temp 19
    ife temp 20
    ife temp 21
    ife temp 22
    ife temp 23
    ife temp 24
    ife temp 25
    set pal 0
    else
    set pal temp

    }

ife CHAR 3 ife pal 0 set pal 11
ife CHAR 12 ife pal 0 set pal 3

switch ROUNDHOUSE_KICK
case 27
 break
case 0
  rotatesprite 120 200 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 130 190 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 140 180 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 150 170 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 4
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 140 180 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 5
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 150 175 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
 break
case 6
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 160 170 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 7
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 170 165 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 8
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 180 160 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 9
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 190 155 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 10
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 200 155 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 11
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 210 150 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 12
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 220 160 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 13
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 230 170 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 14
  set disp_temp3 CKNEE
  rotatesprite 250 175 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 15
  set disp_temp3 CKNEE
  rotatesprite 260 180 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
case 16
  set disp_temp3 CKNEE
  rotatesprite 270 190 49152 0 disp_temp3 shade pal 0 0 0 xdim ydim
break
endswitch

ifg SLIDE_KICK 0
{
set temp2 knockbackang
geta[].ang temp4
sub temp4 temp2
div temp4 2
set temp5 200
sub temp5 temp4

getp[].horiz temp2
ifl temp2 50 set temp2 50
add temp2 100

clamp temp2 180 350
clamp temp5 0 420
}

switch SLIDE_KICK
case 27
 break
case 0
case 22
  rotatesprite temp5 temp2 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 1
case 21
  rotatesprite temp5 temp2 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 2
case 20
  rotatesprite temp5 temp2 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 3
case 19
  rotatesprite temp5 temp2 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 4
case 18
  rotatesprite temp5 temp2 49152 0 CKNEE shade pal 0 0 0 xdim ydim
 break
case 5
case 6
case 7
case 8
case 9
case 10
case 11
case 12
case 13
case 14
case 15
case 16
case 17
  set disp_temp3 CKNEE
  add disp_temp3 1
  add temp2 5
  rotatesprite temp5 temp2 49152 -128 disp_temp3 shade pal 0 0 0 xdim ydim
 break
endswitch

switch TWIRL_KICK
case 0
case 1
  rotatesprite 260 195 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 2
case 3
case 4
case 5
case 6
case 7
case 8
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 260 205 49152 1024 disp_temp3 shade pal 4 0 0 xdim ydim
 break
case 9
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 250 200 49152 1024 disp_temp3 shade pal 4 0 0 xdim ydim
 break
case 10
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 240 195 49152 1024 disp_temp3 shade pal 4 0 0 xdim ydim
 break
case 11
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 230 190 49152 1024 disp_temp3 shade pal 4 0 0 xdim ydim
 break
case 12
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 220 185 49152 1024 disp_temp3 shade pal 4 0 0 xdim ydim
 break
case 13
  rotatesprite 200 180 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 14
  rotatesprite 180 180 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 15
case 16
case 17
case 18
case 19
case 20
 break
endswitch

switch SPIN_KICK
case 19
case 20
 break
case 0
case 1
case 2
case 3
case 4
case 5
case 6
case 7
case 8
  rotatesprite 260 195 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 9
  rotatesprite 250 190 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 10
  rotatesprite 240 185 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 11
  rotatesprite 230 180 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 12
  rotatesprite 220 175 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 13
  rotatesprite 200 170 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 14
  rotatesprite 180 170 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 15
case 16
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite 160 160 49152 1024 disp_temp3 shade pal 4 0 0 xdim ydim
 break
case 17
  rotatesprite 160 170 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
case 18
  rotatesprite 160 180 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
 break
endswitch

switch DROP_KICK
case 0
case 1
case 2
case 3
case 4
case 15
case 16
case 17
    set x 200
  set y 183
  rotatesprite x y 49152 0 CKNEE shade pal 0 0 0 xdim ydim
  sub x 100
  sub y 10
  rotatesprite x y 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
break
case 5
case 6
case 7
case 8
case 9
case 10
case 11
case 12
case 13
case 14
  set disp_temp3 CKNEE
  add disp_temp3 1
    set x 160
  set y 183
  rotatesprite x y 49152 128 disp_temp3 shade pal 0 0 0 xdim ydim
  sub x 20
  sub y 10
  rotatesprite x y 49152 1152 disp_temp3 shade pal 4 0 0 xdim ydim
 break
endswitch

switch FLYING_KICK
case 0
case 1
case 2
case 3
case 4
case 15
case 16
case 17
  set x 140
  set y 183
  rotatesprite x y 49152 0 CKNEE shade pal 0 0 0 xdim ydim
break
case 5
case 6
case 7
case 8
case 9
case 10
case 11
case 12
case 13
case 14
  set x 150
  set y 185
  set disp_temp3 CKNEE
  add disp_temp3 1
  rotatesprite x y 49152 128 disp_temp3 shade pal 0 0 0 xdim ydim
 break
endswitch

  ife CHAR 0
    {
    ife TIMEZONE 2 set disp_temp3 11039 else
    ifand CHAR_APP 1
        {
        ifg UPPER_CUT 17 set disp_temp3 11153 else
        set disp_temp3 11152
        }
    else set disp_temp3 11039
    }
    else
  ife CHAR 1 set disp_temp3 11099 else
  ife CHAR 2
	{
	ifand CHAR_APP 4 set disp_temp3 32278 else
	set disp_temp3 11043
	}
	else
  ife CHAR 3
	{
	ifand CHAR_APP 16 set disp_temp3 16437
	else set disp_temp3 11044
	}
	else
  ife CHAR 4
    {
    ifand CHAR_APP 2 set disp_temp3 23868
    else set disp_temp3 11120
    }
    else
  ife CHAR 5 set disp_temp3 11042 else
  ife CHAR 6 set disp_temp3 11040 else
  ife CHAR 7 set disp_temp3 11041 else
  ife CHAR 9 set disp_temp3 11038 else
  ife CHAR 10 set disp_temp3 12102 else
  ife CHAR 11 set disp_temp3 11043 else
  ife CHAR 12 set disp_temp3 12888 else
  ife CHAR 13 set disp_temp3 16437 else
  ife CHAR 14 set disp_temp3 20804 else
  ife CHAR 15 set disp_temp3 16540 else
  ife CHAR 16
	{
	ifg UPPER_CUT 17 set disp_temp3 32336 else
	set disp_temp3 32335
	}
	else
  ife CHAR 17 set disp_temp3 27316 else
  set disp_temp3 11038

guniqhudid 100
switch UPPER_CUT
case 20
break
default
  set x 170
  set y 440
  set disp_temp4 UPPER_CUT
  mulvar disp_temp4 18
  sub y disp_temp4
  ifg UPPER_CUT 14 set disp_temp8 96 else set disp_temp8 0
  rotatesprite x y 40960 disp_temp8 disp_temp3 shade arm_pal 4096 0 0 xdim ydim
break
endswitch
guniqhudid 0

switch QUICKK
case 14
 guniqhudid 0
 break
case 0
case 1
case 2
case 3
case 4
  set x 110
  add x weapon_xoffset
  sub x looking_angSR1

  set y 283
  add y looking_arc
  sub y gun_pos
  set disp_temp4 QUICKK
   mulvar disp_temp4 4
  sub y disp_temp4
  guniqhudid 106
  rotatesprite x y 49152 1024 CKNEE shade pal 4100 0 0 xdim ydim
break
case 5
case 8
  set x 150
  add x weapon_xoffset
  sub x looking_angSR1

  set y 215
  add y looking_arc
  sub y gun_pos
  set disp_temp3 CKNEE
  add disp_temp3 1
   guniqhudid 107
  rotatesprite x y 49152 1024 disp_temp3 shade pal 4100 0 0 xdim ydim
 break
case 6
case 7
  set x 150
  add x weapon_xoffset
  sub x looking_angSR1

  set y 215
  add y looking_arc
  sub y gun_pos
  set disp_temp3 CKNEE
  add disp_temp3 1
   guniqhudid 107
  rotatesprite x y 47152 1024 disp_temp3 shade pal 4100 0 0 xdim ydim
 break
case 9
case 10
case 11
case 12
case 13
  set x 110
  add x weapon_xoffset
  sub x looking_angSR1

  set y 233
  add y looking_arc
  sub y gun_pos
  set disp_temp4 QUICKK
  mulvar disp_temp4 4
  add y disp_temp4
   guniqhudid 106
  rotatesprite x y 49152 1024 CKNEE shade pal 4100 0 0 xdim ydim
break
endswitch

ife player_in_vehicle 0
    {
    ife player[].hard_landing 5
        {
        set QUICKK 14
        set disp_temp 210
        getp[].horiz disp_temp2
        div disp_temp2 5 add disp_temp disp_temp2
        rotatesprite 230 disp_temp 49152 0 CKNEE shade pal 0 0 0 xdim ydim
        rotatesprite 90 disp_temp 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
        }
	else
    ifg player[].falling_counter 10
        {
        set QUICKK 14
        set disp_temp 210
        getp[].horiz disp_temp2
        div disp_temp2 5 add disp_temp disp_temp2
        rotatesprite 230 disp_temp 49152 0 CKNEE shade pal 0 0 0 xdim ydim
        rotatesprite 90 disp_temp 49152 1024 CKNEE shade pal 4 0 0 xdim ydim
        }
	else
	ifp pducking
	 ifp pstanding
        {
        set QUICKK 14
        set disp_temp 220
        getp[].horiz disp_temp2
        div disp_temp2 5 add disp_temp disp_temp2
        rotatesprite 230 disp_temp 49152 0 CKNEE shade pal 0 0 0 xdim ydim
        }
    }


  ife CHAR 0
    {
    ifand CHAR_APP 1 set disp_temp3 19885 else
    set disp_temp3 12211
    }
    else
  ife CHAR 1 set disp_temp3 12217 else
  ife CHAR 2
	{
	ifand CHAR_APP 4 set disp_temp3 32283 else
	set disp_temp3 12215
	}
	else
  ife CHAR 3
	{
	ifand CHAR_APP 16 set disp_temp3 16444 else
	set disp_temp3 12212
	}
	else
  ife CHAR 4
    {
    ifand CHAR_APP 2 set disp_temp3 12220 else
    set disp_temp3 12218
    }
    else
  ife CHAR 5 set disp_temp3 12221 else
  ife CHAR 6 set disp_temp3 12216 else
  ife CHAR 7 set disp_temp3 12214 else
  ife CHAR 9 set disp_temp3 12210 else
  ife CHAR 10 set disp_temp3 12213 else
  ife CHAR 11 set disp_temp3 12215 else
  ife CHAR 12 set disp_temp3 12219 else
  ife CHAR 13 set disp_temp3 16444 else
  ife CHAR 14 set disp_temp3 20875 else
  ife CHAR 15 set disp_temp3 12210 else
  ife CHAR 17 set disp_temp3 27293 else
  set disp_temp3 12210

  ife GOT_KNIFE 1
	{
	ife CHAR 0 ifand JAMES_UPGRADE 32768 set MELEE_GRAPHIC 29792
	else ife CHAR 1 ifand ZAXTOR_UPGRADE 32768 set MELEE_GRAPHIC 29794
	else ife CHAR 2 ifand MERLIJN_UPGRADE 32768 set MELEE_GRAPHIC 29796
	else ife CHAR 3 ifand HIGHWIRE_UPGRADE 32768 set MELEE_GRAPHIC 29798
	else ife CHAR 4 ifand SANG_UPGRADE 32768 set MELEE_GRAPHIC 29800
	else ife CHAR 5 ifand RUSTY_UPGRADE 32768 set MELEE_GRAPHIC 29802
	else ife CHAR 6 ifand GEOFFREY_UPGRADE 32768 set MELEE_GRAPHIC 29804
	else ife CHAR 7 ifand MIKKO_UPGRADE 32768 set MELEE_GRAPHIC 29806
	else ife CHAR 13 ifand MICKY_UPGRADE 32768 set MELEE_GRAPHIC 29808
	else ife CHAR 14 ifand SNOWFALL_UPGRADE 32768 set MELEE_GRAPHIC 29810
	else ife CHAR 17 ifand KAGURA_UPGRADE 32768 set MELEE_GRAPHIC 29812
	else set MELEE_GRAPHIC 12208
	}
	else // standard knife
  ife GOT_KNIFE 2 set MELEE_GRAPHIC 12207 // silver knife
  ife GOT_KNIFE 4 set MELEE_GRAPHIC 11119 // Ice Axe

ifn sprite[].sectnum -1 ifn sprite[].sectnum 4096
gets[].floorpal pal

ife GOT_KNIFE 10 // Jane's arm blade
switch KNIFE_ATTACK
case 27
 break
case 0
  rotatesprite 20 200 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 20 200 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 190 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 20 200 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 190 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 180 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 40 190 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 180 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 170 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
 break
case 4
  rotatesprite 60 180 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 170 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 170 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 5
  rotatesprite 80 170 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 170 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 170 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
 break
case 6
  rotatesprite 100 170 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 170 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 170 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 7
  rotatesprite 120 170 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 170 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 170 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 8
  rotatesprite 140 170 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 170 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 160 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 9
  rotatesprite 160 170 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 160 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 160 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 10
  rotatesprite 180 160 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 160 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 160 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 11
  rotatesprite 200 160 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 160 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 160 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 12
  rotatesprite 220 160 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 160 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 160 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 13
  rotatesprite 240 160 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 160 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 170 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 14
  rotatesprite 260 160 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 170 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 170 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 15
  rotatesprite 280 170 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 170 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 180 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
case 16
  rotatesprite 300 170 HALFSIZE 0 13044 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 180 HALFSIZE 0 13044 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 190 HALFSIZE 0 13044 0 pal 0 0 0 xdim ydim
break
endswitch
else
ife GOT_KNIFE 3 // combat shovel
switch KNIFE_ATTACK
case 27
 break
case 0
  rotatesprite 20 200 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 20 200 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 190 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 20 200 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 190 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 180 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 40 190 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 180 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 170 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 4
  rotatesprite 60 180 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 5
  rotatesprite 80 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 170 50000 0 12209 shade pal 0 0 0 xdim ydim
 break
case 6
  rotatesprite 100 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 7
  rotatesprite 120 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 8
  rotatesprite 140 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 9
  rotatesprite 160 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 10
  rotatesprite 180 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 11
  rotatesprite 200 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 12
  rotatesprite 220 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 160 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 13
  rotatesprite 240 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 160 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 14
  rotatesprite 260 160 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 170 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 15
  rotatesprite 280 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 170 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 180 50000 0 12209 shade pal 0 0 0 xdim ydim
break
case 16
  rotatesprite 300 170 50000 0 12209 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 180 50000 0 12209 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 190 50000 0 12209 shade pal 0 0 0 xdim ydim
break
endswitch
else
ife GOT_KNIFE 4 // Ice Axe
switch KNIFE_ATTACK
case 27
 break
case 0
  rotatesprite 20 220 60000 128 11119 shade pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 20 220 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 210 60000 128 11119 shade pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 20 220 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 210 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 200 60000 128 11119 shade pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 40 210 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 200 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 190 60000 128 11119 shade pal 0 0 0 xdim ydim
 break
case 4
  rotatesprite 60 200 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 190 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 190 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 5
  rotatesprite 80 190 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 190 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 190 60000 128 11119 shade pal 0 0 0 xdim ydim
 break
case 6
  rotatesprite 100 190 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 190 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 190 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 7
  rotatesprite 120 190 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 190 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 190 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 8
  rotatesprite 140 190 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 190 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 180 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 9
  rotatesprite 160 190 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 180 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 180 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 10
  rotatesprite 180 180 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 180 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 180 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 11
  rotatesprite 200 180 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 180 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 180 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 12
  rotatesprite 220 180 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 180 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 180 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 13
  rotatesprite 240 180 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 180 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 190 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 14
  rotatesprite 260 180 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 190 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 190 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 15
  rotatesprite 280 190 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 190 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 200 60000 128 11119 shade pal 0 0 0 xdim ydim
break
case 16
  rotatesprite 300 190 60000 128 11119 shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 200 60000 128 11119 shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 210 60000 128 11119 shade pal 0 0 0 xdim ydim
break
endswitch
else
ife GOT_KNIFE 5 // Frying Pan
    {
    set disp_temp6 20067
    ife WEP0_BLOODY 1 set disp_temp6 20068 // orc
    ife WEP0_BLOODY 2 set disp_temp6 20069 // human
    ife WEP0_BLOODY 3 set disp_temp6 20070 // liztroop
    ife WEP0_BLOODY 4 set disp_temp6 20071 // pigcop
    ife WEP0_BLOODY 5 set disp_temp6 20072 // paradigm
    ife WEP0_BLOODY 6 set disp_temp6 20073 // skull
    switch KNIFE_ATTACK
    case 27
     break
    case 0
      rotatesprite 20 220 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
     break
    case 1
      rotatesprite 20 220 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 40 210 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
     break
    case 2
      rotatesprite 20 220 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 40 210 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 60 200 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
     break
    case 3
      rotatesprite 40 210 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 60 200 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 80 190 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
     break
    case 4
      rotatesprite 60 200 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 80 190 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 100 180 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 5
      rotatesprite 80 190 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 100 180 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 120 170 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
     break
    case 6
      rotatesprite 100 180 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 120 180 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 140 170 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 7
      rotatesprite 120 180 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 140 170 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 160 170 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 8
      rotatesprite 140 170 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 160 170 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 180 170 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 9
      rotatesprite 160 170 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 180 170 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 200 170 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 10
      rotatesprite 180 170 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 200 170 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 220 180 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 11
      rotatesprite 200 170 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 220 180 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 240 180 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 12
      rotatesprite 220 180 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 240 180 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 260 190 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 13
      rotatesprite 240 180 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 260 190 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 280 190 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 14
      rotatesprite 260 190 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 280 190 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 300 190 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 15
      rotatesprite 280 190 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 300 190 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 320 200 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    case 16
      rotatesprite 300 190 60000 64 disp_temp6 shade pal 33 0 0 xdim ydim // blur 2
      rotatesprite 320 200 60000 64 disp_temp6 shade pal 1 0 0 xdim ydim // blur 1
      rotatesprite 340 210 60000 64 disp_temp6 shade pal 0 0 0 xdim ydim
    break
    endswitch
    }
else
switch KNIFE_ATTACK
case 27
 break
case 0
  rotatesprite 20 200 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 20 200 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
 break
case 1
  rotatesprite 20 200 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 190 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 20 200 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 40 190 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
 break
case 2
  rotatesprite 20 200 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 190 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 180 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 20 200 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 40 190 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 60 180 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
 break
case 3
  rotatesprite 40 190 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 180 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 170 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 40 190 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 60 180 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 80 170 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
 break
case 4
  rotatesprite 60 180 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 170 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 170 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 60 180 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 80 170 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 100 170 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 5
  rotatesprite 80 170 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 170 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 170 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 80 170 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 100 170 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 120 170 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
 break
case 6
  rotatesprite 100 170 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 170 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 170 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 100 170 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 120 170 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 140 170 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 7
  rotatesprite 120 170 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 170 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 170 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 120 170 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 140 170 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 160 170 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 8
  rotatesprite 140 170 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 170 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 160 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 140 170 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 160 170 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 180 160 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 9
  rotatesprite 160 170 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 160 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 160 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 160 170 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 180 160 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 200 160 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 10
  rotatesprite 180 160 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 160 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 160 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 180 160 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 200 160 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 220 160 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 11
  rotatesprite 200 160 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 160 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 160 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 200 160 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 220 160 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 240 160 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 12
  rotatesprite 220 160 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 160 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 160 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 220 160 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 240 160 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 260 160 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 13
  rotatesprite 240 160 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 160 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 170 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 240 160 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 260 160 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 280 170 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 14
  rotatesprite 260 160 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 170 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 170 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 260 160 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 280 170 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 300 170 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 15
  rotatesprite 280 170 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 170 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 180 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 280 170 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 300 170 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 320 180 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
case 16
  rotatesprite 300 170 40960 0 MELEE_GRAPHIC shade pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 180 40960 0 MELEE_GRAPHIC shade pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 190 40960 0 MELEE_GRAPHIC shade pal 0 0 0 xdim ydim
  rotatesprite 300 170 40960 0 disp_temp3 shade arm_pal 33 0 0 xdim ydim // blur 2
  rotatesprite 320 180 40960 0 disp_temp3 shade arm_pal 1 0 0 xdim ydim // blur 1
  rotatesprite 340 190 40960 0 disp_temp3 shade arm_pal 0 0 0 xdim ydim
break
endswitch

geta[PLAYER_IDENTITY].shade shade
ifn sprite[].sectnum -1 ifn sprite[].sectnum 4096
gets[].floorpal pal else set pal 0

ife CHAR 4 // Displays pitchfork if you're playing Sang and using his flying pitchfork
ife player_using_fighter -1
ife player_using_hovertank -1
ife player_using_VR_tank -1
ife player_using_submarine -1
{
            ifand EXTBITS_PRESS 4 set temp3 6369 else
            ifand EXTBITS_PRESS 8 set temp3 6367 else
            ifand EXTBITS_PRESS 32 set temp3 6369 else
            ifand EXTBITS_PRESS 16 set temp3 6367 else set temp3 6368
            set x 160
            sub x wepsway_x
        ifn player[].jetpack_on 0 rotatesprite x 190 NORMALSIZE 0 temp3 shade pal 0 0 0 xdim ydim
}

ife currentweapon 0
{
getu .drawweapon disp_temp
ife disp_temp 2
ifn temp_weap 0 // temp weapon icons
    set disp_temp2 WEAPON_TILE[0]
    else
ife temp_weap 0
ife UPPER_CUT 20
    {
    set disp_temp2 3833
    ife CHAR 0
        {
        ifp pboosted state JSORAORAPUNCH else state JSPUNCH
        }
    else ife CHAR 1 state JSPUNCH
    else ife CHAR 2 state MPUNCH
    else ife CHAR 3 state JSPUNCH
    else ife CHAR 4 state JSPUNCH
    else ife CHAR 5 state JSPUNCH
    else ife CHAR 6 state JSPUNCH
    else ife CHAR 7 state JSPUNCH
    else ife CHAR 9 state JSPUNCH
    else ife CHAR 10 state JSPUNCH
    else ife CHAR 11 state JSPUNCH
    else ife CHAR 12 state JSPUNCH
    else ife CHAR 13 state JSPUNCH
    else ife CHAR 14 state JSPUNCH
    else ife CHAR 15 state JSPUNCH
    else ife CHAR 17 state JSPUNCH
    else
        {
        ifn pal 1
         ifn pal 2
          ifn pal 4
           ifn pal 7
            ifn pal 8
             ifn pal 17
              ifn pal 19
            {
            getp[].palookup pal
            ife CHAR 3 ife pal 0 set pal 11
            }
        switch weaponcount
            case 14
            case 0
             break
            case 1
            case 2
            case 3
            case 4
              set x 200
              add x weapon_xoffset
              sub x looking_angSR1

              set y 283
              add y looking_arc
              sub y gun_pos
              set disp_temp4 weaponcount
               mulvar disp_temp4 4
              sub y disp_temp4
              guniqhudid 160
              rotatesprite x y 49152 0 CKNEE shade pal 4096 0 0 xdim ydim
              guniqhudid 0
            break
            case 5
            case 8
              set x 150
              add x weapon_xoffset
              sub x looking_angSR1

              set y 215
              add y looking_arc
              sub y gun_pos
              set disp_temp3 CKNEE
              add disp_temp3 1
              guniqhudid 160
              rotatesprite x y 49152 0 disp_temp3 shade pal 4096 0 0 xdim ydim
              guniqhudid 0
             break
            case 6
            case 7
              soundonce KICK_SWING
              set x 150
              add x weapon_xoffset
              sub x looking_angSR1

              set y 215
              add y looking_arc
              sub y gun_pos
              set disp_temp3 CKNEE
              add disp_temp3 1
              guniqhudid 160
              rotatesprite x y 47152 0 disp_temp3 shade pal 4096 0 0 xdim ydim
              guniqhudid 0
             break
            case 9
            case 10
            case 11
            case 12
            case 13
              set x 200
              add x weapon_xoffset
              sub x looking_angSR1

              set y 233
              add y looking_arc
              sub y gun_pos
              set disp_temp4 weaponcount
              mulvar disp_temp4 4
              add y disp_temp4
              guniqhudid 160
              rotatesprite x y 49152 0 CKNEE shade pal 4096 0 0 xdim ydim
              guniqhudid 0
        break
        endswitch
            }
        }
    }


state weapon_drawcode

ifg scope 0
    {
    ife scope 2
        {
        ifg display_rot 2047 set display_rot 0
        add display_rot 1
        guniqhudid 150
        rotatespritea 160 100 NORMALSIZE display_rot 4810 10 0 4096 -255 0 0 xdim ydim // Crosshair
        guniqhudid 151
        rotatesprite 160 100 16384 0 4966 0 0 4096 0 0 xdim ydim // Crosshair

        ifl display_rot2 0 set display_rot2 2048
        sub display_rot2 1
        guniqhudid 152
        rotatespritea 160 100 HALFSIZE display_rot2 4810 0 0 4096 -255 0 0 xdim ydim // Crosshair
        guniqhudid 0
        }

    else // sniper scope
        {
          set x 160
          set disp_temp2 wepsway_x
          div disp_temp2 2
          sub x disp_temp2
          set y 100
          set disp_temp3 wepsway_y
          div disp_temp3 2
          sub y disp_temp3
        guniqhudid 150
        rotatesprite x y NORMALSIZE 0 4962 shade pal 4096 0 0 xdim ydim // farthest part of scope
        guniqhudid 151
        rotatespritea x y 67150 0 4969 0 121 4097 -253 0 0 xdim ydim // 'blur'
        guniqhudid 152
        rotatesprite 160 100 16384 0 4966 0 0 4096 0 0 xdim ydim // Crosshair
        set disp_temp4 2048
        set disp_temp5 gun_spread
        mul disp_temp5 256
        mul disp_temp4 GUN_ACCURACY
        add disp_temp4 disp_temp5
        guniqhudid 153
        rotatesprite 160 100 disp_temp4 0 5021 0 33 4096 0 0 xdim ydim // Crosshair
        set x 160
        sub x wepsway_x
        set y 100
        sub y wepsway_y
        guniqhudid 154
        rotatesprite x y 96638 0 4962 shade 0 4096 0 0 xdim ydim // closest part of scope
        guniqhudid 155
        rotatespritea x y 96638 0 4969 25 0 4129 -253 0 0 xdim ydim // closest part of scope

        ifl player_shade_diff -5
            {
            set weap_disp_temp3 player_shade_diff
            mulvar weap_disp_temp3 2
            guniqhudid 156
            rotatespritea x y 43000 0 2587 player_shade_diff wall_pal 4129 weap_disp_temp3 0 0 xdim ydim // Glass in holosight
            }
        guniqhudid 0
        }
    }

// ladder climbing animation

ifg onladder 0
 ifn LADDERTYPE 2
    {
    ifand BITS_PRESS 1 nullop else
    ifand BITS_PRESS 2 nullop else
    {
        ifg fpress 0
        {
        ife disp_gametic_haschanged 1 add LADDER_ANIM1 1
        ifg LADDER_ANIM1 10
            {
            ife disp_temp7 1 set disp_temp7 0 else set disp_temp7 1
            set LADDER_ANIM1 0
            }
        }
        else
        ifg bpress 0
        {
        ife disp_gametic_haschanged 1 add LADDER_ANIM1 1
        ifg LADDER_ANIM1 10
            {
            ife disp_temp7 1 set disp_temp7 0 else set disp_temp7 1
            set LADDER_ANIM1 0
            }
        }
  ife CHAR 0
    {
    ifand CHAR_APP 1
        {
        ife disp_temp7 1 set disp_temp 19890
        else set disp_temp 19891
        }
    else set disp_temp 8973
    }
      else ife CHAR 1 set disp_temp 8978
      else ife CHAR 2
		{
		ifand CHAR_APP 4 set disp_temp 32271
		else set disp_temp 8977
		}
      else ife CHAR 3
		{
		ifand CHAR_APP 16 set disp_temp 8974
		else set disp_temp 8972
		}
      else ife CHAR 4
        {
        ifand CHAR_APP 2 set disp_temp 8982
        else set disp_temp 8972
        }
      else ife CHAR 5 set disp_temp 9082
      else ife CHAR 6 set disp_temp 8975
      else ife CHAR 7 set disp_temp 8976
      else ife CHAR 9 set disp_temp 8972
      else ife CHAR 10 set disp_temp 14582
      else ife CHAR 11 set disp_temp 8977
      else ife CHAR 12 set disp_temp 12901
      else ife CHAR 13 set disp_temp 8974
      else ife CHAR 14 set disp_temp 20981
      else ife CHAR 15 set disp_temp 8972
      else ife CHAR 17 set disp_temp 27297
	  else ife CHAR 20 set disp_temp 3587

                ifg bpress 0 ife LADDERTYPE 1
                {
                rotatesprite 40 200 40960 1024 CHOLDING_L shade arm_pal 4 0 0 xdim ydim
                rotatesprite 280 200 40960 0 CHOLDING_R shade arm_pal 0 0 0 xdim ydim
                }
                else
                  {
                  set LADDER_ANIM2 190
                  add LADDER_ANIM2 LADDER_ANIM1
                  ifg LADDER_ANIM2 320 set LADDER_ANIM2 190
                  ifl LADDER_ANIM2 190 set LADDER_ANIM2 190
                    ifn LADDERTYPE 3 // dont display this if using the ice axe
                        {
                          ife disp_temp7 1
                          rotatesprite 160 LADDER_ANIM2 40960 0 disp_temp shade arm_pal 0 0 0 xdim ydim
                          else
                          rotatesprite 160 LADDER_ANIM2 40960 1024 disp_temp shade arm_pal 4 0 0 xdim ydim
                        }
                    }
        }
    }

ife debug_stuff 2
    {
    rotatesprite 160 100 NNORMALSIZE 0 5890 0 0 0 0 0 xdim ydim
    }

ife debug_stuff 1
    {
    set disp_temp AMMO_TYPES[cur_weap]
    digitalnumber DIGITALNUM 60 60 disp_temp 0 1 0 0 0 xdim ydim
    digitalnumber DIGITALNUM 60 70 AMMO_TYPE 0 2 0 0 0 xdim ydim
    }

endevent
