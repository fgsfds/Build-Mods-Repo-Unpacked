
setdefname wgr2.def
// setcfgname wgr2.cfg
setgamename WGR2 DEMON THRONE

include WGR2INTRO.CON
include WGR2DEFS.CON
include WGR2USER.CON
include WGR2QUESTS.CON
include WGR2VARS.CON
include WGR2SHARED.CON
include WGR2HUD.CON
include WGR2PLAYER.CON
include ROPE.CON
include WGR2ITEMS.CON
include WGR2MON.CON
include WGRDEMONOVA.CON
include WGREVILKNIGHT.CON
include WGRCYCLORD.CON
include WGRARCHON.CON
include KHANNA.CON

precache TCHEST 338 1
precache TCHEST2 441 1
precache 1680 1764 0
precache 1820 1844 0
precache 2080 2191 0
precache 3473 3505 0
precache 4475 4536 0
precache 4959 5023 0
precache 5252 5352 0
precache 5632 5675 0
precache 5702 5738 0
precache 5776 5867 0
precache 5888 6095 0
precache 6450 6480 0
precache 6489 6545 0
precache 6560 6635 0
precache 6656 6726 0
precache 7424 7522 0
precache 8448 8618 0

action NEWSHELLSPIN 2883 1 1 1 1
action NEWSHELLSPIN2 -7 6 1 1 4
action NEWSHELLSPIN3 3421 1 1 1 1
action NEWSHELLREST 3427 1 1 1 1
action NEWSHELLROLL 2890 1 1 1 1
action SHELLROLLING -1 2 1 1 6
action SHELLSTOPPED -1 1 1 1 1

move SHELLROLL1 48
move SHELLBOUNCE 48 -20
move SHELLBOUNCE2 48
move SHELLROLL2	32
move SHELLROLL3 16
move SHELLSTOP

state shellcode

fall
ifvarg sprite[THISACTOR].zvel 96 setactor[THISACTOR].zvel 96

ifinwater
{
	ifmove SHELLSTOP nullop else
	{
		ifmove SHELLROLL3 nullop else
		move SHELLROLL3 geth
		ifaction NEWSHELLSPIN action NEWSHELLROLL
	}
}

ifvare countvar 0
{
  clipdist 8
  setvar countvar 1
  getactor[THISACTOR].ang angvar
  randvar temp 256
  ifrnd 128 mulvar temp -1
  addvarvar angvar temp
  setactor[THISACTOR].ang angvar
  move SHELLBOUNCE geth getv
  ifactor SHOTGUNSHELL
  {
	  ifrnd 128 sound SHELLFALL3 else sound SHELLFALL4
  }
  else
  {
	  ifrnd 128 sound SHELLFALL1 else sound SHELLFALL2
  }
  resetcount
  cstat 384

}

ifmove SHELLBOUNCE ifcount 6
{
	move SHELLBOUNCE2 geth
	resetcount
}

ifmove SHELLBOUNCE2
{
	setvar tempb 0
	iffloordistl 1 setvar tempb 1
	ifcount 10 setvar tempb 1
	ifvare tempb 1
	{
		ifrnd 128 move SHELLROLL2 geth else
	  	move SHELLROLL1 geth
	  	ifactor SHOTGUNSHELL action NEWSHELLROLL
	  	ifrnd 128 cstator 4
	    resetcount
    }
}


ifmove SHELLROLL1 ifcount 13 { move SHELLROLL2 geth resetcount }
ifmove SHELLROLL2 ifcount 8 { move SHELLROLL3 geth resetcount }
ifmove SHELLROLL3 
  ifcount 6
    ifrnd 32 
{
     move SHELLSTOP
     ifactor NEWSHELL 
	 {
		ifaction NEWSHELLSPIN3 action NEWSHELLREST else
		action 0
	 }
     ifrnd 128 cstat 256 else cstat 260
    
     getactor[THISACTOR].cstat temp

     getactor[THISACTOR].x x
     getactor[THISACTOR].y y
     getactor[THISACTOR].sectnum mysector
     getflorzofslope mysector x y z // z is the return var
     setactor[THISACTOR].z z
}

ifnotmoving
{
	getactor[THISACTOR].ang angvar
	addvar angvar 1024
	randvar temp 256
	ifrnd 128 mulvar temp -1
	addvarvar angvar temp
	setactor[THISACTOR].ang angvar
}

ifhitweapon
{
	getactor[THISACTOR].htang angvar
	ifactor NEWSHELL espawn NEWSHELL else
	espawn SHOTGUNSHELL
	setactor[RETURN].ang angvar
	randvar temp 32
	addvar temp 96
	setactor[RETURN].xvel temp
	killit
}

ifspawnedby APLAYER { ifcount 1560 killit }
else
ifcount 260 killit

ends

useractor notenemy NEWSHELL 0 NEWSHELLSPIN2

ifmove 0
{
	sizeat 4 4
	ifspawnedby APLAYER
	{
		getactor[THISACTOR].z z
		subvar z 7168
		ifvare CURRWEAP 11 
		{
			add z 256
			action NEWSHELLSPIN3
		}
		set temp player[].horiz
		sub temp 100
		shiftl temp 5 sub z temp
		
		
		
		setactor[THISACTOR].z z
		
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
					
		getactor[THISACTOR].ang angvar
		ifvare CURRWEAP 11 
		{
			ifvarand THISACTOR 1
			addvar angvar 32 else
			subvar angvar 32
		}
		else
		subvar angvar 32
		
		setvarvar mx x
		addvar mx 256
		rotatepoint x y mx y angvar mx my
		setactor[THISACTOR].x mx
		setactor[THISACTOR].y my
		randvar temp 384
		addvar temp 512
		mulvar temp -1
		setactor[THISACTOR].zvel temp
		ifvare CURRWEAP 11 
		{
			add temp 256
			seta[].zvel temp
			ifvarand THISACTOR 1
			addvar angvar 384 else
			subvar angvar 384
		}
		else
		subvar angvar 416
		randvar temp 128
		subvarvar angvar temp
		setactor[THISACTOR].ang angvar
		cstat 32768
		getactor[THISACTOR].zvel weap
	}
	else 
	{
		setvar mtype 1
		cstat 128
	}
	move SHELLROLL1 geth
	
}
else
iffloordistl 1 
setvar mtype 1


ifvare mtype 1
state shellcode
else 
{
	getactor[THISACTOR].zvel temp
	ifvarvarg temp weap
	{
		subvarvar temp weap
		shiftvarr temp 1
		addvarvar weap temp
		setactor[THISACTOR].zvel weap
	}
	fall
	
	ifcount 1 { cstat 128 ifaction NEWSHELLSPIN3 ifrnd 128 cstator 4 }
}
ifvarg sprite[THISACTOR].zvel 160 setactor[THISACTOR].zvel 160

enda

useractor notenemy 2534 0 state shellcode enda // SHELL +1

useractor notenemy SHOTGUNSHELL 0 state shellcode enda // shotgunshell

spritenoshade ROCKETHALO
useractor notenemy ROCKETHALO
cstat 642
setactor[THISACTOR].shade -127
ifrnd 128 cstator 4
ifrnd 128 cstator 8
sizeat 16 16
ifcount 1 killit
enda

useractor notenemy POWBLADE 0

ifmove 0
{
	move INIT
	sizeat 40 44
	cstat 32
	setactor[THISACTOR].mdflags 16
    setvar command 32768 // float flag
}

	getactor[myspawner].x x
	getactor[myspawner].y y
	getactor[myspawner].z z
	subvar z 3072
	setactor[THISACTOR].z z
	setvarvar mx x
	addvar mx 1280

	rotatepoint x y mx y peractor1 hitx hity
	setsprite THISACTOR hitx hity z
	addvar peractor1 32

	getactor[THISACTOR].ang angvar
	addvar angvar 128
	setactor[THISACTOR].ang angvar


ifvarand pow 256 nullop else killit

enda

eventloadactor ENERGYBALL
geta[].lotag lotag
seta[].lotag 0
geta[].hitag hitag
seta[].hitag 0
geta[].cstat initcstat
ifn sprite[].extra -1
geta[].extra activator
seta[].extra -2
ifn lotag 0 cstat 32768
enda

action EBALLFRAMES -3 1 1 1 1
useractor notenemy ENERGYBALL 0

ife peractor1 0 break
ifaction 0 
{
	action EBALLFRAMES
	seta[].cstat initcstat
	cstator 256
}

ifaction EBALLFRAMES
{
	ife target -1
	{
		set mtype hitag
		add mtype 1
		ife mtype 4 set mtype 0
		
		set spriteid 0
		whilevarn spriteid 16384
		{
			ife sprite[spriteid].picnum ENERGYBALL
			ife actorvar[spriteid].hitag mtype
				set target spriteid
			add spriteid 1
			ifn target -1 set spriteid 16384
		}
		ifn target -1
		{
			geta[target].x mx
			geta[target].y my
			sub mx sprite[].x
			sub my sprite[].y
			getangle angvar mx my
			setactor[THISACTOR].ang angvar
		}
	}
	else
	ifl mtype 5
	{
		add countvar 1
		ife countvar 606 set mtype 5
		ifhitweapon
		{
			strength 0
			sizeto 128 128
			sizeto 128 128
			sizeto 128 128
		}
		ife sprite[].xrepeat 128
		ifle countvar 606
		ifcount 3
		{
			resetcount
			// state calczdist
			// ldist temp THISACTOR target
			// ifvare temp 0 setvar temp 1
			// mul zdist 844
			// divvarvar zdist temp	
			// ezshoot zdist DARKPROJ
			soundonce SHOCKLOOP
			espawn LBOLT
			setav[RETURN].target target
			seta[RETURN].pal 21
		}
	}
	
	ife mtype 5
	{
		sizeto 192 192
		ife sprite[].xrepeat 192
		{
			findnearsprite ARCHON 16384 target
			ifn target -1
			{
				geta[target].x mx
				geta[target].y my
				sub mx sprite[].x
				sub my sprite[].y
				getangle angvar mx my
				setactor[THISACTOR].ang angvar
				
				geta[].x initx
				geta[].y inity
				set mx initx
				add mx 768
				rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y angvar x y
				setsprite THISACTOR x y sprite[THISACTOR].z
			
				globalsound SHRINKER_FIRE
				state calczdist
				ldist temp THISACTOR target
				ifvare temp 0 setvar temp 1
				
				mul zdist 256
				divvarvar zdist temp	
				setprojectile[ARCHONPROJ].vel 192
				setprojectile[ARCHONPROJ].spawns FIRERING
				ezshoot zdist ARCHONPROJ
				setprojectile[ARCHONPROJ].vel 768
				setprojectile[ARCHONPROJ].spawns EXPLOSION3
				setav[RETURN].target target
				state projzveltotarg
				seta[RETURN].pal 21
				seta[RETURN].xrepeat 64
				seta[RETURN].yrepeat 64
				seta[].x initx
				seta[].y inity
				
				set mtype 6
				setav[target].peractor1 150
				ifn activator 0 state activatorstate
			}
		}
	}
}
enda


state bouldercollide
	
	setvar hitsprite -1
	setvarvar temp RETURN
	andvar temp 49152
	ifvare temp 32768
	{
		// hit a wall
		setvarvar hitwall RETURN
		andvar hitwall 16383
		getwall[hitwall].point2 currwall
		getwall[hitwall].x mx
		getwall[hitwall].y my
		getwall[currwall].x x
		getwall[currwall].y y
		subvarvar mx x
		subvarvar my y
		getangle angvar mx my
	}
	else
	{
		addvar RETURN 16384
		ifvarl RETURN 16384 ifvarg RETURN -1 // hit a sprite
		{
			setvarvar hitsprite RETURN
			getactor[RETURN].ang angvar
			ifvarg peractor1 150
			{
				getactor[RETURN].htextra temp
				set tempb peractor1
				mul tempb sprite[].xrepeat
				shiftr tempb 10
				ife RETURN player[].i { ifg tempb 170 set tempb 170 }
				add temp tempb
				setactor[RETURN].htextra temp
				setactor[RETURN].htpicnum RPG
				setactor[RETURN].htowner THISACTOR
				setactor[RETURN].htang sprite[THISACTOR].ang
				ifvare actorvar[RETURN].monstatus 1
					state randsquishsound else
				ife RETURN player[].i state randsquishsound
				ifn weap 0
				{
					getav[RETURN].burning burning
					ife weap 1 sub burning 50
					ife weap 2 add burning 50
					setav[RETURN].burning burning
					ife RETURN player[].i
					{
						seta[].htextra 1500
						seta[].htpicnum RPG
						seta[].htowner player[].i
						ifn myspawner -1 set retaliate myspawner
					}
				}
			}
			ifvarg actorvar[RETURN].monstatus 0 break
			// ifvarand sprite[RETURN].cstat 16 nullop else break
		}
		else break
	}

	getactor[THISACTOR].ang tempb
    getincangle tempc angvar tempb
    subvarvar angvar tempc
    ifvarn hitsprite -1 addvar angvar 1024
    ifvarg angvar 2047 subvar angvar 2048
    ifvarl angvar 0 addvar angvar 2048
    setactor[THISACTOR].ang angvar
    setvarvar lastang angvar
    
	cos xvel angvar
	sin yvel angvar
	shiftvarr xvel 7
	shiftvarr yvel 7
	mulvarvar xvel peractor1
	mulvarvar yvel peractor1
	shiftvarr xvel 8
	shiftvarr yvel 8
	setvarvar countvar xvel
	setvarvar countvarb yvel
	
ends

state bouldercode

ifmove 0
{
	ifvarn lotag 0
	{
		checkactivatormotion lotag
		ifvare RETURN YES setvar lotag 0 else
		break
	}
	move INIT geth
	getactor[THISACTOR].ang lastang
	ifspawnedby APLAYER sizeat 64 64 else
	ifspawnedby RESPAWN sizeat 64 64 else
	ifspawnedby SPAWNER sizeat 64 64
	cstat 257
	getactor[THISACTOR].xrepeat x
	shiftvarl x 1
	addvar x 32
	setactor[THISACTOR].clipdist x
	shiftvarl x 3
	addvar x 100
	setactor[THISACTOR].extra x
	ifvarl sprite[THISACTOR].xrepeat 30
	sizeat 30 30
	
	ifn target -1 // aim at target
	{
		geta[target].x mx
		geta[target].y my

		sub mx sprite[].x
		sub my sprite[].y
		getangle angvar mx my
	
		cos xvel angvar
		sin yvel angvar
		
		shiftvarr xvel 3
		shiftvarr yvel 3
		
		set countvar xvel
		set countvarb yvel
	}
	
// 	getactor[THISACTOR].yrepeat temp
// 	ifvare rendmode 4 mulvar temp 192 else
// 	{
// 		setactor[THISACTOR].mdflags 1
// 		mulvarvar temp yxaspect
// 		divvar temp 358
// 		// mulvar temp 224 // for xdim 1024 ydim 768
// 	}
// 	getactor[THISACTOR].mdzoff tempb
// 	subvarvar tempb temp
// 	setactor[THISACTOR].mdzoff tempb
	
}
fall

getactor[THISACTOR].sectnum mysector

getsector[mysector].floorslope zdist
ifvarn zdist 0
{
	getsector[mysector].wallptr wallpoint
	getwall[wallpoint].point2 currwall
	getwall[wallpoint].x mx
	getwall[wallpoint].y my
	getwall[currwall].x x
	getwall[currwall].y y
	subvarvar mx x
	subvarvar my y
	getangle angvar mx my
	ifvarg zdist 0
	subvar angvar 512
	else
	addvar angvar 512
	ifvarl zdist 0 mulvar zdist -1
	shiftvarr zdist 6
	
	cos xvel angvar
	sin yvel angvar
	shiftvarr xvel 7
	shiftvarr yvel 7
	mulvarvar xvel zdist
	mulvarvar yvel zdist
	
	shiftvarr xvel 7
	shiftvarr yvel 7
	
	addvarvar countvar xvel
	addvarvar countvarb yvel
	
	getactor[THISACTOR].x mx
	setvar temp 4
	mulvarvar temp sprite[THISACTOR].yrepeat
	addvarvar mx temp
	rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y angvar x y
	updatesector x y temp
	ifvarn temp -1 ifvarvarn temp mysector
	ifvarn peractor1 0
	{
		getsector[temp].floorslope tempb
		ifvarn tempb 0
		{
			getsector[temp].wallptr wallpoint
			getwall[wallpoint].point2 currwall
			getwall[wallpoint].x mx
			getwall[wallpoint].y my
			getwall[currwall].x x
			getwall[currwall].y y
			subvarvar mx x
			subvarvar my y
			getangle dodgeang mx my
			getincangle tempc angvar dodgeang
			ifvarg tempc -257 ifvarl tempc 257 nullop else
			{
				ifvarl peractor1 30
				{
					setvar peractor1 0
					setvar countvar 0
					setvar countvarb 0
				}
			}
		}
			
	}
}

	// gradual deceleration due to friction

	mulvar countvar 1000
	divvar countvar 1001
	
	mulvar countvarb 1000
	divvar countvarb 1001
	
	////////////////////////////////////////


setvarvar peractor1 countvar
ifvarl peractor1 0 mulvar peractor1 -1
setvarvar temp countvarb
ifvarl temp 0 mulvar temp -1
addvarvar peractor1 temp

ifvarg peractor1 10
{
	getangle tempb countvar countvarb
	setactor[THISACTOR].ang tempb
}

setactor[THISACTOR].xvel peractor1


ifvarg peractor1 150
{
	ifactorsound THISACTOR EARTHQUAKE nullop else
	sound EARTHQUAKE
}

getactor[THISACTOR].htmovflag RETURN
ifvarn peractor1 0
ifvarn RETURN 0 state bouldercollide

iffloordistl 2
{
	getactor[THISACTOR].z peractor4
	subvarvar peractor4 initz	
	getactor[THISACTOR].z initz
}
else
ifvarl peractor4 0
{
	getactor[THISACTOR].z z
	addvarvar z peractor4
	setactor[THISACTOR].z z
	addvar peractor4 128
	ifvarg peractor4 0 setvar peractor4 0
}

	// check for collision with player
	ifp palive
	ifvarg peractor1 150
	ifcansee
	{
		getplayer[THISACTOR].i spriteid
		getactor[spriteid].x mx
		getactor[spriteid].y my
		subvarvar mx sprite[THISACTOR].x
		subvarvar my sprite[THISACTOR].y
		getangle angvar mx my
		getactor[THISACTOR].ang tempb
		getincangle tempd angvar tempb
		ifvarl tempd 257 ifvarg tempd -257
		{
			findplayer xydist
			getactor[THISACTOR].xrepeat x
			shiftvarl x 4
			ifvarvarl xydist x
			ifcount 30
			{
				resetcount
				setvarvar tempd peractor1
				mulvarvar tempd sprite[THISACTOR].xrepeat
				shiftvarr tempd 10
				ifg tempd 170 set tempd 170
				mulvar tempd -1
				ifvarg tempd -1 setvar tempd -1
				state directdamage
				state randsquishsound
				ifn weap 0
				{
					set spriteid player[].i
					getav[spriteid].burning burning
					ife weap 1 sub burning 50
					ife weap 2 add burning 50
					setav[spriteid].burning burning
					seta[].htextra 1500
					seta[].htpicnum RPG
					seta[].htowner player[].i
					ifn myspawner -1 set retaliate myspawner
				}
			}
		}
	}
	
	// check for collisions with statnum 1 sprites (actors)
	ifcount 10
	ifvarg peractor1 150
	{
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			getactor[spriteid].x mx
			getactor[spriteid].y my
			subvarvar mx sprite[THISACTOR].x
			subvarvar my sprite[THISACTOR].y
			getangle angvar mx my
			getactor[THISACTOR].ang tempb
			getincangle tempd angvar tempb
			ifvarl tempd 257 ifvarg tempd -257
			ifvarvarn spriteid THISACTOR
			{
				dist xydist THISACTOR spriteid
				getactor[THISACTOR].xrepeat x
				shiftvarl x 4
				ifvarvarl xydist x
				{	
					resetcount
					setvarvar tempd peractor1
					mulvarvar tempd sprite[THISACTOR].xrepeat
					shiftvarr tempd 10
					ifvarl tempd 1 setvar tempd 1
					setactor[spriteid].htextra tempd
					setactor[spriteid].htpicnum RPG
					setactor[spriteid].htowner THISACTOR
					setactor[spriteid].htang sprite[THISACTOR].ang
					ifvare actorvar[spriteid].monstatus 1
					state randsquishsound
					ifn weap 0
					{
						getav[spriteid].burning burning
						ife weap 1 sub burning 50
						ife weap 2 add burning 50
						setav[spriteid].burning burning
					}
				}
			}
			nextspritestat spriteid spriteid
		}
	}

// animation speed based on velocity

setvarvar tempd peractor1
divvarvar tempd sprite[THISACTOR].yrepeat


setvarvar tempb peractor1
getactor[THISACTOR].yrepeat tempc
divvar tempc 7
divvarvar tempb tempc
getactor[THISACTOR].pitch temp
ifvare sprite[THISACTOR].angoff 0
addvarvar temp tempb
else
subvarvar temp tempb
setactor[THISACTOR].pitch temp

ifvarg tempd 9 setvar tempd 9

setvar tempb 10
subvarvar tempb tempd

ifvarg peractor1 24
{
	addvar command 1
	ifvarvarg command tempb
	{
		setvar command 0
		getactor[THISACTOR].picnum picnum
		addvar picnum 1
		ifvarg picnum 2095 setvar picnum BOULDER
		setactor[THISACTOR].picnum picnum
	}
}

getactor[THISACTOR].htextra bleeding
ifvarg bleeding 0
{
	getactor[THISACTOR].htang angvar
	cos xvel angvar
	sin yvel angvar
	shiftvarr xvel 7
	shiftvarr yvel 7
	mulvarvar xvel bleeding
	mulvarvar yvel bleeding
	
	getactor[THISACTOR].xrepeat x
	shiftvarr x 1
	divvarvar xvel x
	divvarvar yvel x
	
	addvarvar countvar xvel
	addvarvar countvarb yvel
	
	getangle tempb countvar countvarb
	setactor[THISACTOR].ang tempb
	setvarvar lastang tempb
	
	setvar dodge 0
	
	shiftvarr bleeding 5
	ifvarl bleeding 1 setvar bleeding 1
	whilevarvarn dodge bleeding
	{
		randvar temp 2048
		subvar temp 3072
		ezshoot temp ROCKPROJ
		ifrnd 192 setthisprojectile[RETURN].bsound -1
		setthisprojectile[RETURN].isound -1
		setactor[RETURN].pal sprite[THISACTOR].pal
		setthisprojectile[RETURN].pal sprite[THISACTOR].pal
		randvar tempb 2047
		setactor[RETURN].ang tempb
		randvar tempb 192
		setthisprojectile[RETURN].vel tempb
		setthisprojectile[RETURN].extra 1
		setactor[RETURN].xvel tempb
		setactor[RETURN].xrepeat 32
		setactor[RETURN].yrepeat 32
		addvar dodge 1
	}
}

ifvarand monstflags 1 // indestructible
strength 5000

ifhitweapon
{
	ifdead 
	{
		setvar dodge 0
		getactor[THISACTOR].xrepeat mtype
		shiftvarr mtype 4
		ifvarl mtype 2 setvar mtype 2
		whilevarvarn dodge mtype
		{	
			randvar temp 2048
			subvar temp 3072
			ezshoot temp ROCKPROJ
			ifrnd 192 setthisprojectile[RETURN].bsound -1
			setthisprojectile[RETURN].isound -1
			setactor[RETURN].pal sprite[THISACTOR].pal
			setthisprojectile[RETURN].pal sprite[THISACTOR].pal
			randvar tempb 2047
			setactor[RETURN].ang tempb
			randvar tempb 192 add tempb 256
			setthisprojectile[RETURN].vel tempb
			setthisprojectile[RETURN].extra 1
			setactor[RETURN].xvel tempb
			setactor[RETURN].xrepeat 32
			setactor[RETURN].yrepeat 32
			addvar dodge 1
		}
		spawn BIGSMOKE
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 BREAKROCK
		
		getactor[THISACTOR].xrepeat mtype
		shiftvarr mtype 1
		ifvarg mtype 16
		{
			espawn BOULDER
			setactor[RETURN].pal sprite[THISACTOR].pal
			ifn weap 0 seta[RETURN].mdflags 1
			setactor[RETURN].xrepeat mtype
			setactor[RETURN].yrepeat mtype
			randvar temp 512
			ifrnd 128 mulvar temp -1
			addvarvar temp countvar
			setactorvar[RETURN].countvar temp
			randvar temp 512
			ifrnd 128 mulvar temp -1
			addvarvar temp countvarb
			setactorvar[RETURN].countvarb temp
			
			espawn BOULDER
			setactor[RETURN].pal sprite[THISACTOR].pal
			ifn weap 0 seta[RETURN].mdflags 1
			setactor[RETURN].xrepeat mtype
			setactor[RETURN].yrepeat mtype
			randvar temp 512
			ifrnd 128 mulvar temp -1
			addvarvar temp countvar
			setactorvar[RETURN].countvar temp
			randvar temp 512
			ifrnd 128 mulvar temp -1
			addvarvar temp countvarb
			setactorvar[RETURN].countvarb temp
		}
		killit
	}
}

getincangle temp lastang sprite[THISACTOR].ang

ifvarl temp 512 ifvarg temp -512 nullop else
{
	ifvare sprite[THISACTOR].angoff 0 setactor[THISACTOR].angoff 1024 else
	setactor[THISACTOR].angoff 0
	setvarvar lastang sprite[THISACTOR].ang
}

setvarvar lastang sprite[THISACTOR].ang

ends

ai AITRAP1 0
useractor notenemy TRAP1
ifai 0
{
	ai AITRAP1
}
ifcount 32
{
	soundonce TRAP1SOUND
	resetcount
}
ifpdistl 2048
ifrnd 8
ife invulntime 0
{
	addphealth -10
	palfrom 32 64
	state painsounds
}
enda

eventloadactor CHAINLINK
geta[].extra monstflags
seta[].extra -1
enda

useractor notenemy CHAINLINK 0

ifn monstflags 1 break
ifpdistg 32768 break

ifmove 0
{
	move INIT
	espawn CHAINLINK
	seta[RETURN].cstat sprite[].cstat
	seta[RETURN].xrepeat sprite[].xrepeat
	seta[RETURN].yrepeat sprite[].yrepeat
	cstat 32768
	geta[].x initx
	geta[].y inity
	set peractor4 sprite[].x
	set peractor6 sprite[].y
	rand mtype 2048
	set spriteid 0
	whilevarn spriteid 16384
	{
		ifn sprite[spriteid].picnum GHOST
		ifn sprite THISACTOR
		{
			ldist xydist THISACTOR spriteid
			ifl xydist 4096
			{
				setav[spriteid].myspawner THISACTOR
				changespritesect spriteid sprite[].sectnum
			}
		}	
		add spriteid 1
	}
	break
}

	set temp countvar
	shiftl temp 3
	sin xydist temp
	// shiftr xydist 5
	div xydist 24
	
	set mx initx
	add mx xydist
	rotatepoint initx inity mx inity mtype x y
	
	setsprite THISACTOR x y sprite[].z
	
	set mx peractor4
	sub mx x
	set my peractor6
	sub my y
	// mx and my are the movements since last tic
	

	set spriteid 0
	whilevarn spriteid 16384
	{
		set tempd NO
		ife actorvar[spriteid].myspawner THISACTOR set tempd YES
		else ife sprite[spriteid].statnum 1 
		ifn sprite[spriteid].picnum CAGEWALL
		ifn sprite[spriteid].picnum CHAINLINK
		ife sprite[spriteid].sectnum sprite[].sectnum 
		{
			getav[spriteid].myspawner temp
			ife temp -1 set tempd YES else
			ifn sprite[temp].picnum CHAINLINK set tempd YES
			ife tempd YES
			{
				ldist tempc THISACTOR spriteid
				ifg tempc 4096 set tempd NO
			}
		}
		
		ife tempd YES
		{
			ife sprite[spriteid].statnum 0 changespritestat spriteid 1
			ife sprite[spriteid].statnum 2 changespritestat spriteid 1
			geta[spriteid].x x
			sub x mx
			
			geta[spriteid].y y
			sub y my
			
			ife sprite[spriteid].picnum CHAINLINK 
				setsprite spriteid sprite[].x sprite[].y sprite[spriteid].z
			else
			setsprite spriteid x y sprite[spriteid].z
			
			ife player[].sbs spriteid
			{
				// getp[].posx x
				// sub x mx
				// setp[].posx x
				// seta[player[].i].x x
				// getp[].posy y
				// sub y my
				// setp[].posy y
				// seta[player[].i].y y
				set cagesbs spriteid
				set cagex mx
				set cagey my
			}
			
			seta[spriteid].htbposx x
			seta[spriteid].htbposy y

		}
		add spriteid 1
	}

	set peractor4 sprite[].x
	set peractor6 sprite[].y
	add countvar 1

enda

eventloadactor CAGEWALL
geta[].lotag lotag
seta[].lotag 0
enda

useractor notenemy CAGEWALL 50

	
	ife lotag 0 break
	ifmove 0
	{
		move INIT
		getactor[THISACTOR].xrepeat peractor1
		divvar peractor1 2
	}
	
	ifvarg burning 0
	{
		addvar burning 2 // flammable things burn until they die
		ifspritepal 2 nullop else spritepal 2
		state imonfire
		ifhitweapon ifdead 
		{
			strength 0
			getactor[THISACTOR].xrepeat temp
			subvar temp 1
			setactor[THISACTOR].xrepeat temp
			ifvarvarl temp peractor1
			{
				spawn BIGSMOKE 
				killit 
			}
		}
	} else
	ifhitweapon
	{
		ifwasweapon FTPROJ addvar burning 30
		ifwasweapon RPG addvar burning 30
		ifwasweapon RADIUSEXPLOSION addvar burning 30
	}
	else ifl burning 0 set burning 0

enda

eventloadactor BOULDER
getactor[THISACTOR].extra monstflags
ifvare monstflags -1 setvar monstflags 0
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

actor BOULDER 1000 state bouldercode enda

actor 2081 1000 state bouldercode enda
actor 2082 1000 state bouldercode enda
actor 2083 1000 state bouldercode enda
actor 2084 1000 state bouldercode enda
actor 2085 1000 state bouldercode enda
actor 2086 1000 state bouldercode enda
actor 2087 1000 state bouldercode enda
actor 2088 1000 state bouldercode enda
actor 2089 1000 state bouldercode enda
actor 2090 1000 state bouldercode enda
actor 2091 1000 state bouldercode enda
actor 2092 1000 state bouldercode enda
actor 2093 1000 state bouldercode enda
actor 2094 1000 state bouldercode enda
actor 2095 1000 state bouldercode enda

spritenoshade LOBTRAIL
useractor notenemy LOBTRAIL 0 
	
	ifcount 1 killit
	ife countvar 0 killit 
	sizeat 4 4
	ife player[].over_shoulder_on YES { cstator 2176 sizeat 8 8 } else
	cstator 658
	ifvarand countvar 1 cstator 4
	ifg countvar 128 spritepal 6
	
	iffloordistl 8 spritepal 6 // giving wrong result
enda

defstate spearexplode

	seta[].mdflags 16
	ifge countvar 55
	{
		hitradius 2304 30 60 85 110
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ife sprite[spriteid].htpicnum RADIUSEXPLOSION
			{
				dist xydist THISACTOR spriteid
				ifle xydist 2304
				{
					ifn sprite[].picnum STUCKARROW
					{
						geta[spriteid].htextra temp
						add temp 20
						seta[spriteid].htextra temp
					}
					seta[spriteid].htowner player[THISACTOR].i
					seta[spriteid].htpicnum RPG
					seta[spriteid].htang sprite[].ang
				}
			}
			nextspritestat spriteid spriteid
		}
		ifpdistl 2305 ifg sprite[player[].i].htextra 0 seta[player[].i].htextra -1
		
		ifn myspawner -1
		{
			getactor[myspawner].htextra temp
			ifl temp 130 set temp 130
			setactor[myspawner].htextra temp
			setactor[myspawner].htowner player[THISACTOR].i
			setactor[myspawner].htang sprite[THISACTOR].ang
			seta[myspawner].htpicnum RPG
		}
		spawn EXPLOSION2
		sound RPG_EXPLODE
		state arrow_bits
		debris SCRAP2 2
		killit
	}

ends

defstate playerpush

	ifp pstanding break
	findplayer temp
	
	ifhitspace { ifg temp 1408 break }
	else 
	{
		ifg temp 844 break
	}
	
	ife dodge 0
	ifcansee
	ifp palive
	{
		getp[].posx mx
		getp[].posy my
		sub mx sprite[].x
		sub my sprite[].y
		getangle angvar mx my
		ifhitspace { ifl temp 1024 break  } else
		add angvar 1024
		
		cos xvel angvar
		sin yvel angvar
		
		shiftvarr xvel 7
		shiftvarr yvel 7
		
		movesprite THISACTOR xvel yvel 0 CLIPMASK0 RETURN 
	}

ends

defstate stuckcode

// ifvarn actorvar[myspawner].cursed 0 killit

// getactor[myspawner].x x
// getactor[myspawner].y y
// setactor[THISACTOR].x x
// setactor[THISACTOR].y y

// mtype = distance
// ammo = angle offset for rotatepoint

ife peractor4 STUCKSPEAR 
{
	state spearexplode
	ifactor STUCKARROW
	ifn myspawner -1
	{
		ifvarg sprite[myspawner].statnum 2 set myspawner -1 else
		ifvarn actorvar[myspawner].monstatus 1 set myspawner -1
	}
	ife myspawner -1 { add countvar 1 fall break }
}
else
ifn myspawner -1
{
	ifvarg sprite[myspawner].statnum 2 killit
	ifvarn actorvar[myspawner].monstatus 1 killit
}

getactor[myspawner].x x
getactor[myspawner].y y
getactor[myspawner].ang angvar
subvarvar angvar ammo
setvarvar mx x
addvarvar mx mtype
rotatepoint x y mx y angvar x y
setactor[THISACTOR].x x
setactor[THISACTOR].y y

getactor[myspawner].ang angvar
subvarvar angvar peractor1
setactor[THISACTOR].ang angvar
getactor[myspawner].z z
subvarvar z initz
setactor[THISACTOR].z z

ifspritepal 1
{
	getactorvar[myspawner].burning burning
	subvar burning 2
	ifvarand pow 128 subvar burning 1
	setactorvar[myspawner].burning burning
	ifcount 78 spritepal 0
}

ifspritepal 2
{
	getactorvar[myspawner].burning burning
	addvar burning 2
	setactorvar[myspawner].burning burning
	ifactor STUCKARROW ifrnd 8
	{
		set temp NO
		ife sprite[myspawner].picnum ICEWALL1 set temp YES
		ife sprite[myspawner].picnum ICEWALL2 set temp YES
		ife temp YES spawn FIRESTARTER
	}
	ifcount 130 killit
}

add countvar 1

ifrnd 8 
{
	espawn JIBS6
	setactor[RETURN].zvel 0
	setactor[RETURN].xvel 0
	setactor[RETURN].xrepeat 12
	setactor[RETURN].yrepeat 12
	setactor[RETURN].pal sprite[myspawner].pal
	setav[RETURN].htg3 999999
}

ifge countvar 60
{
	set countvar 0
	espawn JIBS6
	setactor[RETURN].zvel 0
	setactor[RETURN].xvel 0
	setactor[RETURN].xrepeat 12
	setactor[RETURN].yrepeat 12
	setactor[RETURN].pal sprite[myspawner].pal
	setav[RETURN].htg3 999999
	getactor[myspawner].htextra temp
	ifvarl temp 1 setactor[myspawner].htpicnum ARROWPROJ
	addvar temp 4
	setactor[myspawner].htextra temp
	setactor[myspawner].htowner player[THISACTOR].i
	setactor[myspawner].htang sprite[THISACTOR].ang
}

ifcount 480 killit
ife sprite[myspawner].picnum DEMONOVA ifcount 150 killit
ife myspawner bossid ifcount 150 killit
ends

spritenoshade STUCKBULLET
useractor notenemy STUCKARROW 0 state stuckcode enda
useractor notenemy STUCKBULLET 0 cstat 32768 spritepal 10 state stuckcode enda

action PLASMA_FRAMES 0 6 1 1 4

useractor notenemy PLASMA_IMPACT 0 PLASMA_FRAMES
ifmove 0
{
	seta[].blend 1
	seta[].shade -100
	cstator 2
	move INIT
	sizeat 64 64
	ifspawnedby TRANSPORTERSTAR
	cstator 128
	ifspawnedby FREEZEBLAST
	cstator 128
	ifspawnedby PLASMAPROJ
	cstator 128
	sound PLASMAHIT
}
ifactioncount 6 killit
enda

useractor notenemy HEALTHPLANT 0

ifmove 0
{
	cstat 32768
	fall
	iffloordistl 1
	{
		// ifvarg sector[THISACTOR].lotag 14 ifvarl sector[THISACTOR].lotag 21 { spawn FIRSTAID killit }
		// ifvare sector[THISACTOR].lotag 28 { spawn FIRSTAID killit }
		// ifvare sector[THISACTOR].lotag 29 { spawn FIRSTAID killit }
		// ifvare sector[THISACTOR].lotag 30 { spawn FIRSTAID killit }

// 		randvar pal 14
// 		switch pal
// 		case 0 spritepal 0 break
// 		case 1 spritepal 2 break
// 		case 2 spritepal 6 break
// 		case 3 spritepal 7 break
// 		case 4 spritepal 8 break
// 		case 5 spritepal 10 break
// 		case 6 spritepal 12 break
// 		case 7 spritepal 14 break
// 		case 8 spritepal 16 break
// 		case 9 spritepal 17 break
// 		case 10 spritepal 19 break
// 		case 11 spritepal 20 break
// 		case 12 spritepal 21 break
// 		case 13 spritepal 22 break
// 		case 14 spritepal 23 break
// 		endswitch
		spritepal 14
		espawn PLANTBASE
		getactor[THISACTOR].pal pal
		setactor[RETURN].pal pal
		setav[RETURN].target THISACTOR
		set target RETURN
		move INIT
		getactor[THISACTOR].z z
		setvarvar initz z
		subvar initz 1408 // so you can't see it through base
		// addvar z 7168
		addvar z 4096
		setactor[THISACTOR].z z
		espawn BIGSMOKE
		setactor[RETURN].pal 8
	}
	break
}
ifmove INIT
{
	sizeat 12 4
	// sizeat 12 7
	cstat 0
	getactor[THISACTOR].z z
	subvar z 128 // 64
	ifvarvarl z initz
	{
		setactor[THISACTOR].z initz
		move STOPPED
		espawn PLANTPOD
		subvar initz 3968
		setactor[RETURN].z initz
		// getactor[THISACTOR].pal pal
		setactor[RETURN].pal 8
		setactorvar[RETURN].myspawner THISACTOR
		setav[RETURN].target target
	} else
	setactor[THISACTOR].z z
	break
}
// fall

ifvare monstatus 2
{
	resetcount
	setvar monstatus 3
}
ifcount 130 ifvare monstatus 3 sizeto 0 0

enda

useractor notenemy PLANTBASE 0

ifspritepal 0 spritepal 1
//sizeto 30 18


ifhitweapon { guts JIBS6 2 killit }

ife monstatus 2
{
	ifmove INIT nullop else move INIT
	sizeto 24 0
	ifcount 150 killit
}
else sizeto 24 14

enda

spritenoshade PLANTPOD
useractor notenemy PLANTPOD 0
getplayer[THISACTOR].i playersprite
getactorvar[playersprite].bleeding bleeding

ifmove 0
{
	move INIT
	sizeat 18 1
}
ifmove INIT
ifcount 1
{
	resetcount
	sizeto 18 12
	ifvare sprite[THISACTOR].yrepeat 12 move STOPPED
	break
}

setvarvar temp timer
shiftvarl temp 7
sin tempb temp
shiftvarr tempb 11
setactor[THISACTOR].shade tempb

ifvare endlevel 0
  ifp palive
    ifpdistl RETRIEVEDISTANCE 
      ifcanseetarget
	{
		setvar temp 0
        ifvarvarl sprite[playersprite].extra player[THISACTOR].max_player_health setvar temp YES
        ifvarg bleeding 0 setvar temp YES
        ifvare temp YES
		{
			globalsound PICKUPSND
			palfrom 48 0 40 10
			ifvarg bleeding 0
			{
				subvar bleeding 15
				ifvarl bleeding 0 setvar bleeding 0
				setactorvar[playersprite].bleeding bleeding
				addphealth 7
			}
			else
		  	addphealth 15
		  	setactorvar[myspawner].monstatus 2
			ifn target -1
			setav[target].monstatus 2
		  	killit	  
		}
// 	  else ifvare powmode 1
//       ifvare powcount 0
//       ifvarl combo 50
//       {
// 	      setvar combosize 81920
// 	      addvar combo 2
// 	      ifvarg combo 50 setvar combo 50
// 	      globalsound PICKUPSND
// 		  palfrom 48 0 40 10
// 		  killit
//       }
	}

enda

spritenoshade LIGHTHALO
spritenoshade LIGHTBUG

eventloadactor LIGHTBUG
sizeat 3 3
enda

move BUGMOVE1 16 -16
move BUGMOVE2 16 16

useractor notenemy LIGHTBUG 0
ifmove 0
{
	setactor[THISACTOR].shade -64
	spriteflags 16
	cstat 0
	sizeat 3 3
	move BUGMOVE1 geth getv
	espawn LIGHTHALO
	setactorvar[RETURN].myspawner THISACTOR
	getactor[THISACTOR].pal pal
	setactor[RETURN].pal pal
	setvarvar myspawner RETURN
	// ifmultiplayer nullop else
	// ifvare target2 -1
	// {
		// setvar tempd 2
		// getactor[THISACTOR].pal pal
		// // setvar intensity 3072
		// setvar tempc 1 // moving
		// state spawnpointlight
	// }
	// else 
	randvar mtype 1560
	getactor[THISACTOR].x peractor4
	getactor[THISACTOR].y peractor6
	getactor[THISACTOR].z initz
}

ifvarn target2 -1
{
	//ifvarn sprite[target2].picnum SAVECRYSTAL killit
	ifvare sprite[target2].statnum 1024 killit
	//ifvare sprite[target2].pal 1 { spritepal 1 setactor[myspawner].pal 1 addvar weap 64 }
	addvar weap 32
	
	getactor[target2].x x
	getactor[target2].y y
	getactor[target2].z z
	subvar z 4096
	
	setvar xydist 768
	addvarvar xydist weap
	ifvarg xydist 4096 killit
	
	setvarvar mx x
	addvarvar mx xydist
	rotatepoint x y mx y peractor1 mx my
	setsprite THISACTOR mx my z
	
	addvar peractor1 32
	ifvarg peractor1 2047 subvar peractor1 2048
	
	setvarvar temp timer
	addvarvar temp mtype
	shiftvarl temp 6
	sin tempb temp
	shiftvarr tempb 1
	
	getactor[THISACTOR].z z
	subvarvar z tempb
	setactor[THISACTOR].z z
		
	break
}

ifcount 52 ifrnd 64
{
	ifpdistl 1560 move BUGMOVE1 geth getv furthestdir
	else
	iffloordistl 8 move BUGMOVE1 geth getv randomangle else
	ifceilingdistl 16 move BUGMOVE2 geth getv randomangle
	else
	ifrnd 128 move BUGMOVE1 geth getv randomangle 
	else
	move BUGMOVE2 geth getv randomangle
	ifrnd 128 setvar mtype 1 else setvar mtype 0
}

getactor[THISACTOR].ang angvar
ifvare mtype 0 addvar angvar 16 else subvar angvar 16
setactor[THISACTOR].ang angvar



addvar countvar 1
ifvarg countvar 130
{
	setvar countvar 0
	ifcansee break
	setsprite THISACTOR peractor4 peractor6 initz
}

enda

eventloadactor JUMPAD
	// extra = z velocity
	// lotag = x velocity
	// hitag = flight time
	geta[].extra shotpitch
	ifvare shotpitch -1 set shotpitch 512
	mul shotpitch -8
	geta[].lotag initx
	ife initx 0 set initx 512
	seta[].lotag 0
	geta[].hitag inity
	seta[].hitag 0
	ifvare inity 0 set inity 20
	cstat 32768
	
enda

useractor notenemy SPARKPROJ 0 // actor version

	sizeto 0 0
	ifcount 5 killit
	ifmove 0
	{
		move STOPPED
		sizeat 15 15
		seta[].shade -127
		spritepal 2
	}
	ife sprite[].cstat 642 cstat 646 else
	ife sprite[].cstat 646 cstat 650 else
	ife sprite[].cstat 650 cstat 654 else
	cstat 642

enda

useractor notenemy JUMPAD 0

ifcount 18
ifpdistl 20480
ife mtype 0
{
	resetcount
	set temp shotpitch
	mul temp 3
	div temp 2
	sub temp 1560
	ezshoot temp SPARKPROJ
	seta[RETURN].xvel initx
	setthisprojectile[RETURN].vel initx
	set temp inity
	add temp 13
	setthisprojectile[RETURN].range temp
}

	
	cstat 32768
	getplayer[].i spriteid
	ldist xydist THISACTOR spriteid
	ifl xydist 512 // 640
	ifp palive
	{
		getplayer[].falling_counter temp
		ifvarg temp 8
		{
			ifpdistg 1560 setvar temp 0
		}
		else
		{
			ifpdistl 1024 setvar temp 1
			else ifpdistl 1560 ifvarn padmove 0 setvar temp 1
			else setvar temp 0
		}
				
		ifn temp 0
		{
			getp[].i spriteid
			geta[spriteid].z z
			sub z 4096
			seta[spriteid].z z
			getp[].posz z
			sub z 4096
			setp[].posz z
			setp[].jumping_counter 0
			setp[].jumping_toggle 0
			setp[].poszv shotpitch
			geta[].ang jumpadang
			set padmove inity
			set jumpadxvel initx
			setp[].falling_counter 0
			ife mtype 0
			set nofalldamage 1
			setp[].movement_lock 3
			soundonce LAUNCHSND
		}
	}
	ife mtype 1 killit // spawned
	
enda

eventloadactor MOVESHIPCAM

ife sprite[].pal 4 geta[].ang shipangstart else
{
	geta[].lotag lotag
	seta[].lotag 0
	geta[].hitag hitag
	seta[].hitag 0
	geta[].extra monstflags
	geta[].yvel activator
	seta[].yvel 0
	ife monstflags -1 set monstflags 0
	ifn lotag 0 cstat 32768
	// sizeat 200 200
	// cstat 0
	ifn lotag 1 set activator 0
	geta[].x countvar
	geta[].y countvarb
	geta[].z fear
	geta[].sectnum mysector
}

enda

useractor notenemy MOVESHIPCAM 0 enda


action FWTRAILFRAMES 0 2 1 1 4
move FWDRIFT 96
move SPARKMOVE1 -128 -32
move SPARKMOVE2 -128 32
move SPARKMOVE3 -32 -64
move SPARKMOVE4 -32 64

action MINIFWANIM -1 2 1 1 4

state minifwcode
ifmove 0
{
	setactor[THISACTOR].shade -127
	seta[].blend 1
	cstator 128
	ifrnd 128
	{
		ifrnd 128
		move SPARKMOVE1 geth getv randomangle
		else move SPARKMOVE2 geth getv randomangle
	}
	else
	{
		ifrnd 128
		move SPARKMOVE3 geth getv randomangle
		else move SPARKMOVE4 geth getv randomangle
	}
	sizeat 32 32
	// sizeat 64 64
}
ifspritepal 10 ifrnd 128 spritepal 2 else
ifspritepal 2 spritepal 10

ifspritepal 0 spritepal 16 else
ifspritepal 16  ifrnd 128 spritepal 0

ifspritepal 8 spritepal 14 else
ifspritepal 14 ifrnd 128 spritepal 8

ifspritepal 7 ifrnd 128 spritepal 23 else
ifspritepal 23 spritepal 7
sizeto 0 0
sizeto 0 0
// sizeto 0 0
ifcount 150 killit
ends

action FWFRAME2 -2 2 1 1 8
action FWFRAME3 -3 2 1 1 8
action FWFRAME4 -7 2 1 1 8
action FWFRAME5 1 1 1 1 10
action FWFRAME6 2 1 1 1 10
action FWFRAME7 13 1 1 1 8
action FWFRAME8 6 1 1 1 8
action FWFRAME9 5 1 1 1 10

state fwshimmercode
ifmove 0
{
	seta[].blend 1
	cstator 128
	ifvarn mtype 0 
	{
		addvar mtype 1 
		ifvarg mtype 40 { setvar mtype 0 cstat 128 }
		break 
	}
	sizeat 96 96
	setactor[THISACTOR].shade -127
	ifaction FWFRAME5 sizeat 144 144
	ifaction FWFRAME6 sizeat 144 144
	ifaction FWFRAME9 { move FWDRIFT spin cstator 16 sizeat 64 64 } else
	ifaction FWFRAME8 { move INIT geth sizeat 24 24 } else
	move FWDRIFT randomangle
	
	
	// sizeat 255 255
}
ifaction FWFRAME8 
{
	sizeto 255 255 sizeto 255 255 sizeto 255 255
	sizeto 255 255 sizeto 255 255 sizeto 255 255
	sizeto 255 255 sizeto 255 255 sizeto 255 255 
	ifcount 20 killit 
} 
else
{
	sizeto 0 0
	sizeto 0 0
}
// sizeto 0 0
// sizeto 0 0
iffloordistl 4 killit
ifcount 150 killit
ends

useractor notenemy FWTRAIL6 0

ifaction 0 
{ 
	// MAKE A BUNCH OF CHOICES, START FRAME IS 8941
	action ANULLACTION
	switch ammo
	case 0 action ANULLACTION break
	case 1 case 2 action FWFRAME2 break
	case 3 case 4 action FWFRAME3 break
	case 5 action FWFRAME4 break
	case 6 action FWFRAME5 break
	case 7 action FWFRAME6 break
	case 8 action FWFRAME7 break
	case 9 ifrnd 64 action FWFRAME8 else action FWFRAME2 break
	case 10 action FWFRAME9 break
	endswitch
}

state fwshimmercode enda

useractor notenemy MINIFW 0 MINIFWANIM
state minifwcode enda

move FWUP 32 -768

state shootfw

setvar countvar 0
whilevarn countvar 2048
{
	setvar mtype 0
	whilevarn mtype 3
	{
		randvarvar zdist countvarb
		subvarvar zdist peractor1
		ifvare command 1
		{
			randvar pal 11 // 14
			ifvare pal 0 spritepal 0
			ifvare pal 1 spritepal 10
			ifvare pal 2 spritepal 2
			ifvare pal 3 spritepal 12
			ifvare pal 4 spritepal 15
			ifvare pal 5 spritepal 18
			ifvare pal 6 spritepal 11
			ifvare pal 7 spritepal 23
			ifvare pal 8 spritepal 8
			ifvare pal 9 spritepal 23
			// ifvare pal 10 spritepal 126
			ifvare pal 10 spritepal 125
			// ifvare pal 12 spritepal 124
			ifvare pal 11 spritepal 123
			// ifvare pal 14 spritepal 122
		}
		ezshoot zdist FWPROJ6
		rand temp 10, setav[RETURN].ammo temp
		set x weap, div x 2
		setactor[RETURN].xrepeat x
		setactor[RETURN].yrepeat x
		setthisprojectile[RETURN].pal sprite[THISACTOR].pal
		seta[RETURN].pal sprite[].pal
		ifvarl zdist 0
		mulvar zdist -1
		shiftvarr zdist 3
		setvarvar xvel weap
		shiftvarl xvel 4
		subvarvar xvel zdist
		mulvar xvel 2 divvar xvel 3
		setactor[RETURN].xvel xvel
		setactor[RETURN].ang countvar
		addvar mtype 1
	}
	addvar countvar 64
}
ife subtitle_time 0
{
	flash
	ifrnd 128 globalsound FWBOOM1 else globalsound FWBOOM2
}
killit

ends

state fireworkcode
ifmove 0
{
	randvar pal 11 // 14
	ifvare pal 0 spritepal 0
	ifvare pal 1 spritepal 10
	ifvare pal 2 spritepal 2
	ifvare pal 3 spritepal 12
	ifvare pal 4 spritepal 15
	ifvare pal 5 spritepal 18
	ifvare pal 6 spritepal 11
	ifvare pal 7 spritepal 23
	ifvare pal 8 spritepal 8
	ifvare pal 9 spritepal 23
	// ifvare pal 10 spritepal 126
	ifvare pal 10 spritepal 125
	// ifvare pal 12 spritepal 124
	ifvare pal 11 spritepal 123
	// ifvare pal 14 spritepal 122
	
	setactor[THISACTOR].shade -127
	move FWUP getv randomangle
	randvar temp 2
	ifvare temp 0 { setvar weap 96 sizeat 64 64 } else
	ifvare temp 1 { setvar weap 128 sizeat 80 80 } else
	ifvare temp 2 { setvar weap 160 sizeat 96 96 }
	
	setvarvar countvarb weap
	setvarvar peractor1 weap
	shiftvarl peractor1 6
	shiftvarl countvarb 7
	ifrnd 32
	setvar command 1

}


ifceilingdistl 128 state shootfw
else ifcount 130 ifrnd 1 state shootfw
ends

useractor notenemy FW6 0 state fireworkcode enda


state fwtrailcode

seta[].blend 1
cstator 514
cstator 128
seta[].shade -127
sizeto 0 0
sizeto 0 0
seta[].alpha 128

ifcount 32 killit

ends

useractor notenemy FWSTREAK6 state fwtrailcode enda


action PORTALOPEN 7 1 1 1 1
action PORTALCLOSED 0 1 1 1 1
useractor notenemy PORTALCOVER2 0 PORTALCLOSED

ifaction PORTALCLOSED
{
	ifvarg portalview 0 action PORTALOPEN
}
else ifvare portalview 0 action PORTALCLOSED

enda

action NOPORTALVIEW -7 1 1 1 1
useractor notenemy PORTAL2OPEN 0 ANULLACTION

ifaction ANULLACTION
{
	ife portalview 0 action NOPORTALVIEW
}
else ifn portalview 0 action ANULLACTION

enda

spritenoshade BEAMTRAIL
useractor notenemy BEAMTRAIL 0

	ifmove 0
	{
		seta[].shade -127
		move STOPPED
		cstat 0
		sizeat 48 48
		ife rendmode 0 { sizeat 24 24 cstator 128 ifrnd 128 cstator 4 ifrnd 128 cstator 8 }
		geta[].z z add z 512 seta[].z z
		
		seta[].pitch shotpitch	
		ifpdistl 768 killit
	}
	sizeto 0 0
	sizeto 0 0
	ifcount 6 sizeto 0 0
	ifcount 4 cstator 2
	ifcount 6 cstator 512

enda

action REND0ACTION -1
spritenoshade ICEBEAMTRAIL
useractor notenemy ICEBEAMTRAIL 0

	ifmove 0
	{
		cstat 0
		seta[].shade -127
		move STOPPED
		sizeat 48 48
		ife rendmode 0 
		{ action REND0ACTION sizeat 24 24 ifpdistl 1024 cstator 514 cstator 128 ifrnd 128 cstator 4 ifrnd 128 cstator 8 sizeat 16 16 }
		geta[].z z add z 512 seta[].z z
		
		seta[].pitch shotpitch	
		ifpdistl 768 killit
	}

	sizeto 0 0
	sizeto 0 0
	ifcount 4 { sizeto 0 0 sizeto 0 0 }

	ifcount 4 cstator 2
	ifcount 6 cstator 512

enda

spritenoshade ICEBEAMIMPACT
spritenopal ICEBEAMIMPACT
useractor notenemy ICEBEAMIMPACT 0

	ifmove 0
	{
		move STOPPED
		sizeat 10 8
		cstat 130
		// seta[].blend 1
		ifn sprite[].pal 1
		{
			findnearactorz BURNING 844 6144 target
			ifn target -1 setav[target].monstatus 2
			findnearactorz BURNING2 844 6144 target
			ifn target -1 setav[target].monstatus 2
			findnearactorz FIRE 844 6144 target
			ifn target -1 setav[target].monstatus 2
			findnearactorz FIRE2 844 6144 target
			ifn target -1 setav[target].monstatus 2
		}
	}
	ifcount 10 
	{ 
		sizeto 0 0 sizeto 0 0 
	}

	geta[].cstat tempb
	add countvar 1
	ifg countvar 2
	{
		set countvar 0
		ife tempb 130 set tempb 134 else
		ife tempb 134 set tempb 138 else
		ife tempb 138 set tempb 130
		seta[].cstat tempb
	}

enda

useractor notenemy ICESPRITE 0

ifvarn myspawner -1
{
	ifge actorvar[myspawner].burning 0 { spritepal 1 sound GLASS_BREAKING lotsofglass 30 killit }
	ifvarvarn sprite[myspawner].picnum mtype { spritepal 1 sound GLASS_BREAKING lotsofglass 30 killit }
	ife actorvar[myspawner].monstatus 2 { spritepal 1 sound GLASS_BREAKING lotsofglass 30 killit }
	ife sprite[myspawner].statnum 1024 { spritepal 1 sound GLASS_BREAKING lotsofglass 30 killit }
	ife initz 0
	{
		// seta[].mdflags 16
		cstat 514
		ifrnd 128 cstator 4
		ifvarand sprite[myspawner].cstat 128 cstator 128
		set initz 1
		
		set initx tiledata[mtype].xsize
		mul initx sprite[myspawner].xrepeat
		div initx 96
		
		set inity tiledata[mtype].ysize
		mul inity sprite[myspawner].yrepeat
		div inity 96
		
		seta[].xrepeat initx
		seta[].yrepeat inity	
	}
	setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y sprite[myspawner].z
	geta[myspawner].z z
	add z 1024
	seta[].z z
}
enda

spritenopal LIGHTHALO
useractor notenemy LIGHTHALO 0

ifmove 0
{
	setactor[THISACTOR].shade -64
	spriteflags 16
	seta[].mdflags 16
	move INIT
	ifspawnedby STARFLY sizeat 20 20 else
	sizeat 10 10
	cstat 642
}
ife myspawner -1 killit
getactor[myspawner].z z
getactor[myspawner].zvel zvel
ifvarl zvel 0 
subvar z 256
setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y z

ifvare sprite[myspawner].statnum 1024 killit
ife monstatus 2 killit

enda

spritenopal STARUPHALO
spritenoshade STARUPHALO
useractor notenemy STARUPHALO 0

ifmove 0
{
	setactor[THISACTOR].shade -64
	move INIT
	sizeat 9 9
	cstat 642
	cstator 8192
}
else killit

enda


eventloadactor FALLINGLEAF
cstat 32768
enda

useractor notenemy FALLINGLEAF 0
ifrnd 4 money 1
enda

action CHESTIDLE 0 1 5 1 1
action CHESTOPEN 5 1 5 1 10

action AMMO_CHESTIDLE 399  1  1  1  1
action AMMO_CHESTOPEN 400  1  1  1  10

action SHLD_CHESTIDLE 401  1  1  1  1
action SHLD_CHESTOPEN 402  1  1  1  10
action WPN_CHESTIDLE 403  1  1  1  1
action WPN_CHESTOPEN 404  1  1  1  10
action HLTH_CHESTIDLE 405  1  1  1  10
action HLTH_CHESTOPEN 406  1  1  1  10

eventloadactor TCHEST
getactor[THISACTOR].zvel group
getactor[THISACTOR].lotag droptile
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag gold
setactor[THISACTOR].hitag 0
getactor[THISACTOR].xvel peractor1
getactor[THISACTOR].yvel activator
ifn activator 0 spritepal 78
ifspritepal 83 { set mtype 83 spritepal 0 }

ifspritepal 4
{
	setvar weap 1 // for retrieving stolen items
	spritepal 20
	set droptile 0
}

sizeat 24 24

enda

eventloadactor WEAPONCHEST
getactor[THISACTOR].zvel group
getactor[THISACTOR].lotag droptile
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag gold
setactor[THISACTOR].hitag 0
getactor[THISACTOR].xvel peractor1
getactor[THISACTOR].yvel activator
// ifn activator 0 spritepal 24
ifspritepal 83 { set mtype 83 spritepal 0 }

ifspritepal 4
{
	setvar weap 1 // for retrieving stolen items
	spritepal 20
	set droptile 0
}

sizeat 24 24


enda

useractor notenemy WEAPONCHEST 0 
cactor TCHEST
action WPN_CHESTIDLE
enda

eventloadactor HEALTHCHEST
getactor[THISACTOR].zvel group
getactor[THISACTOR].lotag droptile
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag gold
setactor[THISACTOR].hitag 0
getactor[THISACTOR].xvel peractor1
getactor[THISACTOR].yvel activator
// ifn activator 0 spritepal 24
ifspritepal 83 { set mtype 83 spritepal 0 }

ifspritepal 4
{
	setvar weap 1 // for retrieving stolen items
	spritepal 20
	set droptile 0
}

sizeat 24 24


enda

useractor notenemy HEALTHCHEST 0 
cactor TCHEST
action HLTH_CHESTIDLE
enda

eventloadactor SHIELDCHEST
getactor[THISACTOR].zvel group
getactor[THISACTOR].lotag droptile
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag gold
setactor[THISACTOR].hitag 0
getactor[THISACTOR].xvel peractor1
getactor[THISACTOR].yvel activator
ifn activator 0 spritepal 50
ifspritepal 83 { set mtype 83 spritepal 0 }

ifspritepal 4
{
	setvar weap 1 // for retrieving stolen items
	spritepal 20
	set droptile 0
}

sizeat 24 24


enda

eventloadactor AMMOCHEST
getactor[THISACTOR].zvel group
getactor[THISACTOR].lotag droptile
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag gold
setactor[THISACTOR].hitag 0
getactor[THISACTOR].xvel peractor1
getactor[THISACTOR].yvel activator
ifn activator 0 spritepal 24
ifspritepal 83 { set mtype 83 spritepal 0 }

ifspritepal 4
{
	setvar weap 1 // for retrieving stolen items
	spritepal 20
	set droptile 0
}

sizeat 24 24


enda

useractor notenemy SHIELDCHEST 0 
cactor TCHEST
action SHLD_CHESTIDLE
enda

useractor notenemy AMMOCHEST 0
cactor TCHEST
action AMMO_CHESTIDLE
enda

state retrieveitems

	setvarvar treasurepic ALLAMMOS
    setvar pictime 78
	set bigmsg 696
	setvar bigmsgcount 104
	palfrom 63 63 63 63
	
	set sawammo playerstuff[0] 
	ife character 0
	{
		ife gotsaw NO
			state sawon
		set gotsaw YES
	}
	
	ife character 0 
	{
		ifl player[].ammo_amount 1 playerstuff[1]
		setp[].ammo_amount 1 playerstuff[1] 
	}
	else
	setarray dukeammo[1] playerstuff[1]
	
	ife character 0 
	{
		ifl player[].ammo_amount 2 playerstuff[2]
		setp[].ammo_amount 2 playerstuff[2] 
	}
	else
	setarray dukeammo[2] playerstuff[2]
	
	ife character 0 
	{
		ifl player[].ammo_amount 3 playerstuff[3]
		setp[].ammo_amount 3 playerstuff[3] 
	}
	else
	setarray dukeammo[3] playerstuff[3]
	
	ife character 0 
	{
		ifl player[].ammo_amount 4 playerstuff[4]
		setp[].ammo_amount 4 playerstuff[4] 
	}
	else
	setarray dukeammo[4] playerstuff[4]
	
	ifl grenades playerstuff[5] set grenades playerstuff[5]
	ifl player[].ammo_amount 5 playerstuff[6] setp[].ammo_amount 5 playerstuff[6]
		
	ife character 0 
	{
		ifl player[].ammo_amount 6 playerstuff[7]
		setp[].ammo_amount 6 playerstuff[7]
	}
	else
	setarray dukeammo[6] playerstuff[7]
	
	ife character 0 
	{
		ifl player[].ammo_amount 7 playerstuff[8]
		setp[].ammo_amount 7 playerstuff[8]
	}
	else
	setarray dukeammo[7] playerstuff[8]
	
	ife character 0 
	{
		ifl player[].ammo_amount 9 playerstuff[9]
		setp[].ammo_amount 9 playerstuff[9]
	}
	else
	setarray dukeammo[9] playerstuff[9]
	
	ife character 0 
	{
		ifl player[].ammo_amount 11 playerstuff[10]
		setp[].ammo_amount 11 playerstuff[10]
	}
	else
	setarray dukeammo[11] playerstuff[10]
	
	ifl eyeballammo playerstuff[11] set eyeballammo playerstuff[11]
	
	set temp eyeballammo
	modvar temp 100
	
	set tempb eyeballammo
	div tempb 100
	ifn temp 0 add tempb 1
	setp[].ammo_amount 8 tempb

	ife character 1
	{
		ifl player[].ammo_amount 1 playerstuff[12]
		setp[].ammo_amount 1 playerstuff[12]
	}
	else
	setarray jedrikammo[1] playerstuff[12]
	
	ife character 1
	{
		ifl player[].ammo_amount 2 playerstuff[13]
		setp[].ammo_amount 2 playerstuff[13]
	}
	else
	setarray jedrikammo[2] playerstuff[13]
	
	ife character 1
	{
		ifl player[].ammo_amount 3 playerstuff[14]
		setp[].ammo_amount 3 playerstuff[14]
	}
	else
	setarray jedrikammo[3] playerstuff[14]
	
	ife character 1
	{
		ifl player[].ammo_amount 4 playerstuff[15]
		setp[].ammo_amount 4 playerstuff[15]
	}
	else
	setarray jedrikammo[4] playerstuff[15]
	
	ifl burnarrows playerstuff[16] set burnarrows playerstuff[16]
	ifl freezearrows playerstuff[17] set freezearrows playerstuff[17]
	ifl explarrows playerstuff[18] set explarrows playerstuff[18]
	ifl spyarrows playerstuff[19] set spyarrows playerstuff[19]
	ifl multiarrows playerstuff[31] set multiarrows playerstuff[31]
	
	ife character 1
	{
		ifl player[].ammo_amount 6 playerstuff[20]
		setp[].ammo_amount 6 playerstuff[20]
	}
	else
	setarray jedrikammo[6] playerstuff[20]

	ife character 1
	{
		ifl player[].ammo_amount 7 playerstuff[21]
		setp[].ammo_amount 7 playerstuff[21]
	}
	else
	setarray jedrikammo[7] playerstuff[21]
	
	ife character 1
	{
		ifl player[].ammo_amount 9 playerstuff[22]
		setp[].ammo_amount 9 playerstuff[22]
	}
	else
	setarray jedrikammo[9] playerstuff[22]
	
	ifl player[].holoduke_amount playerstuff[23] setp[].holoduke_amount playerstuff[23]
	ifl player[].jetpack_amount playerstuff[24] setp[].jetpack_amount playerstuff[24]
	ifl player[].heat_amount playerstuff[25] setp[].heat_amount playerstuff[25]
	ifl player[].boot_amount playerstuff[26] setp[].boot_amount playerstuff[26]
	add pgold playerstuff[27]
	ifl player[].shield_amount playerstuff[28] setp[].shield_amount playerstuff[28]
	ifl player[].firstaid_amount playerstuff[29] setp[].firstaid_amount playerstuff[29]
	setarray playerstuff[30] NO
	
	ifg playerstuff[32] 0 add stash playerstuff[32]
	ifg playerstuff[33] 0 add keys playerstuff[33]
	ifg playerstuff[34] 0 add ppods playerstuff[34]
	setarray playerstuff[32] 0
	setarray playerstuff[33] 0
	setarray playerstuff[34] 0

	
	setplayer[].gotweapon 1 1
	setplayer[].gotweapon 2 1
	setplayer[].gotweapon 3 1
	setplayer[].gotweapon 4 1
	setplayer[].gotweapon 6 1
	setplayer[].gotweapon 7 1
	setplayer[].gotweapon 8 1
	setplayer[].gotweapon 9 1
	setplayer[].gotweapon 11 1
	set temp 1
	whilevarn temp 10
	{
		setarray jedrikweaps[temp] 1
		setarray dukeweaps[temp] 1
		add temp 1
	}
	setarray jedrikweaps[11] 1
	setarray dukeweaps[11] 1

ends

useractor notenemy TCHEST 0 CHESTIDLE

ifvare weap 1
{
	ifvarn playerstuff[30] YES break
	set gold 0
}

ifmove 0
{
	move INIT
	sizeat 24 24
	cstator 256
	switch droptile
	case CHAINSAWSPRITE
	case BOWSPRITE
	case SHOTGUNSPRITE
	case HAMMERSPRITE
	case FIRSTGUNSPRITE
	case NECROSWORD
	case REVOLVERSPRITE
	case CHAINGUNSPRITE
	case AXESPRITE
	case RPGSPRITE
	case GAUNTSPRITE
	case BFGSPRITE
	case SWORDSPRITE
	case FLAMETHROWERSPRITE
	case PLASMASPRITE
	case CANNONSPRITE
	case HBOMBAMMO 
	case ALLAMMOS
	case TRIPBOMBSPRITE
			action WPN_CHESTIDLE
			// ifn activator 0 spritepal 24
	break
	case BOOTS
	case SHIELD
	case PALHELM
	case ARMOR1
	case ARMOR2
	case ARMOR3
	case INVULN
	case SHIELDUPGRADE
	case ARMORUPGRADE
	case FLASKUPGRADE
		action SHLD_CHESTIDLE
		ifn activator 0 spritepal 50
	break
	
	case APPLE
	case SIXPAK
	case COLA
	case ATOMICHEALTH
	case FIRSTAID
	case SMALLPOTION
	case MEDIUMPOTION
		action HLTH_CHESTIDLE
		ifn activator 0 spritepal 50
	break
	
	case AMMO
	case SAWFUEL
	case RPGAMMO
	case QUIVERSPRITE 
	case GRENADEAMMO
	case GAUNTAMMO
	case SWORDAMMO
	case SHOTGUNAMMO
	case HAMMERAMMO
	case BATTERYAMMO
	case AXEAMMO
	case REVOLVERAMMO
	case BFGAMMO
	case ARMSWORDAMMO
	case FLAMEAMMO
	case PLASMAAMMO
	case CANNONAMMO
		action AMMO_CHESTIDLE
		ifn activator 0 spritepal 24
	break
	endswitch
	
	ifspawnedby WIZARD
	{
		setvar gold 200
		setvar mtype 1
		setvar droptile ATOMICHEALTH
	}
	ifspawnedby CYBERDEMON
	{
		setvar gold 500
		setvar mtype 2
		setvar droptile RPGAMMO
	}
	ifvarg gold 0
	{
		setvarvar tempc gold
		ifvarg gold 999
		{
			setvarvar temp tempc
			divvar temp 1000
			state spawn_number
			mulvar temp 1000
			subvarvar tempc temp // tempc is now the number that is left over
			state moveitleft
			state moveitleft
		}
		ifvarg gold 99
		{
			setvarvar temp tempc
			divvar temp 100
			state spawn_number
			mulvar temp 100
			subvarvar tempc temp
			state moveitleft
		}
		ifvarg gold 9
		{
			setvarvar temp tempc
			divvar temp 10
			state spawn_number
			mulvar temp 10
			subvarvar tempc temp
		}
		setvarvar temp tempc
		state spawn_number
		state moveitright
	}
}
fall

ifge mtype 83 ifle mtype 84
{
	ife mtype 83 
	{
		ife player[].cursectnum sprite[].sectnum { resetcount set mtype 84 }
		break
	}
	ifcount 400
	{
		ifspritepal 83 spritepal 0 else spritepal 83
		spawn STARUP
	}
	ifcount 700 { spritepal 83 setvar mtype 0 }
	break
}


ifvarand fintips2 256 nullop else
ifcansee ifpdistl 4096
{
	setvar currtip2 256 setvar currtip 0
	orvar fintips2 256
	state inithelp
}

set tempb NO
ifaction SHLD_CHESTIDLE set tempb YES else
ifaction WPN_CHESTIDLE set tempb YES else
ifaction CHESTIDLE set tempb YES else
ifaction AMMO_CHESTIDLE set tempb YES else
ifaction HLTH_CHESTIDLE set tempb YES

setvarvar temp gold
subvar temp 1
ifangdiffl 640 nullop else
// ifaction CHESTIDLE
ife tempb YES
    ifpdistl 1560
      ifp pfacing
        ifcansee
		{
			ifvarg gold 0 setvar goldnear 30
			ifhitspace
			{
				setvarvar tempb pgold
				ifvarvarg tempb temp
				{  
					subvarvar pgold gold
					setvarvar gold peractor1
					ifvarg temp -1 
					{
						sound UNLOCK
						espawn SOUNDMAKER
						setactorvar[RETURN].peractor1 OPENCHEST
						setactorvar[RETURN].countvar 10
					}
					else
					sound OPENCHEST
					ifaction SHLD_CHESTIDLE action SHLD_CHESTOPEN else
					ifaction WPN_CHESTIDLE action WPN_CHESTOPEN else
					ifaction AMMO_CHESTIDLE action AMMO_CHESTOPEN else
					ifaction HLTH_CHESTIDLE action HLTH_CHESTOPEN else
					action CHESTOPEN    
					resetcount   
				}
				else
				{
					soundonce CHESTLOCKED
					ifvare temp 0 setvar ftq 135 else setvar ftq 612
					setvar fta QUOTETIME
				}
			}
		}


set tempb NO
ifaction SHLD_CHESTOPEN set tempb YES else
ifaction WPN_CHESTOPEN set tempb YES else
ifaction AMMO_CHESTOPEN set tempb YES else
ifaction CHESTOPEN set tempb YES else
ifaction HLTH_CHESTOPEN set tempb YES

ifvarn peractor1 -1
// ifaction CHESTOPEN
ife tempb YES
ifactioncount 6
{
    setvar peractor1 -1
    setvar monstatus 0
    ifvarg droptile 10 
    {
        ifvare character 1
        {
	        ifvare droptile CHAINSAWSPRITE 
			{
				setvar droptile BOWSPRITE
				setvar command 3
			}
			
	        ifvare droptile RPGAMMO
	        {
			    setvar droptile QUIVERSPRITE
			    setvar command 18
	        }
	        ifvare droptile GRENADEAMMO
		        setvar droptile GAUNTAMMO
		        
	        ifvare droptile AMMO			        
	        	setvar droptile SWORDAMMO
        	
        	ifvare droptile SHOTGUNSPRITE
	        	setvar droptile HAMMERSPRITE
        	
        	ifvare droptile SHOTGUNAMMO
	        	setvar droptile HAMMERAMMO
        	
        	ifvare droptile CHAINGUNSPRITE
	        	setvar droptile AXESPRITE
        	
        	ifvare droptile BATTERYAMMO
	        	setvar droptile AXEAMMO
        	
        	ifvare droptile FIRSTGUNSPRITE
	        	setvar droptile NECROSWORD
				
			ifvare droptile REVOLVERSPRITE
				setvar droptile BOWSPRITE
				
			ifvare droptile REVOLVERAMMO
			{
				setvar droptile QUIVERSPRITE
				setvar command 12
			}
        	
        	ifvare droptile RPGSPRITE
				setvar droptile GAUNTSPRITE
        	
        	ifvare droptile BFGSPRITE
	        	setvar droptile SWORDSPRITE
        	
        	ifvare droptile BFGAMMO
	        	setvar droptile ARMSWORDAMMO
        	
        	ifvare droptile FLAMETHROWERSPRITE
        	{
	        	setvar droptile QUIVERSPRITE
				setvar command 10
        	}
        	ifvare droptile PLASMASPRITE
				setvar droptile CANNONSPRITE
				
        	ifvare droptile FLAMEAMMO
        	{
	        	setvar droptile QUIVERSPRITE
	        	setvar command 10
        	}
        	ifvare droptile PLASMAAMMO
				setvar droptile CANNONAMMO
        }
		else ifvare character 0
		{
			ifvare droptile BOWSPRITE
			{
				ife command 3 set droptile CHAINSAWSPRITE else
				setvar droptile REVOLVERSPRITE
			}
			
	        ifvare droptile QUIVERSPRITE
			{
				ife command 18
			    setvar droptile RPGAMMO else
				ife command 10
				setvar droptile FLAMETHROWERSPRITE else
				setvar droptile REVOLVERSPRITE
			}
			   
	        ifvare droptile GAUNTAMMO
		        setvar droptile GRENADEAMMO
		        
	        ifvare droptile SWORDAMMO			        
	        	setvar droptile AMMO
        	
        	ifvare droptile HAMMERSPRITE
	        	setvar droptile SHOTGUNSPRITE
        	
        	ifvare droptile HAMMERAMMO
	        	setvar droptile SHOTGUNAMMO
        	
        	ifvare droptile AXESPRITE
	        	setvar droptile CHAINGUNSPRITE
        	
        	ifvare droptile AXEAMMO
	        	setvar droptile BATTERYAMMO
        	
        	ifvare droptile NECROSWORD
	        	setvar droptile FIRSTGUNSPRITE
					
        	ifvare droptile GAUNTSPRITE
				setvar droptile RPGSPRITE
        	
        	ifvare droptile SWORDSPRITE
	        	setvar droptile BFGSPRITE
        	
        	ifvare droptile ARMSWORDAMMO
	        	setvar droptile BFGAMMO
        			
        	ifvare droptile CANNONSPRITE
				setvar droptile PLASMASPRITE
				
        	ifvare droptile CANNONAMMO
				setvar droptile PLASMAAMMO
				
			set command 0
		}
        espawnvar droptile
        setactor[RETURN].ang sprite[THISACTOR].ang
        ifvare character 1 
		{ 
			setactor[RETURN].pal command 
			setvarvar treasurepal command 
		}
        else setvar treasurepal 0
		ife droptile GEMSPRITE set treasurepic 717 else
        setvarvar treasurepic droptile
		ife character 1 ife treasurepic HBOMBAMMO set treasurepic 9137
		geta[].x x
		add x 640
		geta[].z z, sub z 6144
		rotatepoint sprite[].x sprite[].y x sprite[].y sprite[].ang mx my
		setsprite RETURN mx my z
     	
        setvar pictime 78
        setvar droptile 0
        ifvare mtype 1 // RANDOM WIZARD DROP
        {
	        ifrnd 84 spawn APPLE else
	        ifrnd 128 spawn HOLODUKE else
	        spawn BOOTS
        }
        ifvare mtype 2 // RANDOM CYBERDEMON DROP
        {
	        ifrnd 84 spawn QUADDAMAGE else
	        ifrnd 128 spawn ARMOR3 else
	        spawn HOLODUKE
        }
        
	}
	state specialdeath
	ife weap 1 state retrieveitems
}

enda

action CHEST2IDLE 0 1 1 1 1
action CHEST2OPEN 1 1 1 1 10

eventloadactor TCHEST2
getactor[THISACTOR].zvel group
getactor[THISACTOR].lotag droptile
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag gold
setactor[THISACTOR].hitag 0
getactor[THISACTOR].xvel peractor1
getactor[THISACTOR].yvel activator

sizeat 24 24
enda

useractor notenemy TCHEST2 0 CHEST2IDLE


ifmove 0
{
	move INIT
	sizeat 24 24
	cstator 256

	ifvarg gold 0
	{
		setvarvar htg5 gold
		whilevarn htg5 0
		{
			state spawn_key
			state moveitright
			state moveitright
			setvarvar tempd htg5
			whilevarn tempd 0
			{
				state moveitleft
				subvar tempd 1
			}
			subvar htg5 1
		}
	}
}
fall

ifvarand fintips 8 nullop else
ifcansee ifpdistl 4096
{
	setvar currtip2 0 setvar currtip 8
	orvar fintips 8
	state inithelp
}

setvarvar temp gold
subvar temp 1
ifangdiffl 640 nullop else
ifaction CHEST2IDLE
	ifpdistl 1560
      ifp pfacing
        ifcansee
		{
			ifvarg gold 0 setvar keynear 30
			ifhitspace
			{
				setvarvar tempb keys
				
				ifvarvarg tempb temp
				{

					subvarvar keys gold
					setvarvar gold peractor1
					ifvarg temp -1 
					{
						sound UNLOCK
						espawn SOUNDMAKER
						setactorvar[RETURN].peractor1 OPENCHEST
						setactorvar[RETURN].countvar 10
					}
					else
					sound OPENCHEST
					action CHEST2OPEN    
					resetcount   
				}
				else
				{
					soundonce CHESTLOCKED
					ifvare temp 0 setvar ftq 135 else setvar ftq 601
					setvar fta QUOTETIME
				}
			}
		}
        

ifvarn peractor1 -1
ifaction CHEST2OPEN
ifactioncount 6
{
    setvar peractor1 -1
    setvar monstatus 0
    ifvarg droptile 10 
    {
        ifvare character 1
        {
	        ifvare droptile CHAINSAWSPRITE 
			{
				setvar droptile BOWSPRITE
				setvar command 3
			}
			
	        ifvare droptile RPGAMMO
	        {
			    setvar droptile QUIVERSPRITE
			    setvar command 18
	        }
	        ifvare droptile GRENADEAMMO
		        setvar droptile GAUNTAMMO
		        
	        ifvare droptile AMMO			        
	        	setvar droptile SWORDAMMO
        	
        	ifvare droptile SHOTGUNSPRITE
	        	setvar droptile HAMMERSPRITE
        	
        	ifvare droptile SHOTGUNAMMO
	        	setvar droptile HAMMERAMMO
        	
        	ifvare droptile CHAINGUNSPRITE
	        	setvar droptile AXESPRITE
        	
        	ifvare droptile BATTERYAMMO
	        	setvar droptile AXEAMMO
        	
        	ifvare droptile FIRSTGUNSPRITE
	        	setvar droptile NECROSWORD
				
			ifvare droptile REVOLVERSPRITE
				setvar droptile BOWSPRITE
				
			ifvare droptile REVOLVERAMMO
			{
				setvar droptile QUIVERSPRITE
				setvar command 12
			}
        	
        	ifvare droptile RPGSPRITE
				setvar droptile GAUNTSPRITE
        	
        	ifvare droptile BFGSPRITE
	        	setvar droptile SWORDSPRITE
        	
        	ifvare droptile BFGAMMO
	        	setvar droptile ARMSWORDAMMO
        	
        	ifvare droptile FLAMETHROWERSPRITE
        	{
	        	setvar droptile QUIVERSPRITE
				setvar command 10
        	}
        	ifvare droptile PLASMASPRITE
				setvar droptile CANNONSPRITE
				
        	ifvare droptile FLAMEAMMO
        	{
	        	setvar droptile QUIVERSPRITE
	        	setvar command 10
        	}
        	ifvare droptile PLASMAAMMO
				setvar droptile CANNONAMMO
        }
		else ifvare character 0
		{
			ifvare droptile BOWSPRITE
			{
				ife command 3 set droptile CHAINSAWSPRITE else
				setvar droptile REVOLVERSPRITE
			}
			
	        ifvare droptile QUIVERSPRITE
			{
				ife command 18
			    setvar droptile RPGAMMO else
				ife command 10
				setvar droptile FLAMETHROWERSPRITE else
				setvar droptile REVOLVERSPRITE
			}
			   
	        ifvare droptile GAUNTAMMO
		        setvar droptile GRENADEAMMO
		        
	        ifvare droptile SWORDAMMO			        
	        	setvar droptile AMMO
        	
        	ifvare droptile HAMMERSPRITE
	        	setvar droptile SHOTGUNSPRITE
        	
        	ifvare droptile HAMMERAMMO
	        	setvar droptile SHOTGUNAMMO
        	
        	ifvare droptile AXESPRITE
	        	setvar droptile CHAINGUNSPRITE
        	
        	ifvare droptile AXEAMMO
	        	setvar droptile BATTERYAMMO
        	
        	ifvare droptile NECROSWORD
	        	setvar droptile FIRSTGUNSPRITE
					
        	ifvare droptile GAUNTSPRITE
				setvar droptile RPGSPRITE
        	
        	ifvare droptile SWORDSPRITE
	        	setvar droptile BFGSPRITE
        	
        	ifvare droptile ARMSWORDAMMO
	        	setvar droptile BFGAMMO
        			
        	ifvare droptile CANNONSPRITE
				setvar droptile PLASMASPRITE
				
        	ifvare droptile CANNONAMMO
				setvar droptile PLASMAAMMO
				
			set command 0
		}
        espawnvar droptile
        setactor[RETURN].ang sprite[THISACTOR].ang
        ifvare character 1 { setactor[RETURN].pal command setvarvar treasurepal command }
        else setvar treasurepal 0
		ife droptile GEMSPRITE set treasurepic 717 else
        setvarvar treasurepic droptile
     	
        setvar pictime 78
        setvar droptile 0

		geta[].x x
		add x 640
		geta[].z z, sub z 6144
		rotatepoint sprite[].x sprite[].y x sprite[].y sprite[].ang mx my
		setsprite RETURN mx my z

	}
	state specialdeath
}

enda

useractor notenemy SHOOTME 0
ifmove 0
{
	move INIT
	sizeat 32 32
	cstat 32768
}
ife myspawner -1 killit
getactor[myspawner].x x
getactor[myspawner].y y
getactor[myspawner].z z
subvar z 8192
setsprite THISACTOR x y z
ifcount 26 killit
enda

// targframe
spritenoshade 4856
spritenoshade 4857
spritenoshade 4858
spritenoshade 4859
spritenoshade 4860
spritenoshade 4861
spritenoshade 4862
spritenoshade 4863

state targetboxcode
ifmove 0
{
	ife character 0 ife CURRWEAP 0
	ife swordtarg -1 ife hammertarg -1 killit
	
	setactor[THISACTOR].shade -127
	ifspritepal 1 { seta[].blend 1 cstator 2 }
	move INIT
	geta[myspawner].picnum picnum
	set digz tiledata[picnum].ysize
	mul digz sprite[myspawner].yrepeat
	shiftl digz 1
	div digz 192
	seta[].xrepeat digz
	seta[].yrepeat digz
	ifvarand sprite[myspawner].cstat 128 cstator 128
	setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y sprite[myspawner].z
	seta[].z sprite[myspawner].z
}
ifcount 1 killit
ends

spritenopal 4856
spritenopal 4857
spritenopal 4858
spritenopal 4859
spritenopal 4860
spritenopal 4861
spritenopal 4862
spritenopal 4863
useractor notenemy 4856 state targetboxcode enda
useractor notenemy 4857 state targetboxcode enda
useractor notenemy 4858 state targetboxcode enda
useractor notenemy 4859 state targetboxcode enda
useractor notenemy 4860 state targetboxcode enda
useractor notenemy 4861 state targetboxcode enda
useractor notenemy 4862 state targetboxcode enda
useractor notenemy 4863 state targetboxcode enda


state rats
  ifrnd 128
    spawn RAT
  ifrnd 128
    spawn RAT
  ifrnd 128
    spawn RAT
  ifrnd 128
    spawn RAT
  ifrnd 128
    spawn RAT
  ifrnd 128
    spawn RAT
  ifrnd 128
    spawn RAT
  ifrnd 128
    spawn RAT
ends


move MOUSEVELS 32

/*
state enablelight

break
// this state is disabled

getactor[THISACTOR].htflags temp
xorvar temp 256
setactor[THISACTOR].htflags temp
getplayer[THISACTOR].cursectnum psect
getplayer[THISACTOR].player_par ontime

ends


state lightsout

break
// this state is disabled

	ifactor SECTOREFFECTOR
	ifvare sprite[THISACTOR].hitag 0
	{
		getactor[THISACTOR].htflags temp
		orvar temp 256
		setactor[THISACTOR].htflags temp
		break
	}
	ifvarl framerate 31
	{
		ifvarand sprite[THISACTOR].htflags 256 nullop else
		{

			ifvarn camerasprite -1
			dist xydist THISACTOR camerasprite else
			findplayer xydist
			setvarvar temp hitag
			ifvarl temp 4096 setvar temp 4096
			ifvarl framerate 20
			ifvarvarg xydist temp
			{
					getplayer[THISACTOR].cursectnum psect
					getactor[THISACTOR].htflags tempb
					orvar tempb 256
					setactor[THISACTOR].htflags tempb
					break
			}
			shiftvarl temp 1
			ifvarl framerate 26
			ifvarvarg xydist temp
			{
					getplayer[THISACTOR].cursectnum psect
					getactor[THISACTOR].htflags tempb
					orvar tempb 256
					setactor[THISACTOR].htflags tempb
					break
			}

			shiftvarl temp 1
			ifvarvarg xydist temp
			{
					getplayer[THISACTOR].cursectnum psect
					getactor[THISACTOR].htflags tempb
					orvar tempb 256
					setactor[THISACTOR].htflags tempb
			}
		}
	}
	else
	ifvarand sprite[THISACTOR].htflags 256
	ifvarvarn player[THISACTOR].cursectnum psect
	ifvarvarn player[THISACTOR].player_par ontime // only enable one light per tic
	{
		ifvarn camerasprite -1
		dist xydist THISACTOR camerasprite else
		findplayer xydist
		ifvarvarl xydist hitag
		{
			state enablelight
			break
		}
		setvarvar temp hitag
		ifvarl temp 4096 setvar temp 4096
		shiftvarl temp 1
		ifvarvarl xydist temp
		ifvarg framerate 35
		{
			state enablelight
			break
		}
		setvarvar temp hitag
		ifvarl temp 4096 setvar temp 4096
		mulvar temp 3
		ifvarvarl xydist temp
		ifvarg framerate 41
		{
			state enablelight
			break
		}
		setvarvar temp hitag
		ifvarl temp 4096 setvar temp 4096
		shiftvarl temp 2
		ifvarvarl xydist temp
		ifvarg framerate 48
		{
			state enablelight
			break
		}
		setvarvar temp hitag
		ifvarl temp 4096 setvar temp 4096
		shiftvarl temp 3
		ifvarvarl xydist temp
		ifvarg framerate 55
		{
			state enablelight
			break
		}
		
	}
ends
*/

action EXPBARRELFRAME     0   2   1   1   15
actor EXPLODINGBARREL 26
  fall
  ifaction EXPBARRELFRAME
  {
    ifactioncount 2
    {
      hitradius 1024 WEAKEST WEAK MEDIUMSTRENGTH TOUGH
      spawn EXPLOSION2
      debris SCRAP2 2
      sound PIPEBOMB_EXPLODE
      killit
    }
    break
  }
  ifsquished
  {
    debris SCRAP1 5
    killit
    break
  }
  ifhitweapon
    action EXPBARRELFRAME
enda

eventloadactor GUNPOWDERBARREL 
cstator 257 getactor[THISACTOR].lotag droptile seta[].lotag 0 ifvare droptile 0 getactor[THISACTOR].xvel droptile
cactor NEWBARREL
geta[].yrepeat y, mul y 55 div y 100 seta[].yrepeat y
geta[].xrepeat x, mul x 65 div x 100 seta[].yrepeat x
enda

eventloadactor NEWBARREL 
cstator 257 getactor[THISACTOR].lotag droptile seta[].lotag 0 ifvare droptile 0 getactor[THISACTOR].xvel droptile
enda


action EXPLODINGFRAMES 0  2  1  1  30
actor GUNPOWDERBARREL 40 cactor NEWBARREL enda

useractor notenemy  NEWBARREL 40
ifmove 0
{
	move INIT
	cstator 257
	ifspawnedby APLAYER sizeat 26 24
	set inithp sprite[].xrepeat
	mul inithp 100, div inithp 75 seta[].extra inithp
}
ifvarand sprite[].cstat 8
{
	  getceilzofslope sprite[THISACTOR].sectnum sprite[THISACTOR].x sprite[THISACTOR].y mz
	  set y tiledata[sprite[].picnum].ysize
	  mul y sprite[].yrepeat
	  mul y 4
	  add mz y
	  
	  ifvarvarg sprite[THISACTOR].z mz
	  {
	  	getactor[THISACTOR].z z
	  	subvar z 512
	  	setactor[THISACTOR].z z
  	  }
  	  else
  	  setactor[THISACTOR].z mz
} 
else 
fall


ifvarand fintips2 2048 nullop else
ifvarn droptile 0
ifp pfacing
ifcansee ifpdistl 8192
{
	setvar currtip2 2048 setvar currtip 0
	orvar fintips2 2048
	state inithelp
}

ifaction EXPLODINGFRAMES
{
	// ifspritepal 2 getlastpal else spritepal 2
	
	ifactioncount 2
	{
		espawn EXPLOSION2
		set x sprite[].xrepeat
		mul x 3
		setactor[RETURN].xrepeat x
		setactor[RETURN].yrepeat x
		debris SCRAP1 10
		debris SCRAP2 13
		debris SCRAP3 4
		debris SCRAP4 17
		debris SCRAP5 6
		set xydist sprite[].xrepeat
		// shiftl xydist 6
		mul xydist 96
		ifg xydist 6144 set xydist 6144
		set temp xydist 
		shiftr temp 5
		ifl temp 32 set temp 32
		set tempb temp
		mul tempb 2, div tempb 3
		ifl tempb 24 set tempb 24
		set tempc tempb
		mul tempc 2, div tempc 3
		ifl tempc 16 set tempc 16
		set tempd tempd
		mul tempd 2, div tempd 3
		ifl tempd 8 set tempd 8

		hitradiusvar xydist tempd tempc tempb temp
		ife barrelupgrade YES
		{
			add xydist 256
			findplayer xydist2
			ifle xydist2 xydist
			{
				getp[].i playersprite
				ifg sprite[playersprite].htextra 1
				ife sprite[playersprite].htpicnum RADIUSEXPLOSION
				{
					seta[playersprite].htextra -1
				}
			}
			
		}
		flash
		ifvarn droptile 0 espawnvar droptile
		killit
	}
	else
	ifvarg dodge 0
	{
		cos xvel dodgeang
		sin yvel dodgeang
		setvarvar temp dodge
		ifvarg temp 1024 setvar temp 1024
		mulvarvar xvel temp
		mulvarvar yvel temp
		shiftvarr xvel 13
		shiftvarr yvel 13
		movesprite THISACTOR xvel yvel 0 CLIPMASK0 RETURN 
		ifn RETURN 0 set dodge 0
		// shiftvarr dodge 1
		mul dodge 2 div dodge 3
		ifvarl dodge 2 setvar dodge 0
	}
}

geta[].htextra bleeding
ifg bleeding 0 ifwasweapon KNEE { set temp bleeding mul temp 4 seta[].htextra temp mul bleeding 2 }

ifhitweapon
{
	ifg shipcam -1 strength 40 else
	{
		mul bleeding 768
		div bleeding sprite[].xrepeat
		ifg bleeding dodge
		{
			set dodgeang sprite[].htang
			set dodge bleeding
		}
		ifdead
		{
			action EXPLODINGFRAMES
			geta[].htflags temp
			orvar temp 4
			seta[].htflags temp
			seta[].shade -100
			break
		}
	}
}

ifvarg dodge 0
{
	cos xvel dodgeang
	sin yvel dodgeang
	setvarvar temp dodge
	ifvarg temp 1024 setvar temp 1024
	mulvarvar xvel temp
	mulvarvar yvel temp
	shiftvarr xvel 13
	shiftvarr yvel 13
	movesprite THISACTOR xvel yvel 0 CLIPMASK0 RETURN 
	shiftvarr dodge 1
	ifvarl dodge 2 setvar dodge 0
}

enda

state auracode
ifmove 0
{
	move INIT randomangle
	cstat 34
	sizeat 64 64
	seta[].blend 1
}
ifcount 1 killit
ends

useractor notenemy GROUPAURA 0
ifmove 0
{
	move INIT
	spritepal 2
	cstat 546
	sizeat 64 64
	seta[].blend 1
	set temp player[].player_par
	modvar temp 8
	geta[].ang angvar
	ifg temp 5 add angvar 1536 else
	ifg temp 3 add angvar 1024 else
	ifg temp 1 add angvar 512
	seta[].ang angvar
	
}
ifcount 1 killit

enda

useractor notenemy SPEEDAURA 0
ifn sprite[].pal 14
spritepal 12
state auracode
enda

useractor notenemy MIGHTAURA 0
state auracode
enda

useractor notenemy LIGHTNINGAURA 0
state auracode
enda

useractor notenemy VAMPIREAURA 0
state auracode
enda

useractor notenemy POISONAURA 0
state auracode
enda

useractor notenemy FIREAURA 0
state auracode
enda

useractor notenemy TELEPORTAURA 0

ifmove 0
{
	move INIT geth
	cstat 34
	set temp timer
	modvar temp 24
	set tempb 48
	sub tempb temp
	seta[].xrepeat tempb
	seta[].yrepeat tempb
	seta[].blend 1
}
ifcount 1 killit

enda

useractor notenemy CURSEAURA 0
state auracode
enda

useractor notenemy FREEZEAURA 0
spritepal 1
state auracode
enda

useractor notenemy NOVAAURA 0
state auracode
enda

useractor notenemy MAGNETAURA 0
ifmove 0
{
	move INIT randomangle
	cstat 34
	sizeat 64 64
	seta[].blend 1
}
ifcount 1 killit
enda

useractor notenemy X2SHOTAURA 0
state auracode
enda

// same tile as SPEEDAURA
// useractor notenemy TOUGHAURA 0
// state auracode
// enda


action BURNING_FLAME  0   12   1   1   2

move BURNING_VELS 

action BURN_FLAME2 -2 12 1 1 2
action BURN_FLAME3 38 12 1 1 2
move FASTFLAME 768

// useractor notenemy FLAME_MOVER 0
// 
// cstat 32768
// ifmove 0 move FASTFLAME faceplayerslow
// ifnotmoving killit
// ifcount 2 ifrnd 32
// {
// 	spawn RIVER_OF_FLAME
// 	killit
// }
// ifcount 3 ifrnd 48
// {
// 	spawn RIVER_OF_FLAME
// 	killit
// }
// ifcount 4
// {
// 	spawn RIVER_OF_FLAME
// 	killit
// }
// 
// enda
// 
// 
// useractor notenemy RIVER_OF_FLAME 0 BURN_FLAME2
// 
// ifmove 0
// {
// 	move BURNING_VELS faceplayerslow
// 	ifrnd 128 action BURN_FLAME3
// 	sizeat 52 52
// 	cstator 128
// 	ifrnd 128 cstator 4
// 	spawn FLAME_MOVER
// }
// fall
// soundonce FIRE_CRACKLE
// 
// sizeto 0 0
// ifpdistl 1280
// {
// 	sizeat 52 52
// 	ifrnd 64
// 	{
// 		addphealth -1
// 		palfrom 40 63
// 	}
// }
// 
// enda

state burningstate

// ifvare rendmode 4 { setvar hitag 8192 state lightsout }
  ife monstatus 2
  {
	spawn BIGSMOKE
	killit
  }
  ifvarl burning 0 spritepal 1
  ifspawnedby FIRESTARTER ifmove 0
  {
	  seta[].blend 1
	  setvar mtype 1
	  ifrnd 128 
	  {
		  cstator 4
		  getactor[THISACTOR].htflags temp
		  orvar temp 256
		  setactor[THISACTOR].htflags temp
	  }
	  cstator 2
  }
	  

  ifspawnedby BURNING
  {
    ifgapzl 16
      break
  }
  else
    ifspawnedby BURNING2
  {
    ifgapzl 16
      break
  }


  ifcount 128
  {
    ifspawnedby TIRE
    {
      ifactioncount 512
        killit
      ifrnd 16
        sizeto 64 48
    }
    else
    {
      sizeto 8 8
      sizeto 8 8
      ifcount 192
        killit
    }
  }
  else
  {
    ifmove 0
    {
      move BURNING_VELS
      setactor[THISACTOR].shade -127
    }

    sizeto 52 52
	ifcount 128 nullop else
	{
		soundonce FIRE_CRACKLE
	    ifp palive
	      ifpdistl 844
	        ifrnd 32
	          ifcansee
	    {
		  ife character 0
	      soundonce DUKE_LONGTERM_PAIN
		  else soundonce BARBPAIN4
		  
	      // addphealth -1
	      getplayer[THISACTOR].i spriteid
	      ifvarvarn spriteid myspawner
	      {
		      getactorvar[spriteid].burning tempb
		      ifvarl burning 0 subvar tempb 13
		      else
		      addvar tempb 13
		      setactorvar[spriteid].burning tempb
		      ifvarn myspawner -1
		      setvarvar flameowner myspawner
	      }
        
	      palfrom 24 16
	      count 128
	    }
	    findnearactorz SHOOTME 844 6752 spriteid
	    ifvarn spriteid -1
	    {
		    getactorvar[spriteid].myspawner temp
		    ifvarn temp -1
		    {
			    getactorvar[temp].burning tempb
			    ifvarl burning 0 
			    {
				    setvar tempc 4096
				    ifvarg sprite[spriteid].extra 0 divvarvar tempc sprite[spriteid].extra
		            ifvarg tempc 300 setvar tempc 300
		            ifvarl tempc 2 setvar tempc 2
		            subvarvar tempb tempc
			    }
			    else
			    addvar tempb 26
			    setactorvar[temp].burning tempb
			    count 128
		    }
	    }
    }
    iffloordistl 4 ifonwater count 130
  }

ends

actor BURNING WEAK BURNING_FLAME
  state burningstate
enda

actor BURNING2 WEAK BURNING_FLAME
  state burningstate
enda


action TOILETWATERFRAMES 0 4 1 1 1
actor TOILETWATER 0 TOILETWATERFRAMES

  ifpdistl 8192
  {
    soundonce WATER_GURGLE
    ifspawnedby TOILET
      sizeto 34 34
    else
    {
      ifspawnedby WATERFOUNTAINBROKE
        sizeto 6 15
      else
        ifspawnedby TOILETWATER
          nullop
      else
        sizeto 24 32
    }
ifvare endlevel 0
    ifp palive
      ifpdistl RETRIEVEDISTANCE
        ifp pfacing
          ifactioncount 32
			ifl sprite[player[].i].extra player[].max_player_health
              ifhitspace
                ifcansee
    {
      addphealth 1
      globalsound DUKE_DRINKING
      resetactioncount
    }
  }
enda


state steamcode
  ifpdistl 6144
    soundonce STEAM_HISSING

  ifcount 20
    {
      resetcount
	  ife invulntime 0
      ifp palive
        ifpdistl 1024
      {
        addphealth -1
        palfrom 16 16
      }
    }
  else
  {
    ifspawnedby STEAM
      break
    else
      ifspawnedby CEILINGSTEAM
        break

    sizeto 24 24
  }
ends

action STEAMFRAMES    0     5     1     1     1
actor STEAM 0 STEAMFRAMES
  state steamcode
enda

actor CEILINGSTEAM 0 STEAMFRAMES
  state steamcode
enda

actor WATERBUBBLEMAKER 0 0 randomangle

ifspritepal 0
{
  ifpdistl 3084
    ifrnd 24
      spawn WATERBUBBLE
}
else
   ifrnd 24
{
	ifspritepal 1 cactor 2000
	ifspritepal 2 cactor 2001
	ifspritepal 4 cactor 2002
	ifspritepal 6 cactor 2003
	ifspritepal 7 cactor 2004
	ifspritepal 8 cactor 2005
	spawn WATERBUBBLE
	cactor WATERBUBBLEMAKER
}
enda

action BUBBLE
action CRACKEDBUBBLE  1
move BUBMOVE       -10 -36
move BUBMOVEFAST     -10 -52

actor WATERBUBBLE 0 BUBBLE BUBMOVE getv geth randomangle

  ifaction CRACKEDBUBBLE
  {
    ifinwater
      ifrnd 192
        killit
    ifactioncount 7
      killit
  }
  else
  {
    ifcount 4
    {
      ifrnd 192
        move BUBMOVE getv geth randomangle
      else
        move BUBMOVEFAST getv geth randomangle
      resetcount

      ifrnd 84
        sizeat 8 10
      else
        ifrnd 84
          sizeat 10 8
      else
        sizeat 9 9
    }
    else
    {
	    ifspawnedby 2000 spritepal 1
	    ifspawnedby 2001 spritepal 2
	    ifspawnedby 2002 spritepal 4
	    ifspawnedby 2003 spritepal 6
	    ifspawnedby 2004 spritepal 7
	    ifspawnedby 2005 spritepal 8
    }

    ifonwater
    {
      iffloordistl 8
        action CRACKEDBUBBLE
    }
    else
      ifactioncount 40
        action CRACKEDBUBBLE
  }
enda

move SPLASHWAVE 24
action BLUDFRAMES 0 10 1 1 3
action SLOWSPLASH 0 10 1 1 6
action REDBLUDFRAMES -89 10 1 1 3
useractor notenemy BLUDSPLASH 0 BLUDFRAMES
ifmove 0
{
	move INIT
	ifspawnedby WATERFALL
	{
		// sizeat 40 40
		action SLOWSPLASH
		cstat 0
		move SPLASHWAVE geth
	}
	else
	ifspawnedby SLASHPROJ
	{
		action SLOWSPLASH
		sizeat 16 16
		spritepal 2
		seta[].blend 1
		cstator 2
	}
	else { sizeat 8 8 cstat 2 } // sizeat 12 12
		
	cstator 128
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
}
ifactioncount 10 killit
enda

move CLOUDVELUP 32 -24
move CLOUDVELDOWN 32 8


action BLOODCLOUDFRAMES -1931 13 1 1 6

actor BLOODCLOUD 0 BLOODCLOUDFRAMES
ifmove 0
{
	ifspritepal 0 spritepal 2
	sizeat 64 64
	cstator 130
	spriteflags 2048
	ifrnd 96 move CLOUDVELUP geth randomangle else
	ifrnd 128 move CLOUDVELUP geth getv randomangle else
	move CLOUDVELDOWN geth getv randomangle
}

ifactioncount 13
killit

enda

eventloadactor TEMPSPRITE

	getactor[THISACTOR].lotag lotag // turns it off
	getactor[THISACTOR].hitag hitag // turns it on
	getactor[THISACTOR].cstat initcstat
	getactor[THISACTOR].extra monstflags
	ifvare monstflags -1 setvar monstflags 0
	cstat 32768

enda

eventloadactor TELEPORTONCE
	geta[].lotag lotag
	seta[].lotag 0
	cstat 32768
enda

eventloadactor MOVEHERE
	geta[].lotag lotag
	seta[].lotag 0
	cstat 32768
enda

eventloadactor SUPERTOUCHPLATE

getactor[THISACTOR].lotag activator
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag hitag
getactor[THISACTOR].xvel droptile
ifvarn hitag 0 shiftvarl hitag 5
setactor[THISACTOR].hitag 0
getactor[THISACTOR].extra monstflags
ifvare monstflags -1 setvar monstflags 0
cstat 32768
enda

useractor notenemy SUPERTOUCHPLATE 0

ifvarn droptile 0
{
	checkactivatormotion droptile
	ifvare RETURN 1 setvar droptile 0
	else break
}


ifvarn hitag 0
{
	findplayer xydist
	ifvarvarl xydist hitag
	{
		state activatorstate
		killit
	}
}
else
ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
{
	state activatorstate
	killit
}

enda

eventloadactor STATUE1
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

eventloadactor STATUE2
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

eventloadactor STATUE3
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

eventloadactor STATUE4
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

eventloadactor STATUE5
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

eventloadactor STATUE6
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

move STATUESLIDE 96
move STATUESLIDEFACE 96
move STATUEFALL 64

state statuecode

fall
ifg sprite[].zvel 0
{
	ifmove STATUEFALL nullop else move STATUEFALL geth
}
else 
	ifmove STATUEFALL 
	{
		move STOPPED geth
		sound BIGTHUD
	}


ifmove 0 
{
	geta[].x initx
	geta[].y inity
	geta[].z initz
	getsector[].lotag mtype
	ifspawnedby APLAYER { setvar lotag 1 sizeat 32 32 cstat 257 }
	move STOPPED
	getactor[THISACTOR].xrepeat x
	
	set mx tiledata[sprite[].picnum].xsize
	mul x mx
	div x 40
	ifg x 254 set x 254
	setactor[THISACTOR].clipdist x
}

ife sector[].lotag 2 ifn mtype 2
{
	spawn TRANSPORTERSTAR
	setsprite THISACTOR initx inity initz
	spawn TRANSPORTERSTAR
	sound TELEPORTER
	quote 640
}

ifvare lotag 0 break

ifmove STATUESLIDEFACE ifpdistl 513 move STOPPED geth

ifp pfacing ifcansee
ifpdistl 1280 // 1024
{
	ifvarand fintips2 4 nullop else
	{
		setvar currtip2 4 setvar currtip 0
		orvar fintips2 4
		state inithelp
	}
	
	ifhitspace // pulling statue
	ifpdistg 512
	{
		ifmove STATUESLIDEFACE nullop else move STATUESLIDEFACE faceplayer
		soundonce DUMPSTER_MOVE
		setplayer[THISACTOR].posxv 0
		setplayer[THISACTOR].posyv 0
	}
	else
	ifvarg fhold 0 // pushing statue
	ifpdistl 1024
	{
		setactor[THISACTOR].ang player[THISACTOR].ang
		ifmove STATUESLIDE nullop else move STATUESLIDE geth
		soundonce DUMPSTER_MOVE
		// setplayer[THISACTOR].posxv 0
		// setplayer[THISACTOR].posyv 0
		getp[].posxv xvel, div xvel 2, setp[].posxv xvel
		getp[].posyv yvel, div yvel 2, setp[].posyv yvel
		
	}
	else
	{
		ifmove STOPPED nullop else ifvarl sprite[THISACTOR].zvel 1 move STOPPED geth
		stopactorsound THISACTOR DUMPSTER_MOVE
	}
}
else 
{
	ifmove STOPPED nullop else move STOPPED geth
	stopactorsound THISACTOR DUMPSTER_MOVE
}

ends


useractor notenemy STATUE1 0 state statuecode enda
useractor notenemy STATUE2 0 state statuecode enda
useractor notenemy STATUE3 0 state statuecode enda
useractor notenemy STATUE4 0 state statuecode enda
useractor notenemy STATUE5 0 state statuecode enda
useractor notenemy STATUE6 0 state statuecode enda

eventloadactor FLOORPANEL

getactor[THISACTOR].lotag activator // activates when all panels of this tag are pressed
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag hitag // activation sound
ifvare hitag 0 setvar hitag SWITCH_ON
setactor[THISACTOR].hitag 0
getactor[THISACTOR].extra monstflags // extra 1 means they lock in the on position once the activation occurs
ifvare monstflags -1 setvar monstflags 0
getactor[THISACTOR].sectnum mysector
getsector[mysector].floorz initz // unpressed floor z
setvarvar droptile initz
addvar droptile 2048
cstat 32768

enda

useractor notenemy FLOORPANEL 0

ifvare mtype 2 break // locked into activated position

ifvarl mysector 0 break // fucked
ifvarg mysector 4095 break

setvar target -1
headspritesect countvar mysector
whilevarn countvar -1
{
	getactor[countvar].picnum picnum
	
	switch picnum
	case APLAYER
	case BOULDER
	case STATUE1
	case STATUE2
	case STATUE3
	case STATUE4
	case STATUE5
	case STATUE6
	case 2081 case 2082 case 2083 case 2084 case 2085 case 2086 case 2087 case 2088
	case 2089 case 2090 case 2091 case 2092 case 2093 case 2094 case 2095
	getactor[countvar].z mz
	setvarvar temp initz
	subvar temp 1024
	ifvarvarg mz temp
	{
		setvarvar target countvar
		ifvarvarl sector[mysector].floorz droptile
		{
			getsector[mysector].floorz z
			addvar z 256
			ifvarvarg z droptile setvarvar z droptile
			setsector[mysector].floorz z
			ifvarvare z droptile
			{
				stopactorsound THISACTOR DUMPSTER_MOVE
				setvar mtype 1
				soundvar hitag
				// CHECK TO SEE IF OTHERS ARE ALSO TRIGGERED
				setvar peractor1 1 // this will become 0 if another of same tag is not triggered
				setvar spriteid 0
				whilevarn spriteid 16384
				{
					ifvarn sprite[spriteid].statnum 1024
					ifvare sprite[spriteid].picnum FLOORPANEL
					ifvarvare actorvar[spriteid].activator activator
					ifvare actorvar[spriteid].mtype 0
					{
						setvar peractor1 0
						setvar spriteid 16383
					}
					addvar spriteid 1
				}
				ifvare peractor1 1
				{
					ifvarand monstflags 1
					{
						setvar mtype 2
						setvar spriteid 0
						whilevarn spriteid 16384
						{
							ifvarn sprite[spriteid].statnum 1024
							ifvare sprite[spriteid].picnum FLOORPANEL
							ifvarvare actorvar[spriteid].activator activator
							setactorvar[spriteid].mtype 2
							addvar spriteid 1
						}
					}
					state activatorstate
				}
			}
			else soundonce DUMPSTER_MOVE
		}
	}
	break
	default
	break
	endswitch
	
	ifvarn target -1 setvar countvar -1 else
	nextspritesect countvar countvar
}
ifvare target -1 // nothing is pushing it down
{
	ifvarvarg sector[mysector].floorz initz
	{
		getsector[mysector].floorz mz
		ifvarvare mz droptile
		{
			// reverse the activation, if necessary
			setvar peractor1 1
			setvar spriteid 0
			whilevarn spriteid 16384
			{
				ifvarn sprite[spriteid].statnum 1024
				ifvare sprite[spriteid].picnum FLOORPANEL
				ifvarvare actorvar[spriteid].activator activator
				ifvare actorvar[spriteid].mtype 0
				{
					setvar peractor1 0
					setvar spriteid 16383
				}
				addvar spriteid 1
			}
			ifvare peractor1 1 // all the panels had been triggered so now the activation needs to be reversed
			{
				state activatorstate
			}
		}
		setvar mtype 0
		subvar mz 256
		ifvarvarl mz initz setvarvar mz initz
		setsector[mysector].floorz mz
		ifvarvare mz initz
		{
			stopactorsound THISACTOR DUMPSTER_MOVE
		}
		else soundonce DUMPSTER_MOVE
	}
}

enda

action PLATSMOKEFRAMES 0 11 1 1 7

actor PLATSMOKE 0
ifmove 0
{
	cstat 32768
	move CLOUDVELDOWN geth getv randomangle
}
ifcount 4 ifspritepal 0
{
	sizeat 48 48
	cstat 514
	spritepal 2
	action PLATSMOKEFRAMES
}
ifactioncount 8
killit

enda

useractor notenemy SHOTSPARK2 0
ifmove 0
{
	cstator 2
	seta[].blend 1
	spriteflags 2048
	cstator 128
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	sizeat 10 10
	ifrnd 128
	{
		ifrnd 128
		move SPARKMOVE1 geth getv randomangle
		else move SPARKMOVE2 geth getv randomangle
	}
	else
	{
		ifrnd 128
		move SPARKMOVE3 geth getv randomangle
		else move SPARKMOVE4 geth getv randomangle
	}
}

	sizeto 0 0
	


enda

move SPARKMOVE5 384 -40
move SPARKMOVE6 384 40

state rocksparkcode
ifmove 0
{
	spriteflags 2048
	cstator 128
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	sizeat 12 12
	
	ifrnd 128
	move SPARKMOVE5 geth getv randomangle
	else move SPARKMOVE6 geth getv randomangle
	
}
ifcount 1
{
	sizeto 0 0
	resetcount
}
ifnotmoving killit
ends

useractor notenemy ROCKETSPARK 0 state rocksparkcode enda
useractor notenemy ROCKETSPARK2 0 state rocksparkcode enda

move BIGSMOKEVEL 0 -16
move MISTVEL 32

action BIGSMOKEFRAMES 6 20 1 1 8

useractor notenemy BIGSMOKE 0 BIGSMOKEFRAMES
ifmove 0
{
	move INIT
	spriteflags 2048
	ifspawnedby FTPROJ 
	{
		ifspritepal 1 nullop else
		spritepal 2 
		ifrnd 128 espawn BURNING else
		espawn BURNING2
		setactor[RETURN].htpicnum FIRESTARTER
		ifspritepal 1 { setactor[RETURN].pal 1 setactorvar[RETURN].burning -30 }
	}
	else
	ifspritepal 0
	spritepal 12
	sizeat 80 80
	cstator 128
	ifspritepal 15 nullop else
	ifspritepal 10 nullop else cstator 514
	ifrnd 128 cstator 4
	ifspawnedby WATERFALL move BIGSMOKEVEL getv
}

ifactioncount 14
killit

enda

move SMOKEVEL 8 -16
move PISTOLVEL 8 -4
move ENGINE_SMOKE 64 -64
move SMOKESHOOTOUT -192
// action SMOKEFRAMES 0 4 1 1 10
action SMOKEFRAMES -1928 11 1 1 6
action SLOWSMOKE -1928 11 1 1 18
actor SMALLSMOKE 0 SMOKEFRAMES

  ifvare monstatus 2 killit
  ifmove 0
  {
	spriteflags 2048
	ifvarg livemon 200 killit
	ifspawnedby RPG
    {
	    ifpdistg 1536 
		    cstator 512 
	    else
	    killit
	    
    }
	cstator 2
	ifrnd 128 cstator 4
	
    ifspawnedby SECTOREFFECTOR
      move ENGINE_SMOKE geth getv
   else
      ifspawnedby LAVAROCK
      {
	      ifinwater { spawn WATERBUBBLE killit }
	      move SMOKEVEL geth getv faceplayer
	      cstator 512
	      spritepal 2
      }
    else
    ifvarl actorvar[sprite[THISACTOR].owner].burning 0
    {
	    spritepal 1
	    sizeat 96 96
	    cstator 512
	    move SMOKEVEL randomangle
	    getactor[THISACTOR].ang angvar
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		setvarvar mx x
		addvar mx 480
	    rotatepoint x y mx y angvar mx my
	    setactor[THISACTOR].x mx
		setactor[THISACTOR].y my    
    }
    else
	ifspawnedby APLAYER
	ifn player[].kickback_pic 0
	{
	  move PISTOLVEL geth getv
	  cstator 512
	}
	else
      move SMOKEVEL geth getv faceplayer
  }
  ifactioncount 11
    killit
	
    
enda

move GUSTMOVE 644
move SLOWGUST 384

// action COLDGUSTFRAMES -1 5 1 1 3
useractor notenemy COLDGUST 0 // COLDGUSTFRAMES
ifmove 0
{
	ife myspawner -1
	getactor[THISACTOR].owner myspawner
	ifvarand pow 1 ifvare target -1 move SLOWGUST 384 geth else
	move GUSTMOVE geth
	sizeat 45 160
	cstat 514
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	spritepal 1
	
	geta[player[].i].z peractor1
	getactor[THISACTOR].z z
	ifspawnedby WIZSCRIPT 
	{
		setvarvar peractor1 z
		randvar temp 65536
		subvar temp 32768
		addvarvar peractor1 temp
		setvar mtype 1
	}
	subvarvar peractor1 z
	
	ifvare target -1 setvarvar target player[THISACTOR].i
	ldist xydist THISACTOR target
	ifvare xydist 0 setvar xydist 1
	ifvarand pow 1 mulvar peractor1 384 else
	mulvar peractor1 644
	divvarvar peractor1 xydist
	shiftvarr peractor1 2 // 1
}

getactor[THISACTOR].z z
addvarvar z peractor1
randvar temp 644
ifrnd 128 mulvar temp -1
addvarvar z temp
setactor[THISACTOR].z z

getactor[THISACTOR].ang angvar
randvar temp 12
ifrnd 128 mulvar temp -1
addvarvar angvar temp
setactor[THISACTOR].ang angvar


getactor[THISACTOR].z z
addvarvar z peractor1
setactor[THISACTOR].z z

getactor[THISACTOR].htmovflag spriteid
ifvarn mtype 1
ifvarn spriteid 0
{
	// hit something
	addvar spriteid 16384
    ifvarl spriteid 16384 ifvarg spriteid -1
    {
	    getactorvar[spriteid].burning burning
	    subvar burning 50 // negative burning is freezing
	    setactorvar[spriteid].burning burning
	    getactor[spriteid].htextra temp
	    addvar temp 2
	    setactor[spriteid].htextra temp
	    setactor[spriteid].htpicnum COLDGUST
	    setactor[spriteid].htowner myspawner
		ife spriteid player[].i set retaliate myspawner
    }
    lotsofglass 1
    killit
}
ifcount 52 killit

enda

move VACUP 0 -12

action VACUUMFRAMES 0 8 1 1 3
useractor notenemy VACUUMPROJ 0 VACUUMFRAMES
ifmove 0
{
	ife myspawner -1
	getactor[THISACTOR].owner myspawner
	ifvarand pow 1 move SLOWGUST 384 geth else
	move GUSTMOVE geth
	sizeat 64 64
	cstat 2
	
	geta[player[].i].z peractor1
	getactor[THISACTOR].z z
	subvarvar peractor1 z
	
	ldist xydist THISACTOR player[].i
	ifvare xydist 0 setvar xydist 1
	ifvarand pow 1 mulvar peractor1 384 else
	mulvar peractor1 644
	divvarvar peractor1 xydist
	shiftvarr peractor1 2 // 1
}

ifmove VACUP
{
	sizeto 0 0
	sizeto 0 0
	break
}

getactor[THISACTOR].z z
addvarvar z peractor1
randvar temp 644
ifrnd 128 mulvar temp -1
addvarvar z temp
setactor[THISACTOR].z z

getactor[THISACTOR].ang angvar
randvar temp 12
ifrnd 128 mulvar temp -1
addvarvar angvar temp
setactor[THISACTOR].ang angvar


getactor[THISACTOR].z z
addvarvar z peractor1
setactor[THISACTOR].z z

getactor[THISACTOR].htmovflag spriteid
ifvarn spriteid 0
{
	// hit something
	addvar spriteid 16384
    ifvarl spriteid 16384 ifvarg spriteid -1
    {
	    getactor[spriteid].htextra temp
	    addvar temp 2
	    setactor[spriteid].htextra temp
	    setactor[spriteid].htpicnum VACUUMPROJ
	    setactor[spriteid].htowner myspawner
	    ifvare sprite[spriteid].picnum APLAYER
	    {
		    getactorvar[spriteid].cursed tempb
		    ifvarl tempb 260
		    {
			    addvar tempb 26
			    setactorvar[spriteid].cursed tempb
				set retaliate myspawner
		    }
	    }

    }
    move VACUP getv
}

ifcount 52 move VACUP getv

enda

action BARREL_DENTING  2 2 1 1 6
action BARREL_DENTED   1
action BARREL_DENTED2  2

move SPAWNED_BLOOD

actor NUKEBARRELDENTED WEAK
  cactor NUKEBARREL
  action BARREL_DENTED
enda

actor NUKEBARRELLEAKED WEAK
  cactor NUKEBARREL
  action BARREL_DENTED2
enda

actor NUKEBARREL MEDIUMSTRENGTH
  ifsquished
  {
    debris SCRAP1 32
    spawn BLOODPOOL
    state random_ooz
    killit
  }
  fall
  ifaction BARREL_DENTING
  {
    ifactioncount 2
    {
      debris SCRAP1 10
      ifrnd 2 spawn BLOODPOOL
      killit
    }
  }
  else
    ifhitweapon
  {
    ifdead
    {
      sound VENT_BUST

      ifrnd 128
        spawn BLOODPOOL
      action BARREL_DENTING
    }
    else
    {
      ifaction 0
        action BARREL_DENTED
      else
        ifaction BARREL_DENTED
      {
        action BARREL_DENTED2
        spawn BLOODPOOL
      }
      else
        ifaction BARREL_DENTED2
          action BARREL_DENTING
    }
  }
enda

state burningbarrelcode

// ifvare rendmode 4 { setvar hitag 6144 state lightsout }
  fall
  ifcount 32
  {
    resetcount
    ifp palive
      ifpdistl 1480
        ifp phigher
		ife invulntime 0
    {
      addphealth -1
      palfrom 16 16
      ifrnd 96
        sound DUKE_LONGTERM_PAIN
    }
  }
  ifhitweapon
  {
    sound VENT_BUST
    debris SCRAP1 10
    ifrnd 128
      spawn BURNING
    else
      spawn BURNING2
    killit
  }
ends

actor FIREBARREL
  state burningbarrelcode
enda
actor FIREVASE
  state burningbarrelcode
enda

move NUKE1 64 -448
move NUKE2 160 -320
move NUKE3 296 -192
move NUKE4 416 -96
move NUKE5 512 0
move NUKE6 416 96
move NUKE7 296 192
move NUKE8 160 320
move NUKE9 64 448

state nukeit
hitradius 2560 10 15 20 25
sound PIPEBOMB_EXPLODE
cactor 3458
spawn EXPLOSION2
cactor MININUKE
killit
ends

actor MININUKE 0
cstat 32768

ifcount 1 spawn SHOTSPARK2 // nullop 
else
{
	ifrnd 28 move NUKE5 geth randomangle
	else
	{
		ifrnd 128 // move up
		{
			 ifrnd 128
			 {
				 ifrnd 128 move NUKE1 geth getv randomangle else
				 move NUKE2 geth getv randomangle
			 }
			 else
			 {
				 ifrnd 128 move NUKE3 geth getv randomangle else
				 move NUKE4 geth getv randomangle
			 }
		}
		else // move down
		{
			ifrnd 128
			 {
				 ifrnd 128 move NUKE6 geth getv randomangle else
				 move NUKE7 geth getv randomangle
			 }
			 else
			 {
				 iffloordistl 8 ifrnd 64
				 {
					 ifrnd 128 move NUKE3 geth getv randomangle else
					 move NUKE4 geth getv randomangle
				 }
				 else
				 {
				 	ifrnd 128 move NUKE8 geth getv randomangle else
				 	move NUKE9 geth getv randomangle
			 	}
			 }
		}
	}
}
ifrnd 16
{
	resetcount
	spawn EXPLOSION2
	hitradius 2048 8 12 16 20
}
ifcount 1 ifrnd 4 state nukeit
ifcount 3 ifrnd 8 state nukeit
ifcount 6 ifrnd 16 state nukeit
ifcount 9 ifrnd 32 state nukeit
ifcount 12 state nukeit

enda




action SHRINKERFRAMES 0 4 1 1 10
actor SHRINKEREXPLOSION 0 SHRINKERFRAMES

cstat 32768

ifcount 1 nullop else
{
	// spawn EXPLOSION2
	sound PIPEBOMB_EXPLODE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
	spawn MININUKE
}
	
ifcansee palfrom 40 63 63 63
ifcount 32 killit

//  ifactioncount 4
//    killit
enda


move SHIELDMOVE 0 16
move SHIELDMOVE2 384 0
action WIZSHIELDFRAME -1 1 1 1 1
useractor notenemy WIZARDSHIELD 0

ifmove 0
{
	action WIZSHIELDFRAME
	ifspawnedby WIZARD spritepal 1
	ifspawnedby WIZARDRED spritepal 2
	move SHIELDMOVE geth getv
	cstator 914
	sizeat 64 128
	ifspawnedby APLAYER
	{
		cstat 787
		sizeat 192 96
		spritepal 1
		move STOPPED
	}
}

ifvarn myspawner -1
{
	addvar countvar 1
	getactorvar[myspawner].monstatus mtype
	getactor[myspawner].picnum picnum
	getactor[myspawner].statnum temp
	ifvare temp 1024 setvar mtype 2
	ifvarn picnum WIZARD ifvarn picnum WIZARDRED setvar mtype 2
	ifvare mtype 2
	{
		espawn SOUNDMAKER
		randvar temp 2
		addvar temp 584
		setactorvar[RETURN].peractor1 temp
		lotsofglass 10
		killit
	}
	setvar mtype 0
	getactor[myspawner].x x
	getactor[myspawner].y y
	getactor[myspawner].z z
	
	getplayer[THISACTOR].i spriteid
	ldist xydist spriteid myspawner
	subvar xydist 384
	ifvarg xydist 2048 
	{ 
		setvar xydist 2048 
		cstat 914 
	}
	else cstat 915
	ifvarl countvar 26
	{
		setvarvar temp countvar
		shiftvarl temp 6
		addvar temp 480
		ifvarvarg temp xydist setvarvar temp xydist
		setvarvar xydist temp
	} 
	ifvarl xydist 480 setvar xydist 480
	
	setvarvar mx x
	addvarvar mx xydist
	rotatepoint x y mx y peractor1 mx my
	updatesectorz mx my z mysector
	ifvarn mysector -1
	changespritesect THISACTOR mysector
	setactor[THISACTOR].x mx
	setactor[THISACTOR].y my
	setactor[THISACTOR].z z

	subvarvar x mx
	subvarvar y my
	getangle angvar x y
	setactor[THISACTOR].ang angvar
	
	addvar peractor1 64
	ifvarg peractor1 2047 subvar peractor1 2048
	
	add countvarb 1
	ifg countvarb 900
	{
		sizeto 0 0
		ife countvarb 930 killit
	}
}

strength 0
ifvarg barbquake 0 state barbquakecheck
ifhitweapon
{
	ifwasweapon FREEZEBLAST break
	espawn SOUNDMAKER
	randvar temp 2
	addvar temp 584
	setactorvar[RETURN].peractor1 temp
	lotsofglass 10
	killit
}
ifvarn myspawner -1 break

ifspritepal 1
{
	ifmove INIT nullop else
	ifcount 6 move INIT
	ifpdistl 1280	
	palfrom 32 0 0 63
	ifcount 260 sizeto 0 0
	ifcount 300 killit
	break
}

enda

action BOMBLETFRAMES -1 5 1 1 3
move BOMBINIT 132 -48
move BOMBROLL 116
move BOMBROLL2 96
move BOMBROLL3 48

state bombblow
debris SCRAP2 4
spawn EXPLOSION2
// sound PIPEBOMB_EXPLODE
ifrnd 128 sound EXPL3 else sound EXPL6
hitradius 2048 10 18 27 40
ifvarn myspawner -1
{
	findplayer xydist
	ifle xydist 2304
	{
		getplayer[].i spriteid
		ifvare sprite[spriteid].htpicnum RADIUSEXPLOSION
		{
			ifg sprite[spriteid].htextra 1
			ife barrelupgrade YES
				seta[spriteid].htextra -1
			
			setactor[spriteid].htowner myspawner
		}
	}
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ifg sprite[spriteid].htextra 0 seta[spriteid].htowner myspawner
		nextspritestat spriteid spriteid
	}
}

killit
ends

actor BOMBLET 0 BOMBLETFRAMES

fall
ifcount 1 nullop else
{
	cstator 256
	sizeat 8 8
	move BOMBINIT geth getv randomangle
	set myspawner player[].i
}

ifmove BOMBINIT ifcount 8
{
	ifrnd 96
	move BOMBROLL geth
	else ifrnd 128
	move BOMBROLL2 geth
	else
	move BOMBROLL3 geth
	setactor[THISACTOR].htextra -1
	setactor[THISACTOR].htpicnum -1
}

ifnotmoving state bombblow
ifcount 26 
{
	ifrnd 6 state bombblow
}
ifhitweapon 
{
	ifwasweapon SHOTSPARK1
	state bombblow
	strength 0
}

ifcount 100 { move 0 action 0 }

enda



action EXPLOSION_FRAMES 0 17 1 1  4
action ALTEXP_FRAMES 1566 17 1 1 4
move AWAYFROMWALL 16
move EXPLODOWN 0 32
actor EXPLOSION2 1 EXPLOSION_FRAMES

setvar hitag 8192

// state lightsout

ifcount 1 nullop else
{
	ifvarl burning 0 spritepal 1
	ifvare weap 2 debris SCRAP1 10
	
	ifspawnedby CANNONBALL
	{
		geta[].z saveit
		set z saveit
		add z 4096
		seta[].z z
		
		debris SCRAP1 6
		debris SCRAP2 5
		seta[].z saveit
		
	}
	ifspawnedby CANNONBALL2
	{
		sizeat 64 64
		geta[].z saveit
		set z saveit
		add z 4096
		seta[].z z
		spritepal 4
		debris SCRAP1 6
		debris SCRAP2 5
		getlastpal
		seta[].z saveit
		
	}
	
	ifspawnedby ARROWPROJ sound BOMBARROW
	else
	{
		randvar temp 3
		ifvare temp 0 { ifspawnedby RPG sound RPG_EXPLODE2 else sound PIPEBOMB_EXPLODE2 }
		ifvare temp 1 sound EXPL3 else
		ifvare temp 2 sound EXPL4 else
		ifvare temp 3 sound EXPL5
	}

	
	ifrnd 128 cstator 4
	
	ifspawnedby RPG ifvarn peractor1 1 killit
	getactor[THISACTOR].sectnum mysector
	ifvarn mysector -1
	{
		ifvarn mtype 0
		{
			addvar mtype 16384
		    ifvarl mtype 16384 ifvarg mtype -1 nullop
		    else
		    {
			    subvar mtype 16384
				andvar mtype 49152
				ifvare mtype 32768 nullop else
				{
					getactor[THISACTOR].x x
					getactor[THISACTOR].y y
					getactor[THISACTOR].z z
					getceilzofslope mysector x y mz
					setvarvar temp z
					subvarvar z mz
					ifvarl z 4096 
					{
						getactor[THISACTOR].yrepeat my
						shiftvarl my 7
						addvarvar temp my
						setactor[THISACTOR].z temp
						move EXPLODOWN getv
						cstator 8
					}
					break
				}
			}
			
		}
		iffloordistl 16 nullop else
		{
			action ALTEXP_FRAMES
			ifrnd 128 cstator 8
			move AWAYFROMWALL faceplayer
			getactor[THISACTOR].xrepeat temp
			mulvar temp 3 divvar temp 2
			setactor[THISACTOR].xrepeat temp
			setactor[THISACTOR].yrepeat temp
		}
		// start fires
		setvar temp 0
		ifspawnedby RPG setvar temp 1
		ifspawnedby HEAVYHBOMB setvar temp 1
		ifspawnedby ARROWPROJ setvar temp 1
		ifvare temp 1
		{
			headspritestat spriteid 1
			whilevarn spriteid -1
			{
				
				getactor[THISACTOR].z z
				getactor[spriteid].z mz
				subvarvar mz z
				ifvarl mz 32768 ifvarg mz -32768
				{
					ldist xydist THISACTOR spriteid
					ifvarl xydist 1024 
					{
						getactorvar[spriteid].burning tempb 
						ifspritepal 1 // freezing explosion
						ifl burning 0
						{
							setvar tempc 8192
						    ifvarg sprite[spriteid].extra 0 divvarvar tempc sprite[spriteid].extra
				            ifvarg tempc 300 setvar tempc 300
				            ifvarl tempc 3 setvar tempc 3
				            subvarvar tempb tempc
						}
						else
						addvar tempb 30
						setactorvar[spriteid].burning tempb
					}
				}
				
				nextspritestat spriteid spriteid
			}
		}
	}
	
	ifspawnedby 3458 sizeat 128 128
	
	ifspawnedby BOMBLET { sizeat 20 20 setactor[THISACTOR].htflags 256 }
	ifspawnedby CYBERDEMON { sizeat 16 16 setactor[THISACTOR].htflags 256 }
	ifspawnedby EXPLOSIVEBULLET { sizeat 16 16 set weap 1 setactor[THISACTOR].htflags 256 }
}
	
  ifactioncount 16 nullop else
  ifactioncount 15 ifvare weap 0 spawn BIGSMOKE // weap 1 means no smoke

  ifactioncount 17
    killit
enda


actor EXPLOSION2BOT 1 EXPLOSION_FRAMES
  ifactioncount 20
    killit
enda

spritenoshade EXPLOSION3
spritenopal EXPLOSION3
action EXPLOSION3_FRAMES 0 12 1 1  5
useractor notenemy EXPLOSION3 0

ifmove 0
{
	seta[].shade -127
	move INIT
	flash
	ife peractor1 1 hitradius 2048 10 17 24 30
	action EXPLOSION3_FRAMES
	ifl sprite[].xrepeat 8 sizeat 68 64
	ifspawnedby ARCHONPROJ { set mtype 1 sizeat 80 72 }
	ifpdistl 6144 quake 20
	iffloordistl 8
	{
		espawn EXPLOSION2BOT
		seta[RETURN].xrepeat sprite[].xrepeat
		seta[RETURN].yrepeat sprite[].yrepeat
		debris SCRAP2 4
		debris SCRAP4 4
		debris SCRAP5 4
	}
}

ifactioncount 4
ifspritepal 23
ife mtype 1 set mtype 0

ife mtype 1
{
	add countvar 1
	ifg countvar 2
	ifvarand countvar 1
	{
		set temp countvar
		mul temp 384
		set initx sprite[].x
		add initx temp
		rand inity 2047
		set countvarb 0
		whilevarn countvarb 8
		{
			rotatepoint sprite[].x sprite[].y initx sprite[].y inity saveit saveit2
			updatesector saveit saveit2 sect 
			ifn sect -1
			{
				espawn EXPLOSION3
				setsprite RETURN saveit saveit2 sprite[].z
				setav[RETURN].peractor1 1
			}
			add countvarb 1
			add inity 256
		}
	}
	
}

ifactioncount 12 
{
	spawn BIGSMOKE
	ifspritepal 113
	ife mtype 1
	{
		espawn BATGUNNER
		seta[RETURN].pal 11
		setav[RETURN].gold -1
		setav[RETURN].droptile 1
	}
	killit
}

enda

action FFLAME_FR 0 16 1 1 1
action FFLAME 0 1 1 1 1

actor FLOORFLAME 0 FFLAME_FR
  ifaction FFLAME_FR
  {
    ifpdistl 1024
      hitradius 1024 WEAKEST WEAKEST WEAKEST WEAKEST
    ifactioncount 16
      action FFLAME
  }
  ifaction FFLAME
    ifrnd 4
  {
    action FFLAME_FR
    // sound CAT_FIRE
    resetactioncount
  }
enda



action ASATNSPIN     0 5 1 1 4
action ASATSHOOTING   -10 3 5 1 40
action ASATWAIT      0 1 5 1 1
move TURRVEL

actor ROTATEGUN ROTTURRETSTRENGTH
// ASATSHOOTING TURRVEL faceplayer
  ifaction 0
  {
	setvar gold GOLD2
    action ASATSHOOTING
    move TURRVEL faceplayer
  }
  else
    ifaction ASATNSPIN
  {
    ifactioncount 32
    {
      action ASATWAIT
      move TURRVEL faceplayer
    }
  }
  else
    ifaction ASATSHOOTING
  {
    ifactioncount 12
      ifrnd 32
    {
      action ASATWAIT
      move 0
    }
    ifcount 32
      resetcount
    else
      ifcount 16
    {
      ifcount 17 nullop
      else
      {
        sound PRED_ATTACK
        shoot FIRELASER
      }
    }
    else
      ifcount 4
    {
      ifcount 5 nullop
      else
      {
        ifcansee
          ifcanshoottarget
        {
          sound PRED_ATTACK
          shoot FIRELASER
        }
      }
    }
  }
  else
    ifaction ASATWAIT
  {
    ifactioncount 64
      ifrnd 32
        ifp palive
          ifcansee
    {
      action ASATSHOOTING
      move TURRVEL faceplayer
    }
  }
  
  state monsterai
  
  ifhitweapon
  {
    ifdead
    {
      addkills 1 add globalkills 1
      state specialdeath
      sound LASERTRIP_EXPLODE
      debris SCRAP1 15
      spawn EXPLOSION2
      killit
    }
    else
    {
      action ASATNSPIN
      debris SCRAP1 4
    }
    move 0
  }
enda

action RIP_F 0 8 1 1 1
actor FORCERIPPLE 0 RIP_F
  ifactioncount 8
    killit
enda

useractor notenemy DIAMONDPORT 0

ifmove 0
{
	move INIT
	sizeat 48 44
	seta[].blend 1
	cstator 130
	geta[].z z, sub z 8192, seta[].z z
}
sizeto 0 0
ifcount 30 killit

enda

action RIFTFRAMES1 -1419 8 1 1 4
action RIFTFRAMES2 -1411 5 1 1 4
action TRANSFOWARD 0  6  1  1  2
action TRANSBACK   5  6  1 -1  2
actor TRANSPORTERSTAR 0 RIFTFRAMES1 // TRANSFOWARD

ifspawnedby FREEZEBLAST killit

ifmove 0
{
	move INIT
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	ifspawnedby MONSOUL sizeat 8 8 else
	ifspawnedby MINOTAUR sizeat 64 128 else
	sizeat 16 16
	getactor[THISACTOR].htpicnum peractor1
	ifvarl peractor1 255
	{
		getactor[THISACTOR].z z
		subvar z 2048
		setactor[THISACTOR].z z
	}
}
ifvarg peractor1 255
{
	geta[].cstat temp
	ifvarand temp 2 { xorvar temp 2 seta[].cstat temp }
	sizeto 80 80
	sizeto 80 80
	sizeto 80 80
	sizeto 80 80
}
else
{
	sizeto 48 48
	sizeto 48 48
	sizeto 48 48
	sizeto 48 48
}
      
  ifactioncount 24 action RIFTFRAMES2
  ifaction RIFTFRAMES2 ifactioncount 5 killit
enda

action BEAMFOWARD  0  4  1  1  9
actor TRANSPORTERBEAM 0 BEAMFOWARD
  sizeto 32 64
  sizeto 32 64
  sizeto 32 64
  ifactioncount 4
    killit
enda

// SHOP FOR SELLING ONE TYPE OF ITEM
// LOTAG: INITIAL PRICE
// HITAG: PICNUM OF ITEM
// EXTRA:  ACTIVATION TO MAKE ITEM AVAILABLE
// PAL:  0 normal, 10 one time only, 23 price increases with each sale
// note the item displayed will be the size of the SHOP sprite, so you may want to place it as the item first, then change it to SHOP

eventloadactor SHOP
cstat 32768
getactor[THISACTOR].hitag hitag
getactor[THISACTOR].lotag lotag
getactor[THISACTOR].extra activator
ifvare activator -1 setvar activator 0
setactor[THISACTOR].hitag 0
setactor[THISACTOR].lotag 0
getactor[THISACTOR].shade command // command 10 == use gems
geta[].xvel mtype
seta[].xvel 0
enda

state showprice
	setvarvar tempc lotag
	ifvarg lotag 9999
	{
		setvarvar temp tempc
		divvar temp 1000
		state spawn_number
		mulvar temp 1000
		subvarvar tempc temp // tempc is now the number that is left over
		state moveitleft
		state moveitleft
		state moveitleft
	}
	ifvarg lotag 999
	{
		setvarvar temp tempc
		divvar temp 1000
		state spawn_number
		mulvar temp 1000
		subvarvar tempc temp // tempc is now the number that is left over
		state moveitleft
		state moveitleft
	}
	ifvarg lotag 99
	{
		setvarvar temp tempc
		divvar temp 100
		state spawn_number
		mulvar temp 100
		subvarvar tempc temp
		state moveitleft
	}
	ifvarg lotag 9
	{
		setvarvar temp tempc
		divvar temp 10
		state spawn_number
		mulvar temp 10
		subvarvar tempc temp
	}
	setvarvar temp tempc
	state spawn_number
	ifvarg lotag 9 state moveitright
ends

state convertitem

ifvare character 1
{
	ifvare hitag CHAINSAWSPRITE 
	{
		setvar hitag BOWSPRITE
		setvar droptile 3
	}
	
	ifvare hitag RPGAMMO
	{
		setvar hitag QUIVERSPRITE
		setvar droptile 18
	}
	ifvare hitag GRENADEAMMO
		setvar hitag GAUNTAMMO
		
	ifvare hitag AMMO			        
		setvar hitag SWORDAMMO
	
	ifvare hitag SHOTGUNSPRITE
		setvar hitag HAMMERSPRITE
	
	ifvare hitag SHOTGUNAMMO
		setvar hitag HAMMERAMMO
	
	ifvare hitag CHAINGUNSPRITE
		setvar hitag AXESPRITE
	
	ifvare hitag BATTERYAMMO
		setvar hitag AXEAMMO
	
	ifvare hitag FIRSTGUNSPRITE
		setvar hitag NECROSWORD
		
	ifvare hitag REVOLVERSPRITE
		setvar hitag BOWSPRITE
		
	ifvare hitag REVOLVERAMMO
	{
		setvar hitag QUIVERSPRITE
		setvar droptile 12
	}
	
	ifvare hitag RPGSPRITE
		setvar hitag GAUNTSPRITE
	
	ifvare hitag BFGSPRITE
		setvar hitag SWORDSPRITE
	
	ifvare hitag BFGAMMO
		setvar hitag ARMSWORDAMMO
	
	ifvare hitag FLAMETHROWERSPRITE
	{
		setvar hitag QUIVERSPRITE
		setvar droptile 10
	}
	ifvare hitag PLASMASPRITE
		setvar hitag CANNONSPRITE
		
	ifvare hitag FLAMEAMMO
	{
		setvar hitag QUIVERSPRITE
		setvar droptile 10
	}
	ifvare hitag PLASMAAMMO
		setvar hitag CANNONAMMO
}
else ifvare character 0
{
	ifvare hitag BOWSPRITE
	{
		ife droptile 3 set hitag CHAINSAWSPRITE else
		setvar hitag REVOLVERSPRITE
	}
	
	ifvare hitag QUIVERSPRITE
	{
		ife droptile 18
		setvar hitag RPGAMMO else
		ife droptile 10
		setvar hitag FLAMETHROWERSPRITE else
		setvar hitag REVOLVERSPRITE
	}
	   
	ifvare hitag GAUNTAMMO
		setvar hitag GRENADEAMMO
		
	ifvare hitag SWORDAMMO			        
		setvar hitag AMMO
	
	ifvare hitag HAMMERSPRITE
		setvar hitag SHOTGUNSPRITE
	
	ifvare hitag HAMMERAMMO
		setvar hitag SHOTGUNAMMO
	
	ifvare hitag AXESPRITE
		setvar hitag CHAINGUNSPRITE
	
	ifvare hitag AXEAMMO
		setvar hitag BATTERYAMMO
	
	ifvare hitag NECROSWORD
		setvar hitag FIRSTGUNSPRITE
			
	ifvare hitag GAUNTSPRITE
		setvar hitag RPGSPRITE
	
	ifvare hitag SWORDSPRITE
		setvar hitag BFGSPRITE
	
	ifvare hitag ARMSWORDAMMO
		setvar hitag BFGAMMO
			
	ifvare hitag CANNONSPRITE
		setvar hitag PLASMASPRITE
		
	ifvare hitag CANNONAMMO
		setvar hitag PLASMAAMMO
		
	set droptile 0
}

ends

move WAIT
move RESETSHOP

useractor notenemy SHOP 0

ifvarn activator 0 break
state convertitem

ifmove RESETSHOP
{
	setvar peractor1 -1
	ifcount 20
	{
		ifg mtype 0
		{
			sub mtype 1
			ife mtype 0 killit
		}
		move INIT
		set peractor1 0
		state showprice
	}
	break
}
ifmove 0
{
	move INIT
	ifspritepal 23 setvarvar ammo lotag // saves initial price
	setactor[THISACTOR].mdflags 16
	cstat 0
	
	ifvarg lotag 0
	{
		ifvare command 10
		{
			espawn GEMSPRITE
			getactor[RETURN].z z
			subvar z 7960
			setactor[RETURN].z z
			setactor[RETURN].ang sprite[THISACTOR].ang
			state moveitleft
			setactorvar[RETURN].myspawner THISACTOR
			setactorvar[RETURN].mtype SHOP
		}
		state showprice

	}
}

ifmove WAIT
{
	cstat 514
	ifhitspace break else { move INIT cstat 0 }
}

ifp palive
ifp pfacing
ifpdistl 2048
ifvare helpmenu NO
ifvare endlevel 0
{
	ifvarl goldnear 10 setvar goldnear 10
	ifvare command 10 setvarvar countvar stash else setvarvar countvar pgold
	ifvarvarl countvar lotag 
	{
		ifhitspace { setvar ftq 612 setvar fta QUOTETIME }
	} else
	{
		setvar ftq 610 setvar fta 30
		ifhitspace
		{
			ifvare command 10 subvarvar stash lotag else
			subvarvar pgold lotag
			globalsound GOLDBIG
			espawnvar hitag
			ife hitag AMMOPACK setav[RETURN].peractor1 1
			move WAIT
			ifspritepal 10 { setvar peractor1 -1 killit }
			ifspritepal 23 { addvarvar lotag ammo move RESETSHOP geth }
		}
	}
}


enda

eventloadactor SHOOTER

	getactor[THISACTOR].lotag lotag
	getactor[THISACTOR].extra monstflags 
	ifvare monstflags -1 setvar monstflags 0
	// bitfield:  -1, 0 = no aiming, 2 = aims at player and friends, 4 = aims at bad guys, 8 = randomized aiming
	// 16 = randomized shot timing, 32 = makes sound when firing, 64 = can be destroyed by explosives
	// 256 = projectiles are not polymer lights
	setactor[THISACTOR].lotag 0
	getactor[THISACTOR].hitag hitag // the tilenum of the projectile it shoots

	
	getactor[THISACTOR].shade monstatus // number of projectiles it shoots
	ifvare monstatus 0 setvar monstatus 1
	// negative monstatus makes it shoot forever
	getactor[THISACTOR].yvel peractor1 // vertical aiming
	setactor[THISACTOR].yvel 0
	setactor[THISACTOR].extra -1
	getactor[THISACTOR].zvel countvarb // the number of ticks between shots
	ifvarl countvarb 1 setvar countvarb 1

	getactor[THISACTOR].sectnum mysector
	getactor[THISACTOR].z initz
	subvar initz 8192
	cstator 32768
	getactor[THISACTOR].ang dodgeang

enda

useractor notenemy SHOOTER 0

ifvarl lotag 1 setvar mtype 1
else ifvare mtype 0
{
	setvarvar temp lotag
	checkactivatormotion temp
	ifvare RETURN 1 setvar mtype 1
}

ifvare mtype 1
{
	setvar lotag 0
	strength 0
	ifvarand monstflags 64 { cstator 256 ifhitweapon killit }
	ifvare countvar 0
	{
		ifvare monstatus 0 
		{
			killit
			break
		}
		setvar target -1
		ifvarand monstflags 2
		{
			// aim at player and friends
			ifcansee getplayer[THISACTOR].i target
			// no ally targeting currently
		}
		ifvare target -1
		ifvarand monstflags 4
		{
			// aim at bad guys
			findnearactorz SHOOTME 16384 65536 target
			ifvarn target -1 
			{
				getactorvar[target].myspawner target
				state validatetarg
			}
		}
		setvarvar countvar countvarb
		ifvare target -1
		{
			ifvarand monstflags 2 break
			ifvarand monstflags 4 break
		}
		setvar zvel 0
		ifvarn target -1
		{
			getactor[target].x mx
			getactor[target].y my
			getactor[THISACTOR].x x
			getactor[THISACTOR].y y
			subvarvar mx x
			subvarvar my y
			getangle angvar mx my
			setactor[THISACTOR].ang angvar
			
			state calczdist
			ldist xydist THISACTOR target
			ifvare xydist 0 setvar xydist 1
			
			// multiply zvel by the speed of the projectile
			switch hitag
			case FIRELASER
			case COOLEXPLOSION1
			case SHRINKER
			case WRAITHPROJ
			case BFGBEAMLITE
			case ARROWPROJ
			setvar xvel 768
			break
			
			case RPG
			case FREEZEBLAST
			case GRENADEPROJ
			case ROCKPROJ
			case WEBPROJ
			case DEMONSPIT
			case NOVAPROJ
			setvar xvel 644
			break
			
			case FTPROJ
			case FWPROJ6
			case SKELAXE
			case ETTINCLUB
			case PUSHPROJ
			case BFGPROJ
			setvar xvel 512
			break
			
			case KORAXPROJ
			setvar xvel 480
			break
			
			case SHOTSPARK1
			case SHOTGUN
			case CHAINGUN
			case MONSTERBITE
			case SPIDERBITE
			case BFGBEAMPROJ
			case DBSHOT
			setvar xvel 256
			break
			
			case SLOWBULLET
			case EVILBULLET
			case EXPLOSIVEBULLET
			setvar xvel 1024
			break
			
			case ENEMYSLUGPROJ
			setvar xvel 844
			break
					
			default
			setvar xvel 768
			break
			
			endswitch
	
			mulvarvar zdist xvel
			divvarvar zdist xydist

			ezshootvar zdist hitag
			ifvarand monstflags 256
			{
				getactor[RETURN].htflags temp
				orvar temp 256
				setactor[RETURN].htflags temp
			}
		}
		else 
		{
			setactor[THISACTOR].ang dodgeang

			ezshootvar peractor1 hitag
			ifvarn xvel 256 ifvarg RETURN -1
			{
				setactor[RETURN].ang dodgeang
				ifvarand monstflags 256
				{
					getactor[RETURN].htflags temp
					orvar temp 256
					setactor[RETURN].htflags temp
				}
			}
		}
		
		ifvarand monstflags 8
		ifvarn xvel 256
		{
			// randomized trajectory
			randvar tempb 24
			getactor[RETURN].ang angvar
			ifrnd 128 addvarvar angvar tempb else subvarvar angvar tempb
			setactor[RETURN].ang angvar
			randvar tempb 768
			getactor[RETURN].zvel digz
			ifrnd 128 addvarvar digz tempb else subvarvar digz tempb
			setactor[RETURN].zvel digz
		}
		subvar monstatus 1
		
	}
	subvar countvar 1
	ifvarand monstflags 16 ifrnd 32 addvar countvar 1
}
enda

eventloadactor SPAWNER

	getactor[THISACTOR].lotag lotag
	// lotag = 0 activate right away
	// lotag 1 = activates when player enters sector
	// 2 or > = activated remotely
	
	setactor[THISACTOR].lotag 0
	getactor[THISACTOR].hitag hitag // the tilenum it spawns
	setactor[THISACTOR].hitag 0
	getactor[THISACTOR].shade monstatus // number of monsters it spawns
	ifvare monstatus 0 setvar monstatus 1
	// negative monstatus makes it spawn forever
	getactor[THISACTOR].xvel droptile // what the monsters drop
	setactor[THISACTOR].xvel 0
	getactor[THISACTOR].yvel activator // what is activated when last sprite spawns
	setactor[THISACTOR].yvel 0
	getactor[THISACTOR].extra countvarb // the number of ticks between spawns
	ifvarl countvarb 1 setvar countvarb 1
	setactor[THISACTOR].extra -1
	getactor[THISACTOR].zvel monstflags // delay between activation and first spawn
	getactor[THISACTOR].sectnum mysector
	getactor[THISACTOR].owner aura
	ifvare aura -1 setvar aura 0 else
	{
		mulvar aura -1
		setactor[THISACTOR].owner -1
	}
	ifvarand sprite[THISACTOR].cstat 8 setvar peractor1 8
	cstat 32768

enda

useractor notenemy SPAWNER 0

ifvare lotag 1 // activates when player in sector
{
	getplayer[THISACTOR].cursectnum temp
	ifvarvare temp mysector setvar mtype 1
} 
else ifvare lotag 0 setvar mtype 1

else ifvare mtype 0
{
	checkactivatormotion lotag
	ifvare RETURN YES setvar mtype 1
}

ifvare mtype 1
{
	ifvare countvar 0
	{
		ife initz -1 killit
		
		ifvarg monstflags 0
		{
			setvarvar countvar monstflags
			setvar monstflags 0
			break
		}
		ifvare monstatus 0 
		{
			ifvarn activator 0 state activatorstate
			setvar activator 0
			killit
			break
		}

		espawnvar hitag
		setactorvar[RETURN].droptile droptile
		setactor[RETURN].pal sprite[THISACTOR].pal
		// setactor[RETURN].xrepeat sprite[THISACTOR].xrepeat
		// setactor[RETURN].yrepeat sprite[THISACTOR].yrepeat
		ifvare peractor1 8
		{
			getactor[RETURN].cstat temp
			orvar temp 8
			setactor[RETURN].cstat temp
		}
		setactorvar[RETURN].aura aura
		setvarvar countvar countvarb
		subvar monstatus 1
	}
	subvar countvar 1
}
enda

eventloadactor SPAWNPOINT
cstat 32768
getactor[THISACTOR].hitag hitag // type of sprite spawned
getactor[THISACTOR].lotag activator // activation, if any
ifvare activator -1 setvar activator 0
getactor[THISACTOR].extra monstflags
setactor[THISACTOR].hitag 0
setactor[THISACTOR].lotag 0
enda

state spawnbygroup

ends

useractor notenemy SPAWNPOINT 0

ifvare myspawner -666 break
ifvarn activator 0 break

ifvare myspawner -1
{
	ifvarl hitag 11 state spawnbygroup else
	espawnvar hitag
	setvarvar myspawner RETURN
	setactor[RETURN].pal sprite[THISACTOR].pal
	// also set auras and other properties based on player level
}
else
{
	ifvarg sprite[myspawner].statnum 2 setvar myspawner -666 else
	ifvare actorvar[myspawner].monstatus 2 setvar myspawner -666
}

enda

eventloadactor FAKEDOOR

cstat 32768
getactor[THISACTOR].hitag hitag // must match hitag on another FAKEDOOR
setactor[THISACTOR].hitag 0
getactor[THISACTOR].lotag lotag // sound played (will play default sound if not set)
setactor[THISACTOR].lotag 0
enda

useractor notenemy FAKEDOOR 0

ifvarn transition 0
	break

ifangdiffl 768 nullop else
ifp palive
ifcansee ifpdistl 1408
{
	ifhitspace
	{
		stopsound DUKE_SEARCH stopsound DUKE_SEARCH2
		ifvarn lotag 0 soundvar lotag else globalsound DOOR_OPERATE2
		setvar transition 60
		getplayer[THISACTOR].i spriteid
		setactorvar[spriteid].myspawner THISACTOR
	}
	else setvar fakedoor 3
}

enda

action FIRE_FRAMES   -1 14 1 1 1
move FIREVELS

state firestate

	ife monstatus 2 
	{
		spawn BIGSMOKE
		killit
	}
//  ifvare rendmode 4 { setvar hitag 8192 state lightsout }

  ifaction 0
    ifrnd 16
    {
      action FIRE_FRAMES
      cstator 128
    }

  sleeptime 300         // Never let it fall to sleep

  ifspawnedby FIRE
  {
    ifgapzl 16
      break
  }
  else
    ifspawnedby FIRE2
  {
    ifgapzl 16
      break
  }

  ifinwater
    killit

  ifp palive
    ifpdistl 844
      ifrnd 32
        ifcansee
		ife invulntime 0
  {
    ife character 0
	soundonce DUKE_LONGTERM_PAIN
	else soundonce BARBPAIN4
    addphealth -1
    palfrom 32 32
  }

  ifactor FIRE
  {
    ifspawnedby FIRE
      break
  }
  else
    ifactor FIRE2
      ifspawnedby FIRE2
        break

  iffloordistl 128
  {
    ifrnd 128
    {
      ifcount 84
        killit
                // This line(and the else below)
                // is not necessary, since actors
                // with zero x-size are automatically
                // deleted anyway!
      else
        ifcount 42
          sizeto 0 0
      else
        sizeto 32 32
    }
  }
  else
    killit

ends

useractor notenemy FIRE WEAK 0 FIREVELS state firestate enda
useractor notenemy FIRE2 WEAK 0 FIREVELS state firestate enda

action FIREANIM  -2 14 1 1 1

state newfirestate

  ifaction 0
    ifrnd 16
    {
      action FIREANIM
      cstator 128
    }



  ifp palive
    ifpdistl 844
      ifrnd 32
        ifcansee
		ife invulntime 0
  {
    ife character 0
	soundonce DUKE_LONGTERM_PAIN
	else soundonce BARBPAIN4
    addphealth -1
    palfrom 32 32
  }
  soundonce FIRE_CRACKLE

ends

useractor notenemy FIRE3 0 state newfirestate enda
useractor notenemy FIRE4 0 state newfirestate enda

actor FECES
  ifcount 24
  {
    ifpdistl RETRIEVEDISTANCE
    {
      ifrnd SWEARFREQUENCY
        soundonce DUKE_STEPONFECES

      sound STEPNIT

      spawn BLOODPOOL   // Will be brown
      killit
    }
  }
  else
    sizeto 32 32
enda


actor MIKE
  ifp pfacing
    ifpdistl 1280
      ifhitspace
        mikesnd
enda



state troop_body_jibs
  ifrnd 64
    guts HEADJIB1 1
  ifrnd 64
    guts LEGJIB1 2
  ifrnd 64
    guts ARMJIB1 1
  ifrnd 48
    spawn BLOODPOOL
ends

state liz_body_jibs
  ifrnd 64
    guts LIZMANHEAD1 1
  ifrnd 64
    guts LIZMANLEG1 2
  ifrnd 64
    guts LIZMANARM1 1
  ifrnd 48
    spawn BLOODPOOL
ends

action BLOODFRAMES 0 4 1 1 15
actor BLOOD 0 BLOODFRAMES
  sizeto 72 72 sizeto 72 72 sizeto 72 72
  ifpdistg 3144 killit
  ifactioncount 4 killit
enda

action EGGOPEN1 1 1 1 1 8
action EGGOPEN2 2 1 1 1 4
action EGGOPEN3 2 1 1 1 4
action EGGWAIT  0
action EGGFROZEN 1
action EGGGROW 1
action EGGSHRUNK 1

actor EGG TOUGH
state monsterai
  fall
  ifaction 0
  {	
	ife gold 0 set gold GOLD1
    ifcount 64
    {
      ifrnd 128
      {
        action EGGWAIT
        move 0
      }
      else
      {
        sound CREEPYHEAD
		geta[].htflags temp, orvar temp 4, seta[].htflags temp
		geta[].shade peractor1
		seta[].shade -10
        action EGGOPEN1
      }
    }
  }
  else
    ifaction EGGOPEN1
      ifactioncount 4
        action EGGOPEN2
  
    ifaction EGGOPEN2
    {
	  state lite_jibs
      ifrnd 129 sound NEWGIB2 else sound NEWGIB5
	  geta[].z saveit
	  set z saveit, sub z 8192 seta[].z z
	  set gold 0
      espawn DRONE
	  seta[].z saveit
      setactor[RETURN].pal sprite[THISACTOR].pal
      action EGGOPEN3
	  
	  geta[].htflags temp, xorvar temp 4, seta[].htflags temp
	  seta[].shade peractor1
    }
  else
    ifaction EGGGROW
      state genericgrowcode
  else
    ifaction EGGSHRUNK
      state genericshrunkcode
  else
    ifaction EGGFROZEN
  {
    ifcount THAWTIME
    {
      action 0
      getlastpal
    }
    else
      ifcount FROZENDRIPTIME
    {
      ifactioncount 26
      {
        spawn WATERDRIP
        resetactioncount
      }
    }

    ifhitweapon
    {
      ifwasweapon FREEZEBLAST
      {
        strength 0
        break
      }
      lotsofglass 30

      sound GLASS_BREAKING
      ifrnd 84
        spawn BLOODPOOL
      addkills 1 add globalkills 1
	  state specialdeath
      
      killit
    }

    // ifp pducking
    ifp pfacing
      ifpdistl FROZENQUICKKICKDIST
        pkick

    break
  }

  ifhitweapon
  {
    ifdead
    {
      ifwasweapon FREEZEBLAST
      {
//         sound SOMETHINGFROZE
//         spritepal 1
//         move 0
//         action EGGFROZEN
//         strength 0
//         break
		  ifdead spawn BIGSMOKE
      }
//       else
        ifwasweapon GROWSPARK
      {
        cstat 0
        move 0
        sound ACTOR_GROWING
        action EGGGROW
        break
      }
	  addkills 1 add globalkills 1
	  state specialdeath
      
      // sound SQUISHED
      state randsquishsound

      ifvare initcstat 666 spawn BIGSMOKE else
      state standard_jibs
      killit
    }

      ifwasweapon GROWSPARK
        sound EXPANDERHIT
  }
  else
    ifaction EGGWAIT
  {
    ifcount 512
      ifrnd 2
    {
      ifaction EGGSHRUNK
        break
      sound CREEPYHEAD
	  geta[].htflags temp, orvar temp 4, seta[].htflags temp
	  geta[].shade peractor1
	  seta[].shade -10
      action EGGOPEN1
    }
  }

enda


actor KNEE KNEE_WEAPON_STRENGTH enda
actor SPIT SPIT_WEAPON_STRENGTH enda
actor CHAINGUN CHAINGUN_WEAPON_STRENGTH enda
actor SHOTGUN SHOTGUN_WEAPON_STRENGTH enda
actor FIRELASER FIRELASER_WEAPON_STRENGTH enda
actor HEAVYHBOMB HANDBOMB_WEAPON_STRENGTH enda
actor BOUNCEMINE BOUNCEMINE_WEAPON_STRENGTH enda
actor MORTER MORTER_WEAPON_STRENGTH enda

actor GROWSPARK GROWSPARK_WEAPON_STRENGTH
  ifcount 18
    killit
  else
    ifcount 9
  {
    sizeto 0 0
    sizeto 0 0
    sizeto 0 0
    sizeto 0 0
  }
  else
  {
    sizeto 28 28
    sizeto 28 28
    sizeto 28 28
    sizeto 28 28
  }
enda


action FIREBALL_EXPFRAMES 15 5 1 1 8
action RPG_GUIDEDFRAME 0 3 5 1 3

move GUIDED 512 -40
move GUIDEDSLOW 320 -40

state guidedboom
// shiftvarl intensity 1
sound RPG_EXPLODE2

ifvare mtype 1 hitradius RPGBLASTRADIUS 8 12 16 20 else
ifspritepal 1 hitradius RPGBLASTRADIUS 10 15 20 30 else
hitradius RPGBLASTRADIUS 16 24 32 40

ifvarn myspawner -1
{
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		dist xydist THISACTOR spriteid
		ifvarl xydist RPGBLASTRADIUS
		ifvare sprite[spriteid].htpicnum RADIUSEXPLOSION
		{
			setactor[spriteid].htpicnum RPG
			setactor[spriteid].htowner myspawner
		}
		nextspritestat spriteid spriteid
	}
}
action FIREBALL_EXPFRAMES
move INIT
espawn BIGSMOKE
ifspritepal 1 
{
	setactor[RETURN].pal 1
	lotsofglass 30
	sound GLASS_BREAKING
	ifpdistl RPGBLASTRADIUS
	{
		sound SOMETHINGFROZE
		getplayer[THISACTOR].i spriteid
		getactorvar[spriteid].burning burning
		subvar burning 100
		setactorvar[spriteid].burning burning
		ifn myspawner -1 set retaliate myspawner
	}
}
	
ends

spritenoshade RPG_GUIDED

useractor notenemy RPG_GUIDED 10 RPG_GUIDEDFRAME

ifaction FIREBALL_EXPFRAMES
{
	ifactioncount 5 killit
	break
}
fall
espawn SMALLSMOKE
ifspritepal 1 setactor[RETURN].pal 1 else
setactor[RETURN].pal 7

ifmove 0 
{
	sizeat 64 64
	cstator 2
	seta[].shade -50
	seta[].blend 1
	ifspritepal 1 cstator 512
	ifvarn target -1
	{
		ifvarand pow 1 move GUIDEDSLOW geth else
		move GUIDED geth
	}
	else
	{
		ifvarand pow 1 move GUIDEDSLOW faceplayerslow else
		move GUIDED faceplayerslow 
	}
	cstator 256
	cstator 128
	ifvare mtype 1
	{
		sizeat 32 32
		move GUIDED randomangle getv
	}
	else
	{
		ifmultiplayer nullop else
		{
			getactor[THISACTOR].pal pal
			ifvare pal 0 setvar pal 7
			setvar tempd 0
			// setvar intensity 5120
			setvar tempc 1 // moving
			// state spawnpointlight
		}
	}
}


ifvarn target -1
{
	ifvare sprite[target].statnum 1024 setvar target -1 else
	ifvare actorvar[target].monstatus 2 setvar target -1 else
	state gradualturn
	
	
	geta[target].z mz, sub mz 8192
	geta[].z z

	ifvarvarl mz z
		movesprite THISACTOR 0 0 -2048 CLIPMASK0 RETURN
	else
	ifvarvarg mz z
		movesprite THISACTOR 0 0 2048 CLIPMASK0 RETURN
		
	ldist xydist THISACTOR target
	sub mz z
	abs mz
	ifl mz 8192
	ifl xydist 384 state guidedboom
}

ifnotmoving state guidedboom

ifhitweapon ifdead state guidedboom



enda

state stalagtite2


ifvarand pow 16384 set monstatus 1 else
ifvarand pow 131072 
{
	set monstatus 1
	ife sprite[].htextra -1
	ifrnd 16
	{
		ifp ponsteroids setactor[THISACTOR].htextra 12 else
		setactor[THISACTOR].htextra 3
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htowner player[THISACTOR].i
	}
}

ifvarand pow 16
{
	setvar monstatus 1
	ifrnd 6
	ifpdistl 8192
	ifcansee
	{
		espawn LSTRIKE
		setactor[RETURN].pal 1
		ifp ponsteroids setactor[THISACTOR].htextra 80 else
		setactor[THISACTOR].htextra 20
		setactor[THISACTOR].htpicnum RPG
		spawn LIGHTNINGAURA
	}
}
 
ifvarand pow 256
{
	setvar monstatus 1
	ifpdistl 2176
	ifvarvarg sprite[THISACTOR].z player[THISACTOR].posz
	{
		getactor[THISACTOR].htextra temp
		ifvarl temp 1 setvar temp 1
		addvar temp 7
		ifp ponsteroids add temp 21
		setactor[THISACTOR].htextra temp
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htowner player[THISACTOR].i
		setactor[THISACTOR].htang player[THISACTOR].ang
		ifvarand timer 8 sound CHOP
	}
}

ife pow 0 setvar monstatus 0


ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
ifhitweapon
{
	ifvare character 0
	ifwasweapon KNEE addstrength KNEE_WEAPON_STRENGTH
	debris SCRAP5 2
	ifdead
	{
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 BREAKROCK
		debris SCRAP5 20
		spawn SMALLSMOKE
		killit
	}
	else ifwasweapon SHOTSPARK1 
	{
		ifvare character 1 sound BREAKROCK else
		sound PISTOL_RICOCHET
	}
}

ifmove 0
{
	cstator 257
	
	ifcount 8
	{
		resetcount
		ldist xydist THISACTOR player[].i
		ifcansee ifvarl xydist 8192
		{
			ifrnd 1
			{
				move INIT
				setvar peractor1 1
				globalsound CRUMBLE
				debris SCRAP5 2
			} else
			ifvarl xydist 4096
			ifrnd 2
			{
				move INIT
				setvar peractor1 1
				globalsound CRUMBLE
				debris SCRAP5 2
			} else
			ifvarl xydist 2048
			ifrnd 4
			{
				move INIT
				setvar peractor1 1
				globalsound CRUMBLE
				debris SCRAP5 2
			}
		}
	}	
	break
}

ifvare peractor1 1
{
	ifrnd 8 debris SCRAP5 1
	ifcount 26 setvar peractor1 2 // falling
	break
}

fall

ifvare peractor1 2
{
	ifp phigher nullop
	else
	ifvarg sprite[THISACTOR].zvel 0
	ifcansee
	ifpdistl 1280
	{
		setvar tempd -45
		state directdamage
		// addphealth -45
		palfrom 40 48
		setvar peractor1 3	
		state dukepainsounds
		sound BREAKROCK
		debris SCRAP5 20
		spawn SMALLSMOKE
		move STOPPED
		cstat 32768
	}
	
	ifvare sprite[THISACTOR].zvel 0
	{
		setvar peractor1 3
		sound BREAKROCK
		debris SCRAP5 20
		spawn SMALLSMOKE
		move STOPPED
		cstat 32768
	}
	else iffloordistl 8
	ifonwater
	{
		setvar peractor1 3
		sound BREAKROCK
		debris SCRAP5 20
		spawn SMALLSMOKE
		move STOPPED
		cstat 32768
	}
}

ends

state stalagmitecode

ifvarand pow 16384 set monstatus 1
ifvarand pow 131072 
{
	set monstatus 1
	ife sprite[].htextra -1
	ifrnd 16
	{
		ifp ponsteroids setactor[THISACTOR].htextra 12 else
		setactor[THISACTOR].htextra 3
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htowner player[THISACTOR].i
	}
}

ifvarand pow 16
{
	setvar monstatus 1
	ifrnd 8
	ifpdistl 8192
	ifcansee
	{
		espawn LSTRIKE
		setactor[RETURN].pal 1
		ifp ponsteroids setactor[THISACTOR].htextra 80 else
		setactor[THISACTOR].htextra 20
		setactor[THISACTOR].htpicnum RPG
		spawn LIGHTNINGAURA
	}
}

ifvarand pow 256
{
	setvar monstatus 1
	ifpdistl 2176
	ifvarvarg sprite[THISACTOR].z player[THISACTOR].posz
	{
		getactor[THISACTOR].htextra temp
		ifvarl temp 1 setvar temp 1
		addvar temp 7
		ifp ponsteroids addvar temp 21
		setactor[THISACTOR].htextra temp
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htowner player[THISACTOR].i
		setactor[THISACTOR].htang player[THISACTOR].ang
		ifvarand timer 8 sound CHOP
		
	}
}

ife pow 0 setvar monstatus 0


cstator 257
ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
ifhitweapon
{
	ifvare character 0
	ifwasweapon KNEE addstrength KNEE_WEAPON_STRENGTH
	debris SCRAP5 2
	ifdead
	{
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 BREAKROCK
		debris SCRAP5 20
		spawn SMALLSMOKE
		killit
	}
	else ifwasweapon SHOTSPARK1 
	{
		ifpdistl 1560
		ife character 1
		ife sprite[].htowner player[].i
		{
			ifrnd 128 sound BREAKROCK
			else sound SMASHROCK
		}
		else
		sound PISTOL_RICOCHET
	}
}

ends

useractor notenemy STALAGMITE1 70
ifmove STOPPED state stalagtite2 else
ifvarand sprite[THISACTOR].cstat 8 state stalagtite2 else state stalagmitecode
enda
useractor notenemy STALAGMITE2 70 
ifvarand sprite[THISACTOR].cstat 8 state stalagmitecode else state stalagtite2
enda
useractor notenemy STALAGMITE3 70 
ifvarand sprite[THISACTOR].cstat 8 state stalagmitecode else state stalagtite2
enda

state rockcode

cstator 257
ifhitweapon
{
	debris SCRAP2 1
	debris SCRAP3 1
	ifdead
	{
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 BREAKROCK
		debris SCRAP2 3
		debris SCRAP3 3
		debris SCRAP5 3
		spawn SMALLSMOKE
		killit
	}
}

ends


useractor notenemy ROCK1 150 state rockcode enda
useractor notenemy ROCK2 150 state rockcode enda
useractor notenemy ROCK3 150 state rockcode enda
useractor notenemy ROCK4 150 state rockcode enda
useractor notenemy ROCK5 150 state rockcode enda
useractor notenemy ROCK6 150 state rockcode enda
useractor notenemy ROCK7 150 state rockcode enda
useractor notenemy ROCK8 150 state rockcode enda
useractor notenemy ROCK9 150 state rockcode enda
useractor notenemy ROCK10 150 state rockcode enda
useractor notenemy ROCK11 150 state rockcode enda
useractor notenemy ROCK12 150 state rockcode enda
useractor notenemy ROCK13 150 state rockcode enda
useractor notenemy ROCK14 150 state rockcode enda
useractor notenemy ROCK15 150 state rockcode enda
useractor notenemy ROCK16 150 state rockcode enda
useractor notenemy ROCK17 150 state rockcode enda
useractor notenemy ROCK18 150 state rockcode enda
useractor notenemy ROCK19 150 state rockcode enda
useractor notenemy ROCK20 150 state rockcode enda
useractor notenemy ROCK21 150 state rockcode enda
useractor notenemy ROCK22 150 state rockcode enda
useractor notenemy ROCK23 150 state rockcode enda
useractor notenemy ROCK24 150 state rockcode enda
useractor notenemy ROCK25 150 state rockcode enda
useractor notenemy ROCK26 150 state rockcode enda
useractor notenemy ROCK27 150 state rockcode enda


eventloadactor FOGSPAWNER
cstat 32768
enda

state jibcode

fall
ifvare countvar 0
{
	cstat 256
	ifrnd 128 cstator 4
	ifvarn mtype -1
	{
		espawn BLOODPOOL
		seta[RETURN].pal 2 // sprite[].pal
	}
	else { espawn STICKYFIRE setactor[RETURN].pal sprite[THISACTOR].pal }
}
ifvare peractor1 0 ifvarl sprite[THISACTOR].zvel 1
{
	setvar peractor1 1 // has landed
	ifvarn sprite[THISACTOR].picnum 2259
	{
		ifspritepal 1 sound ICEJIBLAND else
		ifrnd 128 sound JIBLAND else sound JIBLAND2
	}
}
strength 0
ifhitweapon 
{ 
	guts JIBS6 2 
	killit 
}

ifvarand sector[].floorstat 1 killit

addvar countvar 1
ifactor HEADJIBGROUND break
ifactor EDHEADJIBGROUND break

ifvare countvar 208 cstator 2
ifvare countvar 234 cstator 512
ifvarg countvar 260 killit


ends

useractor notenemy 2249 0 state jibcode enda // JIBS1 = spine
useractor notenemy 2254 0 state jibcode enda // JIBS2 = eyeball
useractor notenemy 2259 0 state jibcode enda // JIBS3 = heart
useractor notenemy 2264 0 state jibcode enda // JIBS4 = guts
useractor notenemy 2269 0 state jibcode enda // JIBS5 = ribcage
useractor notenemy HEADJIBGROUND 0 state jibcode enda
useractor notenemy EDHEADJIBGROUND 0 state jibcode enda
useractor notenemy LEGJIBGROUND 0 state jibcode enda
useractor notenemy ARMJIBGROUND 0 state jibcode enda


move FOGDRIFT 128
useractor notenemy FOGSPAWNER 0


ifmove 0
{
	ifvare mtype 1
	{
		move FOGDRIFT geth
		cstator 2
		// ifrnd 128 cstator 4
		break
	}
	ifspawnedby APLAYER sizeat 128 225
	cstat 32768
	move INIT
}

ifmove INIT
ifcount 104 ifrnd 4
{
	resetcount
	espawn FOGSPAWNER
	setactorvar[RETURN].mtype 1
	getactor[THISACTOR].xrepeat x
	setactor[RETURN].xrepeat x
	getactor[THISACTOR].yrepeat y
	setactor[RETURN].yrepeat y
	getactor[THISACTOR].pal pal
	setactor[RETURN].pal pal
	espawn FOGSPAWNER
	setactorvar[RETURN].mtype 1
	setactor[RETURN].xrepeat x
	setactor[RETURN].yrepeat y
	setactor[RETURN].pal pal
	ifrnd 128
	setactor[RETURN].cstat 4
	rand angvar 32
	sub angvar 16
	add angvar sprite[].ang
	seta[RETURN].ang angvar
}

ifmove FOGDRIFT
{
	geta[].alpha temp
	add temp 2
	ifg temp 212 set temp 212
	seta[].alpha temp
	ifcount 150 killit
	ifnotmoving killit
}

enda

action SPARK0 0 1 1
action SPARK1 1 1 1
action SPARK2 2 1 1
useractor notenemy SPARKER 0

ifmove 0
{
	// ifspawnedby LIGHTNINGBOLT spritepal 2
	// ifspawnedby LIGHTNINGBOLT2 spritepal 2
	//ifspawnedby LSTRIKE spritepal 2
	sizeat 32 32
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	ifrnd 85 action SPARK0 else ifrnd 128 action SPARK1 else action SPARK2
	
	ifrnd 128
	{
		ifrnd 128
		move SPARKMOVE1 geth getv randomangle
		else move SPARKMOVE2 geth getv randomangle
	}
	else
	{
		ifrnd 128
		move SPARKMOVE3 geth getv randomangle
		else move SPARKMOVE4 geth getv randomangle
	}
}
sizeto 0 0
ifnotmoving killit

enda

eventloadactor TEXTURIZER

getactor[THISACTOR].lotag lotag
ifvarn lotag 0
{
	setactor[THISACTOR].lotag 0
	cstat 32768
	getactor[THISACTOR].hitag hitag
	setactor[THISACTOR].hitag 0
	getactor[THISACTOR].yvel activator
	getactor[THISACTOR].extra monstflags
	getactor[THISACTOR].shade peractor6 // global shade offset
	ifvare monstflags -1 setvar monstflags 0
	// 1 = sprites only
	// 2 = textures only
	// 0 = all
}

enda

eventloadactor VISOVERRIDE

getactor[THISACTOR].lotag lotag
ifvarn lotag 0
{
	setactor[THISACTOR].lotag 0
	cstat 32768
	getactor[THISACTOR].hitag MAPVISIBILITY
	setactor[THISACTOR].hitag 0
}
enda

eventloadactor SKYKILL

getactor[THISACTOR].lotag lotag
ifvare lotag 666 cstat 32768
setactor[THISACTOR].lotag 0

enda

useractor notenemy SKYKILL 0

ifvare lotag 666
{
	getplayer[THISACTOR].cursectnum mysector
	ifvarand sector[mysector].floorstat 1
	ife invulntime 0
	{
		ifvarg player[THISACTOR].falling_counter 62
		addphealth -1000 else
		ifp ponground
		{
			getflorzofslope mysector player[THISACTOR].posx player[THISACTOR].posy mz
			getplayer[THISACTOR].posz z
			addvar z 9216
			ifvarvarg z mz
			addphealth -1000
		}
	}
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		getactor[spriteid].sectnum mysector
		ifvarand sector[mysector].floorstat 1
		ifge actorvar[spriteid].monstatus 1 ifle actorvar[spriteid].monstatus 3
		{
			getflorzofslope mysector sprite[spriteid].x sprite[spriteid].y mz
			getactor[spriteid].z z
			addvar z 1024
			ifvarvarg z mz
			{
				// teleport it and destroy it
				setsprite spriteid sprite[THISACTOR].x sprite[THISACTOR].y sprite[THISACTOR].z
				
				ifvarg sprite[spriteid].extra 0 setactor[spriteid].extra 1
				setactor[spriteid].htextra 100
				setactor[spriteid].htowner spriteid
				setactor[spriteid].htpicnum BFGIMPACT
			}
			
		}
		nextspritestat spriteid spriteid
	}
}

enda

eventloadactor MUSICSWITCH

getactor[THISACTOR].lotag activator // activation number
ifvarn activator 0
{
	setactor[THISACTOR].lotag 0
	cstat 32768
	getactor[THISACTOR].hitag hitag // track number
	setactor[THISACTOR].hitag 0
	geta[].pal peractor1
	seta[].pal 0
}
getactor[THISACTOR].extra monstflags
ifvare monstflags -1 setvar monstflags 0
ifvare monstflags 1
ifvare activator 0
{
	setvar activator -1
	cstat 32768
	getactor[THISACTOR].hitag hitag // track number
	setactor[THISACTOR].hitag 0
	geta[].pal peractor1
	seta[].pal 0
}

enda

eventloadactor NOISESPRITE
getactor[THISACTOR].lotag lotag
ifvare lotag 1
{
	setactor[THISACTOR].lotag 0
	getactor[THISACTOR].hitag hitag
	setactor[THISACTOR].hitag 0
	
	getactor[THISACTOR].xvel weap
	getactor[THISACTOR].extra countvar
	ifvare countvar -1 setvar countvar 0
	cstat 32768
	setactor[THISACTOR].htflags 128
}
enda

useractor notenemy NOISESPRITE 0

ifvarn lotag 1 break

ifvare mtype 0
{
	ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum setvar mtype 1
}

ifvare mtype 1
{
	addvar countvarb 1
	ifvarvarg countvarb countvar
	{
		ifvare weap 1 globalsoundvar hitag else
		soundvar hitag
		setvar mtype 2
	}
} else 
ifvarg mtype 1
{
	addvar mtype 1
	ifvarg mtype 260
	killit
}

enda

state sparkstate2
spawn SPARKER
spawn SPARKER
spawn SPARKER
spawn SPARKER
spawn SPARKER
spawn SPARKER

ends


state spawnstuckbullet

	espawn STUCKBULLET
	setactorvar[RETURN].myspawner htg5
	
	getactor[htg5].x mx
	getactor[htg5].y my

	sub mx sprite[].x
	sub my sprite[].y
	getangle angvar mx my
	add angvar 1024
	rand tempb 128 sub tempb 64 add angvar tempb
	
	getincangle temp angvar sprite[htg5].ang
	setactorvar[RETURN].peractor1 temp
	
	// ldist xydist THISACTOR htg5
	// shiftvarr xydist 1
	set xydist tiledata[sprite[htg5].picnum].xsize
	mul xydist sprite[htg5].xrepeat
	shiftr xydist 4
	setactorvar[RETURN].mtype xydist
	
	getactor[THISACTOR].x mx
	getactor[THISACTOR].y my
	getactor[htg5].x x
	getactor[htg5].y y
	subvarvar mx x
	subvarvar my y
	getangle tempc mx my // angle to make monster face bullet
	getincangle ammo tempc sprite[htg5].ang
	setactorvar[RETURN].ammo ammo
	
	setactor[RETURN].xrepeat 12
	setactor[RETURN].yrepeat 12
	setactor[RETURN].cstat 128
	
	getactor[htg5].z mz
	subvarvar mz sprite[].z
	setactorvar[RETURN].initz mz

ends


state sparkspawn

ifvare sprite[THISACTOR].yvel BFGBEAMPROJ
{
	getactor[THISACTOR].htg_t 8 temp // temp = hitsprite
	ifvarn temp -1
	ifvare sprite[temp].picnum KORAXPROJ
	{
		setactor[temp].yvel 0
		setactorvar[temp].droptile MEDIUMPOTION
	}
	break
}
ifvare sprite[THISACTOR].yvel REDSHOCK
{
	spritepal 10
	spawn MINIFW
	spawn MINIFW
	spawn MINIFW
	spawn MINIFW
	getactor[THISACTOR].htg_t 8 temp // temp = hitsprite
	ifvarn temp -1
	{
		ifvare sprite[temp].picnum KORAXPROJ
		{
			setactor[temp].yvel 0
			setactorvar[temp].droptile MEDIUMPOTION
		}
		
		espawn LIGHTNINGAURA
		getactor[THISACTOR].htg_t 8 temp
		setsprite RETURN sprite[temp].x sprite[temp].y sprite[temp].z
		setactor[RETURN].pal 2
	}

	getactor[THISACTOR].htg_t 8 saveit
	
	ifrnd 16
	{
		ife ALTFIRING YES
		ifn saveit -1
		{
			espawn SHOCK_ACTOR
			seta[RETURN].pal 21
			setav[RETURN].myspawner saveit
			ife actorvar[saveit].monstatus 1
			{
				getav[saveit].fear tempb
				sub tempb 15
				setav[saveit].fear tempb
			}
		}
		else
		{
			ifpdistg 1560 hitradius 1560 15 15 15 15
			
			ifn saveit -1
			{
				seta[saveit].htextra 20
				seta[saveit].htpicnum BFGIMPACT
				seta[saveit].htowner player[].i
			}
			espawn LSTRIKE
			setactor[RETURN].pal 2
		}
	}
	
	
	break
}
ifspawnedby APLAYER
ifvarand pow 4
ifvarn sprite[THISACTOR].yvel FEARBULLET
{
	espawn EXPLOSION2
	setactor[RETURN].xrepeat 20
	setactor[RETURN].yrepeat 20
	setactorvar[RETURN].weap 1
	sound RPG_EXPLODE2
	killit
	break
}
getactor[THISACTOR].htg_t 8 htg5 // htg5 = hitsprite
ifvarn htg5 -1
{
	getactor[htg5].picnum picnum
	ifvare picnum APLAYER
	{
	   ifvare sprite[THISACTOR].yvel PUNCHPROJ state wacksounds else
	   ifvare sprite[THISACTOR].yvel SWORDPROJ sound SWORDHIT else
       ifspawnedby ETTIN sound AXEHIT else
       ifspawnedby SKELKNIGHT sound AXEHIT else
       ifspawnedby DETHNITE sound AXEHIT else
       ifspawnedby SPIDER2 nullop else
       ifspawnedby LIZMAN sound AXEHIT else
       sound HITFLESH
       break
    }
    ifvare picnum DETHNITE
    ifvarn actorvar[htg5].peractor4 0
    {
        spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		break
	}
	ifvare picnum EVILKNIGHT
	{
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
	}
	ifvare picnum CHURCHBELL
	{
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
		spawn SHOTSPARK2
	}
	ifvarg picnum 196 ifvarl picnum 199
	{
		getactor[htg5].pal pal
		setactor[THISACTOR].pal pal
		lotsofglass 2
		espawn BLUDSPLASH
		setactor[RETURN].pal pal
		sound HITFLESH
		espawn FAKECRACK
		setactorvar[RETURN].myspawner htg5
	} else
	ifvarg picnum 255 ifvarl picnum 260 // wood planks
	{
		getactor[THISACTOR].z z
		addvar z 5120
		setactor[THISACTOR].z z
		ifrnd 128 debris SCRAP4 1 else
		debris SCRAP5 1
		subvar z 5120
		setactor[THISACTOR].z z
		ifvare CURRWEAP 6
		ifvare sprite[THISACTOR].yvel SWORDPROJ
		{
			getactorvar[htg5].burning tempb
			addvar tempb 20
			setactorvar[htg5].burning tempb
		}
	} else
	ifvarg picnum 299 ifvarl picnum 303 // vine walls
	{
		getactor[THISACTOR].z z
		addvar z 5120
		setactor[THISACTOR].z z
		spritepal 8
		ifrnd 128 debris SCRAP4 1 else
		debris SCRAP5 1
		getlastpal
		subvar z 5120
		setactor[THISACTOR].z z
		ifvare CURRWEAP 6
		ifvare sprite[THISACTOR].yvel SWORDPROJ
		{
			getactorvar[htg5].burning tempb
			addvar tempb 20
			setactorvar[htg5].burning tempb
		}
	} else
	ifvarg picnum 305 ifvarl picnum 314 // webs
	ifvarn picnum EGGSACK
	{
		sound HITFLESH
		getactor[THISACTOR].z z
		addvar z 5120
		setactor[THISACTOR].z z
		spritepal 17
		ifrnd 128 debris SCRAP3 1 else
		debris SCRAP4 1
		getlastpal
		subvar z 5120
		setactor[THISACTOR].z z
		ifvare CURRWEAP 6
		ifvare sprite[THISACTOR].yvel SWORDPROJ
		{
			getactorvar[htg5].burning tempb
			addvar tempb 20
			setactorvar[htg5].burning tempb
		}
	} else
	ifvare picnum KORAXPROJ
	{
		setactor[htg5].yvel 0
		setactorvar[htg5].droptile MEDIUMPOTION
	}
	
	getactorvar[htg5].monstatus tempb
	ifvarn tempb 0 // a living thing
	{
		ifvare sprite[htg5].picnum BARBNPC
		ifvare actorvar[htg5].weap -1
		{
			getactor[htg5].htang tempb
			getactor[htg5].ang angvar
			getincangle tempc angvar tempb
			ifvarl tempc -768 mulvar tempc -1
			ifvarg tempc 768
			{
				setactor[THISACTOR].htextra -1
				break
			}
		}
		ifvare sprite[htg5].picnum DEMONOVA
		ifvare actorvar[htg5].mtype 1
		{
			soundonce DEMONOVA_BLOCK
			break
		}
		
		ifvare sprite[].yvel REVOLVERBULLET
		{
			state spawnstuckbullet
			sound HITFLESH
		}
		else
		ifvare sprite[THISACTOR].yvel PUNCHPROJ state wacksounds else
		ifvare sprite[THISACTOR].yvel SWORDPROJ 
		{
			ifvare CURRWEAP 6
			ifvare sprite[THISACTOR].yvel SWORDPROJ
			{
				// ifvare sprite[htg5].picnum FLOATHITBOX getactorvar[htg5].myspawner htg5
				getactorvar[htg5].burning tempb
				addvar tempb 20
				setactorvar[htg5].burning tempb
			}
			sound SWORDHIT
			// setactor[THISACTOR].yvel SLUGPROJ // to activate headshot code below 
		}
		else
		ife sprite[].yvel SABERPROJ
		{
			ife actorvar[htg5].monstatus 1
			{
				ifrnd 128
				soundonce CHOP
				else
				soundonce SWORDHIT
			}
			else
			ife htg5 player[].i
			{
				ifrnd 128
				soundonce CHOP
				else
				soundonce SWORDHIT
			}
		}
		else
		sound HITFLESH
		
		ifvare sprite[THISACTOR].yvel SLUGPROJ
		{
			geta[htg5].htdispicnum picnum
			// set zdist tiledata[sprite[htg5].picnum].ysize	
			set zdist tiledata[picnum].ysize				
			mul zdist sprite[htg5].yrepeat
			mul zdist 3 // distance up to the head
			geta[htg5].z z
			sub z zdist
			ifle sprite[].z z set command 1
			else set command 0
			
			ife command 1 // apply headshot
			{
				switch sprite[htg5].picnum
	
				// headshot immunity
				case DRONE
				case SPIDER2
				case HORNET
				case DRAGON
				case DRACARRY
				case GHOST
				case SCUBATROOP
				case BADFISH
				case GOODFISH
				case GOODHEAD
				case LIZTROOP
				case EGGSACK
				case BAT
				break
				
				default
					set headshotcount 20
					geta[htg5].htextra tempb
					add tempb 50
					seta[htg5].htextra tempb
					setav[htg5].command 1
					seta[htg5].htpicnum SLUGPROJ
				break
				
				endswitch
			}

		}
		getactor[htg5].picnum picnum
		ifvare picnum GOLEM
		{
			getactor[htg5].pal pal
			ifvare pal 0 setvar pal 1
			ifvare pal 14 setvar pal 8
		} else
		ifvare picnum HORNET setvar pal 6 else
		ifvare picnum LIZTROOP setvar pal 8 else
		ifvare picnum FULLSPIKE setvar pal 0 else
		setvar pal 2
		
		ifrnd 128
		ifvarn sprite[THISACTOR].yvel FEARBULLET
		{
			espawn BLUDSPLASH
			setactor[RETURN].pal pal
		}
		ifn sprite[htg5].picnum FULLSPIKE
		ifn sprite[htg5].picnum STALAGMITE1
		ifn sprite[htg5].picnum STALAGMITE1
		ifn sprite[htg5].picnum STALAGMITE2
		ifn sprite[htg5].picnum STALAGMITE3
		ifn sprite[htg5].picnum ICEWALL1
		ifn sprite[htg5].picnum ICEWALL2
		{
			espawn JIBS6
			setactor[RETURN].xrepeat 12
			setactor[RETURN].yrepeat 12
			randvar zvel 1024
			mulvar zvel -1
			setactor[RETURN].zvel zvel
			setav[RETURN].htg3 999999
			setactor[RETURN].pal pal
			randvar angvar 2047
			setactor[RETURN].ang angvar
			randvar xvel 96
			setactor[RETURN].xvel xvel
	    }
		break
	}
	break
}
else
ifspawnedby APLAYER
//ifvare CURRWEAP 0
{
	ife sprite[].yvel PUNCHPROJ ifg sawammo 0 { state wacksounds break }
	setvar picnum 0
	getactor[THISACTOR].htg_t 6 hitwall
	ifvarn hitwall -1 getwall[hitwall].picnum picnum else
	{
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		getactor[THISACTOR].z z
		updatesectorz x y z mysector
		ifvarn mysector -1
		{
			getflorzofslope mysector x y temp
			subvarvar temp z
			ifvarl temp 1024 getsector[mysector].floorpicnum picnum
		}
		else break
	}
	ifvare picnum 0
	getsector[THISACTOR].ceilingpicnum picnum
	state surfacetype
	ifvare tempb 2 break // hit snow
	ifvare tempb 4 { state woodchips break } // hit wood
	
	getactor[THISACTOR].yvel tempc // type of weapon
	ifvare tempc FEARBULLET break
	switch tempc
	case MONSTERBITE // chainsaw
		ifvare tempb 0 // hard surface
			setvar sawscrape 10
		else ifvare tempb 1
		{
			sound HITFLESH // grass or foliage
			ifrnd 64
			{
				espawn SMALLSMOKE
				setactor[RETURN].pal 13
			}
		}
		else ifvare tempb 3  // dirt or gravel
			setvar sawscrape 10
	break
	
	case PUNCHPROJ
		ifvare tempb 0 // hard surface	
			sound PUNCHWALL
		
		else ifvare tempb 1
		sound PUNCHDIRT
		
		else ifvare tempb 3  // dirt or gravel
		sound PUNCHDIRT
		
	break
	
	case SWORDPROJ
		ifvare tempb 0 // hardsurface
		  sound HITMETAL
		else ifvare tempb 1 // grass
		 sound PUNCHDIRT
		else ifvare tempb 3 // dirt
		 sound PUNCHDIRT
	break
	
	default // regular bullets like SHOTGUN, etc
	break
	
	endswitch
	
	ifvare tempb 1 { spawn SMALLSMOKE break } // no sparks from grass
}

ifoutside ifceilingdistl 1 break
ifinwater break

ifvare sprite[THISACTOR].yvel PUNCHPROJ { spawn SMALLSMOKE break }

spawn SHOTSPARK2
spawn SHOTSPARK2
spawn SHOTSPARK2
spawn SHOTSPARK2
spawn SHOTSPARK2


ends

action FREEZEFRAME 0 1 5 1 1
action RPGFRAME 15 1 1 1 1
action ENEMYSLUGFRAME -10 1 5 1 1
actor ENEMYSLUGPROJ 30 ENEMYSLUGFRAME seta[].blend 1 cstator 2 enda
actor RPG RPG_WEAPON_STRENGTH RPGFRAME enda
actor FREEZEBLAST FREEZETHROWER_WEAPON_STRENGTH FREEZEFRAME enda
actor DEVISTATORBLAST FREEZETHROWER_WEAPON_STRENGTH enda
actor COOLEXPLOSION1 COOL_EXPLOSION_STRENGTH enda
actor TRIPBOMB TRIPBOMB_STRENGTH enda

// actor GRENADEPROJ 160 FREEZEFRAME enda
spritenoshade SHOTSPARK1

action WEAP2FRAMES 0  4  1  1  6
actor SHOTSPARK1 PISTOL_WEAPON_STRENGTH WEAP2FRAMES
  ifdead
    killit
  ifactioncount 4
    killit
  else
  {
	ifspawnedby SMALLSMOKE 
	{
		ifrnd 85 spritepal 2 else
		ifrnd 85 spritepal 7
		sizeat 40 40
		cstator 128
		ifrnd 128 cstator 4
		ifrnd 128 cstator 8
	}
	ifspawnedby RPG_GUIDED
	{
		ifrnd 85 spritepal 2 else
		ifrnd 85 spritepal 7
		sizeat 40 40
		cstator 128
		ifrnd 128 cstator 4
		ifrnd 128 cstator 8
	}
	
    ifactioncount 3
    {
      ifinwater
      spawn WATERBUBBLE
    }
    else
      ifcount 1 nullop // 2
      else
      {
		seta[].blend 1
		seta[].shade -100
		cstator 2
	
		ifvare sprite[THISACTOR].yvel FIREBEAM
		{
		  geta[].htg_t 8 hitsprite
		  ifn hitsprite -1
		  {
			getav[hitsprite].burning burning
			add burning 36
			setav[hitsprite].burning burning
			
		  }
		  ifrnd 16 { ifrnd 128 spawn BURNING else spawn BURNING2 }
		  ifn shotpitch 0
		  {
			  headspritestat spriteid 1
			  whilevarn spriteid -1
			  {
				  ife sprite[spriteid].picnum BEAMTRAIL
				  ife actorvar[spriteid].shotpitch 0
				  setav[spriteid].shotpitch shotpitch
				  nextspritestat spriteid spriteid
			  }
			  espawn ICEBEAMIMPACT
			  seta[RETURN].pal 2
			  set temp player[].player_par
			  modvar temp 15
			  
			  ife temp 0
			  {
				  espawn FIRESTARTER
				  setav[RETURN].myspawner player[].i
			  }
			  killit
		  }
		}
		else
		ifvare sprite[THISACTOR].yvel ICEBEAM
		{
		  geta[].htg_t 8 hitsprite
		   ifn hitsprite -1
		   {
		     seta[hitsprite].htpicnum ICEBEAM
			 getav[hitsprite].burning burning
			 sub burning 36
			 setav[hitsprite].burning burning
		   }
		  spritepal 1
		  lotsofglass  2
		  ifn shotpitch 0
		  {
			  headspritestat spriteid 1
			  whilevarn spriteid -1
			  {
				  ife sprite[spriteid].picnum ICEBEAMTRAIL
				  ife actorvar[spriteid].shotpitch 0
				  setav[spriteid].shotpitch shotpitch
				  nextspritestat spriteid spriteid
			  }
			  killit
		  }
		}
		else
		ife sprite[THISACTOR].yvel SHOCKBEAM
		{
			espawn SHOCK_ACTOR
			geta[].htg_t 8 hitsprite
			ifn hitsprite -1
			setav[RETURN].myspawner hitsprite
			
			ifn sprite[].htowner player[].i
			{
				headspritestat spriteid 1
			    whilevarn spriteid -1
			    {
				  ife sprite[spriteid].picnum LIGHTNING_TRAIL1
				  ife actorvar[spriteid].shotpitch 0
				  {
					setav[spriteid].shotpitch shotpitch
					setav[spriteid].mtype YES
				  }
				  
				  nextspritestat spriteid spriteid
			    }
			    killit
			}
		}
		else
		ife sprite[].yvel SWITCHBULLET killit
		else
		state sparkspawn
		
        ifonwater
          spawn WATERSPLASH2	
      }
  }
enda

spritenoshade LASERHIT
action LASHITFRAMES  0  6  1  1  8
useractor notenemy LASERHIT 0 LASHITFRAMES

ifmove 0
{
	move STOPPED
	sizeat 40 40
	cstator 128
	ifrnd 128 cstator 4
	seta[].shade -100
	spawn SHOTSPARK2
	// ifrnd 32 sound LASERHIT1 else
	// ifrnd 32 sound LASERHIT2
}
ifactioncount 6 killit

enda

spritenoshade SABERSLASH
spritenopal SABERSLASH


useractor notenemy SABERSLASH 0

ifmove 0
{
	move INIT
	seta[].blend 1
	cstator 2
	sizeat 28 28
	seta[].shade -127
}
else
{
	geta[].alpha temp
	add temp 16
	seta[].alpha temp
}
ifcount 8 killit

enda

spritenoshade SABERSLASH
spritenopal SABERSLASH

move SLASHVEL 768

useractor notenemy SLASHTRAIL 0

ifmove 0
{
	cstator 16
	cstator 130
	move INIT
	seta[].blend 1
	sizeat 28 28
	seta[].shade -100
}
else
{
	geta[].alpha temp
	add temp 16
	seta[].alpha temp
	ifcount 6 killit
}

enda

action DARKANIM 0 5 5 1 6
useractor notenemy DARKPROJ 0 DARKANIM

ifmove 0
{
	move INIT
	cstat 130
	seta[].blend 1
	sizeat 32 32
	geta[].z z, sub z 8192, seta[].z z
}

enda


move HAMMERSPEED 644
move FASTHAMMER 768
move FASTERHAMMER 844
action HAMSPINFRAMES 0 8 5 1 10
action HAMUP 0 1 5 1 10

state hammerdamage
	getactor[spriteid].htextra temp
	addvar temp 44
	randvar tempb 12
	addvarvar temp tempb
	
	set tempc ammo, add tempc 1
	ifg ammo 1 mul temp tempc
	
	setactor[spriteid].htextra temp
	setactor[spriteid].htpicnum KNEE
	ifg ammo 2
	{
		setactor[spriteid].htpicnum RPG
		sound BOMBARROW
		spawn EXPLOSION2BOT
	}
	ifvare mtype 0
	{
		setactor[spriteid].htowner player[].i
		ifn ammo 0
		{
			getp[].ammo_amount 2 temp
			sub temp ammo
			add temp 1
			ifl temp 0 set temp 0
			setp[].ammo_amount 2 temp
			sub ammo 1, ife ammo 1 set ammo 0
		}
		ifn spriteid target set target player[].i
	}
	else setactor[spriteid].htowner myspawner
	setactor[spriteid].htang sprite[THISACTOR].ang
	state wacksounds
ends

spritenoshade HAMMERTRAIL
spritenopal HAMMERTRAIL
action AHAMMTRAIL 0  2  5  1  8
useractor notenemy HAMMERTRAIL 0 AHAMMTRAIL

ife myspawner -1 killit
ifn sprite[myspawner].statnum 1 killit
seta[].ang sprite[myspawner].ang
cstat 642
setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y sprite[myspawner].z
seta[].shade -100
seta[].blend 1
getav[myspawner].ammo ammo
mul ammo 16
seta[].xrepeat ammo
seta[].yrepeat ammo
seta[].mdflags 16
ifl actorvar[myspawner].ammo 3 killit

enda

useractor notenemy HAMMERPROJ 0 HAMSPINFRAMES

ife target -1 ifn hammertarg -1 ife sprite[hammertarg].statnum 1 set target hammertarg
ifmove 0
{
	geta[].z z, sub z 2048, seta[].z z
	set ammo 2
	setvar weap 10
	
	ifvare mtype 0 
	{
		move FASTHAMMER geth 
		ifn target -1
		ifg actorvar[target].inithp 400
		ifg player[].ammo_amount 2 4
		{
			sound BIGTHROW
			add ammo 2
			espawn HAMMERTRAIL
			setav[RETURN].myspawner THISACTOR
			move FASTERHAMMER geth
		}
	}
	else
		move HAMMERSPEED geth
	sizeat 64 64
	// ifspawned by BARBNPC, mtype is 1
	getplayer[].horiz zvel
	subvar zvel 100
	ifmove FASTHAMMER mulvar zvel -114 else
	mulvar zvel -96
	setactor[THISACTOR].zvel zvel
	spriteflags 8192
	cstator 128
}

state motionblur
addvar weap 1


//failsafe
ifvare mtype 0
{
	addvar countvarb 1
	ifvarg countvarb 300
	{
		getp[].ammo_amount 2 temp
		add temp 1 ifg temp player[].max_ammo_amount 2 set temp player[].max_ammo_amount 2
		setp[].ammo_amount 2 temp
		globalsound CATCH
		ifg hammercount 0 sub hammercount 1
		killit
	}
}


ifvarn target -1
{
	ifvarn sprite[target].statnum 1
	ifvarn sprite[target].statnum 10
	{
		setvar target -1
		break
	}
	
	getactor[target].x mx
	getactor[target].y my
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	subvarvar mx x
	subvarvar my y
	getangle angvar mx my
	getactor[THISACTOR].ang tempb
	getincangle tempd angvar tempb
	ifvarl tempd 57 ifvarg tempd -57
		setactor[THISACTOR].ang angvar
	else
	{
		ifvarl tempd 0 
			addvar tempb 56
		else
		ifvarg tempd 0 
			subvar tempb 56
		setactor[THISACTOR].ang tempb
	}
	getactor[THISACTOR].z z
	getactor[target].z mz
	subvar mz 6144 // 4096
	ifvarand actorvar[target].monstflags 4 subvar mz 32768 // superboss
	else
	ifvare sprite[target].picnum CYBERDEMON subvar mz 6144
	subvarvar mz z
	
	divvar mz 6
	
	// shiftvarr mz 3
	movesprite THISACTOR 0 0 mz CLIPMASK0 RETURN
	
	ifvare mtype 1
	ifvare sprite[target].picnum BARBNPC
	{
		dist xydist THISACTOR target
		ifvarl xydist 1024
		{
			globalsound CATCH
			killit
		}
		else
		ifcount 260
			killit
	}
	else
	ifvare mtype 0
	ifvarvare target player[].i
	{
		dist xydist THISACTOR target
		ifvarl xydist 1024
		{
			// ifvare player[].kickback_pic 0
			// ifvare player[].gotweapon 2 0
			// {
				// setplayer[].curr_weapon 2
				// setplayer[].weapon_pos -9
				// getp[].ammo_amount 2 temp
				// add temp 1 ifg temp player[].max_ammo_amount 2 set temp player[].max_ammo_amount 2
				// setp[].ammo_amount 2 temp
				// setplayer[].gotweapon 2 1
				// globalsound SELECTMELWPN
			// }
			getp[].ammo_amount 2 temp
			add temp 1 ifg temp player[].max_ammo_amount 2 set temp player[].max_ammo_amount 2
			setp[].ammo_amount 2 temp
			globalsound CATCH
			ifg hammercount 0 sub hammercount 1
			killit
		}
		/*
		else
		{
			ifcount 260
			{
				ifvare player[].gotweapon 2 0
				{
					ifvare player[].kickback_pic 0
					{
						// setplayer[].curr_weapon 2
						// setplayer[].weapon_pos -9
						globalsound SELECTMELWPN
					}
					setplayer[].gotweapon 2 1
				}
				globalsound CATCH
				killit
			}
		}
		*/
	}
	else
	ifcount 78 setvar target -1
}
else
{
	ifvare mtype 0
	{
		getplayer[].horiz zvel
		subvar zvel 100
		ifmove FASTERHAMMER mulvar zvel -132 else
		ifmove FASTHAMMER mulvar zvel -114 else
		mulvar zvel -96
		setactor[THISACTOR].zvel zvel
	}
	
	ifcount 52
	{
		ifvare mtype 0
		setvarvar target player[].i
		else
		killit
		resetcount
	}
}

getactor[THISACTOR].htmovflag spriteid
ifvarn spriteid 0
{
	ifvare mtype 0
	{
		add countvarb 10
		ifn target player[].i
		ifl monstflags 3
		{
			add monstflags 1
			setvar ARROWHACK YES
			getactor[THISACTOR].ang arrhackang
			getactor[THISACTOR].z arrhackz
			getactor[THISACTOR].x arrhackx
			getactor[THISACTOR].y arrhacky
		}
	}
	
	// hit something
	addvar spriteid 16384
	ifvarl spriteid 16384 ifvarg spriteid -1 
	{
		// hit a sprite
		ifvare actorvar[spriteid].monstatus 1
		{
			ifvarg weap 10
			{
				setvar weap 0
				addvar countvar 1
				ifvarl countvar 4
				count 26
							
				state hammerdamage

				getactor[THISACTOR].ang angvar
				addvar angvar 768
				ifrnd 128 subvar angvar 1536
				setactor[THISACTOR].ang angvar
				
			}
		}
		else ifvare actorvar[spriteid].monstatus 3
		{
			ifvarg weap 10
			{
				setvar weap 0
				ifvare mtype 1
				ifvarvare spriteid myspawner
				{
					globalsound CATCH
					killit
					break
				}
				state hammerdamage
				getactor[THISACTOR].ang angvar
				addvar angvar 768
				ifrnd 128 subvar angvar 1536
				setactor[THISACTOR].ang angvar
			}
		}
		else ifvare sprite[spriteid].statnum 10
		{
			ifvarvare myspawner sprite[spriteid].yvel
			{
				// ifvare player[].curr_weapon 0
				// {		
					// setplayer[].curr_weapon 2
					// ifvare player[].kickback_pic 0
					// setplayer[].weapon_pos -9
					// getp[].ammo_amount 2 temp
					// add temp 1 ifg temp player[].max_ammo_amount 2 set temp player[].max_ammo_amount 2
					// setp[].ammo_amount 2 temp
					// globalsound SELECTMELWPN
				// }
				getp[].ammo_amount 2 temp
				add temp 1 ifg temp player[].max_ammo_amount 2 set temp player[].max_ammo_amount 2
				setp[].ammo_amount 2 temp
				globalsound CATCH
				setplayer[].gotweapon 2 1
				ifg hammercount 0 sub hammercount 1
				killit
			}
			else 
			{
				ifvare mtype 0
				ifvarg weap 10
				{
					setvar weap 0
					state hammerdamage
					getactor[THISACTOR].ang angvar
					addvar angvar 768
					ifrnd 128 subvar angvar 1536
					setactor[THISACTOR].ang angvar
				}
			}
		}
		else
		ifvare sprite[spriteid].statnum 1
		ifvarn sprite[spriteid].pal 17 state hammerdamage
		ifmove FASTHAMMER move HAMMERSPEED geth else
		ifmove FASTERHAMMER move FASTHAMMER geth
	}
	else // hit something not a sprite
	{
		soundonce BLOCK3
		getactor[].htmovflag temp
		andvar temp 49152
		ifvare temp 32768
		{
			// hit a wall
			set hitwall sprite[].htmovflag
			andvar hitwall 16383
			getwall[hitwall].point2 currwall
			getwall[hitwall].x mx
			getwall[hitwall].y my
			getwall[currwall].x x
			getwall[currwall].y y
			sub mx x
			sub my y
			getangle angvar mx my
			getactor[].ang tempb
			getincangle tempc angvar tempb
			sub angvar tempc
			ifvarg angvar 2047 subvar angvar 2048
			ifvarl angvar 0 addvar angvar 2048
			setactor[].ang angvar
		}
	}
}
else
ifvarn target -1
ifvarg weap 10
ifvare actorvar[target].monstatus 1
ifvarand sprite[target].cstat 256
{
	dist xydist THISACTOR target
	ifvarl xydist 512
	{
		setvarvar spriteid target	
		setvar weap 0
		addvar countvar 1
		ifvarl countvar 4
		count 26
		state hammerdamage
		getactor[THISACTOR].ang angvar
		addvar angvar 768
		ifrnd 128 subvar angvar 1536
		setactor[THISACTOR].ang angvar
	}
}

getflorzofslope sprite[].sectnum sprite[].x sprite[].y z
geta[].z mz
sub z mz
ifl z 4096 movesprite THISACTOR 0 0 -1024 CLIPMASK0 RETURN

enda

eventloadactor CHECKPOINT
getactor[THISACTOR].lotag lotag
ifvarn lotag 0
{
	cstat 32768
	getactor[THISACTOR].hitag hitag // save slot
	ifvarg hitag 9 setvar hitag 9
	ifvarl hitag 0 setvar hitag 0
	getactor[THISACTOR].extra monstflags // sound
	ifvare monstflags -1 setvar monstflags SAVESND
	setactor[THISACTOR].lotag 0
	setactor[THISACTOR].hitag 0
}
enda

useractor notenemy CHECKPOINT
ifvare lotag 0 break
ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
{
	ifvarn monstflags 0 globalsoundvar monstflags
	switch hitag
	case 0 save 0 break
	case 1 save 1 break
	case 2 save 2 break
	case 3 save 3 break
	case 4 save 4 break
	case 5 save 5 break
	case 6 save 6 break
	case 7 save 7 break
	case 8 save 8 break
	case 9 save 9 break
	default save 9 break
	endswitch
	quote 456
	userquote 456
	killit
}
enda

action BATDOWN 0 3 5 1 10
action BATUP 5 2 5 -1 10
action BATDIE1 15 3 1 1 20
action BATDIE2 18 4 1 1 20
action BATDEAD 21 1 1 1 1
move BATFLY 128
move BATSLOW 64

action BIRDDOWN 0 3 5 1 5
action BIRDUP 5 2 5 -1 5
action BIRDDIE 15 1 1 1 20
action BIRDDEAD 16 1 1 1 20
move BIRDFLYVEL 256

eventloadactor BAT
getactor[THISACTOR].extra monstflags
ifvarl monstflags 0 setvar monstflags 0
setactor[THISACTOR].extra 0
getactor[THISACTOR].hitag hitag
setactor[THISACTOR].hitag 0
enda

eventloadactor BIRDFLY
getactor[THISACTOR].extra monstflags
ifvarl monstflags 0 setvar monstflags 0
setactor[THISACTOR].extra 0
getactor[THISACTOR].hitag hitag
setactor[THISACTOR].hitag 0
ifvarand sprite[].cstat 128 nullop else
{
	cstator 128
	geta[].z z
	sub z 4096
	seta[].z z
}
enda


useractor notenemy BAT 10

ifaction BATDIE1
{
	fall
	iffloordistl 16
	{
		action BATDIE2
		move INIT
	}
	break
}
ifaction BATDIE2
{
	ifactioncount 4
	action BATDEAD
	fall
}
ifaction BATDEAD
{
	fall
	break
}


ifmove 0
{
	
	cstator 256
	ifspawnedby APLAYER sizeat 40 40
	ifvare monstflags 0 { ifcansee nullop else break }
	sound BATROAM
	move BATFLY geth
	action BATDOWN
	getactor[THISACTOR].ang peractor1 // init angle
	setvar countvar 1
	ifvare monstflags 4 setvar countvar -1
	ifvare hitag 0 setvar hitag 12
	geta[].x initx
	geta[].y inity
	geta[].z initz
	set ammo 1
	
}
else ifmove BATFLY nullop else 
move BATFLY geth

ifaction BATDOWN
{
	ifactioncount 3
	action BATUP
} else
ifaction BATUP
{
	ifactioncount 2
	action BATDOWN
}

ifrnd 1 ifrnd 64 soundonce BATROAM
ifhitweapon ifdead
{
	ifwasweapon FREEZEBLAST
		    spawn BIGSMOKE
	sound BATDIE
	action BATDIE1
	cstat 0
	move BATSLOW geth
	break
}

ifrnd 1 ifrnd 128 soundonce BATROAM

ifvare monstflags 0
{
	ifnotmoving killit
	break
}

ifnotmoving ife ammo 1 setsprite THISACTOR initx inity initz

ifvare monstflags 1 // clockwise circle
{
	getactor[THISACTOR].ang angvar
	addvarvar angvar hitag
	setactor[THISACTOR].ang angvar
	break
}

ifvare monstflags 2 // CCW circle
{
	getactor[THISACTOR].ang angvar
	subvarvar angvar hitag
	setactor[THISACTOR].ang angvar
	break
}

// figure 8

getactor[THISACTOR].ang angvar
ifvare countvar 1
subvarvar angvar hitag else addvarvar angvar hitag
setactor[THISACTOR].ang angvar

ifcount 3
{
	getincangle temp peractor1 angvar
	ifvarl temp 0 mulvar temp -1
	ifvarvarl temp hitag { mulvar countvar -1 resetcount }
}


enda

useractor notenemy BIRDFLY 10

ifaction BIRDDIE
{
	fall
	iffloordistl 8
	{
		action BIRDDEAD
		move INIT
	}
	break
}

ifaction BIRDDEAD
{
	fall
	break
}

ifmove 0
{
	cstator 128
	ifspawnedby APLAYER sizeat 32 32
	ifvare monstflags 0 { ifcansee nullop else break }
	move BIRDFLYVEL geth
	action BIRDDOWN
	getactor[].ang peractor1 // init angle
	setvar countvar 1
	ifvare monstflags 4 setvar countvar -1
	ifvare hitag 0 setvar hitag 16
}

ifaction BIRDDOWN
{
	ifactioncount 3
	action BIRDUP
} else
ifaction BIRDUP
{
	ifactioncount 2
	action BIRDDOWN
}

ifvare monstflags 0
{
	ifnotmoving killit
	break
}
ifvare monstflags 1 // clockwise circle
{
	getactor[THISACTOR].ang angvar
	addvarvar angvar hitag
	setactor[THISACTOR].ang angvar
	break
}

ifvare monstflags 2 // CCW circle
{
	getactor[THISACTOR].ang angvar
	subvarvar angvar hitag
	setactor[THISACTOR].ang angvar
	break
}

// figure 8

getactor[THISACTOR].ang angvar
ifvare countvar 1
subvarvar angvar hitag else addvarvar angvar hitag
setactor[THISACTOR].ang angvar

ifcount 3
{
	getincangle temp peractor1 angvar
	ifvarl temp 0 mulvar temp -1
	ifvarvarl temp hitag { mulvar countvar -1 resetcount }
}

ifhitweapon ifdead
{
	ifwasweapon FREEZEBLAST
		    spawn BIGSMOKE
	// sound BATDIE
	action BIRDDIE
	cstat 0
	ifrnd 128 cstat 4
	move BATSLOW geth
}


enda

state spawnlightbugs

setvar countvar 0
whilevarn countvar 16
{
	espawn LIGHTBUG
	setactorvar[RETURN].target2 THISACTOR
	setvarvar temp countvar
	shiftvarl temp 7
	setactorvar[RETURN].peractor1 temp
	setactor[RETURN].pal 2
	addvar countvar 1
}
ends

eventloadactor CHURCHBELL
getactor[THISACTOR].lotag activator
setactor[THISACTOR].lotag 0
enda

action BELLIDLE 0 1 1 1 1
action BELLFRAMES1 0 4 1 1 18
action BELLFRAMES2 3 4 1 -1 18
action BELLFRAMES3 4 3 1 1 18
action BELLFRAMES4 6 3 1 -1 18

useractor notenemy CHURCHBELL 0

ifmove 0
{
	move INIT
	action BELLIDLE
	cstator 257
}

ifaction BELLIDLE
{
	ifpdistl 1560
	ifp pfacing
	ifhitspace
	{
		action BELLFRAMES1
		ifvarn activator 0 state activatorstate
	}
	else
	ifvarg sprite[THISACTOR].htextra 8
	{
		ifhitweapon strength 0
		strength 0
		action BELLFRAMES1
		ifvarn activator 0 state activatorstate
	}
}

ifaction BELLFRAMES1
{
	ifhitweapon strength 0
	ifactioncount 4
	{
		action BELLFRAMES2
		globalsound BELLRNG
	}
}

ifaction BELLFRAMES2
{
	ifhitweapon strength 0
	ifactioncount 4 action BELLFRAMES3
}
	

ifaction BELLFRAMES3
{
	ifhitweapon strength 0
	ifactioncount 3 action BELLFRAMES4
}

ifaction BELLFRAMES4
ifactioncount 3 action BELLIDLE


enda

spritenoshade SAVECRYSTAL
spritenopal SAVECRYSTAL

eventloadactor SAVECRYSTAL
killit
getactor[THISACTOR].hitag countvarb // max number of saves
setactor[THISACTOR].hitag 0
sizeat 24 24
enda

useractor notenemy SAVECRYSTAL 0
killit

sizeat 24 24


ifvare peractor1 0 
{
	ifvare countvarb 0 setvar countvarb 3 
	
	setvarvar tempb countvarb
	addvar tempb 2837
	espawnvar tempb
	setactorvar[RETURN].peractor1 3
	setactorvar[RETURN].myspawner THISACTOR
	getactor[THISACTOR].z z
	subvar z 10240
	setactor[RETURN].z z

	randvar peractor1 1560 // random timer offsset and get off the ground
	addvar peractor1 1
	getactor[THISACTOR].z initz
	subvar initz 1024
	setactor[THISACTOR].z initz
	// ifmultiplayer nullop else
	// {
		// setvar tempd 2
		// setvar pal 2
		// setvar peractor6 30
		// setvar intensity 6144
		// setvar tempc 0
		// state spawnpointlight
	// }
	state spawnlightbugs
}

setactor[THISACTOR].z initz
setvarvar temp timer
addvarvar temp peractor1
shiftvarl temp 6
sin tempb temp
shiftvarr tempb 4
addvar tempb 1
getactor[THISACTOR].z z
subvarvar z tempb
setactor[THISACTOR].z z

ifvarand fintips 64 nullop else
ifpdistl 4096
ifcansee
{
	setvar currtip2 0 setvar currtip 64
	orvar fintips 64
	state inithelp
}


ifspritepal 0
ifvarg countvarb 0
ifpdistl 1560
ifp palive
ifp pfacing
{
	quote 217
	ifhitspace
	{
		subvar countvarb 1
		spritepal 1
		 stopactorsound THISACTOR SAVELOOP
		sound SAVESND
		palfrom 45 63 63
		resetcount
		switch LEVEL
		case 0 save 0 break
		case 1 save 1 break
		case 2 save 2 break
		case 3 save 3 break
		case 4 save 4 break
		case 5 save 5 break
		case 6 save 6 break
		case 7 save 7 break
		case 8 save 8 break
		case 9 save 9 break
		default save 9 break
		endswitch
		
		
		//  stopsound SAVELOOP
	}
	
}
else ifvare player[THISACTOR].ftq 217 ifvarg player[THISACTOR].fta 6 setplayer[THISACTOR].fta 6

ifspritepal 1 
{
	ifvarl countvarb 1
	ifcount 30
	{
		espawn SOUNDMAKER
		randvar temp 2
		addvar temp 584
		setactorvar[RETURN].peractor1 temp
		lotsofglass 30
		killit
	}
	ifcount 1560 
	{
		spritepal 0
		state spawnlightbugs
	}
}
else soundonce SAVELOOP

enda

action ALAVABUBBLE
action ALAVABUBBLEANIM 0 5 1 1 16

useractor notenemy LAVABUBBLE
  ifaction 0
  {
    cstat 32768
    action ALAVABUBBLE
  }
  else
    ifaction ALAVABUBBLE
  {
    ifcount 72
      ifrnd 2
    {
      cstat 0
      action ALAVABUBBLEANIM
    }
  }
  else
  {
    ifactioncount 5
    {
      cstat 32768
      action ALAVABUBBLE
    }
  }
enda

eventloadactor WATERDRIP 

	getactor[THISACTOR].extra monstflags 
	setactor[THISACTOR].extra -1
	ifvarn monstflags 0 ifvarn monstflags -1
	{
		setvarvar rainstart monstflags
		getactor[THISACTOR].cstat raincstat
		getactor[THISACTOR].pal rainpal
		getactor[THISACTOR].xvel rainradius
		ifvarl rainradius 0 mulvar rainradius -1
		shiftvarl rainradius 1
		ifvare rainradius 0 setvar rainradius 12288
		ifvarl rainradius 2048 setvar rainradius 2048
		getactor[THISACTOR].zvel snowceiling
		ifvarl snowceiling 0 mulvar snowceiling -1
		shiftvarl snowceiling 4
		ifvare snowceiling 0 setvar snowceiling 65536
		ifvarl snowceiling 16384 setvar snowceiling 16384
		geta[].hitag waterblend
		seta[].hitag 0
		// killit
		cstat 32768
	}

enda

// move BLOCKUP 0 -64
// move BLOCKDOWN 0 64
// useractor notenemy 3416 0
// // ladder
// ifspawnedby APLAYER
// {
// 	cstat 32769
// 	sizeat 32 8
// }

// ifhitspace { ifmove BLOCKUP nullop else move BLOCKUP getv } else
// ifp pducking { fall ifmove BLOCKDOWN nullop else move BLOCKDOWN getv ifnotmoving killit } else
// ifmove INIT nullop else move INIT

// ifcount 6 
// {
// 	ifhitspace killit
// 	ifpdistg 1024 killit
// 	iffloordistl 4 killit
// }
// enda

// useractor notenemy LADDER 0

// // cstat 0
// ifpdistl 1024
// ifangdiffl 320
// {
// 	quote 125
// 	ifcount 6
// 	{
// 		ifp pducking pfalling
// 		{
// 			ifp ponground nullop else
// 			addinventory GET_BOOTS 2 
// 		}
// 		else
// 		ifhitspace addinventory GET_BOOTS 2
// 		else
// 		ifp pjumping addinventory GET_BOOTS 2
// 		resetcount
// 	}
// }
// else
// ifcount 11 nullop else ifcount 10 quote 80

// enda

// useractor notenemy WATERFALLSPAWNER 0

// ifcansee
// {
// 	espawn WATERFALL
// 	getactor[THISACTOR].x x
// 	setactor[RETURN].x x
// 	getactor[THISACTOR].y y
// 	setactor[RETURN].y y
// 	getactor[THISACTOR].z z
// 	setactor[RETURN].z z
// 	getactor[THISACTOR].pal pal
// 	setactor[RETURN].pal pal
// 	getactor[THISACTOR].xrepeat x
// 	setactor[RETURN].xrepeat x
// 	getactor[THISACTOR].yrepeat y
// 	setactor[RETURN].yrepeat y
// 	getactor[THISACTOR].cstat temp
// 	setactor[RETURN].cstat temp
// 	getactor[THISACTOR].ang angvar
// 	setactor[RETURN].ang angvar
// 	killit
// }

// enda


eventloadactor WATERFALL
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
enda

actor WATERFALL 0

ifvare nearwaterfall -1 setvarvar nearwaterfall THISACTOR

ifvarn lotag 1
{
	ifvarvarn nearwaterfall THISACTOR
	{
		findplayer xydist
		dist temp nearwaterfall player[THISACTOR].i
		ifvarvarl xydist temp
		{
			stopsound WATERFALLSOUND
			setvarvar nearwaterfall THISACTOR
			soundonce WATERFALLSOUND
		}
	}
	else soundonce WATERFALLSOUND
}

ifmove 0
{
    ifspritepal 0 spritepal 1
	spriteflags 16
	move INIT
	cstat 32768
	getactor[THISACTOR].xrepeat peractor1
	setvarvar peractor4 peractor1
	shiftvarr peractor4 2
	addvar peractor4 10
	setvar mtype 255
	subvarvar mtype peractor1
	shiftvarr mtype 4
	
	shiftvarl peractor1 3
	iffloordistl 8
	{
		getactor[THISACTOR].z initz
		subvar initz 512
		setactor[THISACTOR].z initz
	}
}
addvar countvarb 1
ifvarvarg countvarb mtype
{
	setvar countvarb 0
	espawn BIGSMOKE
	getactor[THISACTOR].ang angvar
	ifvare countvar 0 
	{ addvar angvar 512 setvar countvar 1 } 
	else
	{ subvar angvar 512 setvar countvar 0 }
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	setvarvar mx x
	randvarvar temp peractor1
	addvarvar mx temp
	rotatepoint x y mx y angvar mx my
	
	updatesector mx my sect
	ifn sect -1
		setsprite RETURN mx my sprite[RETURN].z

	setactor[RETURN].pal sprite[].pal
	
	ifn sect -1
	{
		espawn BLUDSPLASH
		setsprite RETURN mx my sprite[RETURN].z
		setactor[RETURN].pal sprite[].pal
		setactor[RETURN].xrepeat peractor4
		setactor[RETURN].yrepeat peractor4
	}
}

ifcount 3
{
	// espawn WATERSPLASH2
	resetcount
	espawn BLUDSPLASH
	setvarvar temp peractor1
	shiftvarr temp 4
	ifvarl temp 32 setvar temp 32
	ifvarg temp 160 setvar temp 160
	setactor[RETURN].xrepeat temp
	setactor[RETURN].yrepeat temp
	getactor[THISACTOR].ang angvar
	ifvare targetlock 0 
	{ addvar angvar 512 setvar targetlock 1 } 
	else
	{ subvar angvar 512 setvar targetlock 0 }
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	setvarvar mx x
	randvarvar temp peractor1
	addvarvar mx temp
	rotatepoint x y mx y angvar mx my
	updatesector mx my sect
	ifn sect -1
		setsprite RETURN mx my sprite[RETURN].z
	
	setactor[RETURN].pal sprite[].pal
	setactor[RETURN].xrepeat peractor4
	setactor[RETURN].yrepeat peractor4
}

enda

action SPLASH3FRAMES -1 5 1 1 8
move SPLASH3MOVE 96
useractor notenemy WATERSPLASH3 0 SPLASH3FRAMES

ifmove 0
{
	sizeat 64 40
	move SPLASH3MOVE geth
	cstator 2
}
sizeto 0 0
sizeto 0 0
ifactioncount 5 killit
ifonwater nullop else killit
enda

move STICKYMOVE 256
useractor notenemy STICKYWEB 40

ifvarg burning 0 state imonfire
sizeto 16 16
sizeto 16 16
add countvar 1
ifmove 0
{
	strength 40
	move INIT
	// cstator 1
	
	addvar mtype 16384
    ifvarl mtype 16384 ifvarg mtype -1 
    {
        // hit a sprite
        ifvarvare player[THISACTOR].i mtype
	        ifvare player[THISACTOR].reloading 0
	        {
		        ifvarg roxq 0 nullop else
		        {
			    	tip
			    	setplayer[THISACTOR].kickback_pic 0
		    	}
	    	}
    	
	   
	    else ifvare sprite[mtype].picnum STICKYWEB killit  
    }
    else
    {
	    subvar mtype 16384
		andvar mtype 49152
	}
}

cstator 256

ifhitweapon 
{
	ifdead
	{
		spritepal 17
		debris SCRAP3 2
		debris SCRAP4 2
		debris SCRAP5 2
		ifg playerstuck 0
		ifvarvare mtype player[THISACTOR].i set playerstuck 1
		killit
	}
}

ifvarg shieldup 0
ifp pfacing
ifpdistl 1280
{
	spritepal 17
	debris SCRAP3 2
	debris SCRAP4 2
	debris SCRAP5 2
	killit
}

ifge countvar 170 cstator 512
else ifvarn mtype 32768 ifpdistg 2048 set countvar 230
ifge countvar 300 killit

ldist xydist THISACTOR player[].i
getp[].posz z, add z 8192
sub z sprite[].z
abs z
ifl xydist 1280 ifl z 16384 // ifpdistl 1024
{
	ifle countvar 120
	{
		// ifvare KICKBACKPIC 0 setplayer[THISACTOR].curr_weapon 0
		setplayer[THISACTOR].poszv 0
		setplayer[THISACTOR].posxv 0
		setplayer[THISACTOR].posyv 0
		getplayer[THISACTOR].posx mx
		
		set mtype player[].i
		setvar playerstuck 15 // 26
		lockplayer 10
		ifge countvar 52 nullop else
		{
			ifp prunning soundonce ACTOR_GROWING
			ifp pwalking soundonce ACTOR_GROWING
		}
		add mx 192
		rotatepoint player[].posx player[].posy mx player[].posy player[].ang temp tempb
		setsprite THISACTOR temp tempb player[].posz
		move STOPPED faceplayer
	}
}
else ifvarvare mtype player[THISACTOR].i killit

ife mtype player[].i
{
	getp[].posx mx
	add mx 192
	rotatepoint player[].posx player[].posy mx player[].posy player[].ang temp tempb
	setsprite THISACTOR temp tempb player[].posz
}
 

enda

move CRISPING
action WEBHOLE 1 1 1

state staticwebcode

ifaction WEBHOLE break

ifmove CRISPING
{	
	state imonfire
	strength 0
	getactor[THISACTOR].xrepeat temp
	subvar temp 1
	setactor[THISACTOR].xrepeat temp
	ifvarvarl temp peractor1
	{
		spawn BIGSMOKE 
		killit 
	}
	break
}

ifvarg burning 0
{
	ifvarg sprite[THISACTOR].extra 30 strength 30
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	state imonfire
}

ifmove 0
{
	move INIT
	cstator 256 // 257
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
}

ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
ifhitweapon 
{
	ifdead
	{
		spritepal 17
		debris SCRAP3 2
		debris SCRAP4 2
		debris SCRAP5 2
		getlastpal
		spawn BIGSMOKE
		ifvarg burning 0 { move CRISPING break }
		ifactor STATICWEB4
		{
			cstat 16
			action WEBHOLE
			break
		}
		ifactor STATICWEB5
		{
			cstat 16
			action WEBHOLE
			break
		}
		killit
	}
}

ifvarg shieldup 0
ifp pfacing
ifpdistl 1280
{
	spritepal 17
	debris SCRAP3 2
	debris SCRAP4 2
	debris SCRAP5 2
	killit
}

ends

useractor notenemy STATICWEB1 100 state staticwebcode enda
useractor notenemy STATICWEB2 100 state staticwebcode enda
useractor notenemy STATICWEB3 100 state staticwebcode enda
useractor notenemy STATICWEB4 100 state staticwebcode enda
useractor notenemy STATICWEB5 100 state staticwebcode enda


state vinewallcode


ifmove CRISPING
{	
	state imonfire
	addvar burning 3
	getactor[THISACTOR].xrepeat temp
	subvar temp 1
	setactor[THISACTOR].xrepeat temp
	ifvarvarl temp peractor1
	{
		spawn BIGSMOKE 
		killit 
	}
	break
}

ifvarg burning 0
{
	ifvarg sprite[THISACTOR].extra 50 strength 50
	addvar burning 3 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	state imonfire
}

ifmove 0
{
	cstat 17
	sizeat 64 64
	move INIT
	cstator 256
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
}

ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
ifhitweapon 
{
	ifwasweapon BURNING nullop else
	ifwasweapon FTPROJ nullop else
	{
		randvar temp 4
		switch temp
		case 0 sound BREAKWOOD1 break
		case 1 sound BREAKWOOD2 break
		case 2 sound BREAKWOOD3 break
		case 3 sound BREAKWOOD4 break
		case 4 sound HITFLESH break
		endswitch
	}
	ifdead
	{
		spawn BIGSMOKE
		ifvarg burning 0 { move CRISPING break }
		spritepal 8
		debris SCRAP3 2
		debris SCRAP4 2
		debris SCRAP5 2
		getlastpal
		killit
	}
}

ifvarg shieldup 0
ifp pfacing
ifpdistl 1280
{
	randvar temp 4
	switch temp
	case 0 sound BREAKWOOD1 break
	case 1 sound BREAKWOOD2 break
	case 2 sound BREAKWOOD3 break
	case 3 sound BREAKWOOD4 break
	case 4 sound HITFLESH break
	endswitch
	spritepal 8
	debris SCRAP3 1
	debris SCRAP4 1
	debris SCRAP5 1
	getlastpal
	addstrength -20
	ifstrength 5
	killit
}

ends

useractor notenemy VINEWALL1 150 state vinewallcode enda
useractor notenemy VINEWALL2 150 state vinewallcode enda
useractor notenemy VINEWALL3 100 state vinewallcode enda

gamevar blend 0 0

state glasscode

ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
ifhitweapon
{
	espawn SOUNDMAKER
	randvar temp 2
	addvar temp 584
	setactorvar[RETURN].peractor1 temp
	spritepal 4
	lotsofglass 10
	getlastpal
	spritepal 2
	lotsofglass 20
	getlastpal
	ifactor STAINEDGLASS1
	{
		// spritepal 1
		lotsofglass 20
		spritepal 6
		lotsofglass 15
		spritepal 13
		lotsofglass 10
	}
	ifactor STAINEDGLASS2
	{
		spritepal 6
		lotsofglass 30
		spritepal 2
		lotsofglass 10
	}
	ifactor STAINEDGLASS3
	{
		// spritepal 1
		lotsofglass 20
		spritepal 13
		lotsofglass 20
	}
	ifactor STAINEDGLASS4
	{
		spritepal 6
		lotsofglass 20
		spritepal 13
		lotsofglass 30
	}
	ifactor STAINEDGLASS5
	{
		spritepal 6
		lotsofglass 30
		spritepal 2
		lotsofglass 10
		spritepal 13
		lotsofglass 10
	}
	ifactor STAINEDGLASS6
	{
		spritepal 2
		lotsofglass 30
		spritepal 10
		lotsofglass 20
		spritepal 7
		lotsofglass 20
		spritepal 8
		lotsofglass 10
	}
	ifactor STAINEDGLASS6
	{
		spritepal 2
		lotsofglass 30
		spritepal 7
		lotsofglass 20
		spritepal 8
		lotsofglass 10
	}
	ifactor STAINEDGLASS7
	{
		spritepal 2
		lotsofglass 20
		spritepal 7
		lotsofglass 20
		spritepal 8
		lotsofglass 10
		spritepal 13
		lotsofglass 30
		spritepal 12
		lotsofglass 10
	}
	ifactor STAINEDGLASS8
	{
		spritepal 7
		lotsofglass 10
		spritepal 8
		lotsofglass 10
		spritepal 13
		lotsofglass 20
		spritepal 4
		lotsofglass 10
	}
	killit
}

ends

state glasscode2


ifhitweapon
{
	espawn SOUNDMAKER
	randvar temp 2
	addvar temp 584
	setactorvar[RETURN].peractor1 temp
	spritepal 4
	lotsofglass 10
	getlastpal
	ifactor STAINEDGLASS9
	{
		lotsofglass 15
		spritepal 16
		getlastpal
		ifspritepal 0 { spritepal 16 lotsofglass 15 } else
		lotsofglass 15
		spritepal 13
		lotsofglass 7
		spritepal 4
		lotsofglass 7
	}
	ifactor STAINEDGLASS10
	{
		lotsofglass 10
		spritepal 16
		getlastpal
		ifspritepal 0 { spritepal 16 lotsofglass 10 } else
		lotsofglass 10
		spritepal 4
		lotsofglass 10
	}
	ifactor STAINEDGLASS11
	{
		lotsofglass 5
		spritepal 2
		lotsofglass 8
		spritepal 10
		lotsofglass 8
		spritepal 7
		lotsofglass 10
		spritepal 8
		lotsofglass 6
	}
	ifactor STAINEDGLASS12
	{
		lotsofglass 10
		spritepal 16
		getlastpal
		ifspritepal 0 { spritepal 16 lotsofglass 10 } else
		lotsofglass 10
		spritepal 13
		lotsofglass 7
		spritepal 12
		lotsofglass 7
	}
	ifactor STAINEDGLASS13
	{
		lotsofglass 15
		spritepal 10
		lotsofglass 20
		spritepal 13
		lotsofglass 6
		spritepal 2
		lotsofglass 5
	}
	ifactor STAINEDGLASS14
	{
		spritepal 10
		lotsofglass 20
		spritepal 13
		lotsofglass 6
		spritepal 2
		lotsofglass 5
		spritepal 12
		lotsofglass 6
	}
	ifactor STAINEDGLASS15
	{
		spritepal 10
		lotsofglass 12
		spritepal 13
		lotsofglass 6
		spritepal 2
		lotsofglass 5
		spritepal 12
		lotsofglass 6
		spritepal 7
		lotsofglass 5
	}
	ifactor STAINEDGLASS16
	{
		spritepal 10
		lotsofglass 12
		spritepal 13
		lotsofglass 6
		spritepal 2
		lotsofglass 5
		spritepal 12
		lotsofglass 6
		spritepal 8
		lotsofglass 8
	}
	ifactor STAINEDGLASS17
	{
		spritepal 10
		lotsofglass 10
		spritepal 8
		lotsofglass 10
		spritepal 7
		lotsofglass 6
		spritepal 2
		lotsofglass 8
	}
	ifactor STAINEDGLASS18
	{
		lotsofglass 15
		spritepal 13
		lotsofglass 20
	}
	ifactor STAINEDGLASS19
	{
		lotsofglass 10
		spritepal 12
		lotsofglass 20
		spritepal 8
		lotsofglass 20
	}
		
	
	killit
}

ends

useractor notenemy STAINEDGLASS1 0 state glasscode enda
useractor notenemy STAINEDGLASS2 0 state glasscode enda
useractor notenemy STAINEDGLASS3 0 state glasscode enda
useractor notenemy STAINEDGLASS4 0 state glasscode enda
useractor notenemy STAINEDGLASS5 0 state glasscode enda
useractor notenemy STAINEDGLASS6 0 state glasscode enda
useractor notenemy STAINEDGLASS7 0 state glasscode enda
useractor notenemy STAINEDGLASS8 0 state glasscode enda
useractor notenemy STAINEDGLASS9 0 state glasscode2 enda
useractor notenemy STAINEDGLASS10 0 state glasscode2 enda
useractor notenemy STAINEDGLASS11 0 state glasscode2 enda
useractor notenemy STAINEDGLASS12 0 state glasscode2 enda
useractor notenemy STAINEDGLASS13 0 state glasscode2 enda
useractor notenemy STAINEDGLASS14 0 state glasscode2 enda
useractor notenemy STAINEDGLASS15 0 state glasscode2 enda
useractor notenemy STAINEDGLASS16 0 state glasscode2 enda
useractor notenemy STAINEDGLASS17 0 state glasscode2 enda
useractor notenemy STAINEDGLASS18 0 state glasscode2 enda
useractor notenemy STAINEDGLASS19 0 state glasscode2 enda

move TIDALWAVEVEL 644
move RIVERVEL 768

useractor notenemy TIDALWAVE 0

ifmove 0
{
	move TIDALWAVEVEL geth
	ifspawnedby APLAYER move RIVERVEL geth else
	{
		randvar temp 128
		subvar temp 32
		getactor[THISACTOR].ang angvar
		addvarvar angvar temp
		setactor[THISACTOR].ang angvar
	}
	cstat 32768
	setvar peractor1 12288
	getsector[THISACTOR].floorz peractor4
}
fall
ifnotmoving 
{
	cactor WATERFALL
	espawn BLUDSPLASH
	ifspritepal 2 seta[RETURN].pal 2 else
	setactor[RETURN].pal 1
	setactor[RETURN].xrepeat 64
	setactor[RETURN].yrepeat 64
	killit
}
getactor[THISACTOR].sectnum mysector
getactor[THISACTOR].x x
getactor[THISACTOR].y y
getflorzofslope mysector x y z
setvarvar digz z
subvarvar z peractor1
getactor[THISACTOR].z initz
ifvarvarl initz z setvarvar z initz
subvar peractor1 128

setactor[THISACTOR].z z
ifspritepal 2 espawn LAVARIVER else
espawn WARPTILE
setav[RETURN].mtype mtype
subvar digz 1024
setvarvar temp digz
subvarvar temp peractor4
ifvarg temp 1536 { addvar peractor4 1536 setvarvar digz peractor4 }
setactor[RETURN].z digz
setactor[RETURN].cstat 32768
setvarvar peractor4 digz
ifvarl peractor1 0 killit
ifcount 240 killit

enda

useractor notenemy LAVARIVER 0

fall
ifmove 0
{
	cstat 34
	move INIT
	sizeat 96 96
}

ifpdistl 2048 cstator 1
ifvare player[THISACTOR].spritebridge YES
ifvarvare player[THISACTOR].sbs THISACTOR
ifp ponground
ife invulntime 0
{
	getplayer[THISACTOR].i spriteid
	getactorvar[spriteid].burning burning
	add burning 12
	setactorvar[spriteid].burning burning
	ifvarand timer 1 addphealth -1
}
sizeto 0 96
ifcount 300 killit

ifrnd 2
ifg sprite[].xrepeat 40
ifpdistl 16384
{
	randvar zdist 2048
	subvar zdist 5120
	ezshoot zdist LAVAROCK
	rand angvar 2047
	seta[RETURN].ang angvar
	
	rand mx 1024
	sub mx 512
	add mx sprite[].x
	rand my 1024
	sub my 512
	add my sprite[].y
	setsprite RETURN mx my sprite[].z
}

enda

action TIDALWAVEFRAME 279 1 1 1 1
useractor notenemy WARPTILE 0 TIDALWAVEFRAME
fall
ifmove 0
{
	cstat 34
	move INIT
	sizeat 96 96
	geta[].htflags temp, orvar temp 64, seta[].htflags temp
	ifrnd 64
	ifpdistl 16384
	{
		ife mtype 1
		ifpdistl 844 nullop else
		{
			espawn ICESPIKE
			setav[RETURN].ammo 100
			rand mx 1024
			sub mx 512
			add mx sprite[].x
			rand my 1024
			sub my 512
			add my sprite[].y
			setsprite RETURN mx my sprite[].z
		}
	}
}
ife mtype 0
{
	ifpdistl 2048 cstator 1
	ifvare player[THISACTOR].spritebridge YES
	ifvarvare player[THISACTOR].sbs THISACTOR
	ifp ponground
	ife invulntime 0
	{
		getplayer[THISACTOR].i spriteid
		getactorvar[spriteid].burning burning
		subvar burning 12
		setactorvar[spriteid].burning burning
		ifvarand timer 1 addphealth -1
	}
}
else
{
	set temp timer
	modvar temp 6
	ife temp 0
	{
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			geta[].z z
			sub z sprite[spriteid].z
			abs z
			ifl z 16384
			{
				ldist xydist THISACTOR spriteid
				ife actorvar[spriteid].monstatus 1
				ife actorvar[spriteid].cursed 0
				ifl xydist 1024
				ifn sprite[spriteid].picnum ICESPIKE
				ifn sprite[spriteid].picnum FULLSPIKE
				{
					set tempb sprite[spriteid].htextra
					add tempb 3
					seta[spriteid].htextra tempb
					seta[spriteid].htowner player[].i
					seta[spriteid].htpicnum SHOTSPARK1
					getav[spriteid].burning tempc
					sub tempc 12
					setav[spriteid].burning tempc
				}
			}
			nextspritestat spriteid spriteid
		}
	}
}
sizeto 0 96
ifcount 300 killit
		
enda

eventloadactor PIGGY sizeat 40 40 enda

move PIGGYSLOW 72
move PIGGYFAST 144

action APIGGYWALK 0 4 5 1 16
action APIGGYRUN 0 4 5 1 8
action APIGGYSTAND 5 1 5 1 10
action APIGGYDIE 20 8 1 1 12
action APIGGYDEAD 27 1 1 1 1

useractor notenemy PIGGY 30

fall

set peractor6 1
state monsterai

ifvarg burning -1
{
	ifaction APIGGYDEAD
	{
		ifhitweapon
		{
			state standard_jibs
			state randsquishsound
			killit
		}
		break
	}
	ifaction APIGGYDIE
	{
		ifactioncount 8
		action APIGGYDEAD
		ifrnd 128 cstator 4
		break
	}
	ifaction 0
	{
		setvar monstatus 3
		sizeat 40 40
		cstator 257
		action APIGGYWALK
		move PIGGYSLOW randomangle
	}
	
	ifnotmoving ifcount 10
	{
		action APIGGYSTAND
		move STOPPED
	}
	
	ifmove STOPPED
	ifrnd 4
	{
		action APIGGYWALK
		move PIGGYSLOW randomangle
	}
	
	ifstrength 25 // injured
	ifpdistl 4096
	ifp pfacing
	{
		state faceaway
		ifmove PIGGYSLOW
		{
			move PIGGYFAST geth
			action APIGGYRUN
		}
	}
	
	ifmove PIGGYSLOW
	{
		ifrnd 2
		{
			move PIGGYFAST geth
			action APIGGYRUN
		}
		else
		ifrnd 3
		{
			move STOPPED
			action APIGGYSTAND
		}
	}
	
	ifmove PIGGYFAST
	ifrnd 4
	{
		move PIGGYSLOW randomangle
		action APIGGYWALK
	}
	
	ifrnd 1 soundonce PIGRUNT
}

ifhitweapon
{
	ifdead
	{
		 ifwasweapon FREEZEBLAST
		    spawn BIGSMOKE
		ifvare character 0
		{
			ifwasweapon BURNING globalsound BACON else
			ifrnd 32 globalsound BACON
		}
		setvar monstatus 2
		cstat 0
		sound PIGDTH
		action APIGGYDIE
		move STOPPED
		break
	}
	soundonce PIGPAIN
	move STOPPED
	action APIGGYSTAND
}
ifsquished
{
	setvar monstatus 2
	cstat 0
	sound PIGDTH
	action APIGGYDIE
	move STOPPED
	sound SQUISHED
    state random_ooz
}
	
enda

action SPIKEFRAMES 0 4 1 1 12
useractor notenemy ICESPIKE 30 SPIKEFRAMES
ifmove 0
{
	move INIT
	sizeat 64 64
	cstator 257
	ife ammo 100 cstat 256
	ifspawnedby WARPTILE
	{
		seta[].alpha 24
		seta[].blend 1
		spritepal 1
		sizeat 36 36
		set mtype 1
	}
	ifrnd 128 cstator 4
	sound SPIKEGROW
}
ifactioncount 4 { cactor FULLSPIKE action ANULLACTION }

ifhitweapon ifdead { sound GLASS_BREAKING lotsofglass 15 killit }

ifp palive ifcansee ifpdistl 768 
ifn ammo 100
{ 
	// addphealth -1
	setvar tempd -1
	state directdamage
	palfrom 24 48
	ifrnd 64 state dukepainsounds
}

enda

state stalagtite


ifvarand pow 16
{
	setvar monstatus 1
	ifrnd 8
	ifpdistl 8192
	ifcansee
	{
		espawn LSTRIKE
		setactor[RETURN].pal 1
		ifp ponsteroids setactor[THISACTOR].htextra 80 else
		setactor[THISACTOR].htextra 20
		setactor[THISACTOR].htpicnum BFGIMPACT
		spawn LIGHTNINGAURA
	}
}


ifvarand pow 256
{
	setvar monstatus 1
	ifpdistl 2176
	ifvarvarg sprite[THISACTOR].z player[THISACTOR].posz
	{
		getactor[THISACTOR].htextra temp
		ifvarl temp 1 setvar temp 1
		ifp ponsteroids addvar temp 21
		addvar temp 7
		setactor[THISACTOR].htextra temp
		setactor[THISACTOR].htpicnum BFGIMPACT
		setactor[THISACTOR].htowner player[THISACTOR].i
		setactor[THISACTOR].htang player[THISACTOR].ang
		ifvarand timer 8 sound CHOP
		
	}
}

ife pow 0 setvar monstatus 0

	
	
ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
ifhitweapon 
{
	ifvare character 0
	ifwasweapon KNEE addstrength KNEE_WEAPON_STRENGTH
	ifdead { sound GLASS_BREAKING lotsofglass 25 killit }
}

ifmove 0
{
	cstator 257
	ifcount 8
	{
		ifrnd 12 { espawn WATERDRIP setactor[RETURN].pal 17 }
		resetcount
		ldist xydist THISACTOR player[].i
		ifcansee ifvarl xydist 8192
		{
			ifrnd 1
			{
				move INIT
				setvar peractor1 1
				globalsound CRUMBLE
				espawn WATERDRIP
				setactor[RETURN].pal 17
				lotsofglass 1
			} else
			ifvarl xydist 4096
			ifrnd 2
			{
				move INIT
				setvar peractor1 1
				globalsound CRUMBLE
				espawn WATERDRIP
				setactor[RETURN].pal 17
				lotsofglass 1
			} else
			ifvarl xydist 2048
			ifrnd 4
			{
				move INIT
				setvar peractor1 1
				globalsound CRUMBLE
				espawn WATERDRIP
				setactor[RETURN].pal 17
				lotsofglass 1
			}
		}
	}	
	break
}



ifvare peractor1 1
{
	ifrnd 8 { espawn WATERDRIP setactor[RETURN].pal 17 }
	ifrnd 8 lotsofglass 1
	ifcount 26 setvar peractor1 2 // falling
	break
}

fall

ifvare peractor1 2
{
	ifp phigher nullop else
	ifvarg sprite[THISACTOR].zvel 0
	ifcansee
	ifpdistl 1280
	{
		ifactor SPIKE1 setvar tempd -15 else
		ifactor SPIKE2 setvar tempd -30 else
		ifactor FULLSPIKE setvar tempd -45
		state directdamage
		palfrom 36 48
		setvar peractor1 3
		sound CHOP
		cstator 128
		state dukepainsounds
	}
	else
	ifvare sprite[THISACTOR].zvel 0
	{
		setvar peractor1 3
		sound CHOP
		cstator 128
	}
}


ends

useractor notenemy SPIKE1 20
ifvarand sprite[THISACTOR].cstat 8 
state stalagtite
else
{

	ifvarand pow 16
	ifrnd 8
	ifpdistl 8192
	ifcansee
	{
		espawn LSTRIKE
		setactor[RETURN].pal 1
		ifp ponsteroids setactor[THISACTOR].htextra 80 else
		setactor[THISACTOR].htextra 20
		setactor[THISACTOR].htpicnum RPG
		spawn LIGHTNINGAURA
	}
	ifvarand pow 256
	ifpdistl 2176
	ifvarvarg sprite[THISACTOR].z player[THISACTOR].posz
	{
		getactor[THISACTOR].htextra temp
		ifvarl temp 1 setvar temp 1
		ifp ponsteroids addvar temp 21
		addvar temp 7
		setactor[THISACTOR].htextra temp
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htowner player[THISACTOR].i
		setactor[THISACTOR].htang player[THISACTOR].ang
		ifvarand timer 8 sound CHOP
		
	}
	
	
	cstator 257
	ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
	ifhitweapon
	{
		ifvare character 0
		ifwasweapon KNEE addstrength KNEE_WEAPON_STRENGTH
		spritepal 1
		debris SCRAP5 2
		getlastpal
		ifdead
		{
			espawn SOUNDMAKER
			setactorvar[RETURN].peractor1 GLASS_BREAKING
			// debris SCRAP5 20
			state pottery_debris
			spawn SMALLSMOKE
			killit
		}
		else ifwasweapon SHOTSPARK1 sound PISTOL_RICOCHET
	}
}
enda

useractor notenemy SPIKE2 25
ifvarand sprite[THISACTOR].cstat 8 
state stalagtite
else
{
	ifvarand pow 16
	ifrnd 8
	ifpdistl 8192
	ifcansee
	{
		espawn LSTRIKE
		setactor[RETURN].pal 1
		ifp ponsteroids setactor[THISACTOR].htextra 80 else
		setactor[THISACTOR].htextra 20
		setactor[THISACTOR].htpicnum RPG
		spawn LIGHTNINGAURA
	}
	ifvarand pow 256
	ifpdistl 2176
	ifvarvarg sprite[THISACTOR].z player[THISACTOR].posz
	{
		getactor[THISACTOR].htextra temp
		ifvarl temp 1 setvar temp 1
		ifp ponsteroids addvar temp 21
		addvar temp 7
		setactor[THISACTOR].htextra temp
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htowner player[THISACTOR].i
		setactor[THISACTOR].htang player[THISACTOR].ang
		ifvarand timer 8 sound CHOP
		
	}
	
	
	cstator 257
	ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
	ifhitweapon
	{
		ifvare character 0
		ifwasweapon KNEE addstrength KNEE_WEAPON_STRENGTH
		spritepal 1
		debris SCRAP5 2
		getlastpal
		ifdead
		{
			espawn SOUNDMAKER
			setactorvar[RETURN].peractor1 GLASS_BREAKING
			// debris SCRAP5 20
			state pottery_debris
			spawn SMALLSMOKE
			killit
		}
		else ifwasweapon SHOTSPARK1 sound PISTOL_RICOCHET
	}
}
enda

useractor notenemy FULLSPIKE 30

ifvarand sprite[THISACTOR].cstat 8 
{
	state stalagtite
	break
}
setvar monstatus 1

ifhitweapon ifdead { sound GLASS_BREAKING lotsofglass 25 killit }
ife mtype 1
{
	ifcount 50 sizeto 24 0
	ifcount 120 killit
	
	ifp palive
	ifpdistl 844
	ifn ammo 100
	{
		getplayer[THISACTOR].i spriteid
		ldist xydist THISACTOR spriteid
		ifvarl xydist 256
		{ 
			setvar tempd -2
			state directdamage
			palfrom 26 48
			ifrnd 64 state dukepainsounds
			sound GLASS_BREAKING lotsofglass 10 killit
		}
	}
	break
}


ifcount 6
ifp palive
ifcansee
ifp phigher
ifpdistl 1432
{
	getplayer[THISACTOR].i spriteid
	ldist xydist THISACTOR spriteid
	ifvarl xydist 256
	ifn ammo 100
	{ 
		resetcount
		setvar tempd -2
		state directdamage
		// addphealth -2
		palfrom 26 48
		ifrnd 64 state dukepainsounds
	}
}

ifvarn myspawner -1
{
	ifvare sprite[myspawner].picnum WIZARD ifvare sprite[myspawner].statnum 1
	{
		dist xydist THISACTOR myspawner
		ifvarl xydist 2048
		{
			sound GLASS_BREAKING lotsofglass 25 killit
		}
	}
}



enda

state icewallcode

ifmove STOPPED
{
	strength 0
	getactor[THISACTOR].yrepeat y
	subvar y 1
	setactor[THISACTOR].yrepeat y
	ifvarl y 1 
	{
		spawn BIGSMOKE 
		ifspritepal 0 spritepal 1
		spawn BLOODPOOL
		killit 
	}
	break
}
ifmove 0
{
	move INIT
	cstator 257
	ifspawnedby APLAYER strength 150
	getactor[THISACTOR].xrepeat peractor1
	shiftvarl peractor1 3
	getactor[THISACTOR].yrepeat initz
	shiftvarl initz 8
	set monstatus 1
}

ifvarg burning 0
{
	geta[].extra temp
	set tempb burning
	shiftr tempb 6, ifl tempb 1 set tempb 1
	sub burning tempb
	sub temp tempb
	ifl temp 0 set temp 0
	seta[].extra temp
	espawn WATERDRIP
	getactor[THISACTOR].ang angvar
	ifvare countvar 0 
	{ addvar angvar 512 setvar countvar 1 } 
	else
	{ subvar angvar 512 setvar countvar 0 }
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	setvarvar mx x
	randvarvar temp peractor1
	addvarvar mx temp
	rotatepoint x y mx y angvar mx my
	
	randvarvar temp initz
	getactor[THISACTOR].z z
	subvarvar z temp
	updatesector mx my sect
	ifn sect -1
		setsprite RETURN mx my z
	getactor[THISACTOR].pal pal
	setactor[RETURN].pal pal
	ifstrength 10
	{
		spawn BIGSMOKE
		move STOPPED
		break
	}
	
}

ifvare mtype 1
{
	getactor[THISACTOR].yrepeat y
	subvar y 1
	ifvarl y 1 killit
	setactor[THISACTOR].yrepeat y
}
ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
ifhitweapon
{
	ifdead
	{
		lotsofglass 50
		espawn SOUNDMAKER
		randvar temp 2
		addvar temp 584
		setactorvar[RETURN].peractor1 temp
		espawn BIGSMOKE
		getactor[THISACTOR].pal pal
		setactor[RETURN].pal pal
		ifspritepal 0 spritepal 1
		spawn BLOODPOOL
		killit
	}
	
}

ends

useractor notenemy ICEWALL1 300 state icewallcode enda
useractor notenemy ICEWALL2 300 state icewallcode enda

action CRACK1FRAME 350 1 1
action CRACK2FRAME 351 1 1
action CRACK3FRAME 352 1 1
action CRACK4FRAME 353 1 1

useractor notenemy FAKECRACK 0

ifvare sprite[myspawner].statnum 1024 killit
ifvarl sprite[myspawner].extra 1 killit
ifvarn sprite[myspawner].picnum ICEWALL1 ifvarn sprite[myspawner].picnum ICEWALL2 killit
ifaction 0
{
	ifrnd 128
	{
		ifrnd 128 action CRACK1FRAME
		else action CRACK2FRAME
	}
	else
	{
		ifrnd 128 action CRACK3FRAME
		else action CRACK4FRAME
	}
	getactor[myspawner].cstat temp
	xorvar temp 257
	setactor[THISACTOR].cstat temp
	cstator 128
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	getactor[myspawner].xrepeat x
	ifspawnedby RPG shiftvarr x 1 else
	shiftvarr x 2
	setactor[THISACTOR].xrepeat x
	getactor[myspawner].yrepeat x
	ifspawnedby RPG shiftvarr x 1 else
	shiftvarr x 2
	setactor[THISACTOR].yrepeat x
	getactor[myspawner].pal pal
	setactor[THISACTOR].pal pal
}

getactor[myspawner].ang angvar
setactor[THISACTOR].ang angvar

ifrnd 1
{
	espawn WATERDRIP
	getactor[THISACTOR].pal pal
	setactor[RETURN].pal pal
	getactor[THISACTOR].z z
	setactor[RETURN].z z
}


enda


move DOORDIE1
move DOORDIE2
move DOORDIE3
move DOORINIT
move DOORBRING
move DOORTALKED
action DOORDYING 0 1 1 1 10
action DOORTALKING1 16 3 1 1 6
action DOORTALKING3 17 2 1 1 9
action DOORTALKING2 18 3 1 -1 6
action DOORDEAD 4 1 1

// eventloadactor SOULDOOR
// setvarvar temp maxheroes[LEVEL]
// addvar temp 1
// setarray maxheroes[LEVEL] temp

// getactor[THISACTOR].lotag lotag
// setactor[THISACTOR].lotag 0
// getactor[THISACTOR].yvel activator
// getactor[THISACTOR].zvel group
// ifvare lotag 0 setvar lotag 1

// ifvarn group 0
// {
// 	setvarvar temp mongroup[group]
// 	addvar temp 1
// 	setarray mongroup[group] temp
// }
// enda

useractor notenemy SOULDOOR 6001

ifaction DOORDEAD break
ifmultiplayer nullop else
spawn SOULDOORMAP
ifmove 0
{
	move DOORINIT
    ifspawnedby APLAYER
	{
		cstat 17
		sizeat 64 64
		setvar lotag 2
	}
}

ifvarand fintips 4 nullop else
ifp pfacing
ifpdistl 6144
ifcansee
{ 
	setvar currtip2 0 setvar currtip 4 
	orvar fintips 4 
	state inithelp
}


ifaction DOORTALKING1 
{
	ifactioncount 3 action DOORTALKING2 
}
else
ifaction DOORTALKING2 
{
	ifmove DOORTALKED nullop else
	ifactioncount 2
		ifrnd 32 action DOORTALKING3
		
	ifactioncount 3
	{
		ifmove DOORTALKED action 0 else action DOORTALKING1
	}
}
else
ifaction DOORTALKING3
	ifactioncount 2 action DOORTALKING2
else
ifpdistl 6144 // ifcansee
	setvar doornear 52


ifmove DOORINIT
{
	ifaction 0
	{
		ifp pfacing
		ifpdistl 4096 ifcansee
		{
			action DOORTALKING1
			globalsound BRINGDEM
			move DOORBRING
		}
	}
}
ifmove DOORBRING
{
	ifcount 65 nullop else
	ifcount 64
	{
		switch lotag
		case 1 globalsound DEM1 break
		case 2 globalsound DEM2 break
		case 3 globalsound DEM3 break
		case 4 globalsound DEM4 break
		case 5 globalsound DEM5 break
		case 6 globalsound DEM6 break
		case 7 globalsound DEM7 break
		case 8 globalsound DEM8 break
		case 9 globalsound DEM9 break
		case 10 globalsound DEM10 break
		default  globalsound DEM1 break
		endswitch
	}
	ifcount 100
	{
		move DOORTALKED
		action 0
	}
}

ifmove DOORTALKED
{
	ifp pfacing ifcansee		
	ifpdistl 2560 ifp palive
	ifhitspace
	{
		action DOORTALKING1
		globalsound BRINGDEM
		move DOORBRING
	}
	
}

cstator 257
ifhitweapon
{
	ifstrength 100 strength 80
}

ifaction DOORDYING
{
	ifmove DOORDIE1
	{
		ifrnd 128 cstat 17 else cstat 19
		ifcount 32 move DOORDIE2
	}
	ifmove DOORDIE2
	{
		ifrnd 128 cstat 19 else cstat 531
		ifcount 32 move DOORDIE3
	}
	ifmove DOORDIE3
	{
		ifrnd 128 cstat 530 else cstat 32768
		ifcount 32 
		{ 
			cstat 16 
			action DOORDEAD 
			cactor 5028 
			ifvarn activator 0 state activatorstate
			set activator 0
			randvar temp 3
			ifvare temp 3 globalsound THANKS4 else
			ifvare temp 2 globalsound THANKS3 else
			ifvare temp 1 globalsound THANKS2 else
			globalsound THANKS1
			espawn HERO
			setvarvar temp savedheroes[LEVEL]
			addvar temp 1
			setarray savedheroes[LEVEL] temp
			getactor[THISACTOR].pal pal
			setactor[RETURN].pal pal
			spawn BIGSMOKE
		}
	}
	break
}

ifvarg peractor1 0
{
	subvar peractor1 1
	subvar lotag 1
	ifvarl lotag 1 globalsound DORDIE
 	//quote 126
 	setvar ftq 126 setvar fta QUOTETIME
 	move INIT
}

ifmove INIT
{
	ifspritepal 6 getlastpal else spritepal 6
	ifcount 26
	{
		ifvarl lotag 1
		{
			move DOORDIE1
			action DOORDYING
			ifspritepal 6 getlastpal
			break
		}

		move DOORTALKED
		ifspritepal 6 getlastpal
	}
}


enda

action BBB 0 1 5 1 10
action BBI 0 1 5 1 10
action SOULFACE 5 1 5 1 10

move   BALL0  0     -20
move   BALL8  0     -5
move   BALL1 -700   -65
move   BALL2 -550    30
move   BALL3 -400    -30
move   BALL4 -300    30
move   BALL5 -150    -15
move   BALL6 -100    30
move   BALL7 -80    0

move FOLLOW1 384 //128
move SOULCHARGE 384 // 192
move FOLLOW2 192 -50 // 64
move SOULSTOP
ai     AISOULFOLLOW SOULFACE FOLLOW1 seekplayer faceplayerslow
ai     AIBALLRANDOM BBI BALL0 randomangle
ai     AIBALLI SOULFACE SOULSTOP geth getv
ai     AIBALLR BBI BALL7 geth getv
ai     AIBALL1 BBI BALL1 geth getv
ai     AIBALL2 BBI BALL2 geth getv
ai     AIBALL3 BBI BALL3 geth getv
ai     AIBALL4 BBI BALL4 geth getv
ai     AIBALL5 BBI BALL5 geth getv
ai     AIBALL6 BBI BALL6 geth getv


state soulabsorb

// getactor[THISACTOR].htmovflag spriteid
// ifvarn spriteid 0
findnearspritez SOULDOOR 384 16384 spriteid
ifn spriteid -1
{
	// addvar spriteid 16384
    // ifvarl spriteid 16384 ifvarg spriteid -1 
    // ifvare sprite[spriteid].picnum SOULDOOR
    // {
	    getactorvar[spriteid].lotag temp
	    getactorvar[spriteid].peractor1 tempb
	    ifvarvarl tempb temp
	    {
		    addvar tempb 1
		    setactorvar[spriteid].peractor1 tempb
	        // espawn SOUNDMAKER
			// setactorvar[RETURN].peractor1 SOULBOUNCE
			screensound SOULHITDOOR
			spritepal 2
		    spawn BLUDSPLASH
		    spawn BLOODCLOUD
		    spawn BLOODCLOUD
		    spawn BLOODCLOUD
		    spawn BLOODCLOUD
		    spawn BLOODCLOUD
		    spawn BLOODCLOUD
		    spawn BLOODCLOUD
			whilevarn command 1
			{
				espawn MONSOUL setav[RETURN].peractor1 1
				sub command 1
			}
			
			killit
		}
	// }
}
ends

state soulfollowstate

ifinwater nullop else
{
	getplayer[THISACTOR].cursectnum temp
	ifvarn temp -1
	{
		getsector[temp].lotag tempb
		ifvare tempb 2 
		{
			ai AIBALLI
			break
		}
	}
}

ifvarg doornear 0
{
	findnearactor SOULDOOR 5120 spriteid
	ifvarn spriteid -1
	{
		getactor[THISACTOR].z z
		getactor[spriteid].z mz
		subvar mz 4096
		setactor[spriteid].z mz
		canseespr THISACTOR spriteid temp
		addvar mz 4096
		setactor[spriteid].z mz
		ifvare temp 1
		{
			getactor[spriteid].x mx
			getactor[spriteid].y my
			getactor[THISACTOR].x x
			getactor[THISACTOR].y y
			subvarvar mx x
			subvarvar my y
			getangle angvar mx my
			setactor[THISACTOR].ang angvar
			subvarvar z mz // if z is negative, then target is below you
			ifvarl z -6144 fall
			
			ifvarl z -4096 { move FOLLOW2 geth geta[].z z add z 512 seta[].z z } else
			move FOLLOW2 geth getv
			ifnotmoving move FOLLOW2 faceplayer
			break
		}
	}
}
else ifg command 3 ifpdistl 8192 // bite monsters in the ass
{
	findnearactorz SHOOTME 6144 32768 spriteid
	ifvarn spriteid -1
	{
		getactor[THISACTOR].z z
		getactor[spriteid].z mz
		subvar mz 4096
		setactor[spriteid].z mz
		canseespr THISACTOR spriteid temp
		addvar mz 4096
		setactor[spriteid].z mz
		ifvare temp 1
		{
			getactor[spriteid].x mx
			getactor[spriteid].y my
			getactor[THISACTOR].x x
			getactor[THISACTOR].y y
			subvarvar mx x
			subvarvar my y
			getangle angvar mx my
			setactor[THISACTOR].ang angvar
			
			subvarvar mz z
			ifvarg mz 0 // target is below
			{
				addvar z 1024
				setactor[THISACTOR].z z
			}
			shiftvarr mz 3
			movesprite THISACTOR 0 0 mz CLIPMASK0 RETURN
		
			//ifmove FOLLOW2 nullop else
			//move FOLLOW2 geth
			
			ifmove SOULCHARGE nullop else
			move SOULCHARGE getv faceplayer
			
			getactorvar[spriteid].myspawner temp
			dist xydist THISACTOR temp
			ifvarl xydist 1280
			ifvare actorvar[temp].monstatus 1
			ifvarand sprite[temp].cstat 256
			{
				soundonce BITEME
				move SOULSTOP geth
				ifrnd 32
				{
					// ifvarl sprite[temp].extra 500
					// {
						// getactorvar[temp].fear tempb
						// addvar tempb 20
						// setactorvar[temp].fear tempb
					// }
					getactor[temp].htextra tempb
					ifvarl tempb 1
					{
						setactor[temp].htextra 3
						setactor[temp].htpicnum SHOTSPARK1
						setactor[temp].htowner THISACTOR
						setactor[temp].htang sprite[THISACTOR].ang
					}
				}
			}
			
			break
		}
		
	}
}

ifcansee
{
	ifg command 1 ifl command 10
	ifmove SOULSTOP 
	{	
		set temp command
		state spawn_number
	}
	
	ifpdistl 6144 ifmove FOLLOW1 move SOULCHARGE getv faceplayer
	
	ifpdistl 1792 { move SOULSTOP faceplayerslow break }
	
	ifnotmoving ifcount 10 iffloordistl 128
	{
		ifmove FOLLOW2 nullop else move FOLLOW2 getv seekplayer faceplayerslow 
	}
	
	
}

ifmove FOLLOW2 
{
	ifp phigher nullop else 
	ifcount 6 move FOLLOW1 getv seekplayer faceplayerslow
}
else ifcount 6
ifp phigher move FOLLOW2 getv seekplayer faceplayerslow

ifmove SOULSTOP move FOLLOW1 getv seekplayer faceplayerslow

ifonwater 
{
	iffloordistl 16
	{
		ifmove FOLLOW2 nullop else move FOLLOW2 getv seekplayer faceplayerslow
	}
	getp[].cursectnum temp
	geta[].sectnum tempb
	ifg temp -1 ifg tempb -1
	{
		ifn sector[temp].lotag 1
		ife sector[tempb].lotag 1
		{
			setsprite THISACTOR player[].posx player[].posy player[].posz
		}
	}
}
else
fall
ends

state monsoulcode

ifai 0 
{
	set command 1
	cstator 2
	spriteflags 2048
	// seta[].blend 1
	ai AIBALLI 
	sizeat 42 38
	setvar gold 30
	setactor[THISACTOR].shade -127
}

cstat 2
findplayer xydist
set temp 2560
sub temp xydist 
ifl temp 0 set temp 0
shiftr temp 3
ifg temp 255 set temp 255
seta[].alpha temp

ifmultiplayer nullop else
spawn MONSOULMAP

ifvare doorinmap 0
{
	ifcansee ifpdistl 3072
	{
		state specialdeath
		// espawn SOUNDMAKER
		// setactorvar[RETURN].peractor1 SOULBOUNCE
		screensound SOULHITDOOR
		spritepal 2
	    spawn BLUDSPLASH
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
		killit
	}
}
else ifvare mtype 1
{
	getplayer[THISACTOR].posx x
	getplayer[THISACTOR].posy y
	getplayer[THISACTOR].posz z
	updatesectorz x y z mysector
	ifvarn mysector -1 changespritesect THISACTOR mysector
	setsprite THISACTOR x y z
	state specialdeath
	// espawn SOUNDMAKER
	// setactorvar[RETURN].peractor1 SOULBOUNCE
	screensound SOULHITDOOR
	spritepal 2
    spawn BLUDSPLASH
    spawn BLOODCLOUD
    spawn BLOODCLOUD
    spawn BLOODCLOUD
    spawn BLOODCLOUD
    spawn BLOODCLOUD
    spawn BLOODCLOUD
    spawn BLOODCLOUD
	killit
}

state soulabsorb

  ifpdistl 5120 // 4096 
    // ifp pfacing
      ifactioncount 6
	    ifvare peractor1 0
	    	ifai AIBALLI	
	    	  ifcansee
	{
		setvar peractor1 1
		// userquote 129
		ai AISOULFOLLOW
		sound SOULFOLLOW
		resetactioncount
		break
	}

ifhitweapon
{
  setvar peractor1 2
  strength 0
  ai AIBALL1
  sound SOULBOUNCE
}
else
// ifvarl command 2
ifvare peractor1 1
{
	addvar countvarb 1
	ifvarg countvarb 19
	{
		setvar countvarb 0
		headspritestat initx 1
		whilevarn initx -1
		{
			ifvare sprite[initx].picnum MONSOUL
			ifvarvarn initx THISACTOR
			ifge actorvar[initx].command command
			{
				dist xydist THISACTOR initx
				ifvarl xydist 1024
				{
					add command actorvar[initx].command
					setactorvar[initx].command command
					setactorvar[initx].peractor1 1
					add gold actorvar[initx].gold
					setav[initx].gold gold
					set gold 0
					getactor[initx].xrepeat x
					add x 4
					setactor[initx].xrepeat x
					getactor[initx].yrepeat y
					add y 4
					setactor[initx].yrepeat y
					
					screensound SOULHITDOOR
				    spawn BLOODCLOUD
				    spawn BLOODCLOUD
				    spawn BLOODCLOUD
				    spawn BLOODCLOUD
				    spawn BLOODCLOUD
				    spawn BLOODCLOUD
				    setvar weap 66666
				}
			}
			nextspritestat initx initx
			ife weap 66666 set initx -1
		}
		ifvare weap 66666 killit
	}
}

ifvare peractor1 1
{
	ifvarand fintips2 16 nullop else
	{
		setvar currtip2 16 setvar currtip 0
		orvar fintips2 16
		state inithelp
	}
	state soulfollowstate
	break 
}
fall


ifai AIBALLI
{
  
  ifpdistl 3072 
  {
	  iffloordistl 16 { ifmove BALL8 move BALL0 faceplayer getv } else
	  ifmove BALL0 move BALL8 faceplayer getv
  }
  else ifcount 6
  {
	  iffloordistl 16 { ifmove BALL8 move BALL0 geth getv faceplayerslow } else
  	  ifmove BALL0 move BALL8 geth getv faceplayerslow
  }
  
}

ifai AIBALL1
{
  spawn SMALLSMOKE
  ifcount 12
    {
    ai AIBALL2
    }
  ifnotmoving
    {
    ai AIBALLRANDOM
    ai AIBALL1
    count 12
    }
}

ifai AIBALL2
{
  ifrnd 128 spawn SMALLSMOKE
  iffloordistl 1
    {
    ai AIBALL3
    sound SOULBOUNCE
    }
  ifnotmoving
    {
    ai AIBALLRANDOM
    ai AIBALL2
    count 12
    }
}

ifai AIBALL3
{
  ifcount 12
    {
    ai AIBALL4
    }
  ifnotmoving
    {
    ai AIBALLRANDOM
    ai AIBALL3
    count 12
    }
}

ifai AIBALL4
{
  iffloordistl 1
    {
    ai AIBALL5
    sound SOULBOUNCE
    }
  ifnotmoving
    {
    ai AIBALLRANDOM
    ai AIBALL4
    }

}

ifai AIBALL5
{
  ifcount 12
    {
    ai AIBALL6
    break
    }
  ifnotmoving
    {
    ai AIBALLRANDOM
    ai AIBALL5
    count 12
    }
}

ifai AIBALL6
{
  iffloordistl 1
    	ai AIBALLR
  
  ifnotmoving
    {
    	ai AIBALLRANDOM
    	ai AIBALL6
    }
}

ifai AIBALLR
{
  ifcount 8
    {
    	ai AISOULFOLLOW
		sound SOULFOLLOW
    	setvar peractor1 1
    }
  ifnotmoving
    {
    	ai AIBALLRANDOM
    	ai AIBALLR
    }
}

ifonwater iffloordistl 16
{
	ifmove FOLLOW2 nullop else
	move FOLLOW2 geth getv
} 
else 
iffloordistl 32 nullop
else
ifmove FOLLOW2 
{
	ai AIBALLI
	ifvare peractor1 2 setvar peractor1 1
}

ends

// command == 1 small
// goes up by numbers when they combine
spritenoshade MONSOUL
useractor notenemy MONSOUL 0 BBI state monsoulcode enda

state mapcode
cstat 32800
ifcount 1 killit
getplayer[THISACTOR].zoom temp
ifvarg temp 1024 setvar temp 1024
setvar tempb 1024
subvarvar tempb temp
shiftvarr tempb 2
ifactor SOULDOORMAP addvar tempb 10 else
addvar tempb 40
ifvarg tempb 255 setvar tempb 255
setactor[THISACTOR].xrepeat tempb
setactor[THISACTOR].yrepeat tempb
ends

useractor notenemy MONSOULMAP 0
state mapcode
enda

useractor notenemy SOULDOORMAP 0
state mapcode
enda

state spawnrain

ifspritepal 1 cactor 2000
ifspritepal 2 cactor 2001
ifspritepal 4 cactor 2002
ifspritepal 6 cactor 2003
ifspritepal 7 cactor 2004
ifspritepal 8 cactor 2005
ifspritepal 10 cactor 2006
ifspritepal 12 cactor 2007
ifspritepal 13 cactor 2008
ifspritepal 14 cactor 2009
ifspritepal 16 cactor 2010
ifspritepal 17 cactor 2011
ifspritepal 21 cactor 2012
ifspritepal 23 cactor 2013
spawn RAINDROP
cactor RAINMAKER

ends

useractor notenemy RAINMAKER 0
cstat 32768
ifmultiplayer
{
	ifcount 2
	{
		state spawnrain
		resetcount
	}
}
else state spawnrain

enda

actor FLIES 0

ifmove 0
{
	move INIT
	ifvarn myspawner -1
	{
		cstat 32768
		sizeat 32 32
		ifvarn myspawner -1
		{
			getactor[myspawner].picnum mtype
			ifrnd 128 killit
		}
		else setvar mtype -1
		randvar countvar 390
	}
	else
	cstat 0
}
		


ifhitweapon 
{
	ifwasweapon RADIUSEXPLOSION
	killit
	strength 0
}
ifvarn myspawner -1
{
	ifvare sprite[myspawner].statnum 1024 killit
	ifvarvarn sprite[myspawner].picnum mtype killit
	addvar countvar 1
	ifvarg countvar 1560
	{
		cstat 0
		ifpdistl 6144
		soundonce FLIESND
	}
}
else
ifpdistl 6144
soundonce FLIESND
enda

move STEALTHRAIN 256
action RAINSPLASH -956 9 1 1 3

useractor notenemy RAINDROP 0

ifmove 0
{
	move STEALTHRAIN randomangle
	cstat 32768
	ifspawnedby 2000 spritepal 1
	ifspawnedby 2001 spritepal 2
	ifspawnedby 2002 spritepal 4
	ifspawnedby 2003 spritepal 6
	ifspawnedby 2004 spritepal 7
	ifspawnedby 2005 spritepal 8
	ifspawnedby 2006 spritepal 10
	ifspawnedby 2007 spritepal 12
	ifspawnedby 2008 spritepal 13
	ifspawnedby 2009 spritepal 14
	ifspawnedby 2010 spritepal 16
	ifspawnedby 2011 spritepal 17
	ifspawnedby 2012 spritepal 21
	ifspawnedby 2013 spritepal 23
	
}
ifmove STEALTHRAIN
{
	ifnotmoving move INIT
	ifrnd 8 move INIT
	break
}
fall

ifinwater killit
ifaction 0
{
	action ANULLACTION
	ifoutside nullop else killit
	sizeat 10 15
	cstat 2
}

ifaction ANULLACTION
{
	iffloordistl 2 
	{
		ifvarand sector[].floorstat 1 killit
		action RAINSPLASH 
	}
	else
	ifnotmoving killit
} 
else ifaction RAINSPLASH
	ifactioncount 9 killit

enda

useractor notenemy SNOWMAKER 0

cstat 32768
ifrnd 64
{
	ifspritepal 1 cactor 2000
	ifspritepal 2 cactor 2001
	ifspritepal 4 cactor 2002
	ifspritepal 6 cactor 2003
	ifspritepal 7 cactor 2004
	ifspritepal 8 cactor 2005
	ifspritepal 10 cactor 2006
	ifspritepal 12 cactor 2007
	ifspritepal 13 cactor 2008
	ifspritepal 14 cactor 2009
	ifspritepal 16 cactor 2010
	ifspritepal 17 cactor 2011
	ifspritepal 21 cactor 2012
	ifspritepal 23 cactor 2013
	spawn SNOWFLAKE
	cactor SNOWMAKER
}

enda

move SNOWFALL 16 16
move SNOWFALL2 16 20

useractor notenemy SNOWFLAKE 0

ifmove 0
{
	move STEALTHRAIN randomangle
	cstat 32768
	ifspawnedby 2000 spritepal 1
	ifspawnedby 2001 spritepal 2
	ifspawnedby 2002 spritepal 4
	ifspawnedby 2003 spritepal 6
	ifspawnedby 2004 spritepal 7
	ifspawnedby 2005 spritepal 8
	ifspawnedby 2006 spritepal 10
	ifspawnedby 2007 spritepal 12
	ifspawnedby 2008 spritepal 13
	ifspawnedby 2009 spritepal 14
	ifspawnedby 2010 spritepal 16
	ifspawnedby 2011 spritepal 17
	ifspawnedby 2012 spritepal 21
	ifspawnedby 2013 spritepal 23
}
ifmove STEALTHRAIN
{
	ifnotmoving move INIT
	ifrnd 8 move INIT
	break
}
ifmove INIT
{
	cstat 0
	ifrnd 128
	move SNOWFALL geth getv randomangle
	else move SNOWFALL2 geth getv randomangle
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	ifrnd 64 sizeat 5 5 else
	ifrnd 128
	{
		ifrnd 128 sizeat 5 6 else
		sizeat 6 4
	}
	else
	{
		ifrnd 128 sizeat 3 4 else
		sizeat 4 3
	}
}
fall

ifinwater killit
ifaction 0
{
	action ANULLACTION
	ifoutside nullop else killit
}

ifaction ANULLACTION
{
	iffloordistl 2 killit else
	ifnotmoving killit
}

enda

action RAINFRAME 0 1 1 1 1

action RAINSPLASH2 -983 9 1 1 3

spritenopal RAINSPRITE
spritenopal SNOWSPRITE

useractor notenemy RAINSPRITE 0

fall

ifinwater killit
ifaction 0
{
	ifoutside nullop else killit
	action RAINFRAME
	sizeat 8 15
	setactor[THISACTOR].zvel 2048		
	setactor[THISACTOR].pal rainpal
	ifvarand raincstat 512 cstator 514 else
	ifvarand raincstat 2 cstator 2
	seta[].blend waterblend
	ife waterblend 1
	{
		cstator 2
		geta[].htflags temp
		orvar temp 4
		seta[].htflags 4
		seta[].shade 0
	}
	ifg sprite[].pal 9
	{
		geta[].htflags temp
		orvar temp 4
		seta[].htflags temp
		seta[].shade -100
	}
}

ifaction RAINFRAME
{
	sizeto 8 42
	iffloordistl 2 
	{
		ifvarand sector[].floorstat 1 killit
		action RAINSPLASH2
	}
	else
	ifnotmoving action RAINSPLASH2
} else

ifaction RAINSPLASH2
{
	sizeat 16 16
	ifactioncount 9 killit
}

enda

useractor notenemy SNOWSPRITE 0

ifinwater killit
ifmove 0
{
	ifoutside nullop else killit
	getactor[THISACTOR].z z
	ifrnd 128
	move SNOWFALL geth getv randomangle
	else move SNOWFALL2 geth getv randomangle
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	randvar x 3 addvar x 3
	randvar y 3 addvar y 3
	setactor[THISACTOR].xrepeat x
	setactor[THISACTOR].yrepeat y
	setactor[THISACTOR].pal rainpal
	ifvarand raincstat 512 cstator 514 else
	ifvarand raincstat 2 cstator 2
}

	fall
	ifnotmoving killit
	iffloordistl 4 killit
	ifvarvarg sprite[THISACTOR].z player[THISACTOR].posz
	ifpdistg 16384 killit

enda

useractor notenemy GHOSTTRAIL 0

ifmove 0
{
	cstat 2
	ifrnd 128
	move SNOWFALL geth getv randomangle
	else move SNOWFALL2 geth getv randomangle
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	ifrnd 64 sizeat 20 20 else
	ifrnd 128
	{
		ifrnd 128 sizeat 20 24 else
		sizeat 24 16
	}
	else
	{
		ifrnd 128 sizeat 12 16 else
		sizeat 16 12
	}
	spritepal 2
}
fall

ifcount 32 killit
ifspritepal 6 getlastpal else spritepal 6

enda

spritenoshade DEADLYEYE
useractor notenemy DEADLYEYE 0

ifmove 0
{
	sizeat 6 6
	cstat 272
	move STOPPED
	action ANULLACTION
	setvar weap 2
	ife ammo 0 set ammo 10
	// setvar ammo 10
	// ifl eyeballammo 100
	// { set ammo eyeballammo div ammo 10 ifl ammo 1 set ammo 1 }
}


addvar weap 1
set temp NO
ifvarg slowtime 0 set temp YES
else ifvarand pow 32768 set temp YES
ife temp YES addvar weap 1
ifvarg weap 19 // 2
{
	headspritestat target 1
	whilevarn target -1
	{
		getactor[THISACTOR].ang peractor1
		setvar temp 0
		getactor[target].picnum picnum

		ifvare actorvar[target].monstatus 1
		ifvare sprite[target].statnum 1 
		ifvare actorvar[target].cursed 0
		setvar temp 1
		// next code will always be false because only statnum 1 is checked
		// update this if netcode is fixed
		ifmultiplayer
		ifvarn COOP YES
		ifvare sprite[target].statnum 10
		setvar temp 1
		ifvare temp 1
		{
			ldist xydist THISACTOR target
			ifvarl xydist 16384
			{
				// now check visibility
				canseespr THISACTOR target temp
				ife temp YES
				{
					getactor[target].x mx
					getactor[target].y my
					getactor[THISACTOR].x x
					getactor[THISACTOR].y y
					subvarvar mx x
					subvarvar my y
					getangle angvar mx my
					getincangle tempc angvar peractor1
					ifvarl tempc 0 mulvar tempc -1
					setvar tempd 262144
					divvarvar tempd xydist
					ifvarl tempd 48 setvar tempd 48
					ifvarvarl tempc tempd
					{
/*							
						espawn LSTRIKE
						setactor[RETURN].pal 21
						getactor[countvar].htextra tempb
						addvar tempb 20
						ifvarvare countvar bossid shiftvarr tempb 1
						setactor[countvar].htextra tempb
						setactor[countvar].htpicnum RPG
						ifvarn myspawner -1 ifmultiplayer
						setactor[countvar].htowner myspawner
						else
						setactor[countvar].htowner player[THISACTOR].i
						setactor[countvar].htang angvar
						getactor[countvar].x mx
						getactor[countvar].y my
						getactor[countvar].z mz
						setsprite RETURN mx my mz
						updatesectorz mx my mz tempc
						ifvarn tempc -1 changespritesect RETURN tempc
						espawn LIGHTNINGAURA
						setactor[RETURN].pal 2
						setsprite RETURN mx my mz
						ifvarn tempc -1 changespritesect RETURN tempc	
*/						
						screensound SHOCKFIRE
						state hitscan_targetprep
						seta[].ang angvar
						zshoot zdist SHOCKBEAM
						seta[].ang peractor1
						subvar ammo 1
						spritepal 33
						seta[].shade -127
						setvar weap 0
					}
				}
			}
				
		}
		nextspritestat target target
		ife weap 0 set target -1
	}
}
else { spritepal 0 seta[].shade 0 }
ifvarl ammo 1 killit
else
ifcount 10
ifp palive
ifhitspace
ifp pfacing
ifpdistl 1280
ifcansee
ifl player[].ammo_amount 8 player[].max_ammo_amount 8
{
	mul ammo 10 add eyeballammo ammo
	
	set temp player[].max_ammo_amount 8
	mul temp 100
	
	ifg eyeballammo temp set eyeballammo temp
	
	set temp eyeballammo
	div temp 100
	add temp 1
	setp[].ammo_amount 8 temp
	
	globalsound DUKE_GET
    palfrom 16 0 32
	killit
}

geta[].htextra temp
ifhitweapon
{
	strength 0
	sound SQUISHED
	guts JIBS6 3
	div temp 20
	ife temp 0 set temp 1
	sub ammo temp
	ifl ammo 1
	{
		guts JIBS6 6
		state aimjib
		ezshoot zdist JIBSPROJ3
		state setjib
		state aimjib
		ezshoot zdist JIBSPROJ3
		state setjib
		killit
	}
	
}

enda

spritenoshade LSTRIKE
useractor notenemy LSTRIKE 0

ifmove 0
{
	setactor[THISACTOR].shade -127
	move INIT
	sizeat 32 255
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	cstator 130 //128
	seta[].blend 1
	randvar temp 4
	ifvare temp 0 sound LIGHTN1 else
	ifvare temp 1 sound LIGHTN2 else
	ifvare temp 2 sound LIGHTN3 else
	ifvare temp 3 sound LIGHTN4 else
	ifvare temp 4 sound LGTNSND
	flash
}
getactor[THISACTOR].x x
getactor[THISACTOR].y y
randvar temp 256
ifrnd 128 addvarvar x temp else subvarvar x temp
randvar temp 256
ifrnd 128 addvarvar y temp else subvarvar y temp
setactor[THISACTOR].x x
setactor[THISACTOR].y y

ifcount 3 
{
	getactor[THISACTOR].pal pal
	espawn SPARKER
	setactor[RETURN].pal pal
	espawn SPARKER
	setactor[RETURN].pal pal
	killit
}


enda

useractor notenemy EYEBLAST 0

ifmove 0
{
	move INIT
	sizeat 18 24
	cstator 128
	ifvare mtype 1 
	cstator 16
	else cstator 32
	getactor[THISACTOR].ang peractor1
	setvarvar weap peractor1
	addvar peractor1 512
	setactor[THISACTOR].ang peractor1
}
cos xvel weap
sin yvel weap
divvar xvel 15
divvar yvel 15
//shiftvarr xvel 4
//shiftvarr yvel 4
movesprite THISACTOR xvel yvel 0 CLIPMASK0 RETURN
ifvarn RETURN 0
{
	hitradius 1024 16 16 16 16
	spawn SHOTSPARK2
	killit
	resetcount
	break
}

enda

action EYEBLAST2FRAMES -2 9 1 1 8

useractor notenemy EYEBLAST2 0 EYEBLAST2FRAMES

ifmove 0
{
	move INIT
	sizeat 24 24
	getactor[THISACTOR].ang peractor1
	setvarvar weap peractor1
}
sizeto 64 64
cos xvel weap
sin yvel weap
shiftvarr xvel 5
shiftvarr yvel 5
movesprite THISACTOR xvel yvel 0 CLIPMASK0 RETURN
ifactioncount 16 killit

cstat 146
ifrnd 128 cstator 4
ifrnd 128 cstator 8
ifspritepal 6 spritepal 0 else spritepal 6

enda

state townie_randpal

rand temp 9
switch temp
	case 0 spritepal 0 break
	case 1 spritepal 10 break
	case 2 spritepal 11 break
	case 3 spritepal 12 break
	case 4 spritepal 13 break
	case 5 spritepal 14 break
	case 6 spritepal 15 break
	case 7 spritepal 16 break
	case 8 spritepal 18 break
	case 9 spritepal 21 break
endswitch

ends

action TOWNIEWALK 0 4 5 1 16
action TOWNIERUN 0 4 5 1 10
action TOWNIETALKMAN 120 1 5 1 50
action TOWNIETALK 107 1 5 1 50
action ATOWNIE1DIE 125 4 1 1 18
action ATOWNIE1DEAD 129 1 1 1 10

action ATOWNIE2DIE 112 4 1 1 18
action ATOWNIE2DEAD 116 1 1 1 10

move TOWNIEWALKVEL 80
move TOWNIERUNVEL 144

ai AITOWNIEWANDER TOWNIEWALK TOWNIEWALKVEL geth
ai AITOWNIEFOLLOW TOWNIERUN TOWNIERUNVEL seekplayer
ai AITOWNIEPANIC TOWNIERUN TOWNIERUNVEL randomangle
ai AITOWNIETALK TOWNIETALK STOPPED faceplayer
ai AITOWNIEDIE ATOWNIE1DIE STOPPED geth

eventloadactor TOWNIE1
sizeat 27 24
state townie_randpal
enda

eventloadactor TOWNIE2
sizeat 27 24
state townie_randpal
enda

state towniedirection

	set countvar 0
	geta[].z z
	sub z 4096
	whilevarn countvar 32
	{
		rand angvar 2047
		seta[].ang angvar
		
		cos mycos sprite[].ang
		sin mysin sprite[].ang
		hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz 16777281
		
		set xydist sprite[].x
		sub xydist hitx
		mul xydist xydist
		set my sprite[].y
		sub my hity
		mul my my
		add xydist my
		sqrt xydist xydist
		add countvar 1
		ifg xydist 8192 set countvar 32
	}
	

ends

state resettownie

	ifcount 150
	{
		ai AITOWNIEWANDER
		state towniedirection
		sizeat 27 24
		cstat 257
		setvar monstatus 3
		strength 100
		setsprite THISACTOR initx inity initz
	}

ends

state towniediestate

	set temp NO
	ifaction ATOWNIE1DEAD set temp YES
	ifaction ATOWNIE2DEAD set temp YES
	ife temp YES
	{
		ifhitweapon { state standard_jibs cstat 32768 move INIT break }
		strength 0
		ifcount 300 { cstat 32768 move INIT }
		break
	}
	
	ifactioncount 4
	{
		ifactor TOWNIE2 action ATOWNIE2DEAD else
		action ATOWNIE1DEAD
		cstat 0
	}

ends

/*
state findtownpath

ifvare towntrails[0] -1 { quote 633 setvar target -1 break }

ifvarn towntrails[0] -1
{
	setvarvar spriteid towntrails[countvar]
	ifvare spriteid -1 { setvar countvar 0 setvarvar spriteid towntrails[countvar] }
	
	getactor[THISACTOR].z z
	subvar z 8192
	setactor[THISACTOR].z z
	
	setvar temp 0
	whilevarn temp 12
	{
		setarray temparray[temp] -1
		addvar temp 1
	}
	
	setvar peractor1 0
	setvar tempb 0 // temp targets found
	setvar tempd 20480 // shortest distance
	setvar tempe 0 // position of shortest distance
	whilevarn peractor1 10
	{
		addvar countvar 1
		canseespr THISACTOR spriteid temp
		ifvare temp 0
		{
			setvarvar spriteid towntrails[countvar]
			ifvare spriteid -1 { setvar countvar 0 setvarvar spriteid towntrails[countvar] }
		}
		else
		{
			dist xydist2 THISACTOR spriteid
			ifvarg xydist2 20480
			{
				setvarvar spriteid towntrails[countvar]
				ifvare spriteid -1 { setvar countvar 0 setvarvar spriteid towntrails[countvar] }	
			}
			else
			ifvarvarn spriteid target
			ifvarvarn spriteid target2
			{
				ifvarvarl xydist2 tempd
				{
					setvarvar tempd xydist2
					setvarvar tempe tempb
				}
				setarray temparray[tempb] spriteid
				addvar tempb 1
			}
		}
		addvar peractor1 1
	}
	addvar z 8192
	setactor[THISACTOR].z z
	
	ifvare tempb 0 setvar spriteid -1
	else ifvare tempb 1 setvarvar spriteid temparray[0]
	else
	{
		ifrnd 128 setvarvar spriteid temparray[tempe]
		else
		{
			subvar tempb 1
			randvarvar temp tempb
			setvarvar spriteid temparray[temp]
		}
	}
	
}

ifvare spriteid -1 
{
	ifvarn target -1
	{
		setvarvar target2 target setvar target -1 
	}
	break 
}

ifvarn spriteid -1
	ifvarvarn spriteid target // redundant checks but harmless
	ifvarvarn spriteid target2
{
	ifvarn target -1 setvarvar target2 target
	setvarvar target spriteid
	break
}

ifvarn target -1
ifvarl xydist 384
{
	setvarvar target2 target
	setvar target -1
}

ends
*/

state towniewanderstate

/*
ifvare target -1 
{
	state findtownpath
	ifvarn target -1
	{
		setvar countvarb 0
		getactor[target].x mx
		getactor[target].y my
		subvarvar mx sprite[THISACTOR].x
		subvarvar my sprite[THISACTOR].y
		getangle angvar mx my
		setactor[THISACTOR].ang angvar
	}
	else
	{
		addvar countvarb 1
		ifvarg countvarb 900
		ifvarn towntrails[countvar] -1
		{
			setvarvar temp towntrails[countvar]
			getplayer[THISACTOR].i spriteid
			canseespr spriteid temp tempb
			ifvare tempb 0
			{
				setsprite THISACTOR sprite[temp].x sprite[temp].y sprite[temp].z
				fall fall
			}
		}
	}
}
else
{
	ldist xydist THISACTOR target
	ifvarl xydist 384
	{
		state findtownpath
	}
		
	else ifrnd 8
	{
		getactor[target].x mx
		getactor[target].y my
		subvarvar mx sprite[THISACTOR].x
		subvarvar my sprite[THISACTOR].y
		getangle angvar mx my
		setactor[THISACTOR].ang angvar
	}
	ifpdistg 20480
	{
		ifcansee nullop else
		ifrnd 1 state townie_randpal
	}
}
*/
ifpdistg 20480
{
	ifcansee nullop else
	{
		ifrnd 1 
		{
			state townie_randpal
			ifrnd 128 { count 200 state resettownie }
		}
	}
}

ifmove STOPPED
{
	ifcount 20
	{
		move TOWNIEWALKVEL geth
		state towniedirection
		action TOWNIEWALK
	}
	
}
else ifnotmoving ifcount 10 
{
	move STOPPED geth
	action TOWNIETALK
	ifactor TOWNIE1 action TOWNIETALKMAN
}

ends


state towniefollowstate

ends

state towniepanicstate

ifcount 300 ai AITOWNIEWANDER
ifnotmoving move TOWNIERUNVEL randomangle

ends

state townietalkstate

ifcount 60
	ai AITOWNIEWANDER

ends

state towniecode

ifmove INIT { state resettownie break }

ifai 0
{
	ai AITOWNIEWANDER
	state towniedirection
	sizeat 27 24
	cstat 257
	setvar monstatus 3
	geta[].htflags temp
	orvar temp 134227968
	seta[].htflags temp
	geta[].x initx
	geta[].y inity
	geta[].z initz
}
fall

ifai AITOWNIEDIE { state towniediestate break }

ifmove STOPPED nullop else
{
	ifmove TOWNIEWALKVEL nullop else
	ifmove TOWNIERUNVEL nullop else
	{
		// safeguard against corrupted movement
		ai AITOWNIETALK
		ifactor TOWNIE1 action TOWNIETALKMAN
		break
	}
	ifactornotstayput state avoidwater
	ifactornotstayput state avoidcliffs
	ifvarg sprite[THISACTOR].xvel 0
	{
		getactor[THISACTOR].ang angvar
		setvarvar mx sprite[THISACTOR].x
		addvar mx 1024
		rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y angvar xvel yvel
		updatesectorz xvel yvel sprite[THISACTOR].z mysector
		setvar tempd 0
		ifvarn mysector -1
			getsector[mysector].lotag tempd
		
		ifvare tempd 1 // water sector ahead
		{
			getactor[THISACTOR].ang angvar
			addvar angvar 768
			randvar temp 512
			addvarvar angvar temp
			setactor[THISACTOR].ang angvar
			setactor[THISACTOR].xvel 0
		}
		
	}
}

ifai AITOWNIETALK state townietalkstate else
ifai AITOWNIEPANIC state towniepanicstate else
ifp pfacing ifhitspace ifpdistl 1792 ifcansee 
{
	ai AITOWNIETALK
	ifactor TOWNIE1 action TOWNIETALKMAN
}	


ifai AITOWNIEWANDER state towniewanderstate else
ifai AITOWNIEFOLLOW state towniefollowstate

ifhitweapon
{
	ifdead
	{
		ifwasweapon RPG
		{
			state standard_jibs
			cstat 32768 move INIT
		}
		else
		ifwasweapon RADIUSEXPLOSION
		{
			state standard_jibs
			cstat 32768 move INIT
		}
		else
		{
			ai AITOWNIEDIE
			ifactor TOWNIE2 action ATOWNIE2DIE
		}
	}
	else
	{
		ifai AITOWNIEWANDER ai AITOWNIEPANIC
		ifai AITOWNIEPANIC resetcount
	}
}

ends

useractor notenemy TOWNIE1 100 state towniecode enda

useractor notenemy TOWNIE2 100 state towniecode enda

action HAMMERDOWN 0 5 1 1 10
action HAMMERUP 2 3 1 -1 14
useractor notenemy SMITHSPRITE

ifaction 0 action HAMMERDOWN
ifaction HAMMERDOWN 
{
	ifactioncount 3 soundonce BLACKSMITH
	ifactioncount 5 action HAMMERUP
}
ifaction HAMMERUP ifactioncount 3 action HAMMERDOWN
enda

action NPCWALK 0 4 5 1 20
action NPCRUN 0 4 5 1 14
action NPCSTAND 20 1 5 1 10
action NPCSHOOT 20 5 5 1 20
action NPCSHOOTING 30 1 5 1 20
action NPCFLINCH 45 1 5 1 20

move NPCFLOATUPVEL 80 -48
move NPCFLOATDOWNVEL 80 16 // 32
move NPCWALKVEL 96
move NPCRUNVEL 160

ai AINPCFACEPLAYER NPCWALK NPCWALKVEL faceplayer
ai AINPCSEEKENEMY NPCWALK NPCWALKVEL seekplayer faceplayerslow
ai AINPCSHOOT NPCSHOOT STOPPED geth
ai AINPCHEAL NPCSHOOT STOPPED faceplayer
ai AINPCWANDER NPCWALK NPCWALKVEL randomangle
ai AINPCWAIT NPCSTAND STOPPED geth
ai AINPCLEVITATE NPCSTAND NPCFLOATUPVEL faceplayerslow getv
ai AIAXONSCRIPT1 NPCSHOOTING STOPPED faceplayer

state axonscript

ifvarn cutscene 0 { resetcount break }
ifcount 120
{
	ai AINPCSEEKENEMY	
 	ifvarand fintips 128 nullop else
	ifvarg combo 9
	{
		setvar currtip2 0 setvar currtip 128
		orvar fintips 128
		state inithelp
	}
	
	ifvarand axquotes 1 nullop else
	{
		globalsound AXIMAXON
		orvar axquotes 1
		setvar countvarb -30 // axquote counter
		set subtitle_time 190
		set subtitle_start 2000
		set subtitle_numlines 2
	}
}
ends

defstate axonstayclose
ifvare peractor1 0
ifpdistg 12288
ifcount 60
{
	spawn DIAMONDPORT
	setsprite THISACTOR player[THISACTOR].posx player[THISACTOR].posy sprite[player[].i].z
	sound TELEPORTER
	spawn DIAMONDPORT
	resetcount
}
ends

state axonlevitate

spawn SPEEDAURA

ifmove NPCFLOATUPVEL
{
	ifp phigher resetcount else 
		ifg sprite[player[].i].z sprite[].z 
	ifcount 20 
			move NPCFLOATDOWNVEL faceplayerslow getv
	ifceilingdistl 48 move NPCFLOATDOWNVEL faceplayerslow getv
	ifcount 260 move NPCFLOATDOWNVEL faceplayerslow getv
}
else 
{
	ifcount 32
	{
		ifvarand sector[].floorstat 1
		{
			ifp phigher move NPCFLOATUPVEL faceplayerslow getv
		}
		else
		iffloordistl 16 ai AINPCSEEKENEMY else
		ifcount 260 ai AINPCSEEKENEMY else
		ifp phigher move NPCFLOATUPVEL faceplayerslow getv
	}
	ifg sprite[player[].i].z sprite[].z movesprite THISACTOR 0 0 512 CLIPMASK0 RETURN
}

ifpdistg 10240
{
	ifnotmoving ifcount 20 
	{
		ifcansee
		state portforward 
		else
		{
			spawn DIAMONDPORT
			setsprite THISACTOR player[THISACTOR].posx player[THISACTOR].posy sprite[player[].i].z
			sound TELEPORTER
			spawn DIAMONDPORT
		}
		resetcount
	}
	else state axonstayclose
}


ends

state axonfaceplayer

ifmove NPCWALKVEL
ifpdistg 6144
{
	action NPCRUN
	move NPCRUNVEL faceplayer
}
else ifmove NPCRUNVEL
ifpdistl 4096
{
	action NPCWALK
	move NPCWALKVEL faceplayer
}

ifpdistl 2560 ai AINPCWAIT else
ifnotmoving ifcount 20 
{
	ifp phigher ai AINPCLEVITATE else
	ai AINPCSEEKENEMY
	ifcansee
	state portforward 
	else
	{
		spawn DIAMONDPORT
		setsprite THISACTOR player[THISACTOR].posx player[THISACTOR].posy sprite[player[].i].z
		sound TELEPORTER
		spawn DIAMONDPORT
	}
}
else
ifcount 780 ai AINPCSEEKENEMY else
ifcount 32 ifvare tempd NO ai AINPCSEEKENEMY else
ifcount 52 ifp phigher ifrnd 8 ai AINPCLEVITATE
ifvarg sprite[THISACTOR].zvel 1024 ai AINPCLEVITATE

state axonstayclose

ends


state axonwait

ifpdistg 4096 ai AINPCSEEKENEMY
ifrnd 4 state facetarget

ifvare peractor1 1 break // peractor1 1 means spawned by POW


ifvarg gold 0
// ifvarand fintips 8
ifvarand axquotes 16
ifvarg countvarb 30
ife subtitle_time 0
{
	ifvarg gold 0
	{
		whilevarn gold 0
		{
			ifvarg gold 14
			{
				ifrnd 128 spawn BIGGOLD else
				{
					ifrnd 128 { spawn MEDIUMGOLD spawn SMALLGOLD } else
					{ spawn SMALLGOLD spawn SMALLGOLD spawn SMALLGOLD }
				}
				subvar gold 15
			} else
			ifvarg gold 9
			{
				ifrnd 128 spawn MEDIUMGOLD else
				{ spawn SMALLGOLD spawn SMALLGOLD }
				subvar gold 10
			}
			else
			ifvarg gold 4
			{
				spawn SMALLGOLD
				subvar gold 5
			}
			else
			{
				spawn SMALLGOLD
				// it's impossible to make small change
				setvar gold 0
			}
		}
		setvar gold -1
	}
	globalsound AXGIFT
	orvar axquotes 1024
	set subtitle_start 2015
	set subtitle_numlines 1
	set subtitle_time 90
	espawn GEMSPRITE
	setactor[RETURN].pal 23
	espawn GEMSPRITE
	setactor[RETURN].pal 18
	espawn GEMSPRITE
	set activator 1901
	state activatorstate
	set activator 0
	// spawn KEY
}

ends

state axonseek

ifnotmoving ifcount 52 
{ 
	ifcansee
	state portforward 
	else
	{
		spawn DIAMONDPORT
		setsprite THISACTOR player[THISACTOR].posx player[THISACTOR].posy sprite[player[].i].z
		sound TELEPORTER
		spawn DIAMONDPORT
	}
	resetcount 
}

state axonstayclose

ifmove NPCWALKVEL
ifpdistg 6144
{
	action NPCRUN
	move NPCRUNVEL seekplayer faceplayerslow
}
else ifmove NPCRUNVEL
ifpdistl 4096
{
	action NPCWALK
	move NPCWALKVEL seekplayer faceplayerslow
}

ifcount 32
ifpdistl 6144 ifvare tempd YES ifvare tempe YES ai AINPCFACEPLAYER else
ifpdistl 3072 ai AINPCWAIT else
ifcount 78 ai AINPCFACEPLAYER
ifvarg sprite[THISACTOR].zvel 1024 ai AINPCLEVITATE

ends

state axonheal

ifvarand axquotes 64 nullop else
ifp palive nullop else
ife tablets 0
{
	setp[].dead_flag 0
	setp[].posx initx
	setp[].posy inity
	setp[].posz initz
	setp[].falling_counter 0
	setp[].poszv 0
	seta[player[].i].x initx
	seta[player[].i].y inity
	seta[player[].i].z initz
	updatesectorz initx initx initz sect
	ifn sect -1 
	{
		setp[].cursectnum sect
		changespritesect player[].i sect
	}
	setav[player[].i].monstatus 777
	addphealth 10
	ife powmode 1 ife powcount 0 set combo 0
}

ifactioncount 4 nullop else
ifactioncount 3
ifphealthl MAXPLAYERHEALTH
ifp palive
{
	
	palfrom 50 52 52 63
	globalsound TELEPORTER
	addphealth 30
	
	setactorvar[player[THISACTOR].i].cursed 0
	setactorvar[player[THISACTOR].i].bleeding 0
	setactorvar[player[THISACTOR].i].burning 0
	setvar ppoison 0
	userquote 408
}
ifactioncount 5 ai AINPCSEEKENEMY

ends

state axonshoot

state npcfacetarget
ifvare target -1 
{ 
	ai AINPCSEEKENEMY 
	break 
}

ifcount 23 nullop else
ifcount 22
{
	ifvarg ammo 399
	{
		state calczdist
		addvar zdist 8192
		ldist xydist THISACTOR target
		shiftvarl zdist 9
		divvarvar zdist xydist
		ezshoot zdist BFGPROJ
		setactor[RETURN].extra 10
		setthisprojectile[RETURN].extra 10
		ife peractor1 1 seta[RETURN].htowner player[].i
		globalsound SHRINKER_FIRE
		setvar ammo 0
	}
	else
	{
		setvar command 6
		globalsound CAT_FIRE
		state calczdist
		ldist xydist THISACTOR target
		mulvar zdist 644
		divvarvar zdist xydist
		whilevarn command 0
		{
			ezshoot zdist FREEZEBLAST
			setactorvar[RETURN].mtype 1
			getactor[THISACTOR].ang angvar
			randvar temp 256
			subvar temp 128
			addvarvar angvar temp
			setactor[RETURN].ang angvar
			setactor[RETURN].pal 23
			ife peractor1 1 seta[RETURN].htowner player[].i
			subvar command 1
		}
	}
	
}
ifactioncount 5 
{
	ai AINPCSEEKENEMY
	setvar target -1
}
ends

eventloadactor AXON
sizeat 24 22
getactor[THISACTOR].lotag activator
setactor[THISACTOR].lotag 0
enda

eventloadactor AXONEFFECTOR

cstat 32768

enda

useractor notenemy AXONEFFECTOR 0

	ife monstatus 2 killit
	
	setvar temp NO
	getplayer[THISACTOR].cursectnum mysector
	ifvarvare mysector sprite[THISACTOR].sectnum
	{
		setvar temp YES
	}
	findplayer xydist
	ifvarl xydist 5120 ifcansee ifp palive setvar temp YES
	
	ifspritepal 2
	ifg peractor1 0
	{
		ifg powcount 0 set mtype 1
		ife mtype 0
		{
			setp[].weapon_pos -9
			setp[].quick_kick 0
		}
		// ife powcount 0 set combo 50
	}
	
			
	ifvare temp YES
	{
		ifspritepal 2
		{
			ife peractor1 0
			{
				setarray powchoices[0] 64
				setarray powchoices[1] 4096
				setarray powchoices[2] 256
				setarray powchoices[3] 524288 
				setvar combo 50
				setvar powcount 0
				setvar pow 0
				globalsound AXTEST
				orvar axquotes 64
				set peractor1 1
				set subtitle_start 2012
				set subtitle_numlines 3
				set subtitle_time 270
			}
			
		}
		ifspritepal 4
		{
			 // globalsound AXLUCK
			 headspritestat spriteid 1
			 whilevarn spriteid -1
			 {
				ife sprite[spriteid].picnum AXONEFFECTOR
				{
					setav[spriteid].monstatus 2
					ife sprite[spriteid].pal 2 setav[spriteid].mtype 1
				}

				ife sprite[spriteid].picnum AXON
					setav[spriteid].monstatus 2
				nextspritestat spriteid spriteid
			 }

			setvar currtip2 128 setvar currtip 0
			orvar fintips2 128
			state inithelp
			setvar helpmenu YES
			setvar newtip NO
			set inputime timer
			add inputime 10
			ifg combo 9 set combo 9
			ifg powcount 2 set powcount 2
			state shufflepowchoices
			setarray powchoices[0] tier1order[tierslot]
			setarray powchoices[1] tier2order[tierslot]
			setarray powchoices[2] tier3order[tierslot]
			setarray powchoices[3] tier4order[tierslot]
			killit
		}
		
	}


enda

useractor notenemy AXON BOSS1PALSTRENGTH

addvar countvarb 1

ifmove 0
{
	setvar monstatus 3
	spriteflags 17
	cstat 256
	sizeat 24 22
	ifvare peractor1 1 
	{
		spritepal 10 ai AINPCSEEKENEMY
	} 
	else
	{
		ifcansee ifpdistl 8192 nullop else break
		ifvare LEVEL 0 
		{
			setvar gold 150
			ai AIAXONSCRIPT1
			quake 78
			getplayer[THISACTOR].posx x
			getplayer[THISACTOR].posy y
			getplayer[THISACTOR].posz z
			set initx x
			set inity y
			set initz z
			addvar z 8192
			espawn WARPARRIVE
			setsprite RETURN x y z
			subvar z 65536
			espawn WARPARRIVE
			setsprite RETURN x y z
			setactorvar[RETURN].mtype 1
			break
		}
		ifvare LEVEL 1 
		{
			setvar countvarb 100
			orvar axquotes 1
			orvar axquotes 2
			orvar axquotes 4
			orvar axquotes 8
			orvar axquotes 16
			orvar axquotes 32
		}
		ifvare LEVEL 24
		{
			setvar countvarb 100
			orvar axquotes 1023
		}
	}
	setvar htg5 0
	getactor[THISACTOR].x mx
	addvar mx 640
	getactor[THISACTOR].z mz
	subvar mz 6144
	whilevarn htg5 2048
	{
		espawn AXONAURA
		rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y htg5 hitx hity
		setsprite RETURN hitx hity mz
		setactorvar[RETURN].peractor1 1
		setactorvar[RETURN].countvar htg5
		setactorvar[RETURN].myspawner THISACTOR
		addvar htg5 512
	}
	set htg5 -1
	
	ai AINPCSEEKENEMY
}

ifvarn peractor1 1
ifvarn activator 0
{
	checkactivatormotion activator
	ifvare RETURN YES
	{
		ifvarand axquotes 256 nullop else
		ifvare LEVEL 1
		{
			globalsound AXLUCK
			setvar countvarb 0
			orvar axquotes 256
			set subtitle_start 2017
			set subtitle_numlines 2
			set subtitle_time 150
		}
	}
}

getactor[THISACTOR].z z
subvar z 8192
setactor[THISACTOR].z z
ifcansee setvar tempd YES else setvar tempd NO
ifcanshoottarget setvar tempe YES else setvar tempe NO
addvar z 8192
setactor[THISACTOR].z z
seta[].htbposz z

fall

ife monstatus 2
{
	getactor[THISACTOR].z z
	subvar z 8192
	setactor[THISACTOR].z z
	espawn TRANSPORTERSTAR
	espawn SOUNDMAKER
	setactorvar[RETURN].peractor1 TELEPORTER
	killit
}

ifvarn peractor1 1
{
	ifai AINPCHEAL nullop else
	ifp palive
	ifpdistl 8192
	ifcansee
	ifphealthl 30
		ai AINPCHEAL
	else
	ifai AINPCSHOOT nullop
	else
	{
		addvar countvar 1
		ifvarg countvar 150 // 12
		{
			setvar countvar 0
			findnearsprite BFGPROJ 16384 spriteid
			ifvare spriteid -1 findnearsprite BFGIMPACT 16384 spriteid
			ifvare spriteid -1
			{
				findnearspritez DETHNITEBONES 16384 81920 target
				// ifn target -1 al target
				// ifvarn target -1 { state checksight al target }
				ifvare target -1
				ifvarn LEVEL 1
				{
					findnearspritez SHOOTME 16384 81920 temp
					ifvarn temp -1 
					{
						getactorvar[temp].myspawner target
						ifvarn target -1 state checksight
					}
				}
			}
			ifvare LEVEL 0 ifvarand axquotes 64 set target -1
			ifvarn target -1
			ai AINPCSHOOT	
			setvar ammo 500
		}
		
	}
}
else
{
	addvar ammo 1
	ifvarand pow 512 nullop else
	{
		getactor[THISACTOR].z z
		subvar z 8192
		setactor[THISACTOR].z z
		espawn TRANSPORTERSTAR
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 TELEPORTER
		set monstatus 2
		killit
	}
	
	
	state targetsearch

	ifai AINPCSHOOT nullop
    else ifvarn target -1
	ai AINPCSHOOT else
	ifpdistg 10240
	{
		spawn DIAMONDPORT
		setsprite THISACTOR player[THISACTOR].posx player[THISACTOR].posy sprite[player[].i].z
		sound TELEPORTER
		spawn DIAMONDPORT
	}
			
	
}

ife LEVEL 0 ifn peractor1 1
{
	ifp palive nullop else
		ai AINPCHEAL
}

ifai AINPCSHOOT state axonshoot else
ifai AINPCFACEPLAYER state axonfaceplayer else
ifai AINPCSEEKENEMY state axonseek else
ifai AINPCWAIT state axonwait else
ifai AINPCLEVITATE state axonlevitate else
ifai AINPCHEAL state axonheal else
ifai AIAXONSCRIPT1 { state axonscript break }

iffloordistl 128 nullop else
ifai AINPCLEVITATE nullop else
ifvarg sprite[THISACTOR].zvel 128
ai AINPCLEVITATE

ifai AINPCLEVITATE nullop else
ifvarand sector[].floorstat 1 ai AINPCLEVITATE


ifvare peractor1 1 break
// scripted quote code, after his introductory quote

ifvarg countvarb 90
ifpdistl 4096 
ife subtitle_time 0
{
	ifvare LEVEL 1
	{
		ifvarand axquotes 512 nullop else
		{
			orvar axquotes 512
			setvar countvarb -130
			globalsound METTLE
			set subtitle_start 2019
			set subtitle_numlines 2
			set subtitle_time 180
			break
		}
	}
		ifvarand axquotes 256
		ifn LEVEL 24
		{
			getactor[THISACTOR].z z
			subvar z 8192
			setactor[THISACTOR].z z
			espawn TRANSPORTERSTAR
			espawn SOUNDMAKER
			setactorvar[RETURN].peractor1 TELEPORTER
			xorvar axquotes 256
			killit
		}
	
	
 	// ifvarl combo 10
 	// {
	 	// ifvarand fintips 8
	 	// {
		 	// ifvarand axquotes 128 nullop else
		 	// {
			 	// globalsound AXELLENT
			 	// orvar axquotes 128
			 	// setvar countvarb 0
			 	// break
		 	// }
	 	// }
	 	// else
	 	// ifvare powcount 0
	 	// ifvare LEVEL 0
	 	// setvar combo 50
 	// }

	 	ifvarand fintips 8
	 	{
		 	ifvarand axquotes 128 nullop else
		 	{
			 	// globalsound AXELLENT
			 	orvar axquotes 128
			 	setvar countvarb 0
			 	break
		 	}
	 	}
		
/*
 	ifvarand axquotes 32
 	{
	 	ifvarand fintips 8 // skip if player has already reached the first chest
	 	{
		 	orvar axquotes 64
		 	setvar countvarb 130
	 	}
	 	else
	 	ifvarand axquotes 64 nullop
	 	else
	 	{
		 	// globalsound AXTEST
		 	orvar axquotes 64
		 	// setvar countvarb -130
	 	}
 	}
 	else
*/
 	ifvarand axquotes 16 
 	{
	 	ifvarand fintips 8 // skip if player has already reached the first chest
	 	{
		 	orvar axquotes 32
		 	setvar countvarb 130
	 	}
	 	else
	 	{
		 	// globalsound AXPOW
		 	orvar axquotes 32
		 	setvar countvarb -150
	 	}
 	}
 	else	
 	ifvarand axquotes 8
 	{
		orvar axquotes 16
		setvar countvarb -150
		
		ife character 1 
		{
			globalsound JEDREWARD 
			set subtitle_start 742
		}
		else
		{
			globalsound AXHORDES
			set subtitle_start 2007
		}
		set subtitle_numlines 2
		set subtitle_time 180
 	}
 	else
 	ifvarand axquotes 4
 	{
	 	globalsound AXSIEGE
	 	orvar axquotes 8
	 	setvar countvarb -60
		set subtitle_start 2005
		set subtitle_numlines 2
		set subtitle_time 210
 	}
 	else
 	ifvarand axquotes 2
 	{
		orvar axquotes 4
	 	setvar countvarb -80
		ife character 1 
		{
			globalsound JEDRWORTHY
			set subtitle_start 740
			set subtitle_numlines 2
			set subtitle_time 210
		}
		else
		{
			globalsound AXOBSERVED
			set subtitle_start 2003
			set subtitle_numlines 2
			set subtitle_time 210
		}
 	}
 	else
	ifvarand axquotes 1
	{
		globalsound AXDEEPSPACE 
		orvar axquotes 2 
		setvar countvarb -30
		set subtitle_start 2212
		set subtitle_numlines 2
		set subtitle_time 180
	}
	else
	{
		globalsound AXIMAXON
		orvar axquotes 1
		setvar countvarb -30 // axquote counter
		set subtitle_time 190
		set subtitle_start 2000
		set subtitle_numlines 2
		// ife character 1 orvar axquotes 2
	}
	
	ifcansee nullop else
	ifpdistg 8192
	{
		spawn DIAMONDPORT
		setsprite THISACTOR player[THISACTOR].posx player[THISACTOR].posy sprite[player[].i].z
		sound TELEPORTER
		spawn DIAMONDPORT
	}
		
}

enda

spritenoshade AXONAURA
useractor notenemy AXONAURA 0

seta[].shade -32
ifvare peractor1 0 break
ifl myspawner 0 killit
ifg myspawner 16383 killit
ifvare sprite[myspawner].statnum 1024 killit
ifvarn sprite[myspawner].picnum AXON
ifvarn sprite[myspawner].picnum KHANNAFIGHT
ifvarn sprite[myspawner].picnum KHANNASIPHON
	killit
	
ife actorvar[myspawner].monstatus 2 killit
	
// ifvarand pow 512 nullop else killit

sizeat 32 32
getactor[myspawner].x mx
addvar mx 640
getactor[myspawner].z mz
subvar mz 6144

rotatepoint sprite[myspawner].x sprite[myspawner].y mx sprite[myspawner].y countvar hitx hity
setsprite THISACTOR hitx hity mz

addvar countvar 48

ifvare actorvar[myspawner].target -1
cstat 32768
else
ife sprite[].cstat 32768
cstat 0
enda

eventloadactor MERKATA sizeat 28 26 enda

action AMERKATALK -2  1  1  1  10

state nextmerkataspeech

	ifvarand axquotes 4096 nullop else
	{
		state playerturntome
		setp[].horiz 100
		setp[].jumping_counter 0
		ifpdistg 1280
		{
			cos xvel angvar
			sin yvel angvar
			shiftl yvel 6
			shiftl xvel 6
			setp[].posyv yvel
			setp[].posxv xvel
			
		}
		ife mtype 0 // first batch of lines
		{
			action AMERKATALK
			set mtype 1
			stopsound MERKATA1
			screensound MERKATA2
			screensound MERKATA2
			set subtitle_start 2022
			set subtitle_numlines 4
			set subtitle_time 60
		}
		else
		ife mtype 1
		{
			ifle subtitle_time 30
			{
				set subtitle_time 30
				quote 409
				ifhitspace { stopsound MERKATA2 set subtitle_time 60 add mtype 1 }
			}
		}
		else
		ife mtype 2
		{
			set mtype 3 // second batch of lines
			screensound MERKATA3
			screensound MERKATA3
			set subtitle_start 2026
			set subtitle_numlines 4
			set subtitle_time 60
		}
		else 
		ife mtype 3
		{
			ifle subtitle_time 30
			{
				set subtitle_time 30
				quote 409
				ifhitspace { stopsound MERKATA3 set subtitle_time 60 add mtype 1 }
			}
		}
		else
		ife mtype 4
		{
			set mtype 5 // third batch of lines
			screensound MERKATA4
			screensound MERKATA4
			set subtitle_start 2030
			set subtitle_numlines 8
			set subtitle_time 60
		}
		else
		ife mtype 5
		{
			ifle subtitle_time 30
			{
				set subtitle_time 30
				quote 409
				ifhitspace 
				{ 
					stopsound MERKATA4
					set subtitle_time 0
					orvar axquotes 4096
					set peractor1 1
					action ANULLACTION
					setp[].fta 0
					break
				}
			}
		}
	}
	ifvarand axquotes 4096 nullop else break
	
	ifvarand axquotes 8192 nullop else
	{
		state playerturntome
		setp[].horiz 100
		setp[].jumping_counter 0
		ifpdistg 1280
		{
			cos xvel angvar
			sin yvel angvar
			shiftl yvel 6
			shiftl xvel 6
			setp[].posyv yvel
			setp[].posxv xvel
			
		}
		ife mtype 0 // first batch of lines
		{
			action AMERKATALK
			set mtype 1
			stopsound MERKATA1
			screensound MERKATA5
			screensound MERKATA5
			set subtitle_start 2092
			set subtitle_numlines 4
			set subtitle_time 60
		}
		else
		ife mtype 1
		{
			ifle subtitle_time 30
			{
				set subtitle_time 30
				quote 409
				ifhitspace { stopsound MERKATA5 set subtitle_time 60 add mtype 1 }
			}
		}
		else
		ife mtype 2
		{
			set mtype 3 // second batch of lines
			screensound MERKATA6
			screensound MERKATA6
			set subtitle_start 2096
			set subtitle_numlines 4
			set subtitle_time 60
		}
		else 
		ife mtype 3
		{
			ifle subtitle_time 30
			{
				set subtitle_time 30
				quote 409
				ifhitspace
				{
					stopsound MERKATA6
					set subtitle_time 0
					orvar axquotes 8192
					set peractor1 1
					action ANULLACTION
					setp[].fta 0
					break
				}
			}
		}
	}
	ifvarand axquotes 8192 nullop else break
	
	ifvarand axquotes 16384 nullop else
	{
		state playerturntome
		setp[].horiz 100
		setp[].jumping_counter 0
		ifpdistg 1280
		{
			cos xvel angvar
			sin yvel angvar
			shiftl yvel 6
			shiftl xvel 6
			setp[].posyv yvel
			setp[].posxv xvel
			
		}
		ife mtype 0 // first batch of lines
		{
			action AMERKATALK
			set mtype 1
			stopsound MERKATA1
			screensound MERKATA7
			screensound MERKATA7
			set subtitle_start 2100
			set subtitle_numlines 5
			set subtitle_time 60
		}
		else
		ife mtype 1
		{
			ifle subtitle_time 30
			{
				set subtitle_time 30
				quote 409
				ifhitspace { stopsound MERKATA7 set subtitle_time 60 add mtype 1 }
			}
		}
		else
		ife mtype 2
		{
			set mtype 3 // second batch of lines
			screensound MERKATA8
			screensound MERKATA8
			set subtitle_start 2105
			set subtitle_numlines 5
			set subtitle_time 60
		}
		else 
		ife mtype 3
		{
			ifle subtitle_time 30
			{
				set subtitle_time 30
				quote 409
				ifhitspace
				{
					stopsound MERKATA8
					set subtitle_time 0
					orvar axquotes 16384
					set peractor1 1
					action ANULLACTION
					setp[].fta 0
					break
				}
			}
		}
	}

ends

eventloadactor BUTTFLY sizeat 12 12 cstat 0 enda
eventloadactor FROGGY sizeat 24 24 cstat 0 enda
eventloadactor SQUIRREL sizeat 24 22 cstat 0 enda
eventloadactor CHICKEN sizeat 32 32 cstat 257 enda
eventloadactor SHEEP sizeat 24 24 cstat 257 enda

action ASHEEPWALK  0  4  5  1  12
action ASHEEPRUN   0  4  5  1  6
action ASHEEPEAT  20 2  5  1  50
action ASHEEPDYING 30 4  1  1  18
action ASHEEPDEAD  33

move SHEEPWALKVEL 56
move SHEEPRUNVEL 132

spriteshadow SHEEP
spriteflags SHEEP 4218880

useractor notenemy SHEEP 60 ASHEEPEAT

ifmove 0
{
	spriteflags 1
	cstat 257
	move STOPPED
	clipdist 20
	sizeat 24 24
	set mtype SHEEP1
	ifrnd 84 add mtype 1 else
	ifrnd 128 add mtype 3
}
fall

ifaction ASHEEPDYING
{
	ifactioncount 3 action ASHEEPDEAD
	ifhitweapon { }
	strength 0
	break
}
ifaction ASHEEPDEAD
{
	strength 0
	ifhitweapon { state standard_jibs state randsquishsound killit }
	break
}

ifactornotstayput state avoidwater
ifaction ASHEEPEAT
{
	ifcount 120
	ifrnd 2
	{
		move SHEEPWALKVEL randomangle
		action ASHEEPWALK
		ifrnd 64 soundvar mtype
	}
} else
ifaction ASHEEPWALK
{
	ifrnd 1 soundvar mtype
	ifnotmoving 
	{
		ifrnd 128 move SHEEPWALKVEL furthestdir else
		move SHEEPWALKVEL randomangle
		break
	}
	ifactioncount 4
	ifrnd 1
	{
		move STOPPED geth
		action ASHEEPEAT
	}
} else
ifaction ASHEEPRUN
{
	ifrnd 2 soundvar mtype
	ifnotmoving 
	{
		ifrnd 128 move SHEEPWALKVEL furthestdir else
		move SHEEPWALKVEL randomangle
		break
	}
	ifactioncount 4
	ifrnd 1
	{
		move SHEEPWALKVEL randomangle
		action ASHEEPWALK
	}
	ifcount 15 nullop else ifcount 14
	move SHEEPRUNVEL geth
}

ifhitweapon
{
	sound SHEEP3
	move SHEEPRUNVEL fleeenemy
	action ASHEEPRUN
	ifdead 
	{
		ifrnd 128 cstator 4
		action ASHEEPDYING
		guts JIBS6 4
		move STOPPED
		cstat 0
		ifwasweapon RPG { state standard_jibs state randsquishsound killit }
		ifwasweapon RADIUSEXPLOSION { state standard_jibs state randsquishsound killit }
		break
	}
}
else ifbulletnear
{
	soundvar mtype
	move SHEEPRUNVEL fleeenemy
	action ASHEEPRUN
}

enda

action ACHICKWALK  0  2  5  1  12
action ABIGCHICKWALK  0  2  5  1  18
action ACHICKTRANSFORM  0  1  5  1  10
action ACHICKRUN   0  2  5  1  8
action ACHICKPECK  31 2  5  1  16
action ABIGCHICKPECK1  31 1  5  1  30
action ABIGCHICKPECK2  36 1  5  1  30
action ACHICKROAST 44 1  1  1  1

move CHICKWALKVEL 40
move CHICKRUNVEL 96
move BIGCHICKVEL 288
spriteshadow CHICKEN
useractor notenemy CHICKEN 20 ACHICKPECK

ifmove 0
{
	move STOPPED geth
	sizeat 32 32
	cstat 257
	clipdist 10
	set monstatus 3
}
ifaction ACHICKROAST 
{
	set burning 0
	ifp pshrunk nullop
    else
    ifvare endlevel 0
      ifp palive
        ifpdistl RETRIEVEDISTANCE
		ifl sprite[player[].i].extra player[].max_player_health

	   ifcanseetarget
      {
		ifg chickilled 0
	    sub chickilled 1
		ifspritepal 81 { addphealth 100 quote 699 } else
        addphealth 20  
        globalsound DUKE_GET
		palfrom 16 0 32
		killit
      }
	break
}
fall

ifaction ACHICKTRANSFORM
{
	sizeto 255 255
	sizeto 255 255
	ifge sprite[].xrepeat 254
	{
		sizeat 255 255
		action ABIGCHICKWALK
		move BIGCHICKVEL faceplayerslow
		setvar monstatus 1
		set monid THISACTOR
	}
}
// set cursed 3
ife monstatus 1
state monsterai

ifactornotstayput state avoidwater
ifaction ABIGCHICKWALK
{
	ifactioncount 2 { sound MONSTEP resetactioncount }

	ifcansee
	ifpdistl 2048
	{
		move STOPPED faceplayerslow
		action ABIGCHICKPECK1
	}
}
else
ifaction ABIGCHICKPECK1
{
	ifactioncount 1
	{
		ifg countvar 1
		{
			set countvar 0
			action ABIGCHICKWALK
			move BIGCHICKVEL faceplayerslow
			
		}
		else
		{
			action ABIGCHICKPECK2
			globalsound BIGTHUD
			quake 20
			set mtype 0
			whilevarn mtype 2048
			{
				set mx sprite[].x
				add mx 1560
							
				rotatepoint sprite[].x sprite[].y mx sprite[].y mtype saveit saveit2
				updatesectorz saveit saveit2 sprite[].z sect
				ifn sect -1
				{
					espawn SMALLSMOKE
					setsprite RETURN saveit saveit2 sprite[].z
				}
				add mtype 128
			}
			ifpdistl 4096
			{
				getp[].posz z, sub z 1024 setp[].posz z
				getp[].poszv z, sub z 3072 setp[].poszv z
			}
			ifpdistl 2560
			ifcansee
			{
				seta[player[].i].htextra 25
				seta[player[].i].htpicnum RPG
				seta[player[].i].htowner THISACTOR
				seta[player[].i].htang sprite[].ang
			}
		}
	}
}
else ifaction ABIGCHICKPECK2
{
	ifactioncount 1
	{
		action ABIGCHICKPECK1
		add countvar 1
	}
}
else
ifaction ACHICKPECK
{
	ifcount 20
	ifrnd 4
	{
		move CHICKWALKVEL randomangle
		action ACHICKWALK
		ifrnd 64 sound CHICKENTALK
	}
} else
ifaction ACHICKWALK
{
	ifnotmoving 
	{
		ifrnd 128 move CHICKWALKVEL furthestdir else
		move CHICKWALKVEL randomangle
		break
	}
	ifactioncount 4
	ifrnd 2
	{
		move STOPPED geth
		action ACHICKPECK
	}
} else
ifaction ACHICKRUN
{
	ifrnd 2 sound SQUAWK
	ifnotmoving 
	{
		ifrnd 128 move CHICKWALKVEL furthestdir else
		move CHICKWALKVEL randomangle
		break
	}
	ifactioncount 4
	ifrnd 1
	{
		move CHICKWALKVEL randomangle
		action ACHICKWALK
	}
}

ifhitweapon
{
	sound SQUAWK
	ifspritepal 81 setactorsoundpitch THISACTOR SQUAWK -1024
	spawn FEATHERFALL
	spawn FEATHERFALL
	spawn FEATHERFALL
	spawn FEATHERFALL
	spawn FEATHERFALL
	spawn FEATHERFALL
	ifspritepal 81 guts JIBS6 2
	else
	{
		move CHICKRUNVEL fleeenemy
		action ACHICKRUN
	}
	ifdead 
	{
		ifn sprite[].pal 81 add chickilled 2
		set aura 0
		ifg chickilled 9
		{
			set chickilled 0
			spritepal 81
			clipdist 128
			action ACHICKTRANSFORM
			move STOPPED geth
			strength 3000
			set inithp 3000
			sound ACTOR_GROWING
			break
		}
	
		action ACHICKROAST
		guts JIBS6 4
		move STOPPED
		ifspritepal 81 
		{ 
			sizeat 160 160
			state standard_jibs
			state randsquishsound
			set monstatus 2 sizeat 192 192 
		}
		else
		sizeat 26 26
		cstat 0
		spawn FEATHERFALL
		spawn FEATHERFALL
		spawn FEATHERFALL
		spawn FEATHERFALL
		spawn FEATHERFALL
		spawn FEATHERFALL
	}
}
else ifn sprite[].pal 81 ifbulletnear
{
	move CHICKRUNVEL fleeenemy
	action ACHICKRUN
}

enda 

move FEATHERVEL 32 7
action AFEATHERREST 1

useractor notenemy FEATHERFALL 0
ifmove 0
{
	sizeat 4 4
	ifrnd 128 { cstator 4 set mtype 1 }
	cstat 16
	spriteflags 2048
	geta[].z z
	rand mz 6144
	add mz 4096
	sub z mz
	seta[].z z
	move FEATHERVEL randomangle getv
}
else iffloordistl 1
{
	action AFEATHERREST
	move STOPPED
}

ifmove FEATHERVEL
{
	geta[].ang angvar
	ife mtype 0 sub angvar 512 else
	add angvar 512
	
	set temp player[].player_par
	shiftvarl temp 6
	sin tempb temp
	shiftr tempb 10
	geta[].x mx
	add mx tempb
	rotatepoint sprite[].x sprite[].y mx sprite[].y angvar mx my
	setsprite THISACTOR mx my sprite[].z
	
}

ifaction AFEATHERREST
{
	fall
	geta[].alpha temp
	add temp 1
	seta[].alpha temp
	ifg temp 254 killit
}

enda

action ABUTTFLAP 0 4 5 1 10

move BUTTMOVE1 32 -16
move BUTTMOVE2 32 16

useractor notenemy BUTTFLY 0 ABUTTFLAP

ifmove 0
{
	spriteflags 10256
	cstat 128
	clipdist 1
	sizeat 12 12
	move BUTTMOVE1 geth getv

	getactor[THISACTOR].x initx
	getactor[THISACTOR].y inity
	getactor[THISACTOR].z initz
}

ifcount 52 ifrnd 64
{
	ifpdistl 1560 move BUTTMOVE1 geth getv furthestdir
	else
	iffloordistl 12 move BUTTMOVE1 geth getv randomangle else
	ifceilingdistl 16 move BUTTMOVE2 geth getv randomangle
	else
	ifrnd 128 move BUTTMOVE1 geth getv randomangle 
	else
	move BUTTMOVE2 geth getv randomangle
	ifrnd 128 setvar mtype 1 else setvar mtype 0
}

getactor[THISACTOR].ang angvar
ifvare mtype 0 addvar angvar 16 else subvar angvar 16
setactor[THISACTOR].ang angvar

addvar countvar 1
ifvarg countvar 300
{
	setvar countvar 0
	ifcansee break
	setsprite THISACTOR initx inity initz
}

enda

spriteshadow FROGGY

move FROGJUMPUP 160 -60
move FROGFALL 148
action AFROGSIT  0  1  5  1  10
action AFROGJUMP 5  1  5  1  12
action AFROGFALL 10 1  5  1  10
useractor notenemy FROGGY 0 AFROGSIT

ifmove 0
{
	sizeat 24 24
	cstat 256
	clipdist 8
	spriteflags 2105360
	// spriteflags 136323072
	move STOPPED geth
}
fall

ifaction AFROGSIT
{
	ifcount 31 nullop else
	ifcount 30
	{
		ifrnd 64
		{
			rand angvar 2047
			seta[].ang angvar
		}
	}
	
	ifcount 60
	ifrnd 4
	{
		move FROGJUMPUP geth getv
		action AFROGJUMP
	}
}

ifaction AFROGJUMP
{
	
	ifactioncount 2
	{
		action AFROGFALL
		move FROGFALL geth
	}
}

ifaction AFROGFALL	
{
	ifnotmoving { action AFROGFALL move FROGFALL randomangle }
	iffloordistl 2
	{
		action AFROGSIT
		move STOPPED geth
		ifonwater 
		ife sector[].floorslope 0
		{
			espawn LILYPAD 
			seta[RETURN].xrepeat 20
			seta[RETURN].yrepeat 20
			seta[RETURN].cstat 32
			seta[RETURN].z sector[].floorz
			rand angvar 2048
			seta[RETURN].ang angvar
		}
	}
}

ifhitweapon
{
	sound SQUISHED
	spritepal 8
	guts JIBS6 3
	killit
}

enda

useractor notenemy LILYPAD 0

ifcount 120
{
	geta[].alpha temp
	add temp 1
	seta[].alpha temp
	ifg temp 254 killit
}

enda

action ASQUIRRELSIT  0  1  5  1  10
action ASQUIRRELRUN  5  3  5 1  10
action ASQUIRRELDED  20 1  1  1  1

move SQUIRRELRUNVEL 224
spriteshadow SQUIRREL
useractor notenemy SQUIRREL 0 ASQUIRRELSIT

ifmove 0
{
	sizeat 24 22
	cstat 256
	clipdist 12
	move STOPPED geth
	spriteflags 134225936
}
fall
ifaction ASQUIRRELDED break
ifaction ASQUIRRELSIT
{
	ifcount 61 nullop else
	ifcount 60
	{
		ifrnd 96
		{
			rand angvar 2047
			seta[].ang angvar
		}
	}
	
	ifcount 150
	ifrnd 4
	{
		ifpdistl 1560 move SQUIRRELRUNVEL fleeenemy else
		move SQUIRRELRUNVEL geth
		action ASQUIRRELRUN
	}
	else ifpdistl 2048
	ifrnd 32
	{
		move SQUIRRELRUNVEL fleeenemy
		action ASQUIRRELRUN
	}
}

ifaction ASQUIRRELRUN
{
	ifnotmoving ifcount 4 move SQUIRRELRUNVEL randomangle
	else
	ifpdistl 3072
	{
		ifp pfacing
		{
			ifangdiffl 512 
			{ 
				ifrnd 16 
				{
					move SQUIRRELRUNVEL faceplayerslow 
					set mtype 1 // facing 
				}
			} 
			else
			ifcount 10
			{
				ifrnd 84 move SQUIRRELRUNVEL fleeenemy else
				ifrnd 128 move SQUIRRELRUNVEL furthestdir 
			}
		}
		else
		ife mtype 1
		{
			move SQUIRRELRUNVEL geth
			set mtype 0
		}
	}
	else ifcount 30 ifrnd 8
	{
		action ASQUIRRELSIT
		move STOPPED geth
	}

}
ifactornotstayput state avoidwater

ifhitweapon
ifdead
{
	action ASQUIRRELDED
	move STOPPED
	guts JIBS6 2
}

enda

eventloadactor KITTY geta[].lotag mtype seta[].lotag 0 sizeat 16 16 enda

action AKITTYSIT	0	1	5	1	10
action AKITTYLOAF	5	1	5	1	10
action AKITTYWALK	10	4	5	1	8

move KITTYWALKVEL 64
move KITTYFAST 96

spriteshadow KITTY
useractor notenemy KITTY 1000

	ifmove 0
	{
		spriteflags 8192
		move STOPPED geth
		ife mtype 1 move STOPPED faceplayerslow
		action AKITTYSIT
		sizeat 16 16
		cstat 257
		geta[].x initx
		geta[].y inity
		geta[].z initz
		
		set lotag initx
		set hitag inity
		set ammo initz
	}
	fall
	
	ife mtype 1 
	{
		seta[].x initx
		seta[].y inity
		break
	}
	
	ifmove STOPPED
	{
		ifpdistl 1408
		ifp pfacing
		ifcansee
		ifhitspace
		ifcount 30
		{
			move STOPPED faceplayer
			// purr
			ifrnd 128 action AKITTYSIT else
			action AKITTYLOAF
			
		}
		ifcount 60
		ifrnd 8
		{
			ifrnd 84 move KITTYWALKVEL randomangle
			else ifrnd 128
			move KITTYWALKVEL furthestdir else
			move KITTYWALKVEL faceplayerslow
			action AKITTYWALK
		}
	}
	
	ifmove KITTYWALKVEL
	{
		ifnotmoving
		ifcount 10
		{
			ifcansee nullop else
			ifpdistg 4096 ifrnd 32
			{
				setsprite THISACTOR lotag hitag ammo
				break
			}
			move STOPPED geth
			ifrnd 128 action AKITTYSIT else
			action AKITTYLOAF
		}
		else
		{
			ifcount 90
			ifrnd 8
			{
				ifrnd 84
				{
					move STOPPED geth
					ifrnd 128 action AKITTYSIT else
					action AKITTYLOAF
				}
				else
				{
					ifrnd 84 move KITTYWALKVEL randomangle
					else ifrnd 128
					move KITTYWALKVEL furthestdir else
					move KITTYWALKVEL faceplayerslow
					action AKITTYWALK
				}
			}
		}
	}
	
	ifhitweapon { }
	
	ife sector[].floorpicnum 6911
	{
		setsprite THISACTOR initx inity initz
		ifcount 20
		{
			ifrnd 128
			{
				move STOPPED geth
				action AKITTYLOAF
			}
			else
			{
				geta[].ang angvar
				add angvar 1024
				seta[].ang angvar
			}
		}
	}
	// do not allow move into sector with floorpicnum 6911
	
	
	geta[].x initx
	geta[].y inity
	geta[].z initz
	

enda

useractor notenemy MERKATA 0

ife LEVEL 24 break

ifvarand axquotes 2048 nullop else
{
	ifn shipcam -1
	ifn player[].cursectnum sprite[].sectnum
	{
		orvar axquotes 2048
		screensound MERKATA1
		screensound MERKATA1
		set subtitle_start 2021
		set subtitle_numlines 1
		set subtitle_time 300
		setp[].fta 0
	}
}

ife player[].cursectnum sprite[].sectnum
ife peractor1 0
ifg character -1
{
	// this particular merkata sprite has not made a speech to the player
	state nextmerkataspeech
}

enda

eventloadactor MONPATH
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag hitag
setactor[THISACTOR].hitag 0
getactor[THISACTOR].extra monstflags
ifvare monstflags -1 setvar monstflags 0
cstat 32768

// pal 4 will indicate end of path
// pal 23 is the end of loop

	geta[].z temp
	sub temp 8192
	seta[].z temp
enda

eventloadactor BOSSPATH 
// cstat 2 
cstat 32768
sizeat 32 32 
geta[].z z, sub z 16384, seta[].z z
enda

eventloadactor PATHMANAGER cstat 32768 enda

move TORCHUP 0 -128
eventloadactor 3846
getactor[THISACTOR].lotag temp
ifvare temp 1 cstat 32768
setactor[THISACTOR].lotag 0
enda

useractor notenemy 3846 // SKULL TORCH
ifvare lotag 0 break
ifvare lotag 1 ifcount 20
{ 
	getactor[THISACTOR].pal pal
	espawn 3846
	setactor[RETURN].pal pal
	setactorvar[RETURN].lotag 2
	resetcount 
}
ifvare lotag 2 
{
	ifmove 0
	{
		spriteflags 4
		setactor[THISACTOR].shade -100
		sizeat 36 36
		move TORCHUP getv
	}
	ifcount 104 killit
}
ifvare lotag 3 killit
enda

action WOODBROKE 4 1 1 1 1

move UNBLOCK

state plankcode

ifmove 0
{
	move INIT
	cstator 257
	getactor[THISACTOR].cstat initcstat
	getactor[THISACTOR].ang peractor1
	getactor[THISACTOR].z initz
}
ifvarg burning 0 
{
	ifinwater move BURNING_VELS geth
	soundonce FIRE_CRACKLE
	state imonfire
	addvar burning 2
	ifhitweapon ifdead move BURNING_VELS geth
	ifmove BURNING_VELS
	{
		getactor[THISACTOR].yrepeat y
		subvar y 1
		ifvarl y 2 { espawn BIGSMOKE setactor[RETURN].pal 2 killit }
		setactor[THISACTOR].yrepeat y
	}
	break
}

ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
getactor[THISACTOR].htextra temp
ifvarg temp 0 ifvare sprite[THISACTOR].htpicnum SHOTSPARK1
ifvare gotsaw YES ifvare CURRWEAP 0 ifvarn KICKBACKPIC 0 ifpdistl 3072
{
	getactor[THISACTOR].htowner spriteid
	ifvarn spriteid -1 ifvare sprite[spriteid].picnum APLAYER
	{
		shiftvarl temp 1
		setactor[THISACTOR].htextra temp
	}
}

ifhitweapon 
{
	ifrnd 128 { ifrnd 128 sound BREAKWOOD1 else sound BREAKWOOD2 }
	else { ifrnd 128 sound BREAKWOOD3 else sound BREAKWOOD4 }
	ifdead
	{
		debris SCRAP4 3
		debris SCRAP5 2
		ifaction WOODBROKE { killit break }
		ifactor PLANK3 killit else ifactor PLANK4 killit else
		{
			ifrnd 128 cactor 260 else cactor 261
			
			getactor[THISACTOR].cstat mtype
			ifvarand mtype 256
				subvar mtype 256
			ifvarand mtype 4
				subvar mtype 4
			ifvarand mtype 1
				subvar mtype 1
			setactor[THISACTOR].cstat mtype
			
			action WOODBROKE
			
		}
		strength 0
	}
}

ends

useractor notenemy PLANK1 120 state plankcode enda
useractor notenemy PLANK2 120 state plankcode enda
useractor notenemy PLANK3 120 state plankcode enda
useractor notenemy PLANK4 120 state plankcode enda

useractor notenemy PLATUPSPAWNER 0

cstat 32768
sizeat 2 2

ifcount 130
{
	ifspritepal 1 cactor 2000
	ifspritepal 2 cactor 2001
	spawn PLATUP
	cactor PLATUPSPAWNER
	resetcount
}

enda

move PLATUPVEL 0 -128

useractor notenemy PLATUP 0

ifmove 0
{
	move INIT
	cstat 546
	ifspawnedby 2000 sizeat 48 48 else
	ifspawnedby 2001 sizeat 32 32 else
	sizeat 64 64
	break
}

ifmove INIT
{
	ifcount 6 cstat 35
	ifcount 13
	{
		move PLATUPVEL getv
		cstat 289
	}
	break
}

ifmove PLATUPVEL nullop else move PLATUPVEL getv

ife initz sprite[].z 
{
	add countvar 1 
	ifge countvar 60 killit
}
else set countvar 0

getceilzofslope sprite[].sectnum sprite[].x sprite[].y z
add z 8192

// ifceilingdistl 16
ifle sprite[].z z
{
	addvar countvarb 1
	ifvarg countvarb 300 killit
	getactor[THISACTOR].z z
	subvar z 768
	setactor[THISACTOR].z z
	ifvarvare player[THISACTOR].sbs THISACTOR
		changespritesect THISACTOR player[THISACTOR].cursectnum 
	else
	{
		geta[].sectnum mysector
		updatesectorz sprite[THISACTOR].x sprite[THISACTOR].y sprite[THISACTOR].z mysector
		ifvarn mysector -1 changespritesect THISACTOR mysector else killit
	}
}
else setvar countvarb 0

ifpdistl 20240
{
	addvar countvar 1
	ifvare countvar 2
	{
		spawn PLATSMOKE
		setvar countvar 0
	}
}

set initz sprite[].z
enda

action REDRIFTFRAME -1 1 1 1
action REVERSERIFTFRAME -2 1 1 1 1
useractor notenemy REDRIFT 0 REDRIFTFRAME
ifmove 0
{
	sizeat 96 96
	spritepal 2
	cstat 128
}
move INIT randomangle

ifvarg countvarb 0
{
	subvar countvarb 1
	ifvare countvarb 0 setvar mtype 1
}

ifvare mtype 1
{
	sizeto 0 0
	break
}
else
{
	sizeto 96 96
	sizeto 96 96
}
ifrnd 128
{
	espawn LBOLT
	setactor[RETURN].pal 10
}
else
spawn SPIRITEFFECT



ifvare sprite[THISACTOR].xrepeat 96
ifrnd 16
{
	randvar temp 24
	addvar temp 112
	setactor[THISACTOR].xrepeat temp
	setactor[THISACTOR].yrepeat temp
	ifcansee flash
}
	
soundonce ALIENDRILL
// ifpdistl 2816
// {
// 	getplayer[THISACTOR].i spriteid
// 	getactorvar[spriteid].burning temp
// 	addvar temp 4
// 	setactorvar[spriteid].burning temp
// }

enda

useractor notenemy REVERSERIFT 0 REVERSERIFTFRAME
ifmove 0
{
	sizeat 96 96
	spritepal 2
	cstat 128
	ifpdistg 10240 break
	move INIT
	ifvarn myspawner -1 ifn sprite[myspawner].picnum LUGLORD setactorvar[myspawner].mtype 1
	setvar countvarb 260
}

ifvarg countvarb 0
{
	subvar countvarb 1
	ifvare countvarb 0 setvar mtype 1
}

ifvare mtype 1
{
	sizeto 0 0
	break
}
else
{
	sizeto 96 96
	sizeto 96 96
}

ifrnd 128
{
	espawn LBOLT
	ifn myspawner -1 ife sprite[myspawner].picnum LUGLORD seta[RETURN].pal 23 else
	setactor[RETURN].pal 10
}
else 
{
	getactor[THISACTOR].x x
	randvar angvar 2047
	setvarvar mx x
	randvar temp 8192
	addvar temp 10240
	addvarvar mx temp
	rotatepoint x sprite[].y mx sprite[].y angvar mx my
	updatesectorz mx my sprite[].z tempb
	ifvarn tempb -1
	{
		espawn SPIRITEFFECT
		setsprite RETURN mx my sprite[].z
		setactorvar[RETURN].target THISACTOR
		ifn myspawner -1 ife sprite[myspawner].picnum LUGLORD setav[RETURN].mtype LUGLORD
	}
	else // let's try again with a shorter distance
	{
		getactor[THISACTOR].x x
		setvarvar mx x
		randvar temp 4096
		addvar temp 5120
		addvarvar mx temp
		rotatepoint x sprite[].y mx sprite[].y angvar mx my
		updatesectorz mx my sprite[].z tempb
		ifvarn tempb -1
		{
			espawn SPIRITEFFECT
			setsprite RETURN mx my sprite[].z
			setactorvar[RETURN].target THISACTOR
			ifn myspawner -1 ife sprite[myspawner].picnum LUGLORD setav[RETURN].mtype LUGLORD
		}
	}
}

ifvare sprite[THISACTOR].xrepeat 96
ifrnd 16
{
	randvar temp 24
	addvar temp 112
	setactor[THISACTOR].xrepeat temp
	setactor[THISACTOR].yrepeat temp
	ifcansee flash
}
	
soundonce ALIENDRILL
ifpdistl 2816
{
	getplayer[THISACTOR].i spriteid
	getactorvar[spriteid].burning temp
	addvar temp 4
	setactorvar[spriteid].burning temp
}

enda

useractor notenemy GOODRIFT 0

ifmove 0
{
	sizeat 96 96
	cstat 130
	seta[].blend 1
	seta[].mdflags 16
	move INIT
}

ifpdistl 32768
{
	getactor[].x x
	randvar angvar 2047
	setvarvar mx x
	randvar temp 512
	addvarvar mx temp
	geta[].z saveit, rand mz 20480, sub saveit mz
	rotatepoint x sprite[].y mx sprite[].y angvar mx my
	updatesectorz mx my saveit tempb
	ifvarn tempb -1
	{
		espawn SPIRITEFFECT
		setsprite RETURN mx my saveit
		setav[RETURN].mtype GOODRIFT
	}
}

	randvar temp 52
	addvar temp 108
	setactor[THISACTOR].xrepeat temp
	sub temp 16
	setactor[THISACTOR].yrepeat temp

	
// soundonce ALIENDRILL

enda

action SPIRITFRAME1 0 2 5 1 10 // default
action SPIRITFRAME2 -1639 1 5 1 1 // rage head
action SPIRITFRAME3 2561 2 5 1 12 // ghost
action SPIRITFRAME4 1516 1 5 1 1 // monsoul
action SPIRITFRAME5 -161 1 1 1 1 // upright ghost
action SPIRITFRAME6 2461 4 5 1 12 // wraith
action SPIRITFRAME7 -1873 1  1  1 10 // koraxproj
action SPIRITFRAME8 4838 4 5 1 10	// butterfly
action SPIRITFRAME9 5161 3 5 1 5	// bird flapdown
action SPIRITFRAME9B 5166 2 5 -1 5 // bird flapup
action SPIRITFRAME10 5586 4 5 1 6 // unicorn

move SPIRITVEL0 144
move SPIRITVEL1 192
move SPIRITVEL2 256
move SPIRITVEL3 320
move SPIRITVEL4 384
move SPIRITVEL5 480
useractor notenemy SPIRITEFFECT 0 SPIRITFRAME1
ifmove 0
{
	cstat 2
	spriteflags 2048
	ife mtype LUGLORD
	{
		seta[].blend 1
		
		move SPIRITVEL5 geth
		action SPIRITFRAME7
		rand pal 10 add pal 13 seta[].pal pal
		sizeat 48 48
		break
	}
	ife mtype GOODRIFT
	{
		seta[].blend 1
		cstator 128
		rand pal 10 add pal 13 seta[].pal pal
		ifrnd 148 
		{
			action SPIRITFRAME8
			move SPIRITVEL0 randomangle
			sizeat 16 16
		}
		else ifrnd 224
		{
			action SPIRITFRAME9
			move SPIRITVEL3 randomangle
			sizeat 36 36
		}
		else
		{
			action SPIRITFRAME10
			move SPIRITVEL4 randomangle
			sizeat 32 32
			ifrnd 84 spritepal 0
			cstat 2
			fall fall fall fall
		}
		break
	}
	randvar temp 6
	switch temp
	case 0
	case 1
	move SPIRITVEL3 randomangle
	sizeat 48 48
	break
	case 2
	action SPIRITFRAME2
	move SPIRITVEL2 randomangle
	sizeat 32 32
	spritepal 10
	break
	case 3
	action SPIRITFRAME3
	move SPIRITVEL1 randomangle
	sizeat 40 40
	break
	case 4 // MONSOUL
	action SPIRITFRAME4
	sizeat 40 40
	move SPIRITVEL2 randomangle
	break
	case 5 // 3358

	action SPIRITFRAME5
	move SPIRITVEL0 randomangle
	sizeat 40 40
	break
	case 6 // WRAITH
	action SPIRITFRAME6
	move SPIRITVEL2 randomangle
	sizeat 36 36
	break
	endswitch
	
	randvar initz 1024
	subvar initz 512
	
	randvar dodge 12
	subvar dodge 6
}

getactor[THISACTOR].ang angvar
addvarvar angvar dodge
setactor[THISACTOR].ang angvar

ifcount 6
{
	resetcount
	ifaction SPIRITFRAME5
	{
		ifvare sprite[THISACTOR].cstat 2 cstat 6
		else cstat 2
	}
	ifaction SPIRITFRAME10 fall
	ifrnd 8 mulvar dodge -1
}

ifaction SPIRITFRAME9
{
	ifactioncount 3
	action SPIRITFRAME9B
} else
ifaction SPIRITFRAME9B
{
	ifactioncount 2
	action SPIRITFRAME9
}

movesprite THISACTOR 0 0 initz CLIPMASK0 RETURN
ifnotmoving 
{
	ifvarn target -1
	{
		ifvarn sprite[target].statnum 1 killit
		getactor[THISACTOR].x x
		getactor[target].x mx
		ifvarvarg x mx subvar x 128 else addvar x 128 
		getactor[THISACTOR].y y
		getactor[target].y my
		ifvarvarg y my subvar y 128 else addvar y 128 
		
		updatesectorz x y sprite[].z tempb
		ifvarn tempb -1
			setsprite THISACTOR x y sprite[].z
		else killit

		break
	}
	ife mtype LUGLORD killit
	ife mtype GOODRIFT killit
	ifpdistl 6144
	{
		randvar temp 7
		switch temp
		case 0 setvar tempb SKELPAIN break
		case 1 setvar tempb RESURRECT break
		case 2 setvar tempb GHOSTHOWL break
		case 3 setvar tempb WIZWAKE break
		case 4 setvar tempb WRTHROAM1 break
		case 5 setvar tempb WRTHROAM2 break
		case 6 setvar tempb DRON_ROAM break
		case 7 setvar tempb KORACT break
		default setvar tempb WRTHROAM1 break
		endswitch
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 tempb
	}
	killit
}

ifvarn target -1
{
	state facetarget
	ifvare target -1 killit
	ldist xydist THISACTOR target
	ifvarl xydist 1560 
	{
		ife mtype LUGLORD killit
		randvar temp 7
		switch temp
		case 0 setvar tempb SKELPAIN break
		case 1 setvar tempb RESURRECT break
		case 2 setvar tempb GHOSTHOWL break
		case 3 setvar tempb WIZWAKE break
		case 4 setvar tempb WRTHROAM1 break
		case 5 setvar tempb WRTHROAM2 break
		case 6 setvar tempb DRON_ROAM break
		case 7 setvar tempb KORACT break
		default setvar tempb WRTHROAM1 break
		endswitch
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 tempb
		killit
	}
}

enda



move STARFAST 512
move STARRISE 32 -96
move STARFALL 32 96

spritenopal STARFLY
spritenoshade STARFLY
spritenopal STARUP
spritenoshade STARUP
useractor notenemy STARFLY 0

ifmove 0
{
	setactor[THISACTOR].shade -127
	sizeat 16 16
	spriteflags 16
	move STARFAST geth
	getactor[THISACTOR].ang angvar
	randvar temp 32
	subvar temp 16
	addvarvar angvar temp
	setactor[THISACTOR].ang angvar
	randvar temp 3
	ifvare temp 1 spritepal 1
	ifvare temp 2 spritepal 2
	ifvare temp 3 spritepal 7
	ifn sprite[].htpicnum HOMEWARP
	{
		espawn LIGHTHALO
		getactor[THISACTOR].pal pal
		setactor[RETURN].pal pal
		setactorvar[RETURN].myspawner THISACTOR
		set myspawner RETURN
	}
}

ifvarvarl sprite[THISACTOR].xvel peractor1
setactor[THISACTOR].xvel peractor1

ifnotmoving 
{
	ifn myspawner -1
	setav[myspawner].monstatus 2
	killit
}

enda

useractor notenemy STARUP 0

ifmove 0
{
	ifvare mtype 1 move STARFALL geth getv randomangle
	else
	move STARRISE geth getv randomangle
	sizeat 12 12
	spriteflags 2064
	cstator 8192
	ifspritepal 0
	{
		randvar temp 3
		ifvare temp 1 spritepal 1
		ifvare temp 2 spritepal 2
		ifvare temp 3 spritepal 7
	}
}
else
ifvarvare initz sprite[THISACTOR].z killit
getactor[THISACTOR].z initz

ifvare mtype 1
{
	getactor[THISACTOR].z saveit
	addvar saveit 2560
	setactor[THISACTOR].z saveit
}
espawn STARUPHALO
ifvare mtype 1
{
	subvar saveit 2560
	setactor[THISACTOR].z saveit
}
setactor[RETURN].pal sprite[THISACTOR].pal
setactor[RETURN].cstat 32768
setactorvar[RETURN].mtype mtype

ifspawnedby GHOST
{
	ifvare player[THISACTOR].heat_on NO killit
	ifcount 32 killit
	break
}

ifnotmoving killit
ifvare mtype 1 { iffloordistl 4 killit } else
ifceilingdistl 4 killit
ifcount 60 killit

enda

spritenopal STARLINE
spritenoshade STARLINE
move STARLINEVEL 768
useractor notenemy STARLINE

ifmove 0
{
	setactor[THISACTOR].shade -127
	move STARLINEVEL geth
	sizeat 32 4
	cstat 32

}

sizeto 32 255
sizeto 32 255

ifnotmoving killit
ifcount 120 killit

enda

eventloadactor HOMEWARP
geta[].lotag activator
seta[].lotag 0
geta[].hitag hitag
seta[].hitag 0
enda

action HOMEWARPFRAMES -3  4  1  1  3
useractor notenemy HOMEWARP 0 HOMEWARPFRAMES 
ifmove 0
{
	move INIT
	seta[].blend 1
	cstator 2
}
ife peractor1 1
{
	stopsound JEDRIK_VICTORY
	stopsound TWUWUV
	stopsound BIGCHEER
	setp[].fta 0 
	ifn ftq 746 { setvar ftq 746 setvar fta QUOTETIME }
	espawn STARFLY
	rand mz 26000
	set z sprite[].z
	sub z mz
	seta[RETURN].z z
	rand angvar 2048
	seta[RETURN].ang angvar
}
enda

eventloadactor EVILWARP
getactor[THISACTOR].hitag hitag
setactor[THISACTOR].hitag 0
cstat 32768

enda

spriteflags AXONENDACTOR 1
action AXONENDSTAND  0  1  5  1  10
useractor enemy AXONENDACTOR 0 AXONENDSTAND
fall
ifmove 0
{
	move STOPPED geth
	findnearsprite DUKEENDACTOR 16384 target
	
}
ifn target -1 state facetarget

enda

action ADUKESTAND  0  1  5  1  10
action ADUKEWALK   5  4  5  1  10
move DUKEWALKVEL 144

eventloadactor DUKEENDACTOR
geta[].lotag activator
seta[].lotag 0
sizeat 25 25
enda

useractor notenemy DUKEENDACTOR 0 ADUKESTAND

fall
ife peractor1 1 // activated
{
	ifmove 0
	{
		ifg subtitle_time 1 set subtitle_time 1
		stopsound AXON_FINAL
		clipdist 20
		action ADUKEWALK
		move DUKEWALKVEL geth
		spriteflags 8193
		findnearsprite HOMEWARP 32768 target
	}
	
	ifn target -1 
	{
		state facetarget
		ldist xydist THISACTOR target
		ifl xydist 384 killit
	}
	ifmove DUKEWALKVEL
	{
		ifcount 41 nullop else
		ifcount 40 globalsound DAY2DIE
	}
	
}

enda

move EVILWARPVEL 192 // 160
spritenoshade EVILWARP
spritenopal EVILWARP
useractor notenemy EVILWARP 0

ifmove 0
{
	ifvare peractor1 0 break
	seta[].blend 1
	cstator 2
	seta[].shade -100
	move EVILWARPVEL faceplayer
	cstat 128
	sizeat 32 32	
	getplayer[THISACTOR].posz mz
	addvar mz 8192
	setactor[THISACTOR].z mz
}
ifcount 6
{
	sizeto 255 192
	resetcount
	
	headspritestat peractor4 0
	whilevarn peractor4 -1
	{
		ifvarn actorvar[peractor4].mtype 1
		{
			ldist xydist THISACTOR peractor4
			ifvarl xydist 16384
			{
				setvar mtype 1
				ifvare countvar 0
				{
					setvar countvar 1
					espawn EXPLOSION2
					getactor[peractor4].x x
					getactor[peractor4].y y
					getactor[peractor4].z z
					setsprite RETURN x y z
					getactor[peractor4].picnum picnum
					setactor[RETURN].htflags 64
					setactorvar[RETURN].weap 2
					globalsound RPG_EXPLODE2
					quake 32
				}
				setactor[peractor4].cstat 32768
				setactorvar[peractor4].mtype 1
			}
		}
		nextspritestat peractor4 peractor4
	}
	setvar countvar 0
}

soundonce ALIENDRILL



ifpdistl 3584
{
	ife camroll 0 set camroll 32
	ifvarn mtype 2
	{
		ifvare character 1 globalsound BARBTAUNT12 else
		globalsound DUKE_SCREAM
		setvar mtype 2
	}
	ifpdistl 1024
	{
		headspritestat spriteid 3
		whilevarn spriteid -1
		{
			ifvare actorvar[spriteid].lotag 64
			ifvarvare actorvar[spriteid].hitag hitag
			{
				palfrom 63 63 63 63
				getactor[spriteid].x mx
				getactor[spriteid].y my
				getactor[spriteid].z mz
				getplayer[THISACTOR].i temp
				setsprite temp mx my mz
				setplayer[THISACTOR].posx mx
				setplayer[THISACTOR].posy my
				getactor[spriteid].sectnum mysector
				setplayer[THISACTOR].cursectnum mysector
				subvar mz 8192
				setplayer[THISACTOR].posz mz
				espawn TRANSPORTERSTAR
				setsprite RETURN mx my mz
				globalsound TELEPORTER
				lockplayer 52
				setplayer[THISACTOR].movement_lock 0
				setvar cutscene 0
				setvar spriteid -1
				set pgold 0
			}
			else
			nextspritestat spriteid spriteid
		}
        
        headspritestat tempd 1
        whilevarn tempd -1
        {
            ifvare sprite[tempd].picnum LIGHTHALO
            setactor[tempd].cstat 642
            nextspritestat tempd tempd
        }
        killit
	}
}

ifvarn mtype 0
{
	getplayer[THISACTOR].posz mz
	addvar mz 8192
	setactor[THISACTOR].z mz
	
	setplayer[THISACTOR].knuckle_incs 0
	setplayer[THISACTOR].poszv -256
	setplayer[THISACTOR].posxv 0
	setplayer[THISACTOR].posyv 0
	setplayer[THISACTOR].movement_lock 31
}

enda

spritenoshade WARPARRIVE
spritenopal WARPARRIVE
action ARRIVEFRAME -1 1 1 1
useractor notenemy WARPARRIVE 0 ARRIVEFRAME
ifmove 0
{
	move INIT
	sizeat 128 128
	cstat 32
	screensound DORDIE
	ifvare mtype 0
	{
		getsector[THISACTOR].floorz z
		setactor[THISACTOR].z z
	}
}

ifcount 53 sizeto 0 0

iffloordistl 16
{
	setvar countvar 0
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	getactor[THISACTOR].xrepeat peractor1
	shiftvarl peractor1 6
	whilevarn countvar 6
	{
		addvar countvar 1
		setvarvar xydist x
		randvarvar temp peractor1 // the random component of the distance
		addvar temp 384
		addvarvar xydist temp
		randvar angvar 2047
		
		rotatepoint x y xydist y angvar tempb y
		// tempb and y are the new x and y coords
		updatesector tempb y tempd
		ifvarn tempd -1
		{
		
			getflorzofslope tempd tempb y z // z is the return var
			subvar z 2048
			updatesectorz tempb y z tempd
			ifvarn tempd -1
			{
				espawn STARUP
				setsprite RETURN tempb y z
			}
		}
	}
}


enda

defstate summongold

	soundonce DORDIE
	dist xydist THISACTOR spriteid
	ifl xydist 4096 break
	
	ifphealthl 2 nullop else
	addphealth -1
	palfrom 30 63

	getactor[].x mx
	addvar mx 2048
	rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y sprite[THISACTOR].ang initx inity
	
	
	rand x 1024, sub x 512
	add x initx
	
	rand y 1024, sub y 512
	add y inity
	
	setsprite spriteid x y initz
	setav[spriteid].monstatus 10
	// changespritesect spriteid sprite[].sectnum
	
	espawn DIAMONDPORT
	seta[RETURN].pal 83
	setsprite RETURN initx inity initz
	// changespritesect RETURN sprite[].sectnum
	
	// pal 83 DIAMONDPORT
	set countvarb 1 // gold found
	set spriteid 16383

ends

eventloadactor MONSTERFINDER
cstat 32768
enda

useractor notenemy MONSTERFINDER 0
	
	ifmove 0
	{
		move INIT
		cstat 32768
		sizeat 32 32
	}
	ifcount 30
	{
		resetcount
		set spriteid 0
		whilevarvarn spriteid Numsprites
		{
			ife actorvar[spriteid].monstatus 1
			ifn actorvar[spriteid].activator 0
			ife sprite[spriteid].htactorstayput -1
			{
				ifn sprite[spriteid].statnum 1
				{
					changespritestat spriteid 1
					setsprite spriteid sprite[].x sprite[].y sprite[].z
					setav[spriteid].mhurtago 0
					userquote 839
				}
				else
				ife sprite[spriteid].sectnum -1
				{
					changespritestat spriteid 1
					setsprite spriteid sprite[].x sprite[].y sprite[].z
					setav[spriteid].mhurtago 0
					userquote 839
				}
				ifg actorvar[spriteid].mhurtago 900
				{
					changespritestat spriteid 1
					setsprite spriteid sprite[].x sprite[].y sprite[].z
					setav[spriteid].mhurtago 0
					userquote 839
				}
			}
			add spriteid 1
		}
	}

enda

action AGOLDCOLOR -1
useractor notenemy GOLDSUMMON 0

ifmove 0
{
	move INIT
	cstator 257
	action ANULLACTION
	geta[].z initz, sub initz 16384
}

ifmove INIT
{
	ifcount 60
	ifg subtitle_time 0 ifn subtitle_start 667 nullop else
	
	ifp palive
	ifcansee
	{
		set temp NO
		
		ifp pfacing
		ifpdistl 2048
			set temp YES
		else
		ifpdistl 844
			set temp YES
			
		ife temp YES
		{
			set subtitle_start 667
			set subtitle_numlines 6
			set subtitle_time 10
			
			ifhitspace
			{
				set countvar 1
				move STOPPED
			}
		}
	}
	
}
else
ifmove STOPPED
{
	
	ifaction ANULLACTION action AGOLDCOLOR else
	action ANULLACTION
	add countvar 1
	ifg countvar 20
	{
		ifcount 3
		{
			resetcount
			set spriteid 0
			set countvarb 0
			whilevarn spriteid 16384
			{
				ifn sprite[spriteid].statnum 1024
				{
					ife sprite[spriteid].picnum SMALLGOLD
					ifn sprite[spriteid].htpicnum SMALLGOLD
						state summongold
					else
					ife sprite[spriteid].picnum MEDIUMGOLD
					ifn sprite[spriteid].htpicnum MEDIUMGOLD
						state summongold
					else
					ife sprite[spriteid].picnum BIGGOLD
					ifn sprite[spriteid].htpicnum BIGGOLD
						state summongold
				}
				add spriteid 1
			}
			ife countvarb 0 set countvar -1
		}
	}
	ife countvar -1 
	{ 
		move INIT action ANULLACTION set countvar 0 quote 673 
		ifactorsound THISACTOR DORDIE stopactorsound THISACTOR DORDIE
	}
}

enda

eventloadactor CHAINTRIGGER
getactor[THISACTOR].lotag activator
setactor[THISACTOR].lotag 0
enda

useractor notenemy CHAINTRIGGER 0

ifvare activator 0 break
cstator 256
strength 0

ifhitweapon ifwasweapon SHOTSPARK1
{
  	debris SCRAP3 2
  	state activatorstate
  	killit
}
enda

state countlines

	set temp popup // popup is starting line of a possible 10
	set tempb temp
	add tempb MAXLINES // tempb is the last possible line
	set tempd 0 // this will be how many blank lines to subtract
	whilevarvarn temp tempb
	{
		qstrlen tempc temp
		ifl tempc 5 add tempd 1 else set tempd 0
		add temp 1
	}
	set numlines MAXLINES
	sub numlines tempd

ends

eventloadactor SUBTITLE_TRIGGER
geta[].lotag lotag // subtitle quote start
seta[].lotag 0
geta[].hitag hitag // subtitle time
seta[].hitag 0
geta[].extra monstflags // sound #
seta[].extra -1
geta[].yvel activator
ife activator 0 set mtype 1 else
ife activator -1 { set mtype 2 set activator 0 }
seta[].yvel 0
geta[].shade peractor1 // numlines
cstat 32768
enda

useractor notenemy SUBTITLE_TRIGGER 0

ife mtype 2 ife player[].cursectnum sprite[].sectnum set mtype 1

ife mtype 0 break

ife mtype 1
{
	set subtitle_start lotag
	set subtitle_numlines peractor1
	set subtitle_time hitag
	ifg monstflags 0 { screensound monstflags screensound monstflags }
	ife twuwuv YES ife monstflags JEDRIK_VICTORY add subtitle_time 510
	killit
}

enda

eventloadactor MONOLOGUE1
geta[].lotag lotag
seta[].lotag 0
geta[].hitag hitag
seta[].hitag 0
geta[].cstat temp
geta[].extra monstflags
ife monstflags -1 set monstflags 0
ifvarand temp 1 { xorvar temp 1 seta[].cstat temp }
set peractor1 temp
ifn sprite[].pal 0 { geta[].pal peractor4 seta[].pal 0 }
cactor MONOLOGUE2
enda

useractor notenemy MONOLOGUE2

ifn endlevel 0 break
ifn camerasprite -1 break

ifg subtitle_time 0
ifn subtitle_start lotag break

ife peractor4 1 // only Duke can see
{
	ifn character 0
	{
		cstat 32768
		break
	}
	else
	seta[].cstat peractor1
}

ife peractor4 2 // only Jedrik can see
{
	ifn character 1
	{
		cstat 32768
		break
	}
	else
	seta[].cstat peractor1
}

	ifp pfacing
	ifpdistl 1664
	ifp palive
	ife KICKBACKPIC 0
	{
		ifg monstflags 0 ife mtype 0
		{
			soundoncevar monstflags
			set mtype 1
		}
		cstator 2
		set subtitle_start lotag
		set subtitle_numlines hitag
		ifl subtitle_time 2
			set subtitle_time 6
	}
	
	ifpdistg 2048 ifpdistl 5120
	ifg monstflags 0
	{
		ifactorsound THISACTOR monstflags
		stopactorsound THISACTOR monstflags
	}
	
	ifpdistg 5120 set mtype 0



enda

eventloadactor QUESTSPRITE
getactor[THISACTOR].hitag hitag // wakes it up
setactor[THISACTOR].hitag 0
ifvare hitag 0 cstat 0 else cstat 32768
getactor[THISACTOR].lotag lotag // quest #
setactor[THISACTOR].lotag 0
ifvare lotag 0 { quote 631 cactor SMALLSMOKE }
getactor[THISACTOR].extra monstflags // quote number
ifvare monstflags -1 setvar monstflags 1000
getactor[THISACTOR].xvel droptile // optional activation upon quest start
getactor[THISACTOR].yvel command // kills it remotely when quest completed
getactor[THISACTOR].zvel peractor4 // sound # to play
getactor[THISACTOR].owner peractor6 // sound # play on completion
setactor[THISACTOR].owner -1


enda

useractor notenemy QUESTSPRITE 0

ifvarn hitag 0 break

ifvare peractor1 1
	seta[].mdflags 16

ifp pfacing
ifpdistl 2560
ifcansee
ifvare helpmenu 0
{
	ifhitspace
	{
		ifvare peractor1 0 // player has not yet started the quest
		{
			// enter quest into quest array
			cstator 2
			set questpic -1 // for safety
			
			setvar countvar 0
			whilevarn countvar MAXQUESTS
			{
				ifvare quests[countvar] 0
				{
					setarray quests[countvar] lotag
					setvarvar mtype countvar // save position in array for future reference
					setarray Qquests[countvar] monstflags
					setvar countvar MAXQUESTS
					subvar countvar 1
					setvar peractor1 1 // quest officially started
					
					ifvarn droptile 0
					{
						setvarvar activator droptile
						state activatorstate
						setvar activator 0
						setvar droptile 0
					}
					
					globalsound RQUEST
					ifvarg peractor4 0 globalsoundvar peractor4
					setvarvar tempb monstflags
					addvar tempb 10
					setvarvar popup tempb
					setvar popuptime 10
					state countlines
					
					// sets popup window to display the quest initiation dialogue
					
					// we also need to initiate the related quest item, if it happens to be in the same map
					setvar spriteid 0
					whilevarn spriteid 16384
					{
						ifvarn sprite[spriteid].statnum 1024
						{
							ifvare sprite[spriteid].picnum QUESTITEM
							ifvarvare lotag actorvar[spriteid].lotag
							{
								set questpic actorvar[spriteid].hitag
								set htg5 questpic
								setarray Pquests[mtype] questpic
								setarray Lquests[mtype] LEVEL
								setactorvar[spriteid].mtype 1
								set myspawner spriteid
								setvar spriteid 16383
							}
						}
						addvar spriteid 1
					}
				}
				addvar countvar 1
			}
			ifvare peractor1 0 // failure
			{
				quote 631
				addlogvar THISACTOR
				killit
			}
			ife myspawner -1 // no quest item
			{
				al lotag
				quote 674
			}
	
		}
		else ifvare peractor1 1 // waiting for player to return with the quest item
		{
			ifvare Cquests[mtype] YES // player has the item
			{
				set questpic -1 // htg5
				globalsound CQUEST
				add globalquestc 1
				ifvarg peractor6 0 globalsoundvar peractor6
				setvarvar activator lotag
				state activatorstate
				setvar peractor1 2
				setarray Cquests[mtype] 2
				setarray Pquests[mtype] 0
				setvarvar temp monstflags
				addvar temp 20
				setvarvar popup temp
				setvar popuptime 10
				// sets popup window to display the quest completion dialogue
				cstat 32768
			}
			else
			{
				setvarvar tempb monstflags
				addvar tempb 10
				setvarvar popup tempb
				setvar popuptime 10
				// grab quest pic
				set questpic htg5
			}
		}
		else ifvare peractor1 2 // the quest has already been completed
		{
			setvarvar tempb monstflags
			addvar tempb 20
			setvarvar popup tempb
			setvar popuptime 10
		}
			
	}
	ifvarn popuptime 0 setvar popuptime 10 //  this sustains the popup window but does not start it
}
else ife peractor1 2 killit

enda

eventloadactor QUESTITEM 
cstat 32768
getactor[THISACTOR].hitag hitag // picture
setactor[THISACTOR].hitag 0
getactor[THISACTOR].lotag lotag // quest #
setactor[THISACTOR].lotag 0
getactor[THISACTOR].extra activator
ifvare activator -1 setvar activator 0
ifvare lotag 0 ifvare activator 0 cactor SMALLSMOKE // untagged, invalid questitem
enda

useractor notenemy QUESTITEM 0

ifvare mtype 0 
{ 
	ife sprite[].mdflags 0 { setactor[THISACTOR].mdflags 16 cstat 514 } 
	break 
}
ifmove 0
{
	move INIT
	setactor[THISACTOR].mdflags 16
	cstat 0
}
fall

ifp pshrunk nullop
else
ifvare endlevel 0
  ifp palive
    ifpdistl 1024
        ifcanseetarget
{
	globalsound MEDIUMPICK
	// mark the quest progress
	setvar temp 0
	ifvarn lotag 0
	{
		whilevarn temp MAXQUESTS
		{
			ifvarvare quests[temp] lotag
			{
				ifvare Cquests[temp] 2 killit else
				{
					setarray Cquests[temp] YES
					setarray Pquests[temp] hitag // should be redundant
				}
				setvar temp MAXQUESTS
				subvar temp 1
			}
			addvar temp 1
		}
	}
	ifvarn activator 0 state activatorstate
	killit
}

enda

eventloadactor REWARD 
cstat 32768
getactor[THISACTOR].hitag hitag // gold
setactor[THISACTOR].hitag 0
getactor[THISACTOR].lotag lotag // what activates it
setactor[THISACTOR].lotag 0
getactor[THISACTOR].extra monstflags // XP
ifvare monstflags -1 setvar monstflags 0
getactor[THISACTOR].yvel activator // what it activates
enda

useractor notenemy REWARD 0
	ifvarn lotag 0 break
	ife monstflags TWUWUV { quote 747 set twuwuv YES killit }
	else
	quote 632
	//globalsound REWARDED
	addvarvar pgold hitag
	addvarvar xp monstflags
	ifvarn activator 0 state activatorstate
	killit
enda

eventloadactor GRAVUP 
geta[].lotag activator
seta[].lotag 0
ifn activator 0 set peractor1 1 // off
cstat 32768 
enda

eventloadactor GRAVDOWN 
geta[].lotag activator
seta[].lotag 0
ifn activator 0 set peractor1 1 // off
cstat 32768 
enda

useractor notenemy GRAVUP 0

ife peractor1 1 break

ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
{
	ifvare upside NO
		ifp ponground
	setplayer[THISACTOR].jumping_counter 181
			
	setvar upside YES
	set upsidecamang player[].ang
	set nofalldamage 1
}
ifactorsound THISACTOR SAVELOOP nullop else sound SAVELOOP


setvarvar xydist sprite[THISACTOR].x
randvar temp 384 // the random component of the distance
addvar temp 384
addvarvar xydist temp
randvar angvar 2047

rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y xydist sprite[THISACTOR].y angvar tempb y
// tempb and y are the new x and y coords
updatesector tempb y tempd
ifvarn tempd -1
{
	getflorzofslope tempd tempb y z
	subvar z 2048
	updatesectorz tempb y z tempd
	ifvarn tempd -1
	{
		espawn STARUP
		setsprite RETURN tempb y z
		setactor[RETURN].pal sprite[THISACTOR].pal
	}
}


	
enda

useractor notenemy GRAVDOWN 0

ife peractor1 1 break

ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
ife upside YES
ifp palive
{
	getp[].posz z
	add z 8192
	sub z sprite[].z
	abs z
	ifl z 16384
	{
		setvar upside NO
		set nofalldamage 1
	}
}
ifactorsound THISACTOR SAVELOOP nullop else sound SAVELOOP

setvarvar xydist sprite[THISACTOR].x
randvar temp 384 // the random component of the distance
addvar temp 384
addvarvar xydist temp
randvar angvar 2047

rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y xydist sprite[THISACTOR].y angvar tempb y
// tempb and y are the new x and y coords
updatesector tempb y tempd
ifvarn tempd -1
{
	getceilzofslope tempd tempb y z
	addvar z 2048
	updatesectorz tempb y z tempd
	ifvarn tempd -1
	{
		espawn STARUP
		setactorvar[RETURN].mtype 1
		setsprite RETURN tempb y z
		setactor[RETURN].pal sprite[THISACTOR].pal
	}
}
	
enda

action CHAIRACT 0 1 5
action A3DCHAIRBROKE 5 1 1

state simplecode

ifmove 0
{
	move INIT
	ifspawnedby APLAYER sizeat 20 20
}

ends

move CHAIRROLLVEL


state chaircode

ifmove 0
{
	move INIT
	ifspawnedby APLAYER sizeat 38 38
	cstator 257
	clipdist 40
	geta[].htflags temp, orvar temp 8192, seta[].htflags temp
}
fall

geta[].htextra bleeding
ifg bleeding 0 ifwasweapon KNEE { set temp bleeding mul temp 4 seta[].htextra temp mul bleeding 2 }

ifhitweapon
{
	ifaction CHAIRACT
		mul bleeding 768
	else mul bleeding 512
	div bleeding sprite[].xrepeat
	ifg bleeding dodge
	{
		set dodgeang sprite[].htang
		set dodge bleeding
	}
	ifdead
	{
		spawn BIGSMOKE
		ifaction CHAIRACT
		{
			action A3DCHAIRBROKE
			strength 30
			sound BREAKWOOD2
		}
		else
		{
			debris SCRAP5 10
			sound BREAKWOOD2
			killit
		}
	}
	
	
}

ifvarg dodge 0
{
	cos xvel dodgeang
	sin yvel dodgeang
	setvarvar temp dodge
	ifvarg temp 1024 setvar temp 1024
	mulvarvar xvel temp
	mulvarvar yvel temp
	shiftvarr xvel 13
	shiftvarr yvel 13
	movesprite THISACTOR xvel yvel 0 CLIPMASK0 RETURN 
	shiftvarr dodge 1
	ifvarl dodge 2 setvar dodge 0
}
else state playerpush

ends

spriteshadow A3DCHAIR
useractor notenemy A3DCHAIR 50 CHAIRACT state chaircode enda

useractor notenemy AXONSIT 0 CHAIRACT state simplecode enda


useractor notenemy PLATFORWARDSPAWNER 0

cstat 32768
sizeat 2 2

ifcount 104
{
	ifspritepal 1 cactor 2000
	ifspritepal 2 cactor 2001
	spawn PLATFORWARD
	cactor PLATFORWARDSPAWNER
	resetcount
}

enda

action WRAITHIMPACTFRAMES 0 6 1 1 16
useractor notenemy WRAITHIMPACT 0 WRAITHIMPACTFRAMES
ifmove 0
{
	move INIT
	sound WTIMPACT
	cstat 128
	sizeat 64 64
	// ifspawnedby NOVAPROJ
	ifvare mtype 1
	ifpdistg 1024
	{
		findnearactor SPIDER2 6144 spriteid
		ifrnd 96
		ifvare spriteid -1
		{
			espawn SPIDER2
			setactor[RETURN].pal 24
			setactorvar[RETURN].droptile MEDIUMPOTION
			setav[RETURN].gold -1
		}
		else
		{
			findnearactor LIZMAN 6144 spriteid
			ifvare spriteid -1
			{
				espawn LIZMAN
				ifrnd 128
				setactor[RETURN].pal 7
				setactorvar[RETURN].droptile AMMO
				setav[RETURN].gold -1
			}
		}
	}
	// ifmultiplayer nullop else
	// {
		// setvar tempd 2
		// setvar pal 2
		// setvar intensity 4096
		// setvar tempc 0
		// state spawnpointlight
	// }
}
ifactioncount 6 killit
enda

action DMIMPACTFRAMES 0 5 1 1 6

useractor notenemy DMPROJIMPACT 0 DMIMPACTFRAMES
ifcount 1 nullop else
{
	sizeat 32 32
	seta[].shade -100
	cstator 2
	seta[].blend 1
	cstator 128
	// ifmultiplayer nullop else
	// {
		// setvar tempd 2
		// setvar pal 7
		// setvar intensity 4096
		// setvar tempc 0
		// state spawnpointlight
	// }
}
ifactioncount 5 killit
enda

move DRIFT 32
spritenoshade BFGIMPACT
spritenopal BFGIMPACT
useractor notenemy BFGIMPACT 0

ifmove 0
{
	setactor[THISACTOR].shade -127
	seta[].blend 1
	move INIT
	sizeat 2 96
	cstat 130
	ifvare lotag 0
	{
		move DRIFT faceplayer
		palfrom 52 30 63 30
		globalsound BFGBOOM
		setvar countvar 0
		ifl peractor1 0 break
		whilevarn countvar 16384
		{
			setvar temp 0
			getactor[countvar].picnum picnum

			ifvare actorvar[countvar].monstatus 1
			ifvare sprite[countvar].statnum 1 setvar temp 1
			else
			ifvarn sprite[peractor1].picnum AXON
			ifvarn COOP YES
			ifvare sprite[countvar].statnum 10 
			ifvarvarn countvar peractor1 
				canseespr THISACTOR countvar temp
			ifvare temp 1
			{
				dist xydist THISACTOR countvar
				ifvarl xydist 12288
				{
					espawn BFGIMPACT
					setactorvar[RETURN].lotag 1
					setactorvar[RETURN].myspawner countvar
					ifvarg livemon 50 setactorvar[countvar].initcstat 666 // reduced gore flag
					setactorvar[RETURN].peractor1 peractor1
					setvar tempb 12288
					subvarvar tempb xydist
					shiftvarr tempb 4
					ifvarl tempb 32 setvar tempb 32
					setactorvar[RETURN].mtype tempb
					getactor[countvar].picnum picnum
					setactorvar[RETURN].droptile picnum
					getactor[countvar].x mx
					getactor[countvar].y my
					getactor[countvar].z mz
					subvar mz 8192
					setsprite RETURN mx my mz
					updatesectorz mx my mz tempc
					ifvarn tempc -1 changespritesect RETURN tempc
					espawn BFGRING
					addvar mz 8192
					setsprite RETURN mx my mz
					ifvarn tempc -1 changespritesect RETURN tempc	
				}
			}
			addvar countvar 1
		}
	}
}
ifcount 34
{
	ifvare lotag 0
	{
		sizeto 0 0
		sizeto 0 0
		sizeto 0 0
		sizeto 0 0
	}
	else
	{
		sizeto 0 96
		sizeto 0 96
	}
	
}
else
{
	ifvare lotag 0
	{
		sizeto 255 255
		sizeto 255 255
		sizeto 255 255
		sizeto 255 255
		sizeto 255 255
		sizeto 255 255
	}
	else
	{
		sizeto 96 96
		sizeto 96 96
		sizeto 96 96
	}
	
	ifvarn myspawner -1
	{
		ifvare sprite[myspawner].statnum 1024 { setvar myspawner -1 break }
		ifvarvarn sprite[myspawner].picnum droptile { setvar myspawner -1 break }
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		getactor[myspawner].z z
		subvar z 4096
		setactor[myspawner].x x
		setactor[myspawner].y y
		setactor[THISACTOR].z z
		ifvare droptile APLAYER
		{
			setplayer[THISACTOR].posx x
			setplayer[THISACTOR].posy y
			subvar z 4096
			setplayer[THISACTOR].posz z
		}
		
		getactor[myspawner].htextra temp
		ifvarl temp 1 setvar temp 1
		setactor[myspawner].htextra temp
		setactor[myspawner].htpicnum BFGIMPACT
		seta[myspawner].htang sprite[].ang
		ifvarn peractor1 -1 ifmultiplayer
		setactor[myspawner].htowner peractor1 // spriteid
		else setactor[myspawner].htowner player[THISACTOR].i
		
		ifcount 34 nullop else
		ifcount 33
		{
			getactor[myspawner].htextra temp
			addvarvar temp mtype
			setactor[myspawner].htextra temp
			seta[myspawner].htang sprite[].ang
			ifvarvarg temp sprite[myspawner].extra setactorvar[myspawner].command BFGPROJ
			setactor[myspawner].htpicnum BFGIMPACT
			ifvarn peractor1 -1
			setactor[myspawner].htowner peractor1 // spriteid
			flash
		}
	}
	else ifvare lotag 0
	{
		ifcount 33 palfrom 52 30 63 30
		getactor[THISACTOR].xrepeat x
		shiftvarl x 4
		findplayer xydist
		subvar xydist 512 ifvarl xydist 0 setvar xydist 0
		ifvarvarg xydist x
		hitradiusvar x 6 12 18 24
	}
}

enda

spritenoshade SHIELDRING
spritenopal SHIELDRING
action SHIELDRINGFRAMES -1 9 1 1 4
useractor notenemy SHIELDRING 0 SHIELDRINGFRAMES
ifmove 0
{
	move DRIFT geth
	cstat 658
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	sizeat 64 64
	spritepal 17
}
ifactioncount 9 killit
enda

spritenoshade BFGRING
spritenopal BFGRING
action BFGRINGFRAMES 0 9 1 1 14
useractor notenemy BFGRING 0 BFGRINGFRAMES

ifmove 0
{
	setactor[THISACTOR].shade -127
	move INIT
	cstat 32
	sizeat 64 64
}
sizeto 128 128
getactor[THISACTOR].ang angvar
addvar angvar 71
setactor[THISACTOR].ang angvar

ifactioncount 9 killit

enda

state damochop

setvar mtype 1
globalsound CHOP
globalsound SWORDHIT

set tempb sprite[myspawner].extra
add tempb 10

set tempc actorvar[myspawner].inithp
shiftr tempc 1

ifg sprite[myspawner].extra tempc
{
	set temp sprite[myspawner].extra
	shiftr temp 1
	ifg temp 1000 set temp 1000
	ifp ponsteroids shiftvarr temp 2
	addvar temp 100
}
else 
setvar temp 500

ifvarvarg temp tempb setvarvar temp tempb
setactor[myspawner].htextra temp
setactor[myspawner].htpicnum BFGIMPACT
setactor[myspawner].htang player[THISACTOR].ang
setactor[myspawner].htowner player[THISACTOR].i

ends

useractor notenemy DAMOSWORD 0

ifn myspawner -1
ifvare sprite[myspawner].statnum 1024 setvar myspawner -1

ifvare peractor1 1
{
	ifvarn myspawner -1
	ifvare mtype 0 // hasn't hit yet
	{
		ifvarvarl sprite[THISACTOR].z sprite[myspawner].z
		{
			getactor[THISACTOR].z z
			addvar z 1024
			setactor[THISACTOR].z z
		}
		setactor[THISACTOR].x sprite[myspawner].x
		setactor[THISACTOR].y sprite[myspawner].y
		setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y sprite[].z
		dist xydist THISACTOR myspawner
		ifvarl xydist 8192 state damochop
		else ifcount 40 state damochop
		
	}
	else 
	{
		fall
		ifn myspawner -1
		setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y sprite[].z
	}
	ifcount 52 killit
	break
}

ifmove 0
{
	sound DAMOSPAWN
	move INIT randomangle spin
	sizeat 36 32
	cstat 144
	setactor[THISACTOR].shade -127
}

ifvarn myspawner -1
{
	// getactor[myspawner].z z
	// subvar z 24576
	// setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y z
	
	geta[myspawner].picnum picnum
	set z tiledata[picnum].ysize
	set mz sprite[myspawner].yrepeat
	mul z mz
	shiftl z 2
	add z 8192

	geta[myspawner].z mz
	sub mz z
	setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y mz
	
}

ifcount 52 ifrnd 96 
{
	setvar peractor1 1
	resetcount
}

enda



spritenoshade KORPROJSPAWN
spritenopal KORPROJSPAWN
action KPROJFRAMES 0 9 1 1 10
useractor notenemy KORPROJSPAWN 0 KPROJFRAMES

ifmove 0
{
	move INIT
	ifspawnedby BARONBALL sizeat 40 40 else
	sizeat 64 64
	cstat 128
	setactor[THISACTOR].shade -127
	setvar tempd 2
	getactor[THISACTOR].pal pal
	// setvar intensity 6144
	setvar tempc 1 // moving
	// state spawnpointlight
}
ifactioncount 9 killit
enda

move PLATFORWARDVEL 128
move PLATBACKVEL -128

useractor notenemy PLATFORWARD 0
ifmove 0
{
	move INIT
	cstat 546
	ifspawnedby 2000 sizeat 48 48 else
	ifspawnedby 2001 sizeat 32 32 else
	sizeat 64 64
	break
}
ifmove INIT
{
	ifcount 6 cstat 35
	ifcount 13
	{
		move PLATFORWARDVEL geth
		cstat 289
	}
	break
}
ifnotmoving killit

enda

move LIGHTNINGUP 1024 -96
move LIGHTNINGDOWN 1024 256


state lightninghit

	state sparkstate2
	ifvarn target -1
	{
		dist xydist THISACTOR target
		ifvarl xydist 1024
		{
			randvar temp 7 // 5
	        addvar temp 9 // 6
	        getactor[target].htextra tempb
			ifl tempb 0 set tempb 0
	        addvarvar tempb temp
	        setactor[target].htextra tempb
	        setactor[target].htpicnum LIGHTNINGBOLT
	        setactor[target].htowner myspawner   
		}
	}
	else
	ifcansee
	ifpdistl 1024
	{
		ifvarg shieldup 0 ifp pfacing
		{
			sound SPARK_SND
			move INIT
			cstat 32768
			break
		}
		getplayer[THISACTOR].i spriteid
        randvar temp 7 // 5
        addvar temp 9 // 6
        getactor[spriteid].htextra tempb
		ifl tempb 0 set tempb 0
        addvarvar tempb temp
        setactor[spriteid].htextra tempb
        setactor[spriteid].htpicnum LIGHTNINGBOLT
        setactor[spriteid].htowner myspawner        
    }
	sound SPARK_SND
	killit
	move INIT
	cstat 32768

ends

state lightningcode

ifvarn target -1
state facetarget
else ifvare mtype 1
{
	addvar countvar 1
	ifvarg countvar 10
	state gradualturn
	ifvarg countvar 120 ifrnd 32 killit
}

ifmove INIT 
{
	ifcount 26 killit
	break
}
ifmove LIGHTNINGUP fall
ifp phigher
{
	ifmove LIGHTNINGUP nullop else move LIGHTNINGUP geth getv
}
else ifvarn target -1 ifvarvarl sprite[target].z sprite[THISACTOR].z
{
	ifmove LIGHTNINGUP nullop else move LIGHTNINGUP geth getv
}
else
{
	ifmove LIGHTNINGDOWN 
	{
		ifrnd 64 move LIGHTNINGUP geth getv  
		else
		iffloordistl 16 move LIGHTNINGUP geth getv
	} 
	else ifrnd 192 move LIGHTNINGDOWN geth getv
}

ifvarand pow 1 ifvarg sprite[THISACTOR].xvel 512 setactor[THISACTOR].xvel 512

ifmove INIT nullop else
{
	ifrnd 64 cstat 38 // 37
	ifrnd 64 cstat 34 // 33
}
ifrnd 16 spawn SPARKER
ends


spritenoshade LIGHTNINGBOLT
spritenoshade LIGHTNINGBOLT2
spritenopal LIGHTNINGBOLT
spritenopal LIGHTNINGBOLT2

spritenoshade LBOLT
spritenopal LBOLT


move LBOLTVEL 1024

useractor notenemy LBOLT 0

ifmove 0
{
	setactor[THISACTOR].shade -127
	ifspawnedby SECTOREFFECTOR
	{
		move LBOLTVEL geth
		randvar temp 32
		subvar temp 16
		getactor[THISACTOR].ang angvar
		addvarvar angvar temp
		setactor[THISACTOR].ang angvar
		
		sizeat 64 224 //128
		randvar initz 2048
		subvar initz 1024
	}
	else
	{
		randvar initz 8192
		subvar initz 4096
		ifspawnedby ENERGYBALL 
		{
			cstator 2
			seta[].blend 1
			seta[].shade -80
			set mtype 666 
			move LBOLTVEL geth
			set initz 0
		}
		else
		move LBOLTVEL randomangle
		sizeat 64 64
		
	}
	cstat 34
	
	count 4
	ifvarn target -1 state facetarget
}
movesprite THISACTOR 0 0 initz CLIPMASK0 RETURN
ifrnd 64 cstat 34
ifrnd 64 cstat 38

ifvarn target -1
{
	ldist xydist THISACTOR target
	ife mtype 666
	{
		ifl xydist 1024
		{
			seta[target].htextra 10
			seta[target].htowner THISACTOR
			seta[target].htpicnum LBOLT
			killit
		}
	}
	else
	ifvarl xydist 2048 killit
}

ifvarvarl sprite[THISACTOR].xvel peractor1
setactor[THISACTOR].xvel peractor1

ifnotmoving killit

ifspritepal 6 getlastpal else ifcount 6 { spritepal 6 resetcount }

enda

useractor notenemy LIGHTNINGBOLT 0
fall
ifmove 0
{
	geta[].z z sub z 3072 seta[].z z
	seta[].blend 1
	setactor[THISACTOR].shade -127
	ifrnd 128
	move LIGHTNINGUP geth getv
	else
	move LIGHTNINGDOWN geth getv
	sizeat 40 40
	// clipdist 100
	// seta[].htflags 2048
	cstat 34 // 33
	getactor[THISACTOR].owner myspawner
	espawn LIGHTNINGBOLT2
	setactorvar[RETURN].myspawner THISACTOR
	setactor[RETURN].cstat 32768
}

state lightningcode

ifmove INIT break
ifnotmoving state lightninghit else
ifvare target -1
{
	ifpdistl 1024 state lightninghit
}
else
{
	dist xydist THISACTOR target
	ifvarl xydist 1024 state lightninghit
}

enda

useractor notenemy LIGHTNINGBOLT2 0
// fall
ifmove 0
{
	setactor[THISACTOR].shade -127
	seta[].blend 1
	sizeat 40 40
	clipdist 100
}

ifvarn sprite[myspawner].picnum LIGHTNINGBOLT killit
ifvarn sprite[myspawner].statnum 1 killit
getactor[myspawner].cstat temp
ifvare temp 34 cstat 18 else
ifvare temp 38 cstat 22 

getactor[myspawner].x x
getactor[myspawner].y y
getactor[myspawner].z z
addvar z 2048
setsprite THISACTOR x y z
getactor[myspawner].ang angvar
addvar angvar 512
setactor[THISACTOR].ang angvar

ifrnd 64 cstat 18
ifrnd 64 cstat 22

enda

gamevar LGtrail_pic 2599 1
state lightningtrailcode
ifmove 0
{
	
	move STOPPED
	cstat 0
	sizeat 18 18
	ife rendmode 0 { cstator 130 sizeat 10 10 seta[].blend 1 }
	addvar LGtrail_pic 1
	ifrnd 128 addvar LGtrail_pic 1
	ifvarg LGtrail_pic 2604 setvar LGtrail_pic 2599
	setactor[].picnum LGtrail_pic
	getactor[].owner spriteid	
	
	ifvare mtype NO
	{
		getactorvar[spriteid].shotpitch shotpitch
		setactor[].pitch shotpitch
	}
	setactor[].shade -127
	
}
ifvare mtype YES 
{
	setactor[].pitch shotpitch
	sizeat 12 12
}
ife rendmode 0 { ifvarand timer 1 cstat 130 else cstat 134 }
ifcount 8 killit
ends

spritenopal LIGHTNING_TRAIL1
spritenopal LIGHTNING_TRAIL2
spritenopal LIGHTNING_TRAIL3
spritenopal LIGHTNING_TRAIL4
spritenopal LIGHTNING_TRAIL5
spritenopal LIGHTNING_TRAIL6
spritenoshade LIGHTNING_TRAIL1
useractor notenemy LIGHTNING_TRAIL1 0 state lightningtrailcode enda
spritenoshade LIGHTNING_TRAIL2
useractor notenemy LIGHTNING_TRAIL2 0 state lightningtrailcode enda
spritenoshade LIGHTNING_TRAIL3
useractor notenemy LIGHTNING_TRAIL3 0 state lightningtrailcode enda
spritenoshade LIGHTNING_TRAIL4
useractor notenemy LIGHTNING_TRAIL4 0 state lightningtrailcode enda
spritenoshade LIGHTNING_TRAIL5
useractor notenemy LIGHTNING_TRAIL5 0 state lightningtrailcode enda
spritenoshade LIGHTNING_TRAIL6
useractor notenemy LIGHTNING_TRAIL6 0 state lightningtrailcode enda

spritenoshade SHOCK_ACTOR
action AREDSHOCK -1
action CLASSICSHOCK -1 2 1 1 3
useractor notenemy SHOCK_ACTOR 0
ifmove 0
{
	cstat 0
	move STOPPED
	sound SHOCKHIT
	setactor[THISACTOR].shade -100
	setactor[THISACTOR].pitch 512
	ifspritepal 21 action AREDSHOCK
	
	ifvarn myspawner -1
	{
		getactor[myspawner].picnum picnum
		set z tiledata[picnum].ysize
		set mz sprite[myspawner].yrepeat
		mul z mz
		div z 96
		ifg z 255 set z 255
		seta[].yrepeat z
		
		set x tiledata[picnum].xsize
		set mx sprite[myspawner].xrepeat
		mul x mx
		shiftr x 5
		ifg x 255 set x 255
		seta[].xrepeat x
	}
	else sizeat 24 24
	ife rendmode 0
	{
		cstator 128
		geta[].xrepeat x div x 6 seta[].xrepeat x
		geta[].yrepeat y div y 3 seta[].yrepeat y
		seta[].blend 1
	}
}
randvar angvar 2047
ife rendmode 0
{
	geta[].cstat temp
	ifvarand timer 1 ifrnd 128
	{
		ifvarand temp 512 xorvar temp 512
		ifvarand temp 2 xorvar temp 2
		ife temp 128 set temp 132 else
		ife temp 132 set temp 136 else
		ife temp 136 set temp 140 else
		ife temp 140 set temp 128
		seta[].cstat temp
	}
	ifaction 0 action CLASSICSHOCK
}
setactor[THISACTOR].ang angvar
ifvarn myspawner -1
{
	geta[myspawner].z z
	sub z 6144
	setsprite THISACTOR sprite[myspawner].x sprite[myspawner].y z
	geta[].x x add x 2 seta[].x x
	geta[].y y add y 2 seta[].y y
	ifl sprite[myspawner].htextra 1
	ifrnd 36
	{
		seta[myspawner].htextra 1
		seta[myspawner].htpicnum BFGIMPACT
	}
}
ifcount 14 cstator 2
ifcount 22 { ife myspawner player[].i killit cstator 512 }
ifcount 30 
	killit

enda

eventloadactor LADDER

	cstat 32768
	getactor[THISACTOR].hitag hitag
	getactor[THISACTOR].lotag lotag
	
	setvar spriteid 0
	whilevarn spriteid 16384
	{
		ifvarn sprite[spriteid].statnum 1024
		ifvare sprite[spriteid].picnum LADDER ifvarvarn spriteid THISACTOR
		{
				ifvarvare hitag sprite[spriteid].hitag // it is the other of the pair
				{
					setvarvar myspawner spriteid
					setvar spriteid 16383 // we can stop the loop now
					ifvarvarg sprite[THISACTOR].z sprite[myspawner].z 
					{
						setvar mtype 1 // the bottom of the ladder
						getactor[myspawner].z topladder
					}
				}
		}
		addvar spriteid 1
	}
	

enda

useractor notenemy SOUNDMAKER 0
ifmove 0
{
	ifvarg countvar 0 { subvar countvar 1 break }
	move INIT
	ifvare monstatus 0
	soundvar peractor1
	else globalsoundvar peractor1
}
ifcount 78 killit
enda


state hurtplayer

ifvarn endlevel 0 break

ifvare peractor1 0
ifrnd 64
ife invulntime 0
{
	setvar peractor1 1
	ifvarg player[THISACTOR].boot_amount 0
	{
		getplayer[THISACTOR].boot_amount tempb
		subvar tempb 1
		setplayer[THISACTOR].boot_amount tempb
	}
	else
	{
		state dukepainsounds
		addphealth -1
		palfrom 32 63
	}
}
ends

action GWATERFRAMES -2 5 1 1 2
action GSTEAMFRAMES -852 7 1 1 10

move GSTEAMUP1 12 -128
move GSTEAMUP2 16 -128
move GSTEAMUP3 12 -64
move GSTEAMRND1 24 -36
move GSTEAMRND2 16 -24
move GSTEAMRND3 24 -8

useractor notenemy GEYSERWATER 0
fall
ifmove 0
{
	getactor[THISACTOR].htowner temp
	ifvarn temp -1 { getactor[temp].pal tempb setactor[THISACTOR].pal tempb }
	ifspawnedby 2000 sizeat 64 16 else
	sizeat 64 32
	action GWATERFRAMES
	cstat 2
	ifspawnedby 2000 move GSTEAMUP3 geth getv randomangle else
	ifrnd 128
	move GSTEAMUP1 geth getv randomangle else
	move GSTEAMUP2 geth getv randomangle
}

ifactioncount 15 killit else
ifactioncount 14 { ifspawnedby 2010 killit } else
ifactioncount 13 { ifspawnedby 2009 killit } else
ifactioncount 12 { ifspawnedby 2008 killit } else
ifactioncount 11 { ifspawnedby 2007 killit } else
ifactioncount 10 { ifspawnedby 2006 killit } else
ifactioncount 9 { ifspawnedby 2005 killit } else
ifactioncount 8 { ifspawnedby 2004 killit } else
ifactioncount 7 { ifspawnedby 2003 killit } else
ifactioncount 6 { ifspawnedby 2002 killit } else
ifactioncount 5 { ifspawnedby 2001 killit ifspawnedby 2000 killit }

ifrnd 12 spawn GEYSERSTEAM
enda

useractor notenemy GEYSERSTEAM 0
fall
ifmove 0
{
	getactor[THISACTOR].htowner temp
	ifvarn temp -1 { getactor[temp].pal tempb setactor[THISACTOR].pal tempb }
	action GSTEAMFRAMES
	ifspawnedby GEYSERWATER
	{
		ifrnd 128 move GSTEAMRND2 geth getv randomangle
		else
		move GSTEAMRND3 geth getv randomangle
	} else
	ifrnd 128 move GSTEAMRND1 geth getv randomangle
	else
	move GSTEAMRND2 geth getv randomangle
	cstat 642
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	ifspritepal 0 spritepal 12
	sizeat 32 32
}

sizeto 128 160
sizeto 128 160
ifactioncount 7
	killit

ifpdistl 768 ifcansee state hurtplayer
enda

move ERUPTUPWAIT
move ERUPTUP
move ERUPTDOWN


useractor notenemy BIGGEYSER 0
ifmove 0
{
	move WAIT
	sizeat 40 4
	cstat 32768
}

ifmove WAIT
{
	ifrnd 12 spawn GEYSERSTEAM
	ifcount 130 ifrnd 2
		move ERUPTUPWAIT
	break
}
ifmove ERUPTUPWAIT
{
	ifrnd 8 spawn GEYSERSTEAM
	ifcount 60 ifrnd 8 move ERUPTUP
	break
}
ifmove ERUPTUP
{
	soundonce GEYSERSND
	ifcount 130 nullop else
	ifcount 120 cactor 2010 else
	ifcount 110 cactor 2009 else
	ifcount 100 cactor 2008 else
	ifcount 90 cactor 2007 else
	ifcount 80 cactor 2006 else
	ifcount 70 cactor 2005 else
	ifcount 60 cactor 2004 else
	ifcount 50 cactor 2003 else
	ifcount 40 cactor 2002 else
	ifcount 30 cactor 2001 else
	cactor 2000
	spawn GEYSERWATER
	cactor BIGGEYSER
	ifcount 156 ifrnd 2
	{
		move ERUPTDOWN
		break
	}
}
ifmove ERUPTDOWN
{
	soundonce GEYSERSND
	ifcount 120 cactor 2000 else
	ifcount 110 cactor 2001 else
	ifcount 100 cactor 2002 else
	ifcount 90 cactor 2003 else
	ifcount 80 cactor 2004 else
	ifcount 70 cactor 2005 else
	ifcount 60 cactor 2006 else
	ifcount 50 cactor 2007 else
	ifcount 40 cactor 2008 else
	ifcount 30 cactor 2009 else
	cactor 2010
	ifvarand timer 1 spawn GEYSERWATER
	cactor BIGGEYSER
	
	ifcount 156
	{
		move WAIT
		cstat 32768
		break
	}
}

enda

useractor notenemy MEDIUMGEYSER 0

ifmove 0
{
	move WAIT
	sizeat 40 4
	cstat 32768
}

ifmove WAIT
{
	ifrnd 12 spawn GEYSERSTEAM
	ifcount 130 ifrnd 2
		move ERUPTUPWAIT
	break
}
ifmove ERUPTUPWAIT
{
	ifrnd 8 spawn GEYSERSTEAM
	ifcount 60 ifrnd 8 move ERUPTUP
	break
}
ifmove ERUPTUP
{
	soundonce GEYSERSND
	ifcount 100 cactor 2005 else
	ifcount 80 cactor 2004 else
	ifcount 60 cactor 2003 else
	ifcount 40 cactor 2002 else
	ifcount 20 cactor 2001 else
	cactor 2000
	spawn GEYSERWATER
	cactor MEDIUMGEYSER
	ifcount 156 ifrnd 2
	{
		move ERUPTDOWN
		break
	}
}
ifmove ERUPTDOWN
{
	soundonce GEYSERSND
	ifcount 100 cactor 2000 else
	ifcount 80 cactor 2001 else
	ifcount 60 cactor 2002 else
	ifcount 40 cactor 2003 else
	ifcount 20 cactor 2004 else
	cactor 2005
	spawn GEYSERWATER
	cactor MEDIUMGEYSER
	ifcount 156
	{
		move WAIT
		cstat 32768
		break
	}
}

enda


eventloadactor LAVASPAWNER cstat 32768 enda

useractor notenemy LAVASPAWNER 0

ifvare mtype 1 killit
ifmove 0
{
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	move INIT
	cstat 32768
	sizeat 2 2
}
ifcount 64
ifrnd 4
{
	move INIT randomangle
	randvar zdist 2048
	subvar zdist 5120
	zshoot zdist LAVAROCK
	resetcount
}
ife mtype 2 // spawned by fire aura enemy
{
	spawn FIREAURA
	add countvar 1
	ife countvar 120 killit
	ifcount 3
	ifrnd 48
	{
		move INIT randomangle
		randvar zdist 2048
		subvar zdist 5120
		zshoot zdist LAVAROCK
		resetcount
	}
}
enda

spritenoshade LAVAIMPACT
spritenopal LAVAIMPACT
action LAVIMPFRAMES 0 6 1 1 10
useractor notenemy LAVAIMPACT 0 LAVIMPFRAMES
ifmove 0
{
	setactor[THISACTOR].shade -127
	ife subtitle_time 0 sound BREAKROCK2
	sizeat 24 24
	spawn LAVASPARK
	spawn LAVASPARK
	spawn LAVASPARK
	ifvarl livemon 100
	ifpdistl 16384
	{
		spawn LAVASPARK
		spawn LAVASPARK
		spawn LAVASPARK
		spawn LAVASPARK
		spawn LAVASPARK
	}
	move INIT
	cstator 128
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
}
ifactioncount 6 killit
enda

spritenoshade ICEMETEOR
spritenopal ICEMETEOR
action ICEMFRAMES -1 1 1 1 1

useractor notenemy ICEMETEOR 0 ICEMFRAMES
ifmove 0
{
	move INIT
	sizeat 48 48
	ifspawnedby SECTOREFFECTOR
	{
		ife mtype 0 { cstat 2 spritepal 1 }
		set weap 1
	}
	else
	{
		ifvare mtype 0
		{
			cstat 2
			spritepal 1
			spawn FREEZEAURA
		}
		else spawn FIREAURA
	}
}
fall

ifcount 2 ifvarg framerate 30
ifvarl livemon 100
ifpdistl 28672
{
	resetcount
	espawn SMALLSMOKE
	ifvare mtype 1 setactor[RETURN].pal 2 else
	setactor[RETURN].pal 1
}
ifvare weap 1
{
	ifpdistl 1280
	{
		// addphealth -2
		setvar tempd -6
		state directdamage
		getplayer[THISACTOR].i spriteid
		getactorvar[spriteid].burning burning
		ifspritepal 1 subvar burning 60 else addvar burning 40
		setactorvar[spriteid].burning burning

		espawn BIGSMOKE
		ife mtype 1 seta[RETURN].pal 2
	
		ifvare mtype 1 
			spawn LAVAIMPACT
		else
			lotsofglass 8	

		killit
	}
}
iffloordistl 4
{
	ifvarand sector[].floorstat 1 { killit break }
	ifvarg framerate 17
	{
		ifpdistl 65536
		{
			espawn BIGSMOKE
			ife mtype 1 seta[RETURN].pal 2
		}
		ifpdistl 32768
		{
			ifvare mtype 1 
				spawn LAVAIMPACT
			else
				lotsofglass 8	
		}
	}
	ifrnd 64
	{
		espawn SOUNDMAKER
		ifvare mtype 1 setactorvar[RETURN].peractor1 BREAKROCK else
		ifrnd 128 setactorvar[RETURN].peractor1 BREAKROCK
		else
		{
			randvar temp 2
			addvar temp 584
			setactorvar[RETURN].peractor1 temp
		}
	}
	ifvare weap 2
	{
		headspritestat temp 1
		whilevarn temp -1
		{
			ifvare actorvar[temp].monstatus 1
			ifvare actorvar[temp].cursed 0
			{
				dist tempb THISACTOR temp
				ifvarl tempb 4096
				{
					shiftvarr tempb 8
					ifvare tempb 0 setvar tempb 1
					setvar tempc 64
					divvarvar tempc tempb
					getactor[temp].htextra tempe
					addvarvar tempe tempc
					setactor[temp].htextra tempe
					setactor[temp].htpicnum RADIUSEXPLOSION
					ifvarand pow 16384
					setactor[temp].htowner player[THISACTOR].i else
					ifvarg myspawner -1
					setactor[temp].htowner player[].i
					
					setvar tempd 16384
					getactor[temp].extra tempb
					ifvarl tempb 1 setvar tempb 1
					divvarvar tempd tempb
					ifvarg tempd 130 setvar tempd 130
					getactorvar[temp].burning tempc
					ifvare mtype 1 addvarvar tempc tempd else
					subvarvar tempc tempd
					setactorvar[temp].burning tempc	
				}
				
			}
			nextspritestat temp temp
		}
	}
	killit
}
enda

useractor notenemy HAILSPAWNER 0

ifmove 0
{
	move INIT
	sizeat 64 64
	cstat 32
}
randvar angvar 2047
setactor[THISACTOR].ang angvar

ifvarl countvar 10
ifcount 3 ifrnd 96
{
	addvar countvar 1
	espawn ICEMETEOR	
	ife target player[].i setav[RETURN].weap 1 else
	setactorvar[RETURN].weap 2
	ifspritepal 2 setactorvar[RETURN].mtype 1
	setactorvar[RETURN].myspawner myspawner
	setvarvar mx sprite[THISACTOR].x
	randvar temp 3072
	addvarvar mx temp
	rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y angvar mx my
	getactor[THISACTOR].z z
	addvar z 2048
	setsprite RETURN mx my z
	
	ifvare mtype 1 killit
}

ifvarg countvar 9 sizeto 0 0


enda


spritenoshade BFGBEAMTRAIL
spritenopal BFGBEAMTRAIL
action BFGBEAMFRAMES -9 9 1 1 2
useractor notenemy BFGBEAMTRAIL 0 BFGBEAMFRAMES

// ifp prunning 
ifpdistl 768 killit
ifmove 0
{
	move INIT
	cstat 130
	cstator 16
	sizeat 8 8
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
}

ifactioncount 4 cstator 512
ifactioncount 9 killit

enda

move SPARKDRIFT 80
spritenoshade BFGIMPACT2
spritenopal BFGIMPACT2
action BFGIMP2FRAMES 0 4 1 1 10
useractor notenemy BFGIMPACT2 0 BFGIMP2FRAMES

ifmove 0
{
	// sound EXPANDERSHOOT
	sound BFGIMP2SND
	move SPARKDRIFT faceplayer
	cstat 130
	sizeat 32 32
	ife ALTFIRING YES sizeat 48 48
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
}

ifactioncount 4 killit


enda

spritenoshade LAVASPARK

action SPARKFRAME -9 1 1
action SPARKFRAME2 -74 1 1
useractor notenemy LAVASPARK 0 SPARKFRAME

ifmove 0
{
	setactor[THISACTOR].shade -127
	// ifspawnedby EXPLOSION2 action SPARKFRAME2
	move SPARKDRIFT randomangle
	sizeat 12 12
	randvar mtype 1024 // 512
	subvar mtype 3072 // 1560
	ifrnd 128 cstator 4
	ifrnd 128 cstator 8
	iffloordistl 4 { geta[].z z sub z 1024 seta[].z z }
}

movesprite THISACTOR 0 0 mtype CLIPMASK0 RETURN
iffloordistl 8
{
	ifvare peractor1 1 killit
	ifrnd 128 killit else
	{
		setvar peractor1 1
		getactor[THISACTOR].z z
		subvar z 1024
		setactor[THISACTOR].z z
		setactor[THISACTOR].zvel -1024
		setvar mtype 0
	}
}
addvar mtype 160
ifvarg mtype 3072 ifrnd 16 killit
ifnotmoving ifcount 3 { resetcount move SPARKDRIFT randomangle ifrnd 64 killit }

enda

defstate breakpotcode

	fall
	ifvarg barbquake 0 { findplayer xydist state barbquakecheck }
	ifhitweapon
	ifdead
	{
		ifg lotag 10
			espawnvar lotag
		
		spawn SMALLSMOKE
		state pottery_debris
		sound VENT_BUST
		killit
	}

ends

useractor notenemy POTWITHSOMETHING 0 state breakpotcode enda
useractor notenemy POTWITHSOMETHING2 0 state breakpotcode enda

spritenoshade GLINT
spritenopal GLINT
useractor notenemy GLINT 0

ifcount 13
{	
	sizeto 0 0
}
else
{
	cstator 128
	sizeto 64 64
}


ifmove 0
{
	setactor[THISACTOR].shade -127
	cstator 2
	seta[].blend 1
	move INIT
	
	ifspawnedby GOLEM
	{
		randvar temp 12288
		getactor[THISACTOR].z z
		subvarvar z temp
		randvar temp 512
		subvar temp 256
		getactor[THISACTOR].x x
		addvarvar x temp
		randvar temp 512
		subvar temp 256
		getactor[THISACTOR].y y
		addvarvar y temp
		setsprite THISACTOR x y z
	}
}


enda

useractor notenemy WEBLINE 0

ifspritepal 3
{
	sizeto 20 255
	sizeto 20 255
	sizeto 20 255
	sizeto 20 255
}
else
{
	sizeto 40 255
	sizeto 40 255
	sizeto 40 255
	sizeto 40 255
}
ifcount 780 killit

enda

action PLASSHIELDFRAMES 0 4 1 1 1
useractor notenemy PLASMASHIELD 0 PLASSHIELDFRAMES
ifmove 0
{
	move INIT
	cstat 403 // 275
	sizeat 32 32
	getplayer[THISACTOR].palookup pal
	setactor[THISACTOR].pal pal
}
setvar shieldup 6
ifp palive
ifvare player[THISACTOR].curr_weapon 9
ifvarg player[THISACTOR].ammo_amount 9 0
// ifvarand bits 268435456 nullop
ifvarand extbits 64 nullop
else {  stopactorsound THISACTOR SHIELDON killit }

ifcount 52
{
	resetcount
	getplayer[THISACTOR].ammo_amount 9 temp
	subvar temp 1
	setplayer[THISACTOR].ammo_amount 9 temp
}

ifhitweapon sound HITSHIELD
strength 0
soundonce SHIELDON

getplayer[THISACTOR].posx x
getplayer[THISACTOR].posy y
getplayer[THISACTOR].posz z
addvar z 2048
getplayer[THISACTOR].ang angvar
setactor[THISACTOR].ang angvar


setvarvar mx x
addvar mx 768

rotatepoint x y mx y angvar mx my
setsprite THISACTOR mx my z

enda

useractor notenemy BARB_BLOCKER 0
ifmove 0
{
	move INIT
	cstat 33041
	// cstat 275
	sizeat 24 32
	
}
ifp palive
ifvare character 1
// ifvarand bits 268435456 nullop
ifvarand extbits 64 nullop
else ifvarg barbshield 0 subvar barbshield 1

ifvarn KICKBACKPIC 0 { setvar barbshield 0 killit }
ifvarl barbshield 1 killit

ifhitweapon
{
	ifwasweapon SLOWBULLET soundonce BLOCK3 else
	ifrnd 96
	soundonce BLOCK1
	else ifrnd 128
	soundonce BLOCK2
	else
	soundonce BLOCK4
}
strength 0

getplayer[THISACTOR].posx x
getplayer[THISACTOR].posy y
getplayer[THISACTOR].posz z
addvar z 6144

getplayer[THISACTOR].horiz temp
subvar temp 100
shiftvarl temp 6
subvarvar z temp

getplayer[THISACTOR].ang angvar
setactor[THISACTOR].ang angvar

setvarvar mx x
ife player[THISACTOR].runspeed SPRINTSPEED add mx 844 else
ifg fhold 0 ifg boost 0 add mx 844 else
ifp prunning ifg fhold 0 addvar mx 644 else
addvar mx 512

rotatepoint x y mx y angvar mx my
setsprite THISACTOR mx my z

enda

action FIRETRAIL2 545 14 1 1 2
spritenoshade FTTRAIL

useractor notenemy FTTRAIL 0 

ifinwater { spawn WATERBUBBLE killit }
ifaction 0
{
	setactor[THISACTOR].shade -127
	action FIRETRAIL2
	ifrnd 128 cstator 4
	ifvarand sprite[THISACTOR].cstat 128
	{
		getactor[THISACTOR].yrepeat y
		shiftvarl y 7
		getactor[THISACTOR].z z
		addvarvar z y
		setactor[THISACTOR].z z
	}
	ifspritepal 1 { ife peractor1 1 cstat 650 else cstat 514 seta[].alpha 250 seta[].blend 1 }
}

sizeto 0 0

ifvarl sprite[THISACTOR].yrepeat 8 killit

ifvarand sprite[THISACTOR].cstat 128
{
	getactor[THISACTOR].z z
	subvar z 160
	setactor[THISACTOR].z z
}
enda

spritenoshade ENERGYEXPL
action AENERGYFRAMES 0 6 1 1 8
useractor notenemy ENERGYEXPL 0 AENERGYFRAMES

ifmove 0
{
	move INIT
	// seta[].blend 1
	// cstator 514
	cstator 128
	espawn LASERHIT
	ifspritepal 0 seta[RETURN].pal 1 else
	seta[RETURN].pal sprite[].pal
	sizeat 48 48
	seta[].shade -96
}

ifactioncount 6 killit

enda

spritenoshade FIRESTARTER
action FSTARTFRAMES -13 14 1 1 3
move FIREVELS1 96
useractor notenemy FIRESTARTER 0 FSTARTFRAMES

ifcount 2 { fall resetcount }
ifmove 0
{
	ifvarl burning 0 spritepal 1
	setactor[THISACTOR].shade -127
	seta[].blend 1
	cstator 2
	sizeat 40 40
	cstat 130
	ifrnd 128 cstator 4
	ifvare peractor1 0
	{
		espawn BIGSMOKE
		ifvarl burning 0 setactor[RETURN].pal 1 else
		setactor[RETURN].pal 2
		move INIT
		ifvare mtype 0 setvar countvarb 16 else setvar countvarb 4
		whilevarvarn countvar countvarb
		{
			addvar countvar 1
			espawn FIRESTARTER
			setactorvar[RETURN].peractor1 1
			ifvarl burning 0 { setactor[RETURN].pal 1 setactorvar[RETURN].burning -30 }
		}
	}
	else move FIREVELS1 randomangle
}

ifvare peractor1 1 
{
	ifinwater { spawn WATERBUBBLE killit }
	ifonwater iffloordistl 4 killit
	sizeto 0 0
	ifvarn mtype 1
	ifrnd 8
	{
		ifrnd 128 espawn BURNING else espawn BURNING2
		ifvarn myspawner -1 setactorvar[RETURN].myspawner myspawner
		ifvarl burning 0 { setactor[RETURN].pal 1 setactorvar[RETURN].burning -30 }
	}
}
else soundonce FIRE_CRACKLE
ifactioncount 28 
{ 
	ifvarl livemon 80
	{
		ifvare peractor1 1 spawn SMALLSMOKE else spawn BIGSMOKE 
	}
	killit
}

getactor[THISACTOR].htmovflag spriteid
ifvarn spriteid 0
{
	// hit something
	sub spriteid 49152
    ifvarl spriteid 16384 ifvarg spriteid -1 
    ifvarvarn spriteid myspawner
    {
        // hit a sprite
        getactor[spriteid].statnum temp
        switch temp
        case 0
        case 1
        case 2
        case 10
        getactorvar[spriteid].burning tempb
        ifvarl burning 0 subvar tempb 26 else
        addvar tempb 26
        setactorvar[spriteid].burning tempb
        ifvare temp 10 ifvarn myspawner -1
	    setvarvar flameowner myspawner
        setvar monstatus 2
        break
        endswitch
        ifvare monstatus 2 killit
    }
}

enda

action STICKYBURN -30 14 1 1 2
action STICKYBURN2 -70 14 1 1 2

spritenoshade STICKYFIRE
useractor notenemy STICKYFIRE 0

ifcount 1 nullop
  else 
    ifcount 0
	{
		set countvar 6
		setactor[THISACTOR].shade -127
		ifn sprite[].pal 4 ifn sprite[].pal 120
		{
			seta[].blend 1
			seta[].alpha 128
		}
		ifrnd 128 action STICKYBURN else action STICKYBURN2
    	ifrnd 128 soundonce FIRE_CRACKLE
    	cstat 130
    	ifrnd 128 cstator 4
		randvar temp 10
		switch temp
		case 0 sizeat 2 5 break
    	case 1 sizeat 2 4 break
		case 2 sizeat 4 4 break
		case 3 sizeat 3 6 break
		case 4 sizeat 5 6 break
		case 5 sizeat 4 8 break
		case 6 sizeat 7 8 break
		case 7 sizeat 5 10 break
		case 8 sizeat 8 10 break
		case 9 sizeat 12 12 break
		case 10 sizeat 10 12 break
    	endswitch
    	
    	ifrnd 96
    	{
	    	getactor[THISACTOR].xrepeat x
	    	mulvar x 2
	    	setactor[THISACTOR].xrepeat x
	    	getactor[THISACTOR].yrepeat y
	    	mulvar y 2
	    	setactor[THISACTOR].yrepeat y
    	}

		ifvarn myspawner -1
		{
			getactor[myspawner].yrepeat y
/*
			switch monstatus
	
			case PIGCOP
			case LIZTROOP
			// x75 y75
			case 3585 case 5086 case 3605 case 3664
			case 3600 case 3617 case 3625 case 3821 case 3825 case 3603 case 3604
			case 3601 case 3629 case 2624 case 3626 case 5092 case 3628 case 3630
			case 7058 case 7059 case 7060 case 7228
			mulvar y 230
			break
			case LIZMAN
			mulvar y 185
			break
			
			case CYBERDEMON
			case CYBERFLOAT
			case BATGUNNER
			case BATGUNNERSTAYPUT
			case BARON
			case BARONSTAYPUT
			ifvarand actorvar[myspawner].monstflags 4 mulvar y 400 else
			mulvar y 300
			
			break
			
			case BOSS1
			case BOSS2
			case BOSS3
			case BOSS4
			// x55 y120
			case 3599 case 3584 case 3587 case 3588 
			case 3607 case 3663 case 5090 case 3635
			// x70 y110
			case 3586
			case 3596 case 3667 case 5088
			// x125 y110
			case 3631 case 3632 case 7056 case 7057 case 7176
			case 3595 case 3606 case 3634 case 3659 case 3660 case 3661
			case 258 case 259 case 4791 case 4792 case 7313
			mulvar y 300
			break
					
			case SPIDER2
			case DRONE
			// x128 y32
			case 256 case 257 case 4789 case 4790
			mulvar y 100
			break
			
			// x90 y165
			case 3608 case 3669 case 3613 case 3611 case 3619
			case 3627 case 3672 case 5093 case 7329
			// x145 y175
			case 3602 case 3639 case 3640 case 3670
			// y 128
			case 300 case 301 case 302
			mulvar y 512
			break
			
			// x115 y186
			case 3597 case 3666 case 5089 case 3592 case 3612 case 3638 case 3641 case 3671
			case 3623 
			case 3665 
			case 5091 
			case 3614
			case 7055 case 7185
			mulvar y 644
			break
			
			case KORAX
			mulvar y 400
			break

			// x256 y256
			case 3925 case 306 case 307 case 310 case 311 case 313 
			// 311 and 313 are webs and have burnt frames
			case 3593 case 3594 case 3668 case 5087
			mulvar y 844
			break
			
			case GOLEM
			ifvare sprite[myspawner].pal 10 mulvar y 10
			else mulvar y 230
			break
			
			case DETHNITE
			ifvare sprite[myspawner].pal 24
			{
				mulvar y 64
				setvar mtype 6144 // forces it off the ground
			}
			else mulvar y 230
			break
				
			default
			mulvar y 230
			break
			endswitch
*/
			mul y tiledata[monstatus].ysize
			mul y 3
			randvarvar tempb y
			addvarvar tempb mtype
		  	getactor[myspawner].z mz
		   	subvarvar mz tempb
		  	setactor[THISACTOR].z mz
	  	}
	}

ifvarn myspawner -1 ifvarg countvar 5
{
	setvar countvar 0
	getactor[myspawner].statnum temp
	ifvare temp 1024 setvar myspawner -1 else
	{
		getactor[myspawner].picnum temp
		ifvarvarn temp monstatus setvar myspawner -1 else
		{
			getactor[myspawner].xrepeat tempb
/*
			switch monstatus
			case CYBERDEMON
			case BOSS1
			case BOSS2
			case BOSS3
			case BOSS4
			// x115 y186
			case 3597 case 3666 case 5089 case 3592 case 3612 case 3638 case 3641 case 3671
			case 3623 case 3665 case 5091 case 3614
			// x128 y32
			case 256 case 257 case 4789 case 4790
			// x125 y110
			case 3631 case 3632 case 7056 case 7057 case 7055 case 7185
			case 3595 case 3606 case 3634 case 3659 case 3660 case 3661
			case 258 case 259 case 4791 case 4792 case 7313
			mulvar tempb 7
			break
			
			// x145 y175
			case 3602 case 3639 case 3640 case 3670
			mulvar tempb 9
			break
			
			// x55 y120
			case 3599 case 3584 case 3587 case 3588 
			case 3607 case 3663 case 5090 case 3635
			mulvar tempb 3
			break
			
			// x75 y75
			case 3585 case 5086 case 3605 case 3664
			case 3600 case 3617 case 3625 case 3821 case 3825 case 3603 case 3604
			case 3601 
			case 3629 case 7059
			case 2624 
			case 3626 
			case 5092 
			case 3628 case 7060
			case 3630 case 7058
			case 3586
			case 3596 case 3667 case 5088 case 7176 case 7228
			// x 64
			case 302
			mulvar tempb 4
			break
			
			// x256 y256
			case 3925 case 306 case 307 case 310 case 311 case 313 // 311 and 313 are webs and have burnt frames
			case 300 case 301
			case 3593 case 3594 case 3668 case 5087
			mulvar tempb 16
			break
			
			default mulvar tempb 4
			break
			
			endswitch
*/
			mul tempb tiledata[monstatus].xsize
			div tempb 12
			
			getactor[myspawner].x mx
			getactor[myspawner].y my
			randvarvar temp tempb
		    ifrnd 128 addvarvar mx temp else subvarvar mx temp
		    randvarvar temp tempb
			ifrnd 128 addvarvar my temp else subvarvar my temp
			// setactor[THISACTOR].x mx
			// setactor[THISACTOR].y my
			setsprite THISACTOR mx my sprite[].z
		}
	}
}
// addvar countvar 1

seta[].htbposx sprite[].x
seta[].htbposy sprite[].y
seta[].htbposz sprite[].z

ifcount 14 nullop else ifcount 13 ifrnd 48 spawn SMALLSMOKE
ifcount 14 sizeto 0 0
enda


action AMINSTAND 299 1 8 1 10
action AMINWALK  0 4 8 1 14
action AMINRUN   0 4 8 1 8
action AMINRUNBACK 24  4  8  -1  8

action AMINSMASH -27 3 8 1 8
action AMINRETRACT -11 3 8 -1 14
action AMINFLINCH 32 1 8 1 12
action AMINCHARGE 40 1 8 1 10
action AMINSTRIKE 40 3 8 1 8
action AMINRETRACT2 56 2 8 -1 10

move MINSLOWVEL 192
move MINFASTVEL 380
move MINCHARGEVEL 644
move AMINBACKVEL -256

ai AIMINBACK AMINRUNBACK AMINBACKVEL geth
ai AIMINFOLLOW AMINWALK MINSLOWVEL seekplayer faceplayerslow faceplayerslow
ai AIMINGETENEMY AMINRUN MINFASTVEL geth
ai AIMINSMASH AMINSMASH STOPPED geth
ai AIMINWAIT AMINSTAND STOPPED geth
ai AIMINCHARGE AMINCHARGE MINCHARGEVEL geth

state minbackstate

ifcount 30
{
	ifn target -1 ai AIMINCHARGE else
	ai AIMINFOLLOW
}

ends

state minfollowstate

ifvarn target -1
{
	ai AIMINGETENEMY
	break
}
ifcansee
{
	ifpdistl 2048 { ai AIMINWAIT break }
	ifpdistg 4096
	{
		ifmove MINSLOWVEL 
		{
			action AMINRUN
			move MINFASTVEL seekplayer faceplayerslow
		}
	}
	ifpdistl 3584
	{
		ifmove MINFASTVEL 
		{
			action AMINWALK
			move MINSLOWVEL seekplayer faceplayerslow
		}
	}
	ifrnd 1 ifrnd 128 soundonce MINROAM
} else
ifmove MINSLOWVEL
{
	action AMINRUN
	move MINFASTVEL seekplayer faceplayerslow
}

ifcount 90
ifpdistg 16384
{
	ai AIMINWAIT
	spawn TRANSPORTERSTAR
	setsprite THISACTOR player[].posx player[].posy player[].posz
	spawn TRANSPORTERSTAR
	sound TELEPORTER
}

ends

state minwaitstate
ifvarn target -1
{
	ai AIMINGETENEMY
	break
}
ifcansee ifpdistl 2560 nullop
else
ifcount 10
ai AIMINFOLLOW
ends

state mingetenemystate
ifvare target -1
{
	ai AIMINWAIT
	break
}

ldist xydist2 THISACTOR target
iffloordistl 8
ifvarl xydist2 512 
{
	ai AIMINBACK
	break
}
	
ifvarl xydist 1280
{
	ai AIMINSMASH
	ifrnd 128 action AMINSTRIKE
	sound SWORDSWING
	break
}
else
ifg xydist 6144
ifrnd 16
{
	ai AIMINCHARGE
	sound MINATK1
}
else
ifrnd 8
{
	ai AIMINCHARGE
	sound MINATK1
}

ends

state apply_element

	ife target -1 break
	rand temp 3
	switch temp
	case 0 // knockback
		cos xvel sprite[].ang
		sin yvel sprite[].ang
		seta[target].htpicnum KNEE
		sound THUMPIN
		shiftr xvel 2 shiftr yvel 2
		movesprite target xvel yvel 0 CLIPMASK0 RETURN
	break

	case 1 // burning
		getav[target].burning tempb
		ifge tempb 0 add tempb 90 else sub tempb 90
		setav[target].burning tempb
	break
	
	case 2 // freezing
		getav[target].burning tempb
		ifle tempb 0 sub tempb 90 else add tempb 90
		setav[target].burning tempb
	break
	
	case 3 // shocking
		espawn SHOCK_ACTOR
		setav[RETURN].myspawner target
		espawn SHOCK_ACTOR
		setav[RETURN].myspawner target
		seta[target].xvel 0
	break
	
	endswitch

ends

state minsmashstate

state motionblur

ifaction AMINSMASH
{
	ifg xydist 1280
	{
		ifmove MINFASTVEL nullop else move MINFASTVEL geth
	}
	else ifl xydist 768 ifmove MINFASTVEL move STOPPED geth
	ifactioncount 3
	{
		ifvarn target -1
		{
			ifvarl xydist 1536
			ifvarand sprite[target].cstat 256
			{
				ifrnd 128 sound THUMPIN else sound AXEHIT
				getactor[target].htextra temp
				randvar tempb 12
				addvar tempb 48 // 30
				addvarvar temp tempb
				// ifvarvare target bossid divvar temp 3
				setactor[target].htextra temp
				setactor[target].htpicnum SHOTSPARK1
				
				ife peractor1 1 seta[target].htowner player[].i 
				else
				seta[target].htowner THISACTOR
				
				// ifvare sprite[target].picnum APLAYER setactor[target].htowner player[].i
				// else
				// setactor[target].htowner THISACTOR
				setactor[target].htang sprite[].ang
				
				state apply_element
			}
			
		}
		action AMINRETRACT
		move STOPPED geth
	}
} else
ifaction AMINSTRIKE
{
	ifg xydist 1280
	{
		ifmove MINFASTVEL nullop else move MINFASTVEL geth
	}
	else ifl xydist 768 ifmove MINFASTVEL move STOPPED geth
	ifactioncount 3
	{
		ifvarn target -1
		{
			ifvarl xydist 1536
			ifvarand sprite[target].cstat 256
			{
				ifrnd 128 sound THUMPIN else sound AXEHIT
				getactor[target].htextra temp
				randvar tempb 10
				addvar tempb 40 // 22
				addvarvar temp tempb
				// ifvarvare target bossid divvar temp 3
				setactor[target].htextra temp
				setactor[target].htpicnum SHOTSPARK1
				ife peractor1 1 seta[target].htowner player[].i 
				else
				seta[target].htowner THISACTOR
				
				// ifvare sprite[target].picnum APLAYER setactor[target].htowner player[].i
				// else
				// setactor[target].htowner THISACTOR
				
				setactor[target].htang sprite[].ang
				state apply_element
			}
			
		}
		action AMINRETRACT2
		move STOPPED geth
	}
} else
ifaction AMINRETRACT
{
	ifactioncount 3
	{
		ifvarn target -1
		ifvarl xydist 1536
		{
			ifrnd 128 action AMINSMASH else
			action AMINSTRIKE
			sound SWORDSWING
		}
		else ai AIMINWAIT
	}
	
} else
ifaction AMINRETRACT2
{
	ifactioncount 2
	{
		ifvarn target -1
		ifvarl xydist 1536
		{
			ifrnd 128 action AMINSMASH else
			action AMINSTRIKE
			sound SWORDSWING
		}
		else ai AIMINWAIT
	}	
}
ends

state minchargestate

// spawn FRAMEEFFECT1
espawn MINOTRAIL
setav[RETURN].myspawner THISACTOR

ifn target -1
ldist xydist2 THISACTOR target
else set xydist2 5120

ifcount 60
{
	ai AIMINWAIT
	break
}
ifnotmoving
{
	quake 30
	globalsound BIGTHUD
	debris SCRAP1 5
	debris SCRAP2 5
	debris SCRAP3 5
	debris SCRAP4 5
	debris SCRAP5 5
	getactor[THISACTOR].htmovflag spriteid
	addvar spriteid 16384
	ifvarl spriteid 16384 ifvarg spriteid -1
	{
		ifvare actorvar[spriteid].monstatus 1
		{
			getactor[spriteid].htextra tempc
			randvar tempb 40
			addvar tempb 160
			addvarvar tempc tempb
			// ifvarvare spriteid bossid shiftvarr tempc 1
			setactor[spriteid].htextra tempc
			setactor[spriteid].htpicnum RPG
			ife peractor1 1 seta[spriteid].htowner player[].i 
			else
			seta[target].htowner THISACTOR
				
			// ifvare sprite[target].picnum APLAYER setactor[target].htowner player[].i
			// else
			// setactor[target].htowner THISACTOR
			setactor[spriteid].htang sprite[].ang
			state randsquishsound
		}
	}
	ai AIMINWAIT
	
}
ifvarn target -1
{
	ifvarvarl sprite[target].z sprite[THISACTOR].z
	{
		geta[].z z
		geta[target].z mz
		sub mz z
		shiftl mz 9
		ife mz 0 set mz 1
		div mz xydist2
		movesprite THISACTOR 0 0 mz CLIPMASK0 RETURN
	}
	else
	ifvarvarg sprite[target].z sprite[THISACTOR].z
	fall
	
	ifvarl xydist2 384 ai AIMINBACK
}
ends

useractor notenemy MINOTAUR 30000

ifai AIMINCHARGE nullop else
fall
ifmove 0
{
	move INIT
	// sizeat 48 42
	sizeat 39 37
	clipdist 80
	ai AIMINWAIT
	// ifvare myspawner -1 setvar myspawner 0
	cstat 256
	setvar monstatus 3
}

state targetsearch
ifvarn target -1
{
	ifvare actorvar[target].monstatus 2 setvar target -1 else
	ifvarn sprite[target].statnum 1 
	ifvarn sprite[target].statnum 10
	setvar target -1 
	else
	{
		getactor[target].x mx
		getactor[target].y my
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		subvarvar mx x
		subvarvar my y
		getangle angvar mx my
		setactor[THISACTOR].ang angvar
		dist xydist THISACTOR target
	}
}

ifaction AMINFLINCH
{
	ifvarl fear 0 resetactioncount
	ifactioncount 3 ai AIMINWAIT
}
else
ifai AIMINFOLLOW state minfollowstate else
ifai AIMINWAIT state minwaitstate else
ifai AIMINGETENEMY state mingetenemystate else
ifai AIMINSMASH state minsmashstate else
ifai AIMINCHARGE state minchargestate else
ifai AIMINBACK state minbackstate

ifvarg sprite[THISACTOR].htextra 20
ifrnd 48 
{
	action AMINFLINCH
	sound ETTINPAIN
	move STOPPED
}
ifhitweapon strength 30000

ifspritepal 3 ifvare powcount 0 state minodie
ifvare monstatus 2 state minodie
// ifvarn player[].dead_flag 0 state minodie

enda

action AMINTRAIL 0  1  8  1  10
useractor notenemy MINOTRAIL 0 AMINTRAIL

ifmove 0
{
	move STOPPED
	seta[].xrepeat sprite[myspawner].xrepeat
	seta[].yrepeat sprite[myspawner].yrepeat
	seta[].alpha 50
	seta[].ang sprite[myspawner].ang
	seta[].pal sprite[myspawner].pal
}
ifcount 3 killit

enda

action AHEROSTAND 0 1 8 1 20
action AHEROWALK 0 4 8 1 20
action AHERORUN 0 4 8 1 14
action AHEROWAIT 32 1 5 1 20
action AHEROSTRIKE 32 3 8 1 10
action AHERORETRACT 48 3 8 -1 10
action AHEROFLINCH 56 1 8 1 30
action AHERODIE 64 9 1 1 12 
action AHEROJIB 73 9 1 1 12
action AHERODEAD 72 1 1 1 10
action AHEROJIBBED 81 1 1 1 10

move HEROWALKVEL 96
move HERORUNVEL 160

ai AIHEROWANDER AHEROWALK HEROWALKVEL geth
ai AIHEROWAIT AHEROWAIT STOPPED geth
ai AIHEROCHARGE AHERORUN HERORUNVEL geth
ai AIHEROSTRIKE AHEROSTRIKE STOPPED geth
ai AIHERODYING AHERODIE STOPPED geth
ai AIHEROFLINCH AHEROFLINCH STOPPED geth
ai AIHEROFOLLOW AHERORUN HERORUNVEL seekplayer

state herofollowstate

ifvare fear NO ifcount 52 ai AIHEROWANDER

ifvarn target -1 ai AIHEROCHARGE

ifpdistl 1024 { ai AIHEROWAIT count 60 }

ends

state herowaitstate

ifcount 78
ifpdistg 1280
	ai AIHEROWANDER

ends

state herowanderstate

ifnotmoving ifcount 20
move HEROWALKVEL randomangle

ifvare fear YES ifpdistl 6144 ai AIHEROFOLLOW

ifvarn target -1 ai AIHEROCHARGE

ends

state herodyingstate

ifvare monstatus 2
break

ifactioncount 9
{
	ifaction AHERODIE action AHERODEAD else
	action AHEROJIBBED
	cstat 0
	setvar monstatus 2
}

ends

state herochargestate

ifvare target -1
{
	ai AIHEROWANDER
	break
}

ifvarl xydist 768
{
	ai AIHEROSTRIKE
	sound SWORDSWING
	break
}

ends

state herostrikestate

state motionblur

ifaction AHEROSTRIKE
{
	ifactioncount 3
	{
		ifvarn target -1
		{
			ifvarl xydist 1024
			{
				ifrnd 128 sound THUMPIN else sound AXEHIT
				state calczdist
				shiftvarl zdist 8
				divvarvar zdist xydist
				zshoot zdist MONSTERBITE
				zshoot zdist MONSTERBITE
				ifvare actorvar[target].target -1
				{
					setactorvar[target].target THISACTOR
					setactorvar[target].targetlock 52
				}
			}
			
		}
		action AHERORETRACT
	}
} else
ifaction AHERORETRACT
{
	ifactioncount 3
	{
		ifvarn target -1
		ifvarl xydist 1280
		{
			action AHEROSTRIKE
			sound SWORDSWING
		}
		else ai AIHEROWANDER
	}
	
}

ends

state heroflinchstate

setvar target -1
ifvarl fear 0 resetactioncount
ifactioncount 2
{
	ai AIHEROWANDER
	move HEROWALKVEL randomangle
}
ends

eventloadactor HERO

sizeat 30 28
ifspritepal 4
{
	cstat 32768
	setvar mtype 1
	setvar monstatus -1
}
setvar monstatus 3
setvar countvar -1 // do not teleport away

enda

useractor notenemy HERO HEROSTRENGTH

ifvare monstatus -1 killit // player has exited level previously
ifvare mtype 1 break

ifvare LEVEL 0 setvar countvar 0


getactor[THISACTOR].z z
subvar z 8192
setactor[THISACTOR].z z	
ifcansee setvar fear YES else setvar fear NO // fear var is used for visibility
addvar z 8192
setactor[THISACTOR].z z

// ifonwater ifnotmoving state getoutofwater


fall

ifai AIHERODYING { state herodyingstate break }

ifvare target -1 ifvarg countvar -1 addvar countvar 1
else ifvarg countvar 4653 addvar countvar 1
ifvare countvar 4654
sound GOODBYE
ifvarg countvar 4680
{
	sound TELEPORTER
	getactor[THISACTOR].z z
	subvar z 8192
	setactor[THISACTOR].z z
	spawn TRANSPORTERSTAR
	killit
}

ifai 0
{
	ai AIHEROWAIT
	sizeat 30 28
	cstat 257
	spriteflags 17
	ifvare monstatus 0
	{
		setvar monstatus 3
		randvar temp 9
		ifvare temp 0 spritepal 0
		ifvare temp 1 spritepal 10
		ifvare temp 2 spritepal 12
		ifvare temp 3 spritepal 14
		ifvare temp 4 spritepal 16
		ifvare temp 5 spritepal 18
		ifvare temp 6 spritepal 19
		ifvare temp 7 spritepal 20
		ifvare temp 8 spritepal 21
		ifvare temp 9 spritepal 23
	}
}

ifactornotstayput state avoidwater
ifactornotstayput state avoidcliffs

state targetsearch
ifvarn target -1
{
	ifvare actorvar[target].monstatus 2 setvar target -1 else
	ifvarn sprite[target].statnum 1 
	setvar target -1 
	else
	{
		getactor[target].x mx
		getactor[target].y my
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		subvarvar mx x
		subvarvar my y
		getangle angvar mx my
		setactor[THISACTOR].ang angvar
		
		dist xydist THISACTOR target
	}
}

ifai AIHEROWAIT state herowaitstate else
ifai AIHEROWANDER state herowanderstate else
ifai AIHEROCHARGE state herochargestate else
ifai AIHEROSTRIKE state herostrikestate else
ifai AIHEROFLINCH state heroflinchstate else
ifai AIHEROFOLLOW state herofollowstate

ifmove STOPPED nullop else state stepsounds

ifhitweapon
{
	
	state random_wall_jibs
	ifdead
	{
		userquote 414
		ifwasweapon RPG
		{
			state standard_jibs
			ai AIHERODYING
			action AHEROJIB
			state randsquishsound
			break
		}
		ifwasweapon RADIUSEXPLOSION
		{
			state standard_jibs
			ai AIHERODYING
			action AHEROJIB
			state randsquishsound
			break
		}
		ifrnd 128 sound HERODIE1 else sound HERODIE2
		ai AIHERODYING
		break
	}
	else 
	{
		ifvarvare sprite[THISACTOR].htowner player[THISACTOR].i
		{
			addvar weap 1
			ifvare weap 1 sound FFIRE1 else
			{
				randvar temp 2
				ifvare temp 2 sound FFIRE3 else
				ifvare temp 1 sound FFIRE2 else
				sound FFIRE1
			}
		}
		else
		sound HEROPAIN
	}
	ifai AIHEROWANDER ai AIHEROFLINCH else
	ifrnd 64 { ai AIHEROFLINCH setvar target -1 }
}
else
ifvare target -1
ifpdistl 1280
ifp pfacing
ifhitspace
{
	ai AIHEROWAIT
	soundonce HERORND3
}

enda

eventloadactor CHARCHANGER sizeat 26 24 spritepal 17 enda

action BARBWAITING 0 1 5 1 1
action DUKEWAITING 109 1 5 1 1
useractor notenemy CHARCHANGER 0

ifaction BARBWAITING nullop else
ifvare character 0 action BARBWAITING 

ifaction DUKEWAITING nullop else
ifvare character 1 action DUKEWAITING 

ifmove 0
{
	move INIT
	fall
	cstat 257
	spritepal 17
	sizeat 30 28
}

ifp pfacing
ifpdistl 1280
ifp palive
ifcansee
ifg character -1
ife switchchar 0
ife endlevel 0
ife sleeping 0
{
	setvar ftq 600 
	ifl fta 60 set fta QUOTETIME
	ifhitspace
	{
		stopsound DUKE_GRUNT
		stopsound DUKE_SEARCH stopsound DUKE_SEARCH2
		stopsound BARBEXERT stopsound BARBEXERT2
		resetcount
		set switchchar 40
		randvar temp 4
		ifvare temp 0 screensound LIGHTN1 else
		ifvare temp 1 screensound LIGHTN2 else
		ifvare temp 2 screensound LIGHTN3 else
		ifvare temp 3 screensound LIGHTN4 else
		ifvare temp 4 screensound LGTNSND
	}
}
else ifg fta 0 ife ftq 600 set fta 0

enda

eventloadactor KHANNASTAND
sizeat 22 20
cstat 257
enda

eventloadactor KHANNASIPHON
sizeat 22 20
geta[].lotag lotag
seta[].lotag 0
geta[].hitag hitag
seta[].hitag 0
ifn lotag 0 cstat 32768
else cstat 257
enda

action AKHANNASTAND 0  1  5  1  10
action AKSIPHON2 5  1  5  1  10
action AKSIPHON3 0  1  5  1  10
action AKSIPHON4 10 1  5  1  10
action AKSIPHONHURT 15  1  5  1  10
useractor notenemy KHANNASTAND 0 AKHANNASTAND

ifmove 0
{
	move STOPPED faceplayerslow
}
fall

enda

useractor notenemy DEMONOVASTAND 0 AKHANNASTAND

ifmove 0
{
	move STOPPED faceplayerslow
}
fall

enda

useractor notenemy AXONSTAND 0 AKHANNASTAND

ifmove 0
{
	move STOPPED faceplayerslow
}
fall

enda

useractor notenemy KHANNASIPHON 0 AKHANNASTAND

ifn lotag 0 break
ifmove 0
{
	move STOPPED geth
	cstat 257
	seta[].mdflags 16
	setvar command 32768 // float flag
	geta[].x initx
	geta[].y inity
	geta[].z initz
}
seta[].x initx
seta[].y inity
seta[].z initz
ife mtype 0
{
	ifcount 5
	{
		resetcount
		geta[].z z
		sub z 6144
		espawn GLARESPRITE
		getactor[].x mx
		addvar mx 768
		rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y sprite[THISACTOR].ang x y
		setsprite RETURN x y z
		
		findnearactor ARCHON 10240 spriteid
		ifn spriteid -1
		{
			espawn GLARESPRITE
			seta[RETURN].htpicnum ARCHON
			geta[spriteid].z z, sub z 8192
			setsprite RETURN sprite[spriteid].x sprite[spriteid].y z
		}
	}
}
else ife mtype 1
{
	ifaction AKHANNASTAND
		action AKSIPHON2
	else ifactioncount 10
	{
		action AKSIPHON3
		set mtype 2
		set spriteid 0
		whilevarn spriteid 16384
		{
			ife sprite[spriteid].picnum ENERGYBALL
			ife hitag actorvar[spriteid].lotag
			ife actorvar[spriteid].hitag 0
				set target spriteid
			add spriteid 1
			ifn target -1 set spriteid 16384
		}
		ifn target -1
		{
			geta[target].x mx
			geta[target].y my
			sub mx sprite[].x
			sub my sprite[].y
			getangle angvar mx my
			setactor[THISACTOR].ang angvar
		}
	}
}
else
ife mtype 2
{
	add countvar 1
	
	ifg countvar 300 
	{
		set mtype 3
		cstator 256
		clipdist 64
		action AKSIPHON2
		ifhitweapon strength 1000
		findnearsprite ARCHON 16384 target
		ifn target -1
		{
			geta[target].x mx
			geta[target].y my
			sub mx sprite[].x
			sub my sprite[].y
			getangle angvar mx my
			setactor[THISACTOR].ang angvar
		}
	}
	else
	ifcount 6
	{
		resetcount
		state hitscan_targetprep
		zshoot zdist SHOCKBEAM
	}
}
else
ife mtype 3
{
	ifhitweapon
	{
		geta[].htowner spriteid
		ifn spriteid -1
		{
			ife sprite[spriteid].picnum ARCHON
			action AKSIPHONHURT
			set burning 100
			espawn STICKYFIRE
			setactorvar[RETURN].monstatus sprite[].picnum
			setactorvar[RETURN].myspawner THISACTOR
		}
	}
	ife subtitle_start 2085
	ife subtitle_time 0 set mtype 4 // failsafe
}
else ife mtype 4
{
	spritepal 21
	action AKSIPHON4
	set burning 0
	set subtitle_start 2089
	set subtitle_numlines 3
	set subtitle_time 540
	screensound DARKHANNA_SPEECH
	screensound DARKHANNA_SPEECH
	
	setvar htg5 0
	getactor[THISACTOR].x mx
	addvar mx 640
	getactor[THISACTOR].z mz
	subvar mz 6144
	whilevarn htg5 2048
	{
		espawn AXONAURA
		rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y htg5 hitx hity
		setsprite RETURN hitx hity mz
		setactorvar[RETURN].peractor1 1
		setactorvar[RETURN].countvar htg5
		setactorvar[RETURN].myspawner THISACTOR
		seta[RETURN].pal 2
		seta[RETURN].shade -100
		addvar htg5 512
	}
	set htg5 -1
	set mtype 5
}
else ife mtype 5
{
	ife subtitle_start 2089
	ifle subtitle_time 1
	{
		set mtype 6
		set subtitle_start 2088
		set subtitle_numlines 1
		set subtitle_time 180
		screensound ARCH_SUFFER
		screensound ARCH_SUFFER
	}
}
enda

eventloadactor BADKING
geta[].lotag lotag
seta[].lotag 0
geta[].yvel activator
seta[].yvel 0
enda

action ASLIMEHATCH 0 12 1 1 28
action ASLIMESTAND 0 1 5 1 10
action ASLIMEWALK 5 4 5 1 12
action ASLIMECAST 25 5 1 1 18
action ASLIMEHURT 30 1 5 1 30
action ASLIMEDYING 35 9 1 1 18
action ASLIMEDEAD 43

move SLIMEWALKVEL 96
move SLIMERUNVEL 192

ai AISLIMEWALK ASLIMEWALK SLIMEWALKVEL seekplayer
ai AISLIMECAST ASLIMECAST STOPPED faceplayer
ai AISLIMEDYING ASLIMEDYING STOPPED faceplayer

useractor enemy BADKING 0

ifn lotag 0 break

cactor SLIMEKING

enda


useractor enemy SLIMEKING 6000

ifaction 0
{
	action ASLIMEHATCH
	cstat 257
	screensound ZOMBIEDIE
	ifspawnedby APLAYER sizeat 40 36
}

fall
ifaction ASLIMEHATCH
{
	guts JIBS6 1
	add countvar 1
	ife countvar 20 screensound ZOMBIEBITE
	ife countvar 40 screensound VOMIT
	ifactioncount 12
	{
		espawn 8633
		seta[RETURN].xrepeat sprite[].xrepeat
		seta[RETURN].yrepeat sprite[].yrepeat
		cactor SLIMEBOSS
		strength 6000
		action ASLIMESTAND
		set mtype -1
	}
}

enda

state slimedyingstate
	
	ifaction ASLIMEDYING
	{
		ifactioncount 8 action ASLIMEDEAD
	}

ends

state slimebossteleport

	set saveit 0
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ife sprite[spriteid].picnum BOSSPATH
		ifn spriteid mtype
		{
			setarray temparray[saveit] spriteid
			add saveit 1
		}
		nextspritestat spriteid spriteid
	}
	randvarvar temp saveit
	set mtype temparray[temp]
	
	getflorzofslope sprite[mtype].sectnum sprite[mtype].x sprite[mtype].y z
	setsprite THISACTOR sprite[mtype].x sprite[mtype].y z

ends

state slimecaststate

	ifactioncount 5
	{
		sound WIZFLAME
		espawn BIGSMOKE
		seta[RETURN].pal 8
		
		set countvar 0
		geta[].x initx
		geta[].y inity
		
		
		getactor[THISACTOR].x x

		whilevarn countvar 2048
		{
			set mx initx
			add mx 1280
			rotatepoint initx inity mx inity countvar temp tempb
			updatesectorz temp tempb sprite[].z sect
			ifn sect -1 setsprite THISACTOR temp tempb sprite[].z
			espawn BIGSMOKE
			seta[RETURN].pal 8
			add countvar 256
		}
		setsprite THISACTOR initx inity sprite[].z
		espawn KAMIKAZE
		seta[RETURN].pal 14
		setav[RETURN].droptile 1
		
		ife weap 2
		{
			rand temp 9
			switch temp
			case 0 spawn SAWFUEL break
			case 1 spawn AMMO break
			case 2 spawn SHOTGUNAMMO break
			case 3 spawn BATTERYAMMO break
			case 4 spawn RPGAMMO break
			case 5 spawn HBOMBAMMO break
			case 6 spawn FLAMEAMMO break
			case 7 spawn PLASMAAMMO break
			case 8 spawn REVOLVERAMMO break
			case 9 spawn GRENADEAMMO break
			endswitch
		}
		
		ife weap 4
		ai AISLIMEWALK
		else
		{
			add weap 1
			resetactioncount
			state slimebossteleport
		}
	}
		
	

ends

useractor enemy SLIMEBOSS 3000

ifai AISLIMEDYING
{
	state slimedyingstate
	break
}
sizeto 44 40
ifaction 0 action ASLIMESTAND

ifaction ASLIMESTAND
	ifcount 15 ai AISLIMEWALK
else
ifaction ASLIMEHURT
{
	ifcount 12 
	{
		ifrnd 128 ai AISLIMECAST
		else
		ai AISLIMEWALK
	}
}
else
ifai AISLIMEWALK
{
	
	ifnotmoving 
	{
		ifrnd 64 { ai AISLIMECAST set weap 0 }
		else
		move SLIMEWALKVEL randomangle
	}
	else ifcount 90 ifrnd 8 move SLIMEWALKVEL seekplayer
	
	ifcount 30 ifrnd 4 { ai AISLIMECAST set weap 0 }
}
ifai AISLIMECAST state slimecaststate
fall
state monsterai
ifhitweapon
{
	spritepal 6
	guts JIBS6 1
	getlastpal
	ifdead
	{
		globalsound ZDIE
		addkills 1 add globalkills 1
		state specialdeath
		cstat 0
		ai AISLIMEDYING
		break
	}
	else soundonce ZOMBIEDIE
	ifai AISLIMEWALK
	{
		set temp 0
		ifg bleeding 100 ifrnd 128 set temp YES else
		ifrnd 8 set temp YES
		ife temp YES 
		{
			action ASLIMEHURT
			state randsquishsound
		}
	}
}
enda

action BARBSTATUEFRAME  0 1 5 1 1

eventloadactor BARBSTATUE

	getactor[THISACTOR].lotag lotag
	setactor[THISACTOR].lotag 0
	action BARBSTATUEFRAME
	sizeat 36 34
	state eventloadactorstate
enda

actor BARBSTATUE 1000

action BARBSTATUEFRAME
cstator 257
ifvarn lotag 0 
{
	resetcount 
	checkactivatormotion lotag
	ifvare RETURN 1 setvar lotag 0 
    fall 
	break
}
fall
soundonce CRUMBLE
debris SCRAP2 1
debris SCRAP3 1
debris SCRAP4 1
debris SCRAP5 1
strength 1000
setactor[THISACTOR].htextra -1
ifcount 2 nullop else ifcount 1
{
	quake 30 
	state spawnlightbugs
}
ifcount 30
{
	spritepal 0
	setvar command 0
	cactor BARBNPC
	globalsound BARBTAUNT4
	ifvarand charlocked 2 nullop else
	{
		orvar charlocked 2
		setvar bigmsg 444 setvar bigmsgcount 104
		setvar charwritten YES
		savegamevar charlocked
	}
	ifvarand fintips 16777216 nullop else
    {
      setvar currtip2 0 setvar currtip 16777216
      orvar fintips 16777216
      state inithelp
    }
}
enda

action ABARBBLOCK 35 1 5 1 20
action ABARBWALK 0 4 5 1 20
action ABARBRUN 0 4 5 1 14
action ABARBWAIT 35 1 5 1 20
action ABARBSTRIKE 20 3 5 1 15
action ABARBSTRUCK 30 1 5 1 10

action ABARBFLINCH 25 1 5 1 30
action ABARBDIE 41 7 1 1 12 
action ABARBJIB 48 7 1 1 12
action ABARBDEAD 47 1 1 1 10
action ABARBJIBBED 54 1 1 1 10

move BARBWALKVEL 160
move BARBRUNVEL 256

ai AIBARBWANDER ABARBWALK BARBWALKVEL geth
ai AIBARBWAIT ABARBBLOCK STOPPED geth
ai AIBARBCHARGE ABARBRUN BARBRUNVEL geth
ai AIBARBSTRIKE ABARBSTRIKE STOPPED geth
ai AIBARBDYING ABARBDIE STOPPED geth
ai AIBARBFLINCH ABARBFLINCH STOPPED geth
ai AIBARBFOLLOW ABARBRUN BARBRUNVEL seekplayer
ai AIBARBBLOCK ABARBBLOCK STOPPED geth

state BARBfollowstate

ifvare fear NO ifcount 52 ai AIBARBWANDER

ifvarn target -1 ai AIBARBCHARGE

ifpdistl 1024 { ai AIBARBWAIT count 60 }

ends

state BARBblockstate

ifcount 14
{
	ifvarn target -1
	{
		ifvarl xydist 1024
		ai AIBARBSTRIKE
		else ai AIBARBCHARGE
	}
	else ai AIBARBFOLLOW
}

ends

state BARBwaitstate

ifcount 78
ifpdistg 1280
	ai AIBARBWANDER

ends

state BARBwanderstate

getactor[THISACTOR].ang angvar
ifbulletnear ifrnd 32 { ai AIBARBBLOCK break }
setactor[THISACTOR].ang angvar

ifnotmoving ifcount 20
move BARBWALKVEL randomangle

ifvare fear YES ifpdistl 6144 ai AIBARBFOLLOW

ifvarn target -1 ai AIBARBCHARGE

ends

state BARBdyingstate

ifvare monstatus 2
break

ifaction ABARBDIE
{
	ifactioncount 7
	{
		cstat 0
		setvar monstatus 2
		action ABARBDEAD
	}
	break
}

ifactioncount 9
{
	action ABARBJIBBED
	cstat 0
	setvar monstatus 2
}

ends

state BARBchargestate

getactor[THISACTOR].ang angvar
ifbulletnear ifrnd 32 { ai AIBARBBLOCK break }
setactor[THISACTOR].ang angvar

ifvare target -1
{
	ai AIBARBWANDER
	break
}

ifvarl xydist 768
{
	ai AIBARBSTRIKE
	sound SWORDSWING
	break
}

ends

state BARBstrikestate

ifaction ABARBSTRUCK
{
	ifactioncount 2
	{
		ifvarn target -1
		ifvarl xydist 1280
		{
			ifrnd 96 ai AIBARBBLOCK else
			{
				action ABARBSTRIKE
				sound SWORDSWING
			}
		}
		else ai AIBARBWANDER
		
	}
	break
}


ifactioncount 2
{
	ifvarn target -1
	{
		ifvarl xydist 1024
		{
			ifrnd 128 sound THUMPIN else sound AXEHIT
			state calczdist
			shiftvarl zdist 8
			divvarvar zdist xydist
			zshoot zdist MONSTERBITE
			zshoot zdist MONSTERBITE
			zshoot zdist MONSTERBITE
			ifvare actorvar[target].target -1
			{
				setactorvar[target].target THISACTOR
				setactorvar[target].targetlock 52
			}
			ifrnd 32
			{
				   zshoot zdist MONSTERBITE
			       zshoot zdist MONSTERBITE
			       zshoot zdist MONSTERBITE
					globalsound BIGTHUD
					setactorvar[target].dodgeang sprite[THISACTOR].ang
					setactorvar[target].dodge 4096
					setactorvar[target].fear -30
					getactor[target].z mz
					subvar mz 1024
					setactor[target].z mz
			}
	
		}
		
	}
	action ABARBSTRUCK
}
ends

state BARBflinchstate

setvar target -1
ifvarl fear 0 resetactioncount
ifactioncount 2
{
	ai AIBARBWANDER
	move BARBWALKVEL randomangle
}
ends

useractor notenemy BARBNPC 600

ifvarg mtype 0 // spawned by POW
{
	ifp pfacing
	{
		ifpdistl 768 cstat 514 else
		ifpdistl 1536 cstat 2 else
		cstat 256
	}
	else cstat 256
	addvar mtype 1
	ifvarg mtype 250 killit
	ifvare powcount 0 killit
}

getactor[THISACTOR].z z
subvar z 8192
setactor[THISACTOR].z z	
ifcansee setvar fear YES else setvar fear NO // fear var is used for visibility
addvar z 8192
setactor[THISACTOR].z z

ifonwater ifnotmoving
{
	getactor[THISACTOR].ang angvar
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	setvarvar mx x
	addvar mx 1024
	rotatepoint x y mx y angvar mx my
	updatesector mx my mysector
	ifvarn mysector -1
	{
		getflorzofslope mysector mx my mz
		getactor[THISACTOR].z z
		subvarvar z mz
		ifvarl z 8192
		{
			changespritesect THISACTOR mysector
			setsprite THISACTOR mx my mz
			sound SURFACE
		}
	}
}


fall
ifai 0
{
	ifvarn mtype 0 { strength 150 setvar ammo 170 } else
	setvar ammo 300
	ai AIBARBWAIT
	sizeat 36 34
	cstat 257
	spriteflags 17
	ifvare monstatus 0
		setvar monstatus 3
}

ifai AIBARBDYING { state BARBdyingstate break }

ifactornotstayput state avoidwater
ifactornotstayput state avoidcliffs
addvar ammo 1

state targetsearch
ifvarn target -1
{
	ifvare actorvar[target].monstatus 2 setvar target -1 else
	ifvarn sprite[target].statnum 1 
	setvar target -1 
	else
	{
		getactor[target].x mx
		getactor[target].y my
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		subvarvar mx x
		subvarvar my y
		getangle angvar mx my
		setactor[THISACTOR].ang angvar
		
		dist xydist THISACTOR target
		
		ifvarg ammo 260 ifvarg xydist 3072
		{
			espawn HAMMERPROJ
			setactorvar[RETURN].target target
			setactorvar[RETURN].myspawner THISACTOR
			setactorvar[RETURN].mtype 1
			getactor[THISACTOR].z mz
			subvar mz 10240
			setactor[RETURN].z mz
			sound SWISH
			setvar ammo 0
		}
		
	}
}

ifaction ABARBSTRIKE nullop else
ifai AIBARBFLINCH nullop else
ifge burning 0 
ifg sprite[].htextra 0
ife sprite[].htpicnum SHOTSPARK1
ifrnd 64 ai AIBARBBLOCK

ifai AIBARBWAIT state BARBwaitstate else
ifai AIBARBWANDER state BARBwanderstate else
ifai AIBARBCHARGE state BARBchargestate else
ifai AIBARBSTRIKE state BARBstrikestate else
ifai AIBARBFLINCH state BARBflinchstate else
ifai AIBARBFOLLOW state BARBfollowstate else
ifai AIBARBBLOCK state BARBblockstate

ifonwater ifnotmoving state getoutofwater

ifmove STOPPED nullop else state stepsounds

ifaction ABARBBLOCK
{
	setvar weap -1
	ifvarg sprite[THISACTOR].htextra 0
	{
		getactor[THISACTOR].htang tempb
		getactor[THISACTOR].ang angvar
		getincangle tempc angvar tempb
		ifvarl tempc -768 mulvar tempc -1
		ifvarg tempc 768
		{
			setactor[THISACTOR].htextra -1
			randvar temp 3
			ifvare temp 0 sound BLOCK1 else
			ifvare temp 1 sound BLOCK2 else
			ifvare temp 2 sound BLOCK3 else
			sound BLOCK4
		}
	}
}
else setvar weap 0

ifhitweapon
{
	
	state random_wall_jibs
	ifdead
	{
		userquote 414
		ifwasweapon RPG
		{
			state standard_jibs
			ai AIBARBDYING
			action ABARBJIB
			state randsquishsound
			break
		}
		ifwasweapon RADIUSEXPLOSION
		{
			state standard_jibs
			ai AIBARBDYING
			action ABARBJIB
			state randsquishsound
			break
		}
		randvar temp 3
		switch temp
		case 0 globalsound BARBDETH1 break
		case 1 globalsound BARBDETH2 break
		case 2 globalsound BARBDETH3 break
		case 3 globalsound BARBDETH4 break
		endswitch
		ai AIBARBDYING
		break
	}
	else 
	{
		ifvarvare sprite[THISACTOR].htowner player[THISACTOR].i
		{
			ifrnd 85 sound BARBSAMETEAM
			else ifrnd 128 sound BARBTRYAGAIN else
			{
				ifrnd 85 sound BARBPAIN1 else
				ifrnd 128 sound BARBPAIN2 else
				sound BARBPAIN3
			}
		}
		else
		{
			ifrnd 85 sound BARBPAIN1 else
			ifrnd 128 sound BARBPAIN2 else
			sound BARBPAIN3
		}
	}
	
	ifai AIBARBWANDER ai AIBARBFLINCH else
	ifrnd 64 { ai AIBARBFLINCH setvar target -1 }
}
else
ifvare target -1
ifpdistl 1280
ifp pfacing
ifhitspace
{
	ai AIBARBWAIT
	soundonce BARBINPOS
}

enda

useractor notenemy VINES 0

	ife myspawner -1 killit
	ifmove 0
	{
		soundonce SLIM_HATCH
		move INIT
		set picnum sprite[myspawner].picnum
		set inithp actorvar[myspawner].inithp
		set x tiledata[picnum].xsize
		mul x sprite[myspawner].xrepeat
		shiftr x 7
		ifl x 4 set x 4
		ifg x 255 set x 255
		seta[].xrepeat x
		
		set y tiledata[picnum].ysize
		mul y sprite[myspawner].yrepeat
		shiftr y 7
		geta[].z z, sub z initz, shiftr z 9, add y z
		ifl y 4 set y 4
		ifg y 255 set y 255
		seta[].yrepeat 2
		set inity y
		seta[].mdflags 16
	}
	fall
	set burning 0
	setsprite myspawner sprite[].x sprite[].y initz
	seta[myspawner].xvel 0
	seta[myspawner].zvel 0
	
	ifmove INIT
	{
		ifl sprite[].yrepeat inity { geta[].yrepeat y add y 2 seta[].yrepeat y }
		ife countvar 0 // spawned by pow
		{
			ifvarand pow 131072 nullop else move STOPPED
		}
		else
		{
			add countvar 1
			ifg countvar 120 move STOPPED
		}
		ife actorvar[myspawner].monstatus 2 move STOPPED
		ifn sprite[myspawner].statnum 1 move STOPPED
		ifl actorvar[myspawner].burning 0 move STOPPED
		ifn actorvar[myspawner].cursed 0 move STOPPED
		
		ifmove STOPPED ifg actorvar[myspawner].burning -1 setav[myspawner].htg4 -1
		
		ifrnd 8 
		ife sprite[myspawner].htextra -1
		{
			ifp ponsteroids set temp 8 else set temp 2
			seta[myspawner].htextra temp
			seta[myspawner].htowner player[].i
			seta[myspawner].htpicnum KNEE
		}
	}
	
	ifmove STOPPED
	{
		geta[].yrepeat y
		ifg y 0 sub y 1
		seta[].yrepeat y
		geta[].alpha temp
		add temp 6
		seta[].alpha temp
		ifcount 30 
		{
			ifg inithp 299
			spawn HEALTHPLANT
			killit
		}
	}

enda

spritenoshade GODFIST
spritenopal GODFIST

action FISTED 3 1 1 1 1

state getfistzdist

	geta[].z zdist
	sub zdist initz
	abs zdist

ends

state fistsmash

	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ife actorvar[spriteid].monstatus 1
		{
			ldist temp THISACTOR spriteid
			ifl temp 3584
			{
				geta[].z zdist
				sub zdist sprite[spriteid].z
				abs zdist
				ifl zdist 32768
				{
					seta[spriteid].htextra 500
					seta[spriteid].htpicnum BFGIMPACT
					seta[spriteid].htowner player[].i
					seta[spriteid].htang sprite[].ang
				}
			}
		
		}
		nextspritestat spriteid spriteid
	}
	ifg peractor1 0 set peractor1 -1024 else
	set peractor1 1024
	action FISTED
	spawn FIRERING
	screensound GIANTSTEP
	globalsound PIPEBOMB_EXPLODE2
	ifpdistl 16384 quake 30
	resetcount

ends

useractor notenemy GODFIST 0

ifmove 0
{
	ife sprite[].sectnum -1 killit
	move INIT
	seta[].htflags 8192
	seta[].shade -10
	sizeat 64 64
	seta[].alpha 255
	
	ifvarand sprite[].cstat 8
	getceilzofslope sprite[].sectnum sprite[].x sprite[].y initz
	else
	getflorzofslope sprite[].sectnum sprite[].x sprite[].y initz
	
	// initz is the goal z
	set z initz
	sub z sprite[].z
	
	div z 40 // 1/40th of the total distance; how much we want to move per tic
	ifl z 0 { ifg z -512 set z -512 } else { ifl z 512 set z 512 } // min speed
	set peractor1 z
	shiftl peractor1 2
	ifg z 0 { ifg z 4096 set z 4096 } else { ifl z -4096 set z -4096 }
}



ifg sprite[].alpha 0
{
	geta[].alpha temp
	sub temp 16, ifl temp 0 set temp 0
	seta[].alpha temp
}

state getfistzdist
ifaction 0 // has not touched down yet
{
	// prevent enemies from escaping
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ife actorvar[spriteid].monstatus 1
		{
			ldist temp THISACTOR spriteid
			ifl temp 4096
			{
				geta[].z zdist
				sub zdist sprite[spriteid].z
				abs zdist
				ifl zdist 98308
				{
					seta[spriteid].xvel 0
					geta[spriteid].x x
					geta[spriteid].y y
					ifg x sprite[].x sub x 16 else add x 16
					ifg y sprite[].y sub y 16 else add y 16
					updatesector x y sect
					ife sect sprite[spriteid].sectnum
						setsprite spriteid x y sprite[spriteid].z
				}
			}
		
		}
		nextspritestat spriteid spriteid
	}

	geta[].z mz
	movesprite THISACTOR 0 0 peractor1 CLIPMASK0 RETURN
	ifl zdist 1024 state fistsmash
	else ifcount 40 state fistsmash
	else
	{
		sub mz sprite[].z
		abs mz
		ifl mz 256 // not moving enough
		{
			geta[].z z
			add z peractor1
			seta[].z z
			add countvar 1
		}
		ifg countvar 5 state fistsmash
	}
}
else
{
	movesprite THISACTOR 0 0 peractor1 CLIPMASK0 RETURN
	ifcount 22 killit
}



// ifcount 40 killit
// ife upside YES { ifceilingdistl 8 killit }
// else iffloordistl 8 killit

enda

spritenoshade FISTRIFT
spritenopal FISTRIFT

action AFISTRIFT -1 4 1 1 3
useractor notenemy FISTRIFT 0

ifaction 0
{
	move INIT
	action AFISTRIFT
	cstat 34
	seta[].shade -100
	seta[].blend 1
	rand pal 4
	ife pal 0 spritepal 15
	ife pal 1 spritepal 21
	ife pal 2 spritepal 7
	ife pal 3 spritepal 12
	ife pal 4 spritepal 22
	sizeat 72 72
	rand temp 6
	ife temp 0 globalsound BUFF1 else
	ife temp 1 globalsound BUFF2 else
	ife temp 2 globalsound BUFF3 else
	ife temp 3 globalsound BUFF4 else
	ife temp 4 globalsound BUFF5 else
	ife temp 5 globalsound BUFF6 else
	ife temp 6 globalsound BUFF7
}

ifmove INIT
ifcount 6
{
	move STOPPED
	espawn GODFIST
	ifvarand sprite[].cstat 8 seta[RETURN].cstat 8
	seta[RETURN].pal sprite[].pal
}

ifmove STOPPED ifcount 10 killit

enda

spritenoshade FORCERING
spritenopal FORCERING

useractor notenemy FORCERING 0

	ifmove 0
	{
		move INIT randomangle
		spritepal 63
		cstat 546
		sizeat 34 34
		seta[].shade -100
	}
	set z player[].posz
	add z 4096
	seta[].z z
	sizeto 64 64
	ifcount 3 killit

enda

spritenoshade FIRERING
spritenopal FIRERING

useractor notenemy FIRERING 0

ifmove 0
{
	ifspawnedby ARCHONPROJ
	{
		espawn KORPROJSPAWN
		seta[RETURN].pal 21
	}
	move STOPPED
	cstat 34
	debris SCRAP1 8
	debris SCRAP2 8
	debris SCRAP3 8
	debris SCRAP4 8
	debris SCRAP5 8
	spawn BIGSMOKE
	geta[].z z
	ife upside YES add z 14336 else
	sub z 14336
	seta[].z z
	seta[].shade -127
	set initx 2048
}
geta[].xrepeat x add x 4 seta[].xrepeat x
geta[].yrepeat y add y 4 seta[].yrepeat y
ifcount 64 killit
geta[].ang angvar
add angvar 33
seta[].ang angvar

ifspritepal 83
{
	ifcount 3
	{
		add initx 384
		set mx initx
		add mx 512
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			geta[spriteid].z z
			sub z sprite[].z
			abs z
			ifl z 40960
			{
				ldist xydist THISACTOR spriteid
				ifg xydist initx ifl xydist mx
				{
					geta[spriteid].htextra tempb
					add tempb 20
					seta[spriteid].htextra tempb
					seta[spriteid].htpicnum BFGIMPACT

					seta[spriteid].htang sprite[].ang
					getav[spriteid].burning tempb
					add tempb 60
					setav[spriteid].burning tempb
					getav[spriteid].fear tempb
					sub tempb 30
					setav[spriteid].fear tempb
				}
				
			}
			nextspritestat spriteid spriteid
		}
		findplayer xydist
		ifg xydist initx ifl xydist mx
		{
			geta[player[].i].z z
			sub z sprite[].z
			abs z
			ifl z 40960
			{
				getplayer[].i playersprite
				seta[playersprite].htextra 20
				seta[playersprite].htpicnum BFGIMPACT
				seta[playersprite].htang sprite[].ang
				getav[playersprite].burning temp
				add temp 60
				setav[playersprite].burning temp
				
				getplayer[].i playersprite
				getactorvar[playersprite].dodge temp
				
				addvar temp 20480
				setactorvar[playersprite].dodge temp
				getp[].posz z, sub z 1024 setp[].posz z
				setp[].poszv -2048
				wackplayer
				geta[playersprite].x mx
				geta[playersprite].y my
				sub mx sprite[].x
				sub my sprite[].y
				getangle angvar mx my
				setactorvar[playersprite].dodgeang angvar
			}
		}
		
		
	}
}


enda

move CONFETTIVEL 16 64

state confetticode

	ifmove 0
	{
		rand angvar 2047
		seta[].ang angvar
		move CONFETTIVEL geth getv
		ifactor CONFETTI1 sizeat 24 24 else
		sizeat 16 16
		ifrnd 128 cstator 4
		ifrnd 128 cstator 8
		spriteflags 2048
		rand pal 10
		switch pal
		case 1 spritepal 10 break
		case 2 spritepal 11 break
		case 3 spritepal 12 break
		case 4 spritepal 15 break
		case 5 spritepal 16 break
		case 6 spritepal 18 break
		case 7 spritepal 83 break
		case 8 spritepal 21 break
		case 9 spritepal 23 break
		case 10 spritepal 14 break
		endswitch
		
	}
	iffloordistl 2 killit	
	ifnotmoving killit

ends

spritenoshade CONFETTI1
spritenopal CONFETTI1
spritenoshade CONFETTI2
spritenopal CONFETTI2

useractor notenemy CONFETTI1 0
	state confetticode
enda

useractor notenemy CONFETTI2 0
	state confetticode
enda

eventloadactor CONFETTISPAWNER cstat 32768 enda

state spawn_confetti

	ifg Numsprites 15000 break
	
	randvar angvar 2047
	set mx initx
	randvar temp 8192
	add mx temp
	rotatepoint initx inity mx inity angvar saveit saveit2
	updatesectorz saveit saveit2 sprite[].z sect
	ifvarn sect -1
	{
		ifrnd 128
		espawn CONFETTI1
		else
		espawn CONFETTI2
		
		getceilzofslope sect saveit saveit2 temp
		add temp 512
		ifmove 0 rand tempb 65536 else
		rand tempb 16384
		add temp tempb
		
		setsprite RETURN saveit saveit2 temp
	}
ends

useractor notenemy CONFETTISPAWNER 0

	ifmove 0
	{
		cstat 32768
		ifcansee
		{
			soundonce BIGCHEER
			geta[].x initx
			geta[].y inity
			geta[].z initz
			set countvar 0
			whilevarn countvar 128
			{
				state spawn_confetti
				add countvar 1
			}
			move INIT
		}
		else break
	}

	ifp palive
	// ifcansee
	// ifpdistl 16384
	ifrnd 32
	{
		ldist xydist THISACTOR player[].i
		ifl xydist 16384
		state spawn_confetti
	}
enda

action AGLAREFRAMES 0 13 1 1 4
useractor notenemy GLARESPRITE 0

ifmove 0
{
	move INIT
	ifspawnedby ARCHON sizeat 32 32 else
	sizeat 16 16
	cstator 130
	seta[].blend 1
	action AGLAREFRAMES
}

ifactioncount 13 killit

enda

// needs to check tablets bitfield up to 32
// mtype is a mirror of tablets for the actor
// for each bit not yet handled, needs to spawn corresponding fragment
// which floats into place
// then that waiting fragment on the wall becomes visible and floating one deletes
// player is frozen and made to watch at your location
// do nothing if all bits handled
// when all bits are set tablets == 63 and in place
// activate the portal and do other stuff

move SHOW_SCENE

useractor notenemy ASSEMBLER 0

ife player[].cursectnum sprite[].sectnum
ifp ponground
{
	ifn tablets mtype
	{
		ifmove SHOW_SCENE nullop else
		{
			
			move SHOW_SCENE
			set peractor1 tablets
			sub peractor1 mtype
			// now peractor1 holds which bits we are going to work on
			set target -1
			ifvarand peractor1 1
			{
				set spriteid 0
				whilevarn spriteid 16384
				{
					ife sprite[spriteid].picnum TABLET1
					ife actorvar[spriteid].lotag 1
						set target spriteid
					add spriteid 1
					ifn target -1 set spriteid 16384	
				}
				ifn target -1
				{
					espawn TABLET1
					setav[RETURN].target target
					setav[RETURN].myspawner THISACTOR
					geta[RETURN].z z, sub z 10240, seta[RETURN].z z
					
					getactor[].ang angvar
					sub angvar 512
					getactor[RETURN].x x
					getactor[RETURN].y y
					setvarvar mx x
					addvar mx 644
					rotatepoint x y mx y angvar mx my
					setsprite RETURN mx my sprite[RETURN].z
				}
			}
			set target -1
			ifvarand peractor1 2
			{
				set spriteid 0
				whilevarn spriteid 16384
				{
					ife sprite[spriteid].picnum TABLET2
					ife actorvar[spriteid].lotag 1
						set target spriteid
					add spriteid 1
					ifn target -1 set spriteid 16384	
				}
				ifn target -1
				{
					espawn TABLET2
					setav[RETURN].target target
					setav[RETURN].myspawner THISACTOR
					geta[RETURN].z z, sub z 10240, seta[RETURN].z z
					
					getactor[].ang angvar
					add angvar 512
					getactor[RETURN].x x
					getactor[RETURN].y y
					setvarvar mx x
					addvar mx 644
					rotatepoint x y mx y angvar mx my
					setsprite RETURN mx my sprite[RETURN].z
				}
			}
			set target -1
			ifvarand peractor1 4
			{
				set spriteid 0
				whilevarn spriteid 16384
				{
					ife sprite[spriteid].picnum TABLET3
					ife actorvar[spriteid].lotag 1
						set target spriteid
					add spriteid 1
					ifn target -1 set spriteid 16384	
				}
				ifn target -1
				{
					espawn TABLET3
					setav[RETURN].target target
					setav[RETURN].myspawner THISACTOR
					
					getactor[].ang angvar
					sub angvar 512
					getactor[RETURN].x x
					getactor[RETURN].y y
					setvarvar mx x
					addvar mx 644
					rotatepoint x y mx y angvar mx my
					setsprite RETURN mx my sprite[RETURN].z
				}
			}
			set target -1
			ifvarand peractor1 8
			{
				set spriteid 0
				whilevarn spriteid 16384
				{
					ife sprite[spriteid].picnum TABLET4
					ife actorvar[spriteid].lotag 1
						set target spriteid
					add spriteid 1
					ifn target -1 set spriteid 16384	
				}
				ifn target -1
				{
					espawn TABLET4
					setav[RETURN].target target
					setav[RETURN].myspawner THISACTOR
					
					getactor[].ang angvar
					add angvar 512
					getactor[RETURN].x x
					getactor[RETURN].y y
					setvarvar mx x
					addvar mx 644
					rotatepoint x y mx y angvar mx my
					setsprite RETURN mx my sprite[RETURN].z
				}
			}
			set target -1
			ifvarand peractor1 16
			{
				set spriteid 0
				whilevarn spriteid 16384
				{
					ife sprite[spriteid].picnum TABLET5
					ife actorvar[spriteid].lotag 1
						set target spriteid
					add spriteid 1
					ifn target -1 set spriteid 16384	
				}
				ifn target -1
				{
					espawn TABLET5
					setav[RETURN].target target
					setav[RETURN].myspawner THISACTOR
					geta[RETURN].z z, add z 8192, seta[RETURN].z z
					
					getactor[].ang angvar
					sub angvar 512
					getactor[RETURN].x x
					getactor[RETURN].y y
					setvarvar mx x
					addvar mx 644
					rotatepoint x y mx y angvar mx my
					setsprite RETURN mx my sprite[RETURN].z
				}
			}
			set target -1
			ifvarand peractor1 32
			{
				set spriteid 0
				whilevarn spriteid 16384
				{
					ife sprite[spriteid].picnum TABLET6
					ife actorvar[spriteid].lotag 1
						set target spriteid
					add spriteid 1
					ifn target -1 set spriteid 16384	
				}
				ifn target -1
				{
					espawn TABLET6
					setav[RETURN].target target
					setav[RETURN].myspawner THISACTOR
					geta[RETURN].z z, add z 8192, seta[RETURN].z z
					
					getactor[].ang angvar
					add angvar 512
					getactor[RETURN].x x
					getactor[RETURN].y y
					setvarvar mx x
					addvar mx 644
					rotatepoint x y mx y angvar mx my
					setsprite RETURN mx my sprite[RETURN].z
				}
			}
			set mtype tablets
		}
		
	}
}

ifmove SHOW_SCENE
{
	ifn player[].cursectnum sprite[].sectnum
	{
		setsprite player[].i sprite[].x sprite[].y sprite[].z
		setp[].posx sprite[].x
		setp[].posy sprite[].y
		setp[].cursectnum sprite[].sectnum
	}
	getincangle tempb player[].ang sprite[].ang
	getp[].ang temp
	shiftr tempb 3
	add temp tempb
	setp[].ang temp
	
	setp[].horiz 100
	setp[].jumping_counter 0

	ldist xydist THISACTOR player[].i
	ifg xydist 256
	{
		geta[].x x
		geta[].y y
		sub x player[].posx
		sub y player[].posy
		getangle angvar x y
		
		cos xvel angvar
		sin yvel angvar
		shiftl yvel 6
		shiftl xvel 6
		setp[].posyv yvel
		setp[].posxv xvel
		
	}
	ifcount 140
	{
		move INIT
		ife tablets 63
		{
			headspritestat spriteid 3
			whilevarn spriteid -1
			{
				switch sprite[spriteid].lotag
					case 69
						ifvarvare lotag actorvar[spriteid].activator
							setactorvar[spriteid].activator 0
					case 77 case 88 case 89
						ifvarvare lotag actorvar[spriteid].activator
							setactorvar[spriteid].peractor1 1
					break
				endswitch
				
				nextspritestat spriteid spriteid
			}
			set spriteid 0
			whilevarn spriteid 16384 // NUMWALLS
			{
				ife wall[spriteid].hitag 13 setwall[spriteid].picnum 13

				ife sprite[spriteid].picnum TEXTURIZER
				ifvarvare actorvar[spriteid].activator lotag
				setactorvar[spriteid].mtype 1
				
				add spriteid 1
			}
			ife airdash 0
			{
				orvar charlocked 1
				set airdash 1
				savegamevar charlocked
				savegamevar airdash
				setvar currtip2 4096 setvar currtip 0
				orvar fintips 4096
				state inithelp
				setvar helpmenu YES
				setvar newtip NO
				set inputime timer
				add inputime 10
			}

		}
	}
}

enda

action ACANNON  0  1  7  1  10
move RECOILVEL -256
move RETURNVEL 128

useractor notenemy CANNON 0 ACANNON

fall

ife peractor1 1 // phantom cannon spawned to shoot
{
	ifg shipcam -1
	{
		ifn initx sprite[shipcam].x
		{
			set x initx
			sub x sprite[shipcam].x
			abs x // amount of x movement
			geta[].x mx
			ifg sprite[shipcam].x initx { add mx x add mx x } else
			{ sub mx x sub mx x }
			seta[].x mx
		}
		
		ifn inity sprite[shipcam].y
		{
			set y inity
			sub y sprite[shipcam].y
			abs y
			geta[].y my
			ifg sprite[shipcam].y inity { add my y add my y } else
			{ sub my y sub my y }
			seta[].y my
		}
		
		ifn initz sprite[shipcam].z
		{
			set z initz
			sub z sprite[shipcam].z
			abs z
			geta[].z mz
			ifg sprite[shipcam].z initz add mz z else
			sub mz z
			seta[].z mz
		}
		getav[shipcam].mtype angvar
		add angvar sprite[].ang
		sub angvar shipangstart
		seta[].ang angvar
	}
	ezshoot -1560 CANNONBALL
	killit
}

ifmove 0
{
	ifspawnedby APLAYER sizeat 64 64
	move INIT
	geta[].x initx
	geta[].y inity
	geta[].z initz
	geta[].yrepeat z
	shiftl z 7
	geta[].z mtype
	sub mtype z
}
	
ifmove INIT
ifcount 35
ifhitspace
ifp pfacing
ifpdistl 1280
ifcansee
{
	sound SHOOT_CANNON
	
	ifl shipcam 0
	ezshoot -1560 CANNONBALL
	else
	{
		espawn CANNON
		seta[RETURN].cstat 32768
		seta[RETURN].xrepeat sprite[].xrepeat
		seta[RETURN].yrepeat sprite[].yrepeat
		setav[RETURN].initx sprite[shipcam].x
		setav[RETURN].inity sprite[shipcam].y
		setav[RETURN].initz sprite[shipcam].z
		setav[RETURN].peractor1 1
		
		getactor[shipcam].z z
		getav[shipcam].initz mz
		sub mz sprite[].z
		sub z mz
		
		
		// getp[].posx mx
		// getp[].posy my
		geta[].x mx
		geta[].y my
		getav[shipcam].initx x
		getav[shipcam].inity y
		subvarvar mx x
		subvarvar my y

		getangle angvar mx my // angvar is now the displacement angle
		set xydist x
		sub xydist sprite[].x // player[].posx
		mul xydist xydist
		
		sub y sprite[].y // player[].posy
		mul y y
		add xydist y
		sqrt xydist xydist
		set xvel sprite[shipcam].x
		add xvel xydist
		add angvar sprite[shipcam].ang
		ifn shipangstart 999999
		sub angvar shipangstart
		rotatepoint sprite[shipcam].x sprite[shipcam].y xvel sprite[shipcam].y angvar mx my
		updatesector mx my sect
		ife sect -1 set sect sprite[shipcam].sectnum
		
		// getav[shipcam].mtype angvar
		// add angvar sprite[].ang
		// seta[RETURN].ang angvar
	
		setsprite RETURN mx my z
	}
	seta[].z mtype
	spawn BIGSMOKE
	seta[].z initz
	move RECOILVEL geth
}

ifmove RECOILVEL
	ifcount 1 move RETURNVEL geth
	
ifmove RETURNVEL
	ifcount 2
{
	move INIT
	setsprite THISACTOR initx inity initz
}

enda

onevent EVENT_MOVEFORWARD

setvar fpress 2
addvar fpresstime 1

ife timer fpresstime add fhold 1 else
{ addvar ftap 1 set btap 0 }

setvarvar fpresstime timer

ifvarg onladder 0 ifp palive
{
	setvar RETURN -1
	
	ifvarn upside 0 // reversed gravity
	{
		setvar temp RUNNINGSPEED
		divvar temp 30
		subvar temp 512
		setvarvar laddervel temp
	}
	else
	{
		ifp ponground 
		{
			getplayer[THISACTOR].posz z 
			subvar z 1024 
			setplayer[THISACTOR].posz z
			addvar z 8192
			getplayer[THISACTOR].i temp
			setactor[temp].z z
			setplayer[THISACTOR].jumping_counter 901
		}
		setvar temp RUNNINGSPEED
		divvar temp -30
		setvarvar laddervel temp
		ife sector[player[].cursectnum].lotag 1
		{
			getp[].posz z
			sub z 512
			setp[].posz z
		}
	}
}

endevent

onevent EVENT_STRAFELEFT


setvar lpress 2
addvar lpresstime 1

ife timer lpresstime add lhold 1 else
{ add ltap 1 set rtap 0 }

setvarvar lpresstime timer

endevent

onevent EVENT_STRAFERIGHT

setvar rpress 2
addvar rpresstime 1

ife timer rpresstime add rhold 1 else
{ add rtap 1 set ltap 0 }

setvarvar rpresstime timer

endevent

onevent EVENT_MOVEBACKWARD

setvar bpress 2
addvar bpresstime 1

ife timer bpresstime add bhold 1 else
{ addvar btap 1 set ftap 0 }

setvarvar bpresstime timer

ifvarg onladder 0 ifp palive
{
	setvar RETURN -1
	ifvarn upside 0 // reversed gravity
	{
		setvar temp RUNNINGSPEED
		divvar temp -50
		setvarvar laddervel temp
	}
	else
	{
		setvar temp RUNNINGSPEED
		divvar temp 50
		subvar temp 512
		setvarvar laddervel temp
	}
}

endevent

definegamefuncname 17 GAMEGUIDE
// AIM UP

definegamefuncname 32 SUMMONING_DOLL
definegamefuncname 33 JUMP_BOOTS
definegamefuncname 34 SPIRIT_VISION
definegamefuncname 35 LIFE_FLASK
definegamefuncname 36 SWITCH_CHARACTERS
 // TURNAROUND
definegamefuncname 42 DASH
 // HOLSTER WEAPON
definegamefuncname 48 POW_KEY
 // USE STEROIDS
definegamefuncname 60 SUB_WEAPON
 // ALTWEAPON

onevent EVENT_HOLSTER // used for dash
	set RETURN -1
	ife dashupgrade NO 
	{ 
		ife fta 0 { set ftq 819 set fta QUOTETIME }
	}
	else
	{
		ifn dashupgrade 0
		ife dashtime 0
		ife dodge 0
		ifg character -1
		ife endlevel 0
		// ifp ponground
		ife padmove 0
		ifp palive
		ife camerasprite -1
		{
			set temp YES
			
			ife airdash 0
			{
				ifp ponground nullop else ife upside NO set temp NO
				ife upside YES ife onceiling NO set temp NO
			}
			
			ife dashupgrade 1 ifn dashcool1 0 set temp NO else
			ife dashupgrade 2 ifn dashcool1 0 ifn dashcool2 0 set temp NO
			
			ife temp YES
			{
				// extbits:
				// 1 forward, 2 back, 4 strafe L, 8 strafe R
				getp[].ang dashang
				ifvarand extbits 4 
				{
					ifvarand extbits 1
					{
						ife upside YES add dashang 256
						else sub dashang 256
					}
					else
					ifvarand extbits 2
					{
						ife upside YES add dashang 768
						else sub dashang 768
					}
					else
					{
						ife upside YES add dashang 512 else sub dashang 512
					}
				}
				else
				ifvarand extbits 8 
				{ 
					ifvarand extbits 1
					{
						ife upside YES sub dashang 256
						else add dashang 256
					}
					else
					ifvarand extbits 2
					{
						ife upside YES sub dashang 768
						else add dashang 768
					}
					else
					{
						ife upside YES sub dashang 512 else add dashang 512 
					}
				}
				else
				ifvarand extbits 2 
				{
					add dashang 1024 
				}
				
				
				set dashtime 3
				ife dashcool1 0 { set dashcool1 70 ifl dashcool2 7 set dashcool2 7 }
				else { set dashcool2 70 ifl dashcool1 7 set dashcool1 7 }

				screensound DASHSOUND
			}
		
		}
	}
endevent

onevent EVENT_AIMUP

setvar RETURN -1

endevent


onevent EVENT_TURNAROUND

	setvar RETURN -1
	// ife charlocked 0
	ifvarand charlocked 1 nullop else
	{
		set ftq 835
		set fta 130
		break
	}
	
	
	// ifvarand pow 65536 nullop else
	ifp palive
	ifg character -1
	ife KICKBACKPIC 0
	ife player[].weapon_pos 0
	ife switchchar 0
	ife endlevel 0
	ife sleeping 0
	{
		set switchchar 40
		randvar temp 4
		ifvare temp 0 screensound LIGHTN1 else
		ifvare temp 1 screensound LIGHTN2 else
		ifvare temp 2 screensound LIGHTN3 else
		ifvare temp 3 screensound LIGHTN4 else
		ifvare temp 4 screensound LGTNSND
	}
	
endevent


onevent EVENT_USESTEROIDS

setvar RETURN -1
addvar inputime 1

ifvarvare inputime timer break
setvarvar inputime timer

ifvarg powcount 0 // POW is already on, we are switching it off
{
	// lose a %
	mulvar powcount 9
	divvar powcount 10
	
	ifle powcount 600
	{
		div powcount 60
		set combo powcount
	}
	else
	{
		sub powcount 600
		set combo 10
		
		ifge powcount 300
		{
			add combo 10
			sub powcount 300
			ifg powcount 0
			{
				div powcount 15
				add combo powcount
			}
		}
		else
		{
			div powcount 30
			add combo powcount
		}

	}

	setvar powcount 0
	setvar pow 0
	add tierslot 1
	ifg tierslot 4 { set tierslot 0 state shufflepowchoices }
	setarray powchoices[0] tier1order[tierslot]
	setarray powchoices[1] tier2order[tierslot]
	setarray powchoices[2] tier3order[tierslot]
	setarray powchoices[3] tier4order[tierslot]
	break
}

ifvarl combo 10 break
ifvare character 1 { ifrnd 128 globalsound BARBTAUNT6 else globalsound BARBTAUNT9 }
else
globalsound ASSKICK
setvar powtip NO

setvar pow 0 // just to be safe
orvarvar pow powchoices[0]
ifvarg combo 19 orvarvar pow powchoices[1]
ifvarg combo 29 { orvarvar pow powchoices[2] setvar weap 78 }
ifvarg combo 39 { orvarvar pow powchoices[3] setvar weap 78 }
// ifvarg combo 49 { orvarvar pow powchoices[4] setvar weap 78 }


set powcount 600
sub combo 10 // 20 seconds baseline

ifge combo 10 // 1 second for each point between 11 and 20
{
	add powcount 300
	sub combo 10
	ifg combo 0
	{
		mul combo 15
		add powcount combo
	}
}
else
{
	mul combo 30
	add powcount combo
}

set combo 0

ifvarand pow 256
{
	getplayer[THISACTOR].posx x
	getplayer[THISACTOR].posy y
	getplayer[THISACTOR].posz z
	addvar z 4096
	setvarvar mx x
	addvar mx 1280
	setvar saveit 0
	whilevarn saveit 2048
	{
		rotatepoint x y mx y saveit hitx hity
		espawn POWBLADE
		setactorvar[RETURN].myspawner player[THISACTOR].i
		setsprite RETURN hitx hity z
		setactorvar[RETURN].peractor1 saveit
		addvar saveit 256
		setvarvar temp saveit
		shiftvarl temp 2
		setactor[RETURN].ang temp
	}
}

ifvarand pow 512
{
	findnearactor AXON 65535 spriteid
	ifvare spriteid -1
	{
		espawn AXON
		setactorvar[RETURN].peractor1 1
	}
	else
	{
		xorvar pow 512
		orvar pow 16
	}
}

ifvarand pow 8 // minotaur
{
	setav[player[].i].weap 90
}

ifvarand pow 65536 // infinite ammo
{
	// start by clearing the array from last time, and then giving full ammo
	// tempammo is 15 element array for storing ammo
	set temp 0
	whilevarn temp 15
	{
		setarray tempammo[temp] 0
		add temp 1
	}
	
	setarray tempammo[0] sawammo
	set sawammo 99
	
	set temp 1
	whilevarn temp 12
	{
		ifn temp 10
		{
			setarray tempammo[temp] player[].ammo_amount temp
			setp[].ammo_amount temp 99
		}
		add temp 1
	}
	setarray tempammo[12] grenades
	set grenades 99
	setarray tempammo[13] eyeballammo
	set eyeballammo 99
	setarray tempammo [14] 1 // flag to show array was set
}

endevent

// definegamefuncname 48 CHARACTER_SHEET
// onevent EVENT_USESTEROIDS // same as powkey

// ifvarl helpmenu 2
// setvar helpmenu 2 // stat page
// else { setvar helpmenu 0 setvar popuptime 0 }
// setvar RETURN -1
// endevent

// onevent EVENT_USEMEDKIT

// setvar RETURN -1

// // ifvarg seeds 0 
// // {
	// // shoot SEEDPROJ
	// // subvar seeds 1
	// // ifvare seeds 0 setplayer[THISACTOR].firstaid_amount 0
// // }

// endevent



onevent EVENT_USEJETPACK

ifvare jet NO
{
	ifvare superjump YES 
	{ 
		sound INTO_MENU 
		setvar superjump NO 
	} 
	else
	ifvarg player[THISACTOR].jetpack_amount 0
	{
		setvar superjump YES
		sound INTO_MENU
		ifvarg player[THISACTOR].jetpack_amount 16
		{
			// costs 1% to turn it on
			getplayer[THISACTOR].jetpack_amount temp
			subvar temp 16
			setplayer[THISACTOR].jetpack_amount temp
		}
	}
	setvar RETURN -1
}
endevent

onevent EVENT_CROUCH
ifvarn sleeping 0 setvar RETURN -1
endevent

onevent EVENT_JUMP

setvar arrowview -1
ife phookswing YES { set RETURN -1 break }
ifvarl character 0 { setvar RETURN -1 break }
ifvarn sleeping 0 { setvar RETURN -1 break }
ifvarn transition 0 { setvar RETURN -1 break }
ifvarn helpmenu NO { setvar RETURN -1 break }
ifvarg endlevel 0 { setvar RETURN -1 break }

ifinwater nullop else
ifonwater nullop else
ifvare superjump YES { setvar RETURN -1 break }

// ifvare character 1 
ifvarg boost 0 addvar boost 5
state jumpsounds

endevent

state cheatstate
// setvar gotdamage 1

setvar gotboots YES
// setvar keys 10
// addvar pgold 1000
// setvar ppods 10
setplayer[THISACTOR].steroids_amount 0
set eyeballammo player[].max_ammo_amount 8
mul eyeballammo 100
			
ifvare character 0
	state sawon

setvar gotsaw 1
setvar sawammo MAXSAWFUEL
setvarvar grenades MAXGRENADES
ifvare character 1
{
	setplayer[THISACTOR].gotweapon 11 0
	setplayer[THISACTOR].ammo_amount 11 0
}
setvar burnarrows 30
setvar explarrows 30
setvar multiarrows 30
setvar freezearrows 30
setvar spyarrows 30
ife shieldupgrade YES setp[].boot_amount BOOT_AMOUNT
setplayer[THISACTOR].got_access 0
setp[].firstaid_amount flaskmax

ends


onevent EVENT_CHEATGETJETPACK

state cheatstate

endevent


onevent EVENT_HOLODUKEON

ife demonova_boss YES { set RETURN -1 break }
ifvare myminotaur -1
{
	ifvarg player[THISACTOR].holoduke_amount 0
	{
		spawn TRANSPORTERSTAR
		sound TELEPORTER
		espawn DEMONOVA
		setvarvar myminotaur RETURN
		getplayer[THISACTOR].i spriteid
		getactor[spriteid].yvel temp
		setactorvar[RETURN].myspawner temp
		setav[RETURN].peractor1 1
	}
}
else
{
	setactorvar[myminotaur].monstatus 20
}

setvar RETURN -1

endevent

eventloadactor WAYPOINT
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
ifvarg lotag 0
cstat 32768

ifn sprite[].extra -1
{
	geta[].extra monstflags
	seta[].extra -1
}

// pal 1 lotag 1 is the first, pal 4 the last
enda


eventloadactor TOWNTRAIL
cstat 32768
getactor[THISACTOR].z z
subvar z 8192
setactor[THISACTOR].z z
getactor[THISACTOR].lotag lotag
setactor[THISACTOR].lotag 0
getactor[THISACTOR].hitag hitag
setactor[THISACTOR].hitag 0
enda

onevent EVENT_ENTERLEVEL

// ifmultiplayer nullop else
// ifvare VOLUME 0

set hammercount 0
set secretlevel -1
setuserdef[THISACTOR].clipping NO
ife visitedlevel[LEVEL] NO
{
	set musicepisode VOLUME
	set musictrack LEVEL
}

set shipcam -1
// ifvare loadcached YES
ifvare visitedlevel[LEVEL] YES
{
	
	loadmapstate
	setp[].secret_rooms secretsfound[LEVEL]
	setp[].max_actors_killed maxenemieskilled[LEVEL]
	setp[].actors_killed enemieskilled[LEVEL]
}

setarray visitedlevel[LEVEL] YES
setvar loadcached NO

ife maxenemieskilled[LEVEL] 0 setarray maxenemieskilled[LEVEL] player[].max_actors_killed
setp[].jetpack_amount 0

ifg character -1 state affirmcharacter

// ife VOLUME 0
// ifn LEVEL 19
// ifn LEVEL 21
// ifg LEVEL 16
// ifl LEVEL 25
// {
	// set temp NO
	// ifvarand tablets 63
	// ife tablets_installed YES
	// ifn airdash 0
	// set temp YES
	// ife temp NO 
	// {
		// set cheatscreen 300
		// setuserdef[THISACTOR].display_bonus_screen NO
		// screensound ARCHLAUGH
		// endofgame 300
	// }
// }

	
endevent


onevent EVENT_RESETINVENTORY

ife gameover YES
{
	endofgame 3
	setuserdef[].display_bonus_screen 0 // resetplayer
	set gameover NO
}

ifmultiplayer nullop else
{
	setvar combo 0
	setvar powcount 0
	setvar pow 0
}

inittimer gamespeed // 120
setvar slowtime 0
setplayer[THISACTOR].sound_pitch 0
// ifvare character 1 
setplayer[THISACTOR].runspeed RUNNINGSPEED2
// else
// setplayer[THISACTOR].runspeed RUNNINGSPEED
// setvar seeds 0
setvar ppods 0
setvar fhold 0
setvar fpresstime 0
setvar ftap 0
setvar btap 0
setvar superjump 0
setvar boost 0
setvar sjumpcharge 0
setvar altfirehold 0		
setvar roxq 0
setvar healthcount 0
setvar ALTFIRING 0
setplayer[THISACTOR].got_access 0		
setvar fta 0
setvar burning 0
setvar bleeding 0
setvar flameowner -1
setvar ppoison 0
setvar cursed 0
setvar gotsaw 0
setvar grenades 0
state sawoff
setvar pshrunk 0
setvar plevel 0
setvar xp 0
// ifvare character 1 setplayer[THISACTOR].max_player_health 100 else
// setplayer[THISACTOR].max_player_health MAXPLAYERHEALTH 
ifmultiplayer ifvarn COOP YES nullop else
{
	setplayer[THISACTOR].gotweapon 1 NO
	setplayer[THISACTOR].ammo_amount 1 0
	setplayer[THISACTOR].curr_weapon 0
}


endevent

onevent EVENT_PREVIOUSWEAPON
 setvar chwep 1

endevent

onevent EVENT_NEXTWEAPON
 setvar chwep 2

endevent


onevent EVENT_WEAPKEY1
ifvare CURRWEAP 0 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY2
ifvare CURRWEAP 1 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY3
ifvare CURRWEAP 2 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY4
ifvare CURRWEAP 3 
{
	// ifvare player[THISACTOR].gotweapon 11 YES
	// ifvarg player[THISACTOR].ammo_amount 11 0
	// { setvar RETURN 11 setvar chwep 11 } // hack
	// else
	setvar RETURN -1
}
endevent
onevent EVENT_WEAPKEY5
ifvare CURRWEAP 4 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY6
ifvare CURRWEAP 5 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY7
ife character 1
ifvare CURRWEAP 6 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY8
ifvare CURRWEAP 7 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY9
ifvare CURRWEAP 8 setvar RETURN -1
endevent
onevent EVENT_WEAPKEY10
ifvare CURRWEAP 9 setvar RETURN -1
endevent

onevent EVENT_SELECTWEAPON

ifvarn swordattk 0 { setvar RETURN 6 break }

ifvarn player[THISACTOR].kickback_pic 0
{
	ifvarg CURRWEAP 0 ifvarl CURRWEAP 3
	{
		setvar RETURN -1
		break
	}
}

ifvare chwep 1
{
  ifvarvarg RETURN CURRWEAP
  {
    ifvarn CURRWEAP 0
	{
		ife RETURN 11
		{
			ifg CURRWEAP 6 nullop else set RETURN 0
		}
		else
		setvar RETURN 0
	}
  }
}
ifvare chwep 2 
{
  ifvarvarl RETURN CURRWEAP
  {
	ife CURRWEAP 11
	{
		ifg RETURN 6 nullop else set RETURN 0
	}
	else
	setvar RETURN 0
	
  }
}
ifvarvare RETURN CURRWEAP 
	ifvarn chwep 0
  setvar RETURN 0

setvar chwep 0
  
ifvare RETURN 1 ifvare player[THISACTOR].gotweapon 1 YES
{
	ifvare character 0
	sound SHOTCOCK2
	else sound SELECTMELWPN
}
ifvare RETURN 2 ifvare player[THISACTOR].gotweapon 2 YES
{
	ifvare character 0
	sound DBCLOSE
	else sound SELECTMELWPN
}
ifvare RETURN 3 ifvare player[THISACTOR].gotweapon 3 YES
{
	ifvare character 0
	sound SELECT_WEAPON2
	else sound SELECTMELWPN
}
ifvare RETURN 4 ifvare player[THISACTOR].gotweapon 4 YES
{
	ifvare character 0
	sound SELECT_WEAPON2
	else sound SELECTBOW
}
ifvare RETURN 6 ifvare player[THISACTOR].gotweapon 6 YES
{
	ifvare character 0
	sound SELECT_WEAPON2
	else sound SELECTMELWPN
}
ifvare RETURN 7 ifvare player[THISACTOR].gotweapon 7 YES
{
	ifvare character 0
	sound SELECT_WEAPON2
	else sound SELECTMELWPN
}
ifvare RETURN 9  ifvare player[THISACTOR].gotweapon 9 YES 
{
	ife character 0
	sound SELECT_WEAPON2
}
ifvare RETURN 11 ifvare player[THISACTOR].gotweapon 11 YES sound SELECT_WEAPON2

endevent

state barbaltfire

ifvarn CURRWEAP 4
ifvarn CURRWEAP 7
ifvarn CURRWEAP 8
{
	ifvarl barbshield 1
	{
		spawn BARB_BLOCKER
		setvar barbshield 0
	}
	ifvarl barbshield 6 addvar barbshield 1
}
		
ife CURRWEAP 7
ifg player[].ammo_amount 7 0
{
	setp[].kickback_pic 1
	set ALTFIRING YES
}

setvarvar lastbits bits

ends

state drinkpotion
	getplayer[THISACTOR].i spriteid
	ifvarvarl sprite[spriteid].extra player[THISACTOR].max_player_health
	{		
		getplayer[THISACTOR].firstaid_amount temp
		ifvarg temp 0
		{
			subvar temp 1
			setplayer[THISACTOR].firstaid_amount temp
			addphealth 1
			soundonce POUR
		}
		else ifactorsound THISACTOR POUR stopactorsound THISACTOR POUR
	}
	else ifactorsound THISACTOR POUR stopactorsound THISACTOR POUR
ends

onevent EVENT_PROCESSINPUT
	
getinput[THISACTOR].bits bits
getinput[THISACTOR].extbits extbits

// ifvare powtip YES
	getkeyname 412 48 2

// ifvare newtip YES // copy key for help menu into quote 402
	getkeyname 402 17 2

ifvarn helpmenu NO
{
	ifvare helpmenu YES // game tips
	{
		// qsprintf <target quote> <first quote> <second quote to insert in first where %s>
		qsprintf 405 400 402
		ifvarand extbits 1 // move forward
		{
			setvarvar temp inputime
			addvar temp 1
			// ifvarvarn temp timer
			ifl temp timer
			{
				// go to next tip in list of finished tips
				setvar temp 0
				whilevarn temp 1
				{
					ifvarn currtip 0
					{
						ifvare currtip 1073741824 { setvar currtip 0 setvar currtip2 1 ifvarvarand fintips2 currtip2 setvar temp 1 } else
						{
							shiftvarl currtip 1
							ifvarvarand fintips currtip
							setvar temp 1
						}
					}
					else
					ifvarn currtip2 0
					{
						ifvare currtip2 1073741824 { setvar currtip2 0 setvar currtip 1 ifvarvarand fintips currtip setvar temp 1 } else
						{
							shiftvarl currtip2 1
							ifvarvarand fintips2 currtip2
							setvar temp 1
						}
					}
					else setvarvar temp timer
					
				}
			}
			setvarvar inputime timer
		}
		else ifvarand extbits 2 // move backward
		{
			setvarvar temp inputime
			addvar temp 1
			ifvarvarn temp timer
			{
				// go to prev tip in list of finished tips
				setvar temp 0
				whilevarn temp 1
				{
					ifvarn currtip 0
					{
						shiftvarr currtip 1
						ifvarl currtip 1 { setvar currtip 0 setvar currtip2 1073741824 ifvarvarand fintips2 currtip2 setvar temp 1 } else
						{
							ifvarvarand fintips currtip
							setvar temp 1
						}
					}
					else
					ifvarn currtip2 0
					{
						shiftvarr currtip2 1
						ifvarl currtip2 1 { setvar currtip2 0 setvar currtip 1073741824 ifvarvarand fintips currtip setvar temp 1 } else
						{
							ifvarvarand fintips2 currtip2
							setvar temp 1
						}
					}
					else { setvarvar temp timer setvar currtip 1 }
				}
			}
			setvarvar inputime timer
		}
		ife jedtip NO
		ife currtip 134217728 { set jedtip YES savegamevar jedtip }
	}
	//lockplayer 6
	ifvare player[THISACTOR].movement_lock 0 setplayer[THISACTOR].movement_lock 15
}
else ifvare player[THISACTOR].movement_lock 15 setplayer[THISACTOR].movement_lock 0

ifvarand bits 8 // pressed key for game tips
{
	setvarvar temp inputime
	addvar temp 1
	ifvarvarn temp timer
	{
		ifn helpmenu NO
		{
			sound EXITMENUSOUND
			setvar helpmenu NO
			//setplayer[THISACTOR].movement_lock 0
		}
		else
		ife subtitle_time 0
		ifg character -1
		ife endlevel 0
		{
			setvar helpmenu YES
			sound INTO_MENU
			setvar newtip NO
		}
	}
	setvarvar inputime timer
}

// ifvarand bits 65536 state drinkpotion
// else ifvarand bits 1073741824 ifvare player[THISACTOR].inven_icon 1 state drinkpotion
// else ifactorsound THISACTOR POUR stopactorsound THISACTOR POUR


ifvarg endlevel 0 break

// obsolete code for pain jewel activation
// ifvarand lastbits 1073741824 nullop else
// ifvarand bits 1073741824
// ifvare gotdamage YES
// ifvare invicon 6
// {
	// sound INTO_MENU 
	// ifvare SHOWDAMAGE YES 
	// {
		// setvar SHOWDAMAGE NO
		// quote 149
	// }
	// else
	// {
		// setvar SHOWDAMAGE YES
		// quote 148
	// }
// }


// ifvarand bits 268435456 // alt-fire
ifvarand extbits 64
ifvare helpmenu NO
ifvare sleeping 0
ifl shipcam 0
{
	ifvare KICKBACKPIC 0
	ifvare player[THISACTOR].weapon_pos 0
	{
		ifvare character 1 { state barbaltfire break }
		
		ifvare CURRWEAP 1
		{
			addvar altfirehold 1
			ifvarg altfirehold 15 setvar altfirehold 15
		}
// 		ifvarg player[THISACTOR].ammo_amount 1 0
// 		{
// 			setvar WEAPON1_SHOOTS SLUGPROJ
// 			setvar WEAPON1_SHOTSPERBURST 0
// 			setvar WEAPON1_FIRESOUND FIRESLUG
// 			setplayer[THISACTOR].kickback_pic 1
// 		}
		ifvare CURRWEAP 2
		{
			getplayer[THISACTOR].ammo_amount 2 temp
			ifvarg temp 0 setplayer[THISACTOR].kickback_pic 1
			ifvarand temp 1 nullop else
			ifvarg temp 1
			{
				subvar temp 1
				setplayer[THISACTOR].ammo_amount 2 temp
				setvar WEAPON2_SHOTSPERBURST 30
			}
		}
		ifvare CURRWEAP 4
		{
			addvar altfirehold 1
			set temp NO
			ifvarg slowtime 0 set temp YES
			else ifvarand pow 32768 set temp YES
			ife temp YES addvar altfirehold 1
			ifvarg altfirehold 101 setvar altfirehold 101
			getplayer[THISACTOR].ammo_amount 4 temp
			ifvarg temp 0
			{
				setvar WEAPON4_FIRESOUND SHOOTROX
				ifvare altfirehold 20 { addvar roxq 1 sound LOADROX subvar temp 1 }
				ifvare altfirehold 40 { addvar roxq 1 sound LOADROX subvar temp 1 }
				ifvare altfirehold 60 { addvar roxq 1 sound LOADROX subvar temp 1 }
				ifvare altfirehold 80 { addvar roxq 1 sound LOADROX subvar temp 1 }
				ifvare altfirehold 100 { addvar roxq 1 sound LOADROX subvar temp 1 }
				setplayer[THISACTOR].ammo_amount 4 temp
			}
		}
		ifvare CURRWEAP 5
		ifvarg player[THISACTOR].ammo_amount 5 0
		{
			setplayer[THISACTOR].kickback_pic 1
			setvar ALTFIRING 1
			set PIPEBOMB_CONTROL 2
		}
		ifvare CURRWEAP 6
		ifvarg player[THISACTOR].ammo_amount 6 0
		{
			setvar ALTFIRING 1
			setplayer[THISACTOR].kickback_pic 36
		}
		
		ifvare CURRWEAP 7
		{
			ifvarand lastextbits 64 nullop else
			ifvarand extbits 64
			{
				screensound BUTTONCLICK
				ife WEAP7MODE 0 
				{
					set WEAP7MODE 1 
					set WEAPON7_SHOOTS ICEBEAM
				}
				else
				{
					set WEAP7MODE 0
					set WEAPON7_SHOOTS FIREBEAM
				}
			}
		}
	
		// ifvare CURRWEAP 7
		// ifvarg player[THISACTOR].ammo_amount 7 0
		// {
			// setvar ALTFIRING 1
			// setplayer[THISACTOR].kickback_pic 1
		// }
		ifvare CURRWEAP 9
		ifvare shieldup 0
		ifvarg player[THISACTOR].ammo_amount 9 0
		{
			spawn PLASMASHIELD
			getplayer[THISACTOR].ammo_amount 9 temp
			subvar temp 1
			setplayer[THISACTOR].ammo_amount 9 temp
		}
		// ifvare CURRWEAP 11
		// ifvarg player[THISACTOR].ammo_amount 11 0
		// {
			// setvar ALTFIRING 1
			// setplayer[THISACTOR].kickback_pic 1
			// setvar WEAPON11_SHOOTS FEARBULLET
			// setvar WEAPON11_TOTALTIME 5
			// setvar WEAPON11_FIRESOUND FIRESIL
		// }
	}
	ifvare CURRWEAP 3 ifvare grenadecounter 0
	ifvarg grenades 0
	setvar grenadecounter 1
}
else
{
	ifvare KICKBACKPIC 0
	ifvare CURRWEAP 4 ifvarg roxq 0
	{
		setplayer[THISACTOR].kickback_pic 1
		ifvare player[THISACTOR].ammo_amount 4 0 
		{
			setplayer[THISACTOR].ammo_amount 4 1
			setvar ammohack 1
		}
		
	}
	setvar altfirehold 0
	ifvare CURRWEAP 6 setvar ALTFIRING 0
}

ifvarand bits 1 ifvarg onladder 0
{
	setvar onladder -6
	setplayer[THISACTOR].jumping_toggle 1
}

setvarvar lastbits bits
setvarvar lastextbits extbits
endevent

onevent EVENT_FIRE

ifvarn camerasprite -1
{
	ifvarand actorvar[camerasprite].monstflags 2 nullop else
	{ setvar RETURN -1 break }
}

ifg shipcam -1 ifg CURRWEAP 0 { set RETURN -1 break }

ifvare CURRWEAP 4
{
	ifvare character 1 
	{
		ifvare arrowtype 0 ifvarl player[THISACTOR].ammo_amount 4 2 setvar RETURN -1
		ifvare arrowtype 1 { ifvarl burnarrows 1 setvar RETURN -1 } else
		ifvare arrowtype 2 { ifvarl explarrows 1 setvar RETURN -1 } else
		ifvare arrowtype 3 { ifvarl multiarrows 1 setvar RETURN -1 } else
		ifvare arrowtype 4 { ifvarl freezearrows 1 setvar RETURN -1 } else
		ifvare arrowtype 5 { ifvarl spyarrows 1 setvar RETURN -1 }
		ifvare RETURN -1 break
	}
	ife character 0 ifvarand extbits 64 set RETURN -1
}
ife character 1 ife CURRWEAP 6 ifg ARMCOOLDOWN 0 set RETURN -1
ifvarn sleeping 0 { setvar RETURN -1 break }
ifvarn transition 0 { setvar RETURN -1 break }
ifvarg endlevel 0 { setvar RETURN -1 break }
ifvarn helpmenu NO { setvar RETURN -1 break }
ifvarn cutscene 0 { setvar RETURN -1 break }
ifvarn shieldup 0 { setvar RETURN -1 break }
ifvare CURRWEAP 3
ifvare player[THISACTOR].ammo_amount 3 1 ifvarg grenades 0 setvar RETURN -1

ifvare character 0
ifvare gotsaw NO
ifvare CURRWEAP 0
{
	set RETURN -1
	ife player[].quick_kick 0 setp[].quick_kick 15
}

ifvare CURRWEAP 1
ifvare character 0
ifvarg altfirehold 0
{
	ifvarl altfirehold 8 { setvar RETURN -1 break } // iron sights not in position yet
	setvar WEAPON1_SHOOTS SLUGPROJ
	setvar WEAPON1_SHOTSPERBURST 0
	setvar WEAPON1_FIRESOUND FIRESLUG
	setvar WEAPON1_TOTALTIME 34
	getplayer[THISACTOR].auto_aim autoaim
	setplayer[THISACTOR].auto_aim 0
}

ife character 0 ife CURRWEAP 6 ife WEAPON6_SHOOTS BFGPROJ
ifl player[].ammo_amount 6 100 set RETURN -1

setvar altfirehold 0
setvar ALTFIRING 0

endevent

onevent EVENT_GETSHOTRANGE

ifvare CURRWEAP 1
ifvare WEAPON1_SHOOTS SLUGPROJ
{
	setvar ANGRANGE 1
	setvar ZRANGE 1
}
ifvare CURRWEAP 2
{
	// shiftvarl ANGRANGE 2
	mul ANGRANGE 3
	shiftvarl ZRANGE 1
}
ifvare CURRWEAP 6
ifvare character 0
{
	setvar ANGRANGE 1
	setvar ZRANGE 1
	getplayer[THISACTOR].ammo_amount 6 temp
	subvar temp 1
	ifvarl temp 0 setvar temp 0
	setplayer[THISACTOR].ammo_amount 6 temp
	ifvarl temp 1 { setplayer[THISACTOR].kickback_pic 0 setvar ALTFIRING 0 }
}

ifvare ARROWHACK YES
{
	setvar ANGRANGE 1
	setvar ZRANGE 1
}
endevent

onevent EVENT_SPAWN

switch sprite[].picnum
	case 507
		ifvare lotag 1
		{
			getactor[THISACTOR].cstat initcstat
			ifvarand initcstat 256 { xorvar initcstat 256 setactor[THISACTOR].cstat initcstat }
			cstator 32768
			cstator 1
			ifvarg hitag 0 
			{
				setvarvar temp hitag
				subvar temp 1
				ifvarvarg plevel temp { killit } 
			}
		}
	break
	case HOLODUKE sizeat 20 20 break
	case ARMORSHARD

		getactor[THISACTOR].z z
		subvar z 4096
		setactor[THISACTOR].z z
	break
	case EGG
		ifspawnedby APLAYER { sizeat 40 40 cstat 257 }
	break
	case DRONE
		ifspritepal 21 sizeat 48 48 else
		sizeat 26 26
	break
	case KAMIKAZE sizeat 29 27 break
	case PIGCOP 
	case PIGCOPSTAYPUT
	case PIGCOPDIVE
		sizeat 32 27
		ifspritepal 10 sizeat 36 31
		ifspritepal 14 sizeat 27 23
	break
	case LIZMAN
	case LIZMANSTAYPUT
	case LIZMANJUMP
		sizeat 30 25 // 48 40
	break
	case LIZTROOP
	case LIZTROOPSTAYPUT	
		sizeat 40 38
		ifspritepal 88 sizeat 72 70
		ifspritepal 7 sizeat 64 60
		ifspritepal 24 sizeat 20 18
	break
	// case SMALLSMOKE
	case STARUP
	case BLOODTRAIL
	case ROCKETSPARK
	case PLATSMOKE
	case SHOTSPARK2
	case SCRAP1
	case SCRAP2
	case SCRAP3
	case SCRAP4
	case SCRAP5
	case SCRAP6
	case GLASSPIECES
	case BLUDSPLASH
	case BLOODCLOUD
		ifl framerate 25 killit else
		ifg Numsprites 14336 killit
	break

endswitch

endevent

defstate maploadinit

	ifactor TEMPSPRITE nullop else ifvare initcstat 0 getactor[THISACTOR].cstat initcstat
	
	getactor[THISACTOR].picnum picnum
	switch picnum
	case RESPAWN
		state eventloadactorstate
	break
	
	case EGG
	case HORNET
	case LIZTROOP
	case LIZTROOPSTAYPUT
	case DRONE
	case TANK
	case PIGCOP
	case PIGCOPSTAYPUT
	case PIGCOPDIVE
	case LIZMAN
	case LIZMANSTAYPUT
	case ROTATEGUN
	case BOSS1
	case BOSS1STAYPUT
	case BOSS2
	case BOSS3
	case BOSS4
	case BOSS4STAYPUT
	case SHARK
	case CYBERDEMON
	case CYBERDEMONSTAYPUT
	case BARON
	case BARONSTAYPUT
	case CYBERFLOAT
	case CYBERFLOATPUT
	case BATGUNNER
	case BATGUNNERSTAYPUT
	case SCUBATROOP
	case WIZARD
	case WRAITH
	case SKELKNIGHT
	case SKELKNIGHTSTAYPUT
	case DEMON
	case DEMONSTAYPUT
	case EGGSACK
	case SPIDER2
	case DETHNITE
	case DETHNITESTAYPUT
	case ETTIN
	case ETTINSTAYPUT
	case GOLEM
	case GOLEMSTAYPUT
	case DRAGON
	case EVILDUKE
	case EVILDUKESTAYPUT
	case KAMIKAZE
	case HELLHOUND
	case LUGLORD
	case EVILKNIGHT
	case EVILKNIGHTSTAYPUT
	case CYCLORD
	case CYCLORDSTAYPUT
	case ARCHON
		state eventloadactorstate
		ifn sprite[].pal 17 seta[].lotag 0
	break
	
	case CRACK1
	case CRACK2
	case CRACK3
	case CRACK4
		geta[].lotag lotag
		seta[].lotag 0
	break
	
	case AMMOPACK
	sizeat 40 40
	break
	
	case CANNONBALL
		seta[].mdflags 1
	break
	
	case GOODFISH
	sizeat 24 24
	cstator 256
	ifspritepal 0
	{
		rand temp 10
		ife temp 1 spritepal 2
		ife temp 2 spritepal 10
		ife temp 3 spritepal 11
		ife temp 4 spritepal 12
		ife temp 5 spritepal 14
		ife temp 6 spritepal 15
		ife temp 7 spritepal 16
		ife temp 8 spritepal 18
		ife temp 9 spritepal 21
		ife temp 10 spritepal 23
	}
	break
	
	case BADFISH
	sizeat 30 28
	cstator 256
	ifspritepal 0
	{
		rand temp 10
		ife temp 1 spritepal 2
		ife temp 2 spritepal 10
		ife temp 3 spritepal 11
		ife temp 4 spritepal 12
		ife temp 5 spritepal 14
		ife temp 6 spritepal 15
		ife temp 7 spritepal 16
		ife temp 8 spritepal 18
		ife temp 9 spritepal 21
		ife temp 10 spritepal 23
	}
	break
	
	case BADFISHBITE
	sizeat 30 28
	cstator 256
	cactor BADFISH
	ifspritepal 0
	{
		rand temp 10
		ife temp 1 spritepal 2
		ife temp 2 spritepal 10
		ife temp 3 spritepal 11
		ife temp 4 spritepal 12
		ife temp 5 spritepal 14
		ife temp 6 spritepal 15
		ife temp 7 spritepal 16
		ife temp 8 spritepal 18
		ife temp 9 spritepal 21
		ife temp 10 spritepal 23
	}
	break
	
	case SLOTDOOR case 133
	case LIGHTSWITCH case 135
	case SPACEDOORSWITCH case 137
	case SPACELIGHTSWITCH case 139
	case FRANKENSTINESWITCH case 141
	case MULTISWITCH case 147 case 148 case 149
	case DIPSWITCH case 163
	case DIPSWITCH2 case 165
	case TECHSWITCH case 167
	case DIPSWITCH3 case 169
	case ACCESSSWITCH2 case 171
	case LIGHTSWITCH2 case 713
	case POWERSWITCH1 case 861
	case LOCKSWITCH1 case 863
	case POWERSWITCH2 case 865
	case HANDSWITCH case 1112
	case PULLSWITCH case 1123
	case ALIENSWITCH case 1143
	
	getactor[THISACTOR].lotag lotag
	getactor[THISACTOR].extra activator
	getactor[THISACTOR].picnum mtype
	ifvare activator -1 setvar activator 0
	ifmultiplayer
	{
		ifvarn COOP YES
		{
			ifspritepal 1 killit
		}
		else
		{
			ifspritepal 2 killit
		}
	}
	
	break
	
	case CANWITHSOMETHING
		geta[].lotag lotag
		seta[].lotag 0
		cactor POTWITHSOMETHING2
		cstator 257
	break
	
	case POTWITHSOMETHING case POTWITHSOMETHING2
		geta[].lotag lotag
		seta[].lotag 0
		cstator 257
	break
	
	case GEMSPRITE
	case COLA
	case SIXPAK
	case HEAVYHBOMB
	case AMMO
	case SHOTGUNAMMO
	case FLAMEAMMO
	case REVOLVERAMMO
	case SHIELD
	case ARMOR2
	case ARMOR3
	case ARMORSHARD
	ifmultiplayer
	{
		ifvarn COOP YES
		{
			ifspritepal 1 killit
		}
		else
		{
			ifspritepal 2 killit
		}
	}
	else ifspritepal 6 { spritepal 0 setvar hitag 6 }
	
	break
	
	case ATOMICHEALTH
	case GRENADEAMMO
	case BATTERYAMMO
	case RPGAMMO
	case BFGAMMO
	case QUADDAMAGE
	case PLASMAAMMO
	getactor[THISACTOR].extra monstflags
	ifvare monstflags -1 setvar monstflags 0
	ifvarand monstflags 1 cstat 32768
	ifmultiplayer
	{
		ifvarn COOP YES
		{
			ifspritepal 1 killit
		}
		else
		{
			ifspritepal 2 killit
		}
	}
	else ifspritepal 6 { spritepal 0 setvar hitag 6 }
	break
	
	case POWERPOD
	setactor[THISACTOR].shade -127
	break
	
	case CHAINSAWSPRITE
	case FIRSTGUNSPRITE
	case SHOTGUNSPRITE
	case CHAINGUNSPRITE
	case RPGSPRITE
	case HBOMBAMMO
	case BFGSPRITE
	case FLAMETHROWERSPRITE
	case GAUNTSPRITE
	case GAUNTAMMO
	case TRIPBOMBSPRITE
	case PLASMASPRITE
	case REVOLVERSPRITE
	case FIRSTAID
	case BOOTS
	case HOLODUKE
	case HEATSENSOR
	case JETPACK
	case ARMOR1
	ifmultiplayer
	{
		ifvarn COOP YES
		{
			ifspritepal 1 killit
		}
		else
		{
			ifspritepal 2 killit
		}
	}
	else ifspritepal 6 { spritepal 0 setvar hitag 6 }
	
	break
	
	case MUSICSECTOR
		geta[].lotag lotag
		seta[].lotag 0
		geta[].pal mtype
		seta[].pal 0
		cstat 32768
	break
	
	case 527 // wall lantern
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 4096
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 15
		setvar tempc 0
		setvar peractor6 30 // flicker amount
		// state spawnpointlight
	}	
	break
	
	case 1722 // big goblin torch
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 6144
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 1
		setvar tempc 0
		setvar peractor6 50 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3375 // tall torch
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 6144
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 15
		setvar tempc 0
		setvar peractor6 30 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3830 // chandelier
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 4096
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 7
		setvar tempc 0
		setvar peractor6 40 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3840 // wall torch
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 3072
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 1
		setvar tempc 0
		setvar peractor6 60 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3843 // white candle
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 512
		// setvar intensity 2048
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 15
		setvar tempc 0
		setvar peractor6 40 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3846 // skull candle
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 512
		// setvar intensity 2048
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 1
		setvar tempc 0
		setvar peractor6 40 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3600 case 3601 case 3603 case 3604
	case 3615 case 3622 case 7182 case 7193  // small plants non blocking
	ifvarand initcstat 1 { xorvar initcstat 1 setactor[THISACTOR].cstat initcstat }
	break
	
	case 3849 // big torch
	case FIRE3
	case FIRE4
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 0
		// setvar intensity 6144
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 15
		setvar tempc 0
		setvar peractor6 30 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3863 // lantern pole
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 4096
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 1
		setvar tempc 0
		setvar peractor6 35 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3867 // green torch
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 4096
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 8
		setvar tempc 0
		setvar peractor6 45 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3871 // blue torch
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 4096
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 1
		setvar tempc 0
		setvar peractor6 45 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3875 // wall torch 2
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 3072
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 15
		setvar tempc 0
		setvar peractor6 60 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3878 // chandelier
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 3072
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 15
		setvar tempc 0
		setvar peractor6 40 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 3881 // tall candle
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 512
		// setvar intensity 2048
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 2
		setvar tempc 0
		setvar peractor6 40 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 4032 // hanging lantern
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 4096
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 1
		setvar tempc 0
		setvar peractor6 40 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 4037 // candle
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 512
		// setvar intensity 2048
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 1
		setvar tempc 0
		setvar peractor6 50 // flicker amount
		// state spawnpointlight
	}
	break
	
	case 8078 // minecraft torch
	ifvarn sprite[THISACTOR].extra 1
	{
		setvar tempd 2
		// setvar intensity 2048
		ifvarg sprite[THISACTOR].hitag 0 
		{ 
			// getactor[THISACTOR].hitag intensity 
			setactor[THISACTOR].hitag 0 
		}
		getactor[THISACTOR].pal pal
		ifvare pal 0 setvar pal 15
		setvar tempc 0
		setvar peractor6 5 // flicker amount
		// state spawnpointlight
	}
	break
	
	case RETURNPOINT
	case ASSEMBLER
		cstat 32768
		geta[].lotag lotag
		seta[].lotag 0
	break
	
	endswitch
	
	ifvare mapsprocessed[LEVEL] 0
	{
		state onetimeonly
		setarray mapsprocessed[LEVEL] 1
	}
	
	ifactor SOULDOOR
	{
		setvarvar temp maxheroes[LEVEL]
		addvar temp 1
		setarray maxheroes[LEVEL] temp
		
		getactor[THISACTOR].lotag lotag
		setactor[THISACTOR].lotag 0
		getactor[THISACTOR].yvel activator
		getactor[THISACTOR].zvel group
		ifvare lotag 0 setvar lotag 1	
	}
	
	ifvarn group 0
	{
		setvarvar temp mongroup[group]
		addvar temp 1
		setarray mongroup[group] temp
	}
ends

// gamevar groupcheck NO 0

onevent EVENT_LOADACTOR

// ife groupcheck NO
// {
	// set groupcheck YES
	// set spriteid 0
	// whilevarn spriteid 16384
	// {
		// ife sprite[spriteid].picnum RESPAWN
		// {
			// set temp NO
			// ife sprite[spriteid].hitag CYBERDEMON set temp YES
			// ife sprite[spriteid].hitag CYBERDEMONSTAYPUT set temp YES
			// ife temp YES
			// {
				// al spriteid
				// geta[spriteid].lotag tempb
				// al tempb
				// geta[spriteid].yvel tempc
				// al tempc
				// geta[spriteid].zvel tempd
				// al tempd
				// set tempe 99999999
				// al tempe
			// }
		// }
		// add spriteid 1
	// }
// }

ifactor 507
{
	getactor[THISACTOR].lotag lotag
	getactor[THISACTOR].hitag hitag
	ifvare lotag 1
	{
		cstator 32768
		cstator 1
	}
}
	
ifactor REPLAYSPRITE
ifvare completed1[LEVEL] YES
{
	// addlogvar savedpicnum
	// addlogvar THISACTOR
	setactor[THISACTOR].picnum savedpicnum
	ifactor SECTOREFFECTOR changespritestat THISACTOR 3 else
	ifactor ACTIVATOR changespritestat THISACTOR 8 else
	ifactor TOUCHPLATE changespritestat THISACTOR 6 else
	ifactor ACTIVATORLOCKED changespritestat THISACTOR 8 else
	ifactor MUSICANDSFX changespritestat THISACTOR 5 else
	ifactor LOCATORS changespritestat THISACTOR 7 else
	ifactor MASTERSWITCH changespritestat THISACTOR 6 else
	ifactor RESPAWN changespritestat THISACTOR 11 else
	changespritestat THISACTOR 1

	// note that GPSPEED and CYCLER are deleted
	ifvarl sprite[THISACTOR].picnum 11 cstat 32768 else
	setactor[THISACTOR].cstat initcstat
	state maploadinit
	break
}

ifvare sprite[THISACTOR].clipdist 1
{
	setactor[THISACTOR].clipdist 32
	getactor[THISACTOR].picnum savedpicnum
	// addlogvar savedpicnum
	setactor[THISACTOR].picnum REPLAYSPRITE
	getactor[THISACTOR].cstat initcstat
	cstat 32768
	break
}

ifvare mapsprocstage2[LEVEL] YES break

state maploadinit

endevent

gamevar egsvar 0 0

onevent EVENT_EGS

ifspawnedby RESPAWN
{
	getactor[THISACTOR].owner egsvar
	ifvarn egsvar -1
	{
		getactor[egsvar].pal tempb
		ifvare tempb 1 setvar tempb 20
		setactor[THISACTOR].pal tempb
		getactorvar[egsvar].droptile droptile
		getactorvar[egsvar].monstflags monstflags
		getactorvar[egsvar].aura aura
		getactorvar[egsvar].activator activator
		getactorvar[egsvar].group group
	}
	ifactor PIGCOP
	{
		ifspritepal 10 sizeat 36 31 // 54 46
		ifspritepal 14 sizeat 27 23 // 40 34
	}
	ifactor SKELKNIGHT
	state initskel
	ifactor WRAITH sizeat 40 40
	ifactor DRONE ifvare SKILL 5 ifrnd 48 { spritepal 21 addvar gold GOLD1 }
	ifactor KAMIKAZE ifspritepal 23 { set mtype 1 sizeat 40 32 } else sizeat 29 27
}

ifvare sprite[THISACTOR].statnum 4
{
	ifspawnedby APLAYER
	{
		ifvarand pow 128
		{
			setvar burning -30
			ifvarn sprite[THISACTOR].picnum ARROWPROJ
			spritepal 1
		}

	}
	else
	{
		ifvarand pow 1
		{
			getactor[THISACTOR].xvel xvel
			getactor[THISACTOR].zvel zvel
			shiftvarr xvel 1
			shiftvarr zvel 1
			setactor[THISACTOR].xvel xvel
			setactor[THISACTOR].zvel zvel
		}
	}
}

getactor[THISACTOR].picnum picnum
switch picnum

case FIRELASER 
	ifspawnedby SCUBATROOP spritepal 121
	else
	spritepal 2 
	cstator 514
	seta[].blend 1
	seta[].shade -127
break

case FWTRAIL6
case MINIFW
case ENERGYEXPL
seta[].blend 1
cstator 2
getactor[THISACTOR].owner egsvar
ifvarn egsvar -1
	setactor[THISACTOR].pal sprite[egsvar].pal

break

case STICKYFIRE cstat 32768 break

case 2249
case 2254
case 2259
case 2264
case 2269
case HEADJIBGROUND
case EDHEADJIBGROUND
case LEGJIBGROUND
case ARMJIBGROUND

getactor[THISACTOR].z z
addvar z 2048
setactor[THISACTOR].z z
clipdist 48
	
getactor[THISACTOR].owner egsvar
ifvarn egsvar -1
{
	setactor[THISACTOR].xrepeat sprite[egsvar].xrepeat
	setactor[THISACTOR].yrepeat sprite[egsvar].yrepeat
	setactor[THISACTOR].pal sprite[egsvar].pal
	getactorvar[egsvar].mtype mtype
}
else
sizeat 32 32
	
break

case SLOWBULLET 
case EVILBULLET
case EXPLOSIVEBULLET
seta[].blend 1
cstator 2
state randtraj2
ifrnd 128 cstator 4
ifrnd 128 cstator 8

ifvarg sprite[THISACTOR].zvel 6144
{
	ldist xydist THISACTOR player[THISACTOR].i
	getplayer[THISACTOR].posz mz
	getactor[THISACTOR].z z
	subvarvar mz z
	shiftvarl mz 6 // 7
	divvarvar mz xydist
	getactor[THISACTOR].zvel zvel
	addvarvar zvel mz
	setactor[THISACTOR].zvel zvel
	
// 	getplayer[THISACTOR].cursectnum mysector
// 	ifvarn mysector -1
// 	changespritesect THISACTOR mysector
	
}
break

case ROCKPROJ
state randtraj
break

case RPG
getactor[THISACTOR].xrepeat x
shiftvarl x 1
setactor[THISACTOR].xrepeat x
getactor[THISACTOR].yrepeat y
shiftvarl y 1
setactor[THISACTOR].yrepeat y
set lastang 9999
ifspawnedby APLAYER 
	ifvare CURRWEAP 4
		ifvarn WEAPON4_FIRESOUND SHOOTROX
		{
			geta[].xvel egsvar shiftl egsvar 1
			seta[].xvel egsvar
			geta[].zvel egsvar shiftl egsvar 1
			seta[].zvel egsvar
		}
break

case BARONBALL
	seta[].blend 1
	cstator 2
	geta[].owner egsvar
	ifn egsvar -1 
		getav[egsvar].target target
break

case KORPROJSPAWN
	geta[].owner egsvar
	ifn egsvar -1 
	seta[].pal sprite[egsvar].pal
break

case FREEZEBLAST
seta[].blend 1
cstator 2
ifspawnedby APLAYER
{
	setvar mtype 1
	ifvare plasmacount 0 setvar plasmacount 1 else
	ifvare plasmacount 1
	{
		setvar plasmacount 2
		getactor[THISACTOR].ang angvar
		subvar angvar 64
		setactor[THISACTOR].ang angvar
	} else
	ifvare plasmacount 2
	{
		setvar plasmacount 0
		getactor[THISACTOR].ang angvar
		addvar angvar 64
		setactor[THISACTOR].ang angvar
	}
}
ifspawnedby CYBERDEMON
	set mtype 2
break

case FTPROJ

// ifmultiplayer nullop else
// {
	// setvarvar saveit RETURN
	// setvar tempd 2
	// setvar pal 15
	// setvar intensity 4096
	// setvar tempc 1 // moving
	// state spawnpointlight
	// ifvarvare saveit THISACTOR setvarvar RETURN THISACTOR
// }

ifvare myspawner -1 getactor[THISACTOR].owner myspawner
ifspawnedby APLAYER 
{
	ifvarand pow 128 { spritepal 1 setvar burning -30 }
	ife WEAP7MODE 1 { spritepal 1 setvar burning -30 }
}

break

case PLASMAPROJ
	
	ifspawnedby BATGUNNER
	{
		geta[].owner temp
		getav[temp].target target
		ifn target -1
		state projzveltotarg
	} else
	ifspawnedby SIDEGUN
	{
		geta[].owner temp
		getav[temp].target target
		ifn target -1
		state projzveltotarg
	}
	
break

case BIGSMOKE
ifspawnedby FTPROJ
{
	getactor[THISACTOR].owner egsvar
	ifvarn egsvar -1
		ifvare sprite[egsvar].pal 1 spritepal 1
	
}
break

// case WRAITHPROJ
// ifmultiplayer nullop else
// {
	// setvarvar saveit RETURN
	// setvar tempd 2
	// setvar pal 10
	// setvar intensity 4096
	// setvar tempc 1 // moving
	// state spawnpointlight
	// ifvarvare saveit THISACTOR setvarvar RETURN THISACTOR
// }
// break

case WRAITHIMPACT
getactor[THISACTOR].owner egsvar
getactorvar[egsvar].mtype mtype
break

// case DEMONSPIT
// ifmultiplayer nullop else
// {
	// setvarvar saveit RETURN
	// setvar tempd 2
	// setvar pal 7
	// setvar intensity 3072
	// setvar tempc 1 // moving
	// state spawnpointlight
	// ifvarvare saveit THISACTOR setvarvar RETURN THISACTOR
// }
// break

case ARROWPROJ
 
 ifspawnedby APLAYER
 {
	 setvar target2 APLAYER
	 getactor[THISACTOR].zvel zvel
	 subvar zvel 512
	 setactor[THISACTOR].zvel zvel
	 ifvare arrowtype 5 setvarvar arrowview THISACTOR
	 // 0 = regular; 1 = burning; 2 = explosive; 3 = multi; 4 = freeze; 5 = spy
		 ifvare arrowtype 1
		 {
			 spritepal 2
			 setthisprojectile[THISACTOR].pal 2
		 }
		 ifvare arrowtype 2
			 spritepal 7
	
		 ifvare arrowtype 3 
		 {
			 spritepal 3
			 setthisprojectile[THISACTOR].pal 3
		 }
		 ifvare arrowtype 4
		 {
			 spritepal 1
			 setthisprojectile[THISACTOR].pal 1
		 }
		 ifvare arrowtype 5
		 {
			 spritepal 8
			 setthisprojectile[THISACTOR].pal 8 
		 }
 }
 
 break

case BFGIMPACT
setvar peractor1 -1
ifspawnedby BFGPROJ
{
	getactor[THISACTOR].owner egsvar
	ifvarn egsvar -1
	getactor[egsvar].owner peractor1
	
	// ifmultiplayer nullop else
	// {
		// setvarvar saveit RETURN
		// setvar tempd 0
		// setvar pal 6
		// setvar intensity 16384
		// setvar tempc 0
		// state spawnpointlight
		// ifvarvare saveit THISACTOR setvarvar RETURN THISACTOR
	// }
}
break

case BLOODPOOL
cstator 2
ifrnd 128 cstator 4
randvar angvar 2047
setactor[THISACTOR].ang angvar
ifoutside getsector[THISACTOR].ceilingshade egsvar else
getsector[THISACTOR].floorshade egsvar
addvar egsvar 6
ifvarg egsvar 28 setvar egsvar 28
ifvarl egsvar 0 setvar egsvar 0
setactor[THISACTOR].shade egsvar
// does nothing without spritenoshade!!

getsector[THISACTOR].floorstat egsvar
ifvarand egsvar 1024
{
	ifvarand egsvar 512 nullop else cstat 32768
}
break

case MONSOULMAP
case SOULDOORMAP
cstat 32800
break

case TRIPBOMB
ifspawnedby APLAYER
{
	getplayer[THISACTOR].i myspawner
	cactor DEADLYEYE
	changespritestat THISACTOR 1
	setvar ammo 10
	ifl eyeballammo 100
	{ set ammo eyeballammo div ammo 10 ifl ammo 1 set ammo 1 }
	sub eyeballammo 100
	ifl eyeballammo 0 set eyeballammo 0
}

break

case HEAVYHBOMB
ifspawnedby APLAYER
{
	ifvarand pow 128 { spritepal 1 setvar burning -30 }
	getplayer[THISACTOR].i myspawner
    
	ifvare ALTFIRING 1
	{
		setvar ALTFIRING 0
		getactor[THISACTOR].xvel xvel
		shiftvarl xvel 2
		setactor[THISACTOR].xvel xvel
		getactor[THISACTOR].zvel zvel
		shiftvarl zvel 1
		ifvarl zvel -5120 setvar zvel -5120
		setactor[THISACTOR].zvel zvel
		set mtype 1
	}
	else
	{
		set temp pipehold
		mul temp 9 div temp 5
		ifinwater shiftvarr temp 1
		geta[].xvel xvel
		add xvel temp
		seta[].xvel xvel
	}
	
	set pipehold 0
}
break

case SMALLSMOKE
  getactor[THISACTOR].owner egsvar
  ifvarn egsvar -1
  {
	  getactor[egsvar].picnum picnum
	  ifvare picnum SHOTSPARK1
	  {
		ifvare sprite[egsvar].yvel FEARBULLET spritepal 8 else
		{
			getactor[egsvar].htg_t 8 spriteid
			ifvarn spriteid -1
			{
				getactorvar[spriteid].monstatus monstatus
				ifvare monstatus 1 setvar monstatus 2
			}
		}
	  }
  }
break

case SHOTSPARK1

	geta[].z z
	geta[].owner egsvar
	geta[egsvar].z mz
	sub mz 8192
	sub z mz
	ldist xydist THISACTOR egsvar
	shiftvarr z 4
	getangle shotpitch xydist z	
	ifg shotpitch 1023 sub shotpitch 2048
	ifspawnedby APLAYER
	{
		getp[].i egsvar
		setav[egsvar].shotpitch shotpitch
	}
break

case EXPLOSION2

	getactor[THISACTOR].htowner htg5
	ifvarn htg5 -1 getactorvar[htg5].burning burning
	
	ifspawnedby RPG
		ifvarn htg5 -1
		{
			getactorvar[htg5].mtype egsvar
			ifvare egsvar -1 cstat 32768 // killit
		}
	

	ifspawnedby TRIPBOMB
	{	
		ifvarn htg5 -1 ifvare sprite[htg5].picnum TRIPBOMB
		getactorvar[htg5].myspawner myspawner // should be a player sprite
	}
	ifspawnedby HEAVYHBOMB
	{
		ifvarn htg5 -1 ifvare sprite[htg5].picnum HEAVYHBOMB
		getactorvar[htg5].myspawner myspawner // should be a player sprite
		cstator 2
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
		espawn BOMBLET
		setactorvar[RETURN].myspawner myspawner
	}
break

case EXPLOSION3
	getactor[THISACTOR].htowner htg5
	ifn htg5 -1 
	{
		ife sprite[htg5].pal 23 spritepal 23
		ife sprite[htg5].pal 113 spritepal 113
	}
break

case BLUDSPLASH
ifspawnedby WATERFALL 
{
	cstat 32768
	movesprite THISACTOR 0 0 4096 CLIPMASK0 RETURN
}
break

case WATERSPLASH2
getactor[THISACTOR].owner egsvar
ifvarn egsvar -1
{
	getactor[egsvar].pal pal
	setactor[THISACTOR].pal pal
}
break

case BLOODCLOUD
getactor[THISACTOR].owner egsvar
ifvarn egsvar -1
{
	getactor[egsvar].pal pal
	setactor[THISACTOR].pal pal
}
break

case GRENADEPROJ
ifspawnedby APLAYER getplayer[THISACTOR].i myspawner
getactor[THISACTOR].zvel egsvar
subvar egsvar 1024
setactor[THISACTOR].zvel egsvar

// ifmultiplayer nullop else
// {
	// setvarvar saveit RETURN
	// setvar tempd 2
	// setvar pal 0
	// setvar intensity 4096
	// setvar tempc 1 // moving
	// state spawnpointlight
	// ifvarvare saveit THISACTOR setvarvar RETURN THISACTOR
// }

ifspawnedby EVILDUKE
{
	getactor[THISACTOR].ang angvar
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	setvarvar mx x
	addvar mx 480
	rotatepoint x y mx y angvar mx my
	setactor[THISACTOR].x mx
	setactor[THISACTOR].y my
}
break

case LAVAROCK
getactor[THISACTOR].xvel xvel
randvar egsvar 64
addvarvar xvel egsvar
setactor[THISACTOR].xvel xvel

// ifmultiplayer nullop else //ifvarg framerate 20
// {
	// setvarvar saveit RETURN
	// setvar tempd 512
	// setvar pal 2
	// setvar intensity 3072
	// setvar tempc 1 // moving
	// state spawnpointlight
	// ifvarvare saveit THISACTOR setvarvar RETURN THISACTOR
// }

break

case WEBPROJ
ifrnd 128 cstator 4
ifrnd 128 cstator 8
setactor[THISACTOR].mdflags 16
break

case ARCHONPROJ
seta[].blend 1
seta[].alpha 32
break

case NOVAPROJ
case BFGPROJ
seta[].blend 1
seta[].alpha 32
ifrnd 128 cstator 4
ifrnd 128 cstator 8
setactor[THISACTOR].mdflags 16

// ifmultiplayer nullop else
// {
	// setvarvar saveit RETURN
	// setvar tempd 0
	// setvar pal 6
	// ifactor NOVAPROJ setvar pal 15
	// setvar intensity 8192
	// setvar tempc 1 // moving
	// state spawnpointlight
	// ifvarvare saveit THISACTOR setvarvar RETURN THISACTOR
// }

break

case FTDUMMY
setvar shootflames YES
break

case SCRAP2
case 2405
case 2406
case 2407
ifspawnedby SHOTSPARK1
{
	sizeat 9 9
	cstator 128
}
else
ifspawnedby APLAYER // move it forward so its visible
{
	geta[].x mx
	add mx 256
	rotatepoint sprite[].x sprite[].y mx sprite[].y player[].ang x y
	setsprite THISACTOR x y sprite[].z
}
break

case SCRAP6
case SCRAP1
ifspawnedby APLAYER // move it forward so its visible
{
	geta[].x mx
	add mx 256
	rotatepoint sprite[].x sprite[].y mx sprite[].y player[].ang x y
	setsprite THISACTOR x y sprite[].z
}
break

case ETTINCLUB
 ifrnd 128 cstator 4
 ifrnd 128 cstator 8
 getactor[THISACTOR].zvel zvel
 randvar tempb 1024
 ifrnd 128 addvarvar zvel tempb else subvarvar zvel tempb
 break
 
case GOLEM
sizeat 36 36 // 44 44
cstator 257
ifspritepal 17 action GOLEM_WAIT
break

case HEADJIBPROJ
case EDHEADJIBPROJ
case ARMJIBPROJ
case LEGJIBPROJ
ifrnd 128 cstator 4
break

case JIBS1
case JIBS2
case JIBS3
case JIBS4
case JIBS5
case JIBS6

getactor[THISACTOR].owner egsvar
ifvarn egsvar -1
{
	ifactor JIBS6
	ifvarl sprite[THISACTOR].xrepeat 20 
	{
		//getactor[egsvar].pal pal
		//ifvarl pal 9 setactor[THISACTOR].pal pal
		// else ifvarg sprite[egsvar].picnum 1960 setactor[THISACTOR].pal pal
		setactor[THISACTOR].pal sprite[egsvar].pal
		setactor[THISACTOR].xrepeat sprite[egsvar].xrepeat
		setactor[THISACTOR].yrepeat sprite[egsvar].yrepeat
		randvar xvel 36
		setactor[THISACTOR].xvel xvel
		randvar angvar 2047
		setactor[THISACTOR].ang angvar
	}

	ifvarl sprite[egsvar].extra 10
	{
		getactorvar[egsvar].bleeding tempe
		ifvarg tempe 20
		{
			getactor[THISACTOR].zvel zvel
			{
				randvar tempb 56
				mulvarvar tempb tempe
				shiftvarr tempb 2
				subvarvar zvel tempb
				setactor[THISACTOR].zvel zvel
			}
			shiftvarr tempe 1
			ifvare sprite[egsvar].htpicnum SHOTSPARK1 shiftvarr tempe 2
			getactor[THISACTOR].xvel xvel
			addvarvar xvel tempe
			setactor[THISACTOR].xvel xvel
		}
	}
}
break

case PLASMA_IMPACT
geta[].owner egsvar
ifn egsvar -1
{
	seta[].pal sprite[egsvar].pal
}
break

case SLASHTRAIL
	geta[].owner egsvar
	ifn egsvar -1
	{
		ife actorvar[egsvar].mtype 1 cstator 4
		ife sprite[egsvar].owner player[].i cstator 4
		ifg sprite[egsvar].pal 0 seta[].pal sprite[egsvar].pal
	}
break

case LIGHTNING_TRAIL1
case BEAMTRAIL
case ICEBEAMTRAIL
case BFGBEAMTRAIL
	cstat 32768
	sizeat 1 1
break

case DARKPROJ
	seta[].blend 1
	rand temp 256
	sub temp 128
	add temp sprite[].ang
	seta[].ang temp
	
break

case CANNONBALL2	
	geta[].zvel z
	sub z 512
	seta[].zvel z
break
 
endswitch

endevent

defstate switchbulletcode

    getactor[].htmovflag spriteid
	addvar spriteid 16384
	ifvarl spriteid 16384 ifvarg spriteid -1
	ife actorvar[spriteid].monstatus 1 break

	getp[].posx arrhackx
	getp[].posy arrhacky
	getp[].posz arrhackz
	getp[].ang arrhackang
	getp[].horiz savehoriz
	
	geta[].picnum saveit2
	cactor APLAYER
	setp[].posx sprite[].x
	setp[].posy sprite[].y
	setp[].posz sprite[].z
	// setp[].ang sprite[].ang
	ifg spriteid -1 ifl spriteid 16384
	{
		ifvarand sprite[spriteid].cstat 32
		{
			ifg player[].posz sprite[spriteid].z setp[].horiz 299
			else setp[].horiz -99
		}
	}
	else
	setp[].horiz 100
	shoot SWITCHBULLET
	geta[].z z
	sub z 768
	setp[].posz z
	shoot SWITCHBULLET
	geta[].z z
	add z 1536
	seta[].z z
	setp[].posz z
	shoot SWITCHBULLET
	seta[].picnum saveit2
	setp[].posx arrhackx
	setp[].posy arrhacky
	setp[].posz arrhackz
	setp[].ang arrhackang
	setp[].horiz savehoriz
ends


state cannondeath
	
	ifg mtype 29
	{
		spawn EXPLOSION2  
		setvar RETURN 0 
	    break
	}
	getactor[].htmovflag temp
	ifvare temp 0 
	{
		spawn EXPLOSION2  
		setvar RETURN 0 
	    break
	}

	// hit something
	addvar temp 16384
    ifvarl temp 16384 ifvarg temp -1 // hit a sprite
    {
	    setactor[temp].htpicnum RPG
		ife sprite[temp].statnum 1
		ifl sprite[temp].extra 400
		{
			set RETURN 1 
			add mtype 1
		}
    	else set RETURN 0 
    }
	else
    setvar RETURN 0
    ifvare RETURN 0 
    {
	    spawn EXPLOSION2 
	    set RETURN 0
	}
ends

defstate spawnvertspear

	set countvar 0
	globalsound BREAKWOOD5
	setvar peractor4 VERTSPEAR
	cactor VERTARROW
	seta[].xoffset 0
	seta[].yoffset 0
	ifge mz 0 cstat 153 // floor spear
	else
	cstat 145 // ceiling spear
	
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	changespritestat THISACTOR 1
	
	espawn VERTARROW
	setav[RETURN].peractor4 VERTSPEAR
	setactor[RETURN].pal sprite[THISACTOR].pal
	ifge mz 0 seta[RETURN].cstat 153
	else
	{
		setactor[RETURN].cstat 145
		seta[RETURN].z sprite[].z
	}
	getactor[THISACTOR].ang angvar	
	subvar angvar 512
	setactor[RETURN].ang angvar
	setactor[RETURN].xrepeat 16
	setactor[RETURN].yrepeat 16

ends

onevent EVENT_KILLIT

ife monstatus 1
ifn activator 0
ifl sprite[].statnum 3
{
	quote 749
	set RETURN 1
	setsprite THISACTOR player[].posx player[].posy player[].posz
	break
}

ifvare sprite[THISACTOR].statnum 4 // a projectile
ifvare command 0
{
	getactor[THISACTOR].htmovflag spriteid
	ifvarn spriteid 0
	{
		addvar spriteid 16384
	    ifvarl spriteid 16384 ifvarg spriteid -1 
	    {
		    
		    ifvare sprite[].picnum KORAXPROJ
		    {
				set temp NO
				ife sprite[spriteid].picnum KORAXPROJ set temp YES
				ife spriteid sprite[].owner set temp YES
				ife temp YES
				{
					seta[].yvel 1
					set RETURN 1
					getactor[THISACTOR].ang angvar, add angvar 1024
					getactor[THISACTOR].x x
					setvarvar mx x
					addvar mx 844
					rotatepoint sprite[].x sprite[].y mx sprite[].y angvar mx my
					setsprite THISACTOR mx my sprite[].z
				}
				else
				{
					setactor[spriteid].yvel 0
					setactorvar[spriteid].droptile MEDIUMPOTION
					setvar RETURN 0
				}
		    }
		    ifvare sprite[spriteid].picnum PLASMASHIELD
		    {
			    setvar command 1
			    getactor[spriteid].ang angvar
			    setactor[THISACTOR].ang angvar
				seta[].owner player[].i
			    getplayer[THISACTOR].horiz tempb
			    subvar tempb 100
			    shiftvarl tempb 5
			    getactor[THISACTOR].zvel zvel
			    mulvar zvel -1
			    subvarvar zvel tempb
			    setactor[THISACTOR].zvel zvel
			    setvar RETURN 1
			    break
		    }
		    ifvare sprite[spriteid].picnum ICEWALL1
		    {
			    getactor[spriteid].pal pal
				setactor[THISACTOR].pal pal
				ifactor FTPROJ 
				{
					espawn BIGSMOKE
					setactor[RETURN].pal pal
					spawn WATERDRIP
				}
				else
				{	
					lotsofglass 2
					espawn BLUDSPLASH
					setactor[RETURN].pal pal
					sound HITFLESH
					espawn FAKECRACK
					setactor[RETURN].htpicnum RPG
					setactorvar[RETURN].myspawner spriteid
				}
				setvar RETURN 0
			}
			ifvare sprite[spriteid].picnum ICEWALL2
		    {
			    getactor[spriteid].pal pal
				setactor[THISACTOR].pal pal
				ifactor FTPROJ 
				{
					espawn BIGSMOKE
					setactor[RETURN].pal pal
					spawn WATERDRIP
				}
				else
				{	
					lotsofglass 2
					espawn BLUDSPLASH
					setactor[RETURN].pal pal
					sound HITFLESH
					espawn FAKECRACK
					setactor[RETURN].htpicnum RPG
					setactorvar[RETURN].myspawner spriteid
				}
				setvar RETURN 0
			}
	    }
    }
}

ifactor KORAXPROJ
ifn RETURN 1
{
	espawn KORPROJSPAWN
	setactor[RETURN].pal sprite[THISACTOR].pal
	
	ifspritepal 10 { espawn GOLEM setactor[RETURN].pal 10 setactorvar[RETURN].droptile SIXPAK }
	ifspritepal 23 { espawn WRAITH setactorvar[RETURN].droptile ARMOR1 }
	ifspritepal 21 { espawn DRONE setactor[RETURN].pal 21 setactorvar[RETURN].droptile SHIELD }
	ifspritepal 97 set droptile SMALLPOTION
	
	ifvarn droptile 0 espawnvar droptile
	setvar RETURN 0
}

ifactor FTPROJ
{
	ifvare peractor1 1 { setvar RETURN 0 break }
	getactor[THISACTOR].htmovflag spriteid
	ifvarn spriteid 0
	{
		// hit something
		addvar spriteid 16384
	    ifvarl spriteid 16384 ifvarg spriteid -1 
	    {
		    ifvarvare myspawner spriteid { setvar RETURN 0 break }
	        // hit a sprite
	        getactor[spriteid].statnum temp
	        switch temp
	        case 0
	        case 1
	        case 2
	        case 10
	        getactorvar[spriteid].burning tempb
	       ifspritepal 1  
	       {
		       setvar tempc 16384 
		       ifvarg sprite[spriteid].extra 0 divvarvar tempc sprite[spriteid].extra
		       ifvarg tempc 300 setvar tempc 300
		       ifvarl tempc 6 setvar tempc 6
		       subvarvar tempb tempc
		    } 
		    else
	        addvar tempb 52
	        setactorvar[spriteid].burning tempb
	        ifvare temp 10 ifvarn myspawner -1
			{
				setvarvar flameowner myspawner 
				set retaliate myspawner
			}
	        break
	        endswitch
        }
    }
    espawn FIRESTARTER
    ifspritepal 1 { setactor[RETURN].pal 1 setactorvar[RETURN].burning -30  }
    setactorvar[RETURN].myspawner myspawner
    ifvare mtype 1 setactorvar[RETURN].mtype 1
    setvar RETURN 0
    break
}

ifactor FREEZEBLAST
{
	getactor[THISACTOR].htmovflag spriteid
	ifvarn spriteid 0
	{
		addvar spriteid 16384
 		ifvarl spriteid 16384 ifvarg spriteid -1
		{
			ifspawnedby WIZARD
			ifvare sprite[spriteid].picnum WIZARDSHIELD
			{
				getactor[THISACTOR].ang angvar
				getactor[THISACTOR].x x
				getactor[THISACTOR].y y
				setvarvar mx x
				addvar mx 256
				rotatepoint x y mx y angvar mx my
				setactor[THISACTOR].x mx
				setactor[THISACTOR].y my
				setvar RETURN 1
				break
			}
			espawn PLASMA_IMPACT
			getactor[THISACTOR].pal pal
			setactor[RETURN].pal pal
			setvar RETURN 0
			break
		}
	}
	getsector[THISACTOR].ceilingstat temp
	ifvarand temp 1 ifceilingdistl 20
	{
		setvar RETURN 0 
		break
	}
	espawn PLASMA_IMPACT
	getactor[THISACTOR].pal pal
	setactor[RETURN].pal pal
	setvar RETURN 0
	break
}

ifactor RPG
{
	ifactorsound THISACTOR FLYBYROX stopactorsound THISACTOR FLYBYROX
	ifvarvare guidedrox[0] THISACTOR setarray guidedrox[0] -1
	ifvarvare guidedrox[1] THISACTOR setarray guidedrox[1] -1
	ifvarvare guidedrox[2] THISACTOR setarray guidedrox[2] -1
	ifvarvare guidedrox[3] THISACTOR setarray guidedrox[3] -1
	ifvarvare guidedrox[4] THISACTOR setarray guidedrox[4] -1
	
	ifvare mtype -1 { setvar RETURN 0 break }
	getactor[THISACTOR].htmovflag temp
	ifvarn temp 0
	{
		andvar temp 49152
		ifvare temp 32768 nullop // hit a wall
		else
		{
			getactor[THISACTOR].htmovflag temp
			addvar temp 16384
			ifvarl temp 16384 ifvarg temp -1
			nullop // hit a sprite
			else
			{
				iffloordistl 16 nullop // hit the floor
				else
				ifvarand sector[THISACTOR].ceilingstat 1 // hit the sky
				{
					setvar RETURN 0
					break
				}	
			}
			
		}
	}
	
	espawn EXPLOSION2
	setactorvar[RETURN].peractor1 1
	getactor[THISACTOR].htmovflag mtype
	setactorvar[RETURN].mtype mtype
	setvar RETURN 0
	break
}

ifactor SPEARPROJ
{
	// STICK IN MONSTER CODE
	getactor[THISACTOR].htmovflag spriteid
	addvar spriteid 16384
	ifvarl spriteid 16384 ifvarg spriteid -1
	{
		ifvare actorvar[spriteid].monstatus 1 // live monster
		{
			seta[spriteid].htpicnum SPEARPROJ
			setactor[spriteid].ang actorvar[spriteid].lastang
			espawn STUCKARROW
			setav[RETURN].peractor4 STUCKSPEAR
			sound SWORDHIT sound SWORDHIT sound SWORDHIT
			setactor[RETURN].pal sprite[THISACTOR].pal
			setactorvar[RETURN].myspawner spriteid
			getactor[THISACTOR].ang angvar
			addvar angvar 512
			
			// slightly randomized angle
			randvar tempb 192
			subvar tempb 96
			addvarvar angvar tempb
			setactor[RETURN].ang angvar
			
			getincangle temp angvar sprite[spriteid].ang
			setactorvar[RETURN].peractor1 temp
			
			ldist xydist THISACTOR spriteid
			shiftvarr xydist 1
			setactorvar[RETURN].mtype xydist
			
			getactor[THISACTOR].x mx
			getactor[THISACTOR].y my
			getactor[spriteid].x x
			getactor[spriteid].y y
			subvarvar mx x
			subvarvar my y
			getangle tempc mx my // angle to make monster face arrow
			getincangle ammo tempc sprite[spriteid].ang
			setactorvar[RETURN].ammo ammo
			
 			setactor[RETURN].xrepeat 18
 			setactor[RETURN].yrepeat 18
 			setactor[RETURN].cstat 32
 			getactor[THISACTOR].z z
 			addvar z 424
 			setactor[RETURN].z z
 			getactor[spriteid].z initz
 			subvarvar initz z
 			setactorvar[RETURN].initz initz
 			
 			
 			espawn STUCKARROW
			setav[RETURN].peractor4 STUCKSPEAR
 			setactor[RETURN].pal sprite[THISACTOR].pal
			setactorvar[RETURN].myspawner spriteid
			subvar angvar 1024
			setactor[RETURN].ang angvar
			getincangle temp angvar sprite[spriteid].ang
			setactorvar[RETURN].peractor1 temp
 			setactor[RETURN].xrepeat 18
 			setactor[RETURN].yrepeat 18
 			setactor[RETURN].cstat 16
 			subvar initz 600
 			setactorvar[RETURN].initz initz
 			setactorvar[RETURN].mtype xydist
 			setactorvar[RETURN].ammo ammo
			setvar RETURN 0
			break
		}
		// setvar ARROWHACK YES
		// getactor[THISACTOR].ang arrhackang
		// getactor[THISACTOR].z arrhackz
		// getactor[THISACTOR].x arrhackx
		// getactor[THISACTOR].y arrhacky
		state switchbulletcode
		
	}
	else
	{
		state switchbulletcode
		// setvar ARROWHACK YES
		// getactor[THISACTOR].ang arrhackang
		// getactor[THISACTOR].z arrhackz
		// getactor[THISACTOR].x arrhackx
		// getactor[THISACTOR].y arrhacky
	}
	
	
	setvarvar saveit sprite[].htmovflag
	andvar saveit 49152
	ife saveit 32768 
	{ 
		set hitsprite -1 set hitsector -1 
		setvarvar hitwall sprite[].htmovflag
		andvar hitwall 16383
	}
	
	ifn saveit 32768 // saveit 32768 means it hit a wall
	ifn sprite[].sectnum -1
	{
		getceilzofslope sprite[].sectnum sprite[].x sprite[].y temp
		add temp 2048
		ifl sprite[].z temp 
		{
			set mz -1
			state spawnvertspear
			set RETURN 0
			break
		}
	}
	
	ifn saveit 32768
	{
		state projhitscan
			
		ifvarn hitsprite -1
		{
			getactor[hitsprite].cstat temp
			ifvarand temp 16
			{
				getactor[hitsprite].xrepeat countvar
				getactor[hitsprite].yrepeat countvarb
				setvarvar peractor1 hitsprite
				setactor[hitsprite].xrepeat 1
				setactor[hitsprite].yrepeat 1
				state projhitscan
				setactor[peractor1].xrepeat countvar
				setactor[peractor1].yrepeat countvarb
			}
		}

		setvar saveit 0
		
		ifvarn hitsprite -1
		{
			getactor[hitsprite].cstat initcstat
			ifvarand initcstat 16 ifvarn sprite[hitsprite].picnum WIZARDSHIELD setvar saveit 32768
			ife hitsector -1 set saveit 32768
			ifg sprite[].zvel 0
			ifl sprite[].zvel 2560 set saveit 32768
		}
		ifvarn hitwall -1 
		{
			// getwall[hitwall].cstat tempb
			// ifvarand tempb 128 { setvar RETURN 0 break } // break on transparent
			// ifvarand tempb 16 { setvar RETURN 0 break } // break on masking
			
			setvar saveit 32768
		}
		
		ifn hitsector -1 iffloordistl 8 ifl sprite[].zvel 2048 set saveit 32768
	}
	
	ifvare saveit 32768
	{
		geta[].z z sub z 1024 seta[].z z
		set countvar 0
		globalsound BREAKWOOD5
		setvar target -1
		set peractor4 STUCKSPEAR
		seta[].xoffset 0
		seta[].yoffset 0
		cactor WALLARROW
		setvarvar targetlock hitwall
		ifvarn target2 APLAYER insertspriteq
		cstat 32 // 33	
		getactor[THISACTOR].ang angvar
		ifvare hitsprite -1
		{
			cos xvel angvar
			sin yvel angvar
				  
			shiftvarr xvel 5
			shiftvarr yvel 5
				     
			setvar zvel 0
			movesprite THISACTOR xvel yvel zvel CLIPMASK0 RETURN
		}
					
		changespritestat THISACTOR 1
		addvar angvar 512
		setactor[THISACTOR].ang angvar
		ifvare target2 APLAYER { espawn WALLARROW setactorvar[RETURN].target2 APLAYER setactorvar[RETURN].targetlock hitwall } else
 		espawn WALLARROW
		setav[RETURN].peractor4 STUCKSPEAR
 		setactor[RETURN].pal sprite[THISACTOR].pal
 		setactor[RETURN].cstat 16 // 17
		set angvar sprite[].ang
 		subvar angvar 1024
 		setactor[RETURN].ang angvar
 		setactor[RETURN].xrepeat 18
 		setactor[RETURN].yrepeat 18

 		getactor[THISACTOR].z z
 		subvar z 600 //768
 		setactor[THISACTOR].z z
 		setvar RETURN 1 
		break
    }
    else 
    {
			ife hitsector -1 set hitsector sprite[].sectnum
			
			ifn hitsector -1
			{
				getceilzofslope hitsector hitx hity temp
				add temp 2048
				ifl hitz temp set mz -1	
				else set mz 1
			}
			else set mz 1
			
			ifvarl mz 0 // ceiling spear
		    {
			   getsector[mysector].ceilingstat tempb
			   ifvarand tempb 1 { setvar RETURN 0 break } else
			   {
					state spawnvertspear
			 		setvar RETURN 1 
			 		break
			   } 
			}
			else // ground spear
		    {
			    getsector[mysector].floorstat tempb
			    ifvarand tempb 1 nullop else ifvarand tempb 2 nullop else
			    {
					state spawnvertspear
			 		setvar RETURN 1 
			 		break
			    }
			    
			}
		    
		// }
    }
    ifvare mtype 1 ifvarl countvar 26 { setvar RETURN 1 break }
	setvar RETURN 0
}

ifactor ARROWPROJ
{
	// setvar ARROWHACK YES
	// getactor[THISACTOR].ang arrhackang
	// getactor[THISACTOR].z arrhackz
	// getactor[THISACTOR].x arrhackx
	// getactor[THISACTOR].y arrhacky
	ifspritepal 1 // freeze arrow
	{
		headspritestat temp 1
		whilevarn temp -1
		{
			ifvare actorvar[temp].monstatus 1
			ifvarg actorvar[temp].cursed -1
			{
				dist tempb THISACTOR temp
				ifvarl tempb 6144
				{
					ifvarand pow 128 setvar tempd 32768 else
					setvar tempd 20480
					getactor[temp].extra tempb
					ifvarl tempb 1 setvar tempb 1
					divvarvar tempd tempb
					ifvarg tempd 150 setvar tempd 150
					getactorvar[temp].burning tempc
					subvarvar tempc tempd
					setactorvar[temp].burning tempc
					shiftr tempd 2
					geta[temp].htextra tempb
					ife tempb -1 set tempb 0
					add tempb tempd
					seta[temp].htextra tempd
					seta[temp].htowner player[].i
					seta[temp].htpicnum ARROWPROJ
				}
				
			}
			nextspritestat temp temp
		}
	}
	ifspritepal 2 // burning arrow
	{
		espawn FIRESTARTER
		ifvarand pow 128 { setactor[RETURN].pal 1 setactorvar[RETURN].burning -30 spritepal 1 }
		setactorvar[RETURN].myspawner sprite[THISACTOR].owner
		setvar RETURN 0
	}
	ifvarvare arrowview THISACTOR setvar arrowview -1
	// STICK IN MONSTER CODE
	getactor[THISACTOR].htmovflag spriteid
	addvar spriteid 16384
	ifvarl spriteid 16384 ifvarg spriteid -1
	{
		ifvare actorvar[spriteid].monstatus 1 // live monster
		{
			ifspritepal 7 // bomb arrow
			{ 
				setactor[spriteid].htpicnum RPG
				setvar RETURN 0 break
			}

			setactor[spriteid].ang actorvar[spriteid].lastang
			setvarvar mx sprite[THISACTOR].x
			addvar mx 256
			rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y sprite[THISACTOR].ang x y
			setactor[THISACTOR].x x
			setactor[THISACTOR].y y
			espawn STUCKARROW
			setactor[RETURN].pal sprite[THISACTOR].pal
			setactorvar[RETURN].myspawner spriteid
			getactor[THISACTOR].ang angvar
			addvar angvar 512
			
			// slightly randomized angle
			randvar tempb 256
			subvar tempb 128
			addvarvar angvar tempb
			setactor[RETURN].ang angvar
			
			getincangle temp angvar sprite[spriteid].ang
			setactorvar[RETURN].peractor1 temp
			
			ldist xydist THISACTOR spriteid
			shiftvarr xydist 1
			setactorvar[RETURN].mtype xydist
			
			getactor[THISACTOR].x mx
			getactor[THISACTOR].y my
			getactor[spriteid].x x
			getactor[spriteid].y y
			subvarvar mx x
			subvarvar my y
			getangle tempc mx my // angle to make monster face arrow
			getincangle ammo tempc sprite[spriteid].ang
			setactorvar[RETURN].ammo ammo
			
			
 			setactor[RETURN].xrepeat 12
 			setactor[RETURN].yrepeat 12
 			setactor[RETURN].cstat 32
 			getactor[THISACTOR].z z
 			addvar z 424
 			setactor[RETURN].z z
 			getactor[spriteid].z initz
 			subvarvar initz z
 			setactorvar[RETURN].initz initz
 			
 			
 			espawn STUCKARROW
 			setactor[RETURN].pal sprite[THISACTOR].pal
			setactorvar[RETURN].myspawner spriteid
			subvar angvar 1024
			setactor[RETURN].ang angvar
			getincangle temp angvar sprite[spriteid].ang
			setactorvar[RETURN].peractor1 temp
 			setactor[RETURN].xrepeat 12
 			setactor[RETURN].yrepeat 12
 			setactor[RETURN].cstat 16
 			subvar initz 600
 			setactorvar[RETURN].initz initz
 			setactorvar[RETURN].mtype xydist
 			setactorvar[RETURN].ammo ammo
			setvar RETURN 0
			break
		}
		else 
		{
			state switchbulletcode
			ifspritepal 2
			{
				getactorvar[spriteid].burning temp
				ifvarand pow 128 subvar temp 90 else
				addvar temp 90
				setactorvar[spriteid].burning temp
			}
		}
	}
	else
	{
		ifspritepal 7 { state arrow_bits setvar RETURN 0 break }
		state switchbulletcode
	}
	
	ifceilingdistl 16 { setvar RETURN 0 break }
	state projhitscan
		
	ifvarn hitsprite -1
	{
		getactor[hitsprite].cstat temp
		ifvarand temp 16
		{
			getactor[hitsprite].xrepeat countvar
			getactor[hitsprite].yrepeat countvarb
			setvarvar peractor1 hitsprite
			setactor[hitsprite].xrepeat 1
			setactor[hitsprite].yrepeat 1
			state projhitscan
			setactor[peractor1].xrepeat countvar
			setactor[peractor1].yrepeat countvarb
		}
	}
	
	getactor[THISACTOR].x xydist
	getactor[THISACTOR].y y
	subvarvar xydist hitx
	mulvarvar xydist xydist
	subvarvar y hity
	mulvarvar y y
	addvarvar xydist y
	sqrt xydist xydist

	ifvarg xydist 1024 
	{
		ifvare mtype 1 ifvarl countvar 26 { setvar RETURN 1 break }
		setvar RETURN 0 
		break 
	}
	ifvarn mtype 1 // ifvarn target2 APLAYER
	{
		getactor[THISACTOR].owner temp
		ifvarn temp -1
		{
			dist tempb THISACTOR temp
			ifvarl tempb 2048 
			{ 
				getactor[THISACTOR].z z addvar z 6144 setactor[THISACTOR].z z
				// debris SCRAP4 3 
				state arrow_bits
				subvar z 6144 setactor[THISACTOR].z z
				setvar RETURN 0 globalsound BREAKWOOD5 
				break 
			}
		}
	}
			
	setvar temp 0
	ifvarn hitsprite -1
	{
		getactor[hitsprite].cstat initcstat
		ifvarand initcstat 16 ifvarn sprite[hitsprite].picnum WIZARDSHIELD setvar temp 1
	}
	ifvarn hitwall -1 
	{
		getwall[hitwall].cstat tempb
		ifvarand tempb 128 { setvar RETURN 0 break } // break on transparent
		ifvarand tempb 16 { setvar RETURN 0 break } // break on masking
		setvar temp 1
	}
	ifvare temp 1
	{
		globalsound BREAKWOOD5
		setvar target -1
		cactor WALLARROW
		setvarvar targetlock hitwall
		ifvarn target2 APLAYER insertspriteq
		cstat 32 // 33	
		getactor[THISACTOR].ang angvar
		ifvare hitsprite -1
		{
			cos xvel angvar
			sin yvel angvar
				  
			shiftvarr xvel 4
			shiftvarr yvel 4
				     
			setvar zvel 0
			movesprite THISACTOR xvel yvel zvel CLIPMASK0 RETURN
		} 
					
		changespritestat THISACTOR 1
		addvar angvar 512
		setactor[THISACTOR].ang angvar
		ifvare target2 APLAYER { espawn WALLARROW setactorvar[RETURN].target2 APLAYER setactorvar[RETURN].targetlock hitwall } else
 		eqspawn WALLARROW
 		setactor[RETURN].pal sprite[THISACTOR].pal
 		setactor[RETURN].cstat 16 // 17
 		subvar angvar 1024
 		setactor[RETURN].ang angvar
 		setactor[RETURN].xrepeat 12
 		setactor[RETURN].yrepeat 12

 		getactor[THISACTOR].z z
 		subvar z 600 //768
 		setactor[THISACTOR].z z
 		setvar RETURN 1 break
    }
    else 
    {
	    ifvarn hitsector -1
	    {
		    getceilzofslope hitsector hitx hity temp
		    setvarvar z hitz
		    subvarvar z temp
		    shiftvarr z 8
		    subvar z 1
		    setvarvar mz z
		    
		    getflorzofslope hitsector hitx hity z
		    setvarvar temp hitz
		    subvarvar z temp
		    shiftvarr z 8
		    subvar z 1
		    ifvarl z 1
		    {
			    getsector[mysector].floorstat tempb
			    ifvarand tempb 1 nullop else ifvarand tempb 2 nullop else
			    {
				    globalsound BREAKWOOD5
				    // ground arrow
				    cactor VERTARROW
				    ifvarn target2 APLAYER insertspriteq
					cstat 153
					getactor[THISACTOR].x x
					getactor[THISACTOR].y y
					getactor[THISACTOR].ang angvar			
					changespritestat THISACTOR 1
					ifvare target2 APLAYER
			 		espawn VERTARROW else eqspawn VERTARROW
			 		setactor[RETURN].pal sprite[THISACTOR].pal
			 		setactor[RETURN].cstat 153
			 		subvar angvar 512
			 		setactor[RETURN].ang angvar
			 		setactor[RETURN].xrepeat 12
			 		setactor[RETURN].yrepeat 12
			 		setvar RETURN 1 
			 		break
			    }
			    
			} else
		    ifvarl mz 0 
		    {
			   getsector[mysector].ceilingstat tempb
			   ifvarand tempb 1 { setvar RETURN 0 break } else
			   {
				   // shatter to bits
				   setvar RETURN 0
				   break
			   } 
			}
		}
    }
    ifvare mtype 1 ifvarl countvar 26 { setvar RETURN 1 break }
	setvar RETURN 0
}

getactor[THISACTOR].picnum picnum
switch picnum
// case HEADJIB1
// case ARMJIB1
// case LEGJIB1
// case LIZMANHEAD1
// case LIZMANARM1
// case LIZMANLEG1
case JIBS1
case JIBS2
case JIBS3
case JIBS4
case JIBS5
	ifspritepal 1 setvar peractor1 ICEJIBLAND else
	ifrnd 128 setvar peractor1 JIBLAND else setvar peractor1 JIBLAND2
	espawn SOUNDMAKER
	setactorvar[RETURN].peractor1 peractor1
	setvar RETURN 0
	
break

	case CRACK1
	case CRACK2
	case CRACK3
	case CRACK4
		ifn monstatus 2
		ifg lotag 0
		{
			headspritestat temp 6
			whilevarn temp -1
			{
				ife lotag actorvar[temp].lotag
					setav[temp].monstatus 2
				nextspritestat temp temp
			}
		}
	break

case WEBPROJ

	getactor[THISACTOR].htmovflag mtype
	ifvarn mtype 0
	{
		cactor STICKYWEB
		changespritestat THISACTOR 1
		action ANULLACTION
		move 0
		setvar RETURN 1
	}

break

case SLOWBULLET
case EVILBULLET

getactor[THISACTOR].htmovflag temp
addvar temp 16384
ifvarl temp 16384 ifvarg temp -1
{
	getactorvar[temp].monstatus tempb
	ifvare sprite[temp].picnum APLAYER setvar tempb 1
	ifvare sprite[temp].picnum HERO setvar tempb 1
	ifvare tempb 1
	{
		espawn JIBS6
		setactor[RETURN].zvel 0
		setactor[RETURN].xvel 0
		setactor[RETURN].xrepeat 12
		setactor[RETURN].yrepeat 12
		setav[RETURN].htg3 999999
		espawn SOUNDMAKER
		setactorvar[RETURN].peractor1 HITFLESH
		setvar RETURN 0
	}
	else
	{
		spawn SMALLSMOKE
		spawn SHOTSPARK2
		ifrnd 32 { espawn SOUNDMAKER setactorvar[RETURN].peractor1 PISTOL_RICOCHET }
		setvar RETURN 0
	}
}
else
{
	ifvarl countvar 2
	{
		setactor[THISACTOR].htmovflag 0
		setvar RETURN 1
	}
	else
	{
		spawn SMALLSMOKE
		spawn SHOTSPARK2
		ifrnd 32 { espawn SOUNDMAKER setactorvar[RETURN].peractor1 PISTOL_RICOCHET }
		setvar RETURN 0
	}
}

break


case GRENADEPROJ
spawn EXPLOSION2
debris SCRAP1 3
debris SCRAP6 3
spritepal 2
debris SCRAP1 1
debris SCRAP6 1
spawn ROCKETSPARK
spawn ROCKETSPARK
spawn ROCKETSPARK
spawn ROCKETSPARK
spawn ROCKETSPARK
spawn ROCKETSPARK
spawn ROCKETSPARK
spawn ROCKETSPARK
setvar RETURN 0
break

case ETTINCLUB
getactor[THISACTOR].htmovflag spriteid
ifvarn spriteid 0
{
	// hit something
	addvar spriteid 16384
    ifvarl spriteid 16384 ifvarg spriteid -1 
    {
		ife sprite[spriteid].picnum ETTINCLUB
			set RETURN 1
		else
		{
			// hit a sprite
			sound PIPEBOMB_EXPLODE
			spawn EXPLOSION2
			debris SCRAP2 3
			debris SCRAP3 3
			debris SCRAP4 3
			hitradius 2048 20 30 40 50
			setvar RETURN 0
		}
	}
	else
	{
		espawn ETTINCLUBGROUND 
		getactor[THISACTOR].pal pal 
		setactor[RETURN].pal pal
		setvar RETURN 0
	}
}
 else
{       
	espawn ETTINCLUBGROUND 
	getactor[THISACTOR].pal pal 
	setactor[RETURN].pal pal
	setvar RETURN 0
}
break

case FIRELASER
ifvarn sprite[THISACTOR].htmovflag 0
{
	espawn BIGSMOKE
	setactor[RETURN].pal 10
	espawn SOUNDMAKER
	setactorvar[RETURN].peractor1 DMIMPACT
	setvar RETURN 0
}
break
case SMALLGOLD
case MEDIUMGOLD
case BIGGOLD
	state givegold
	set RETURN 0
break

case SLASHPROJ
	ifspawnedby APLAYER
		state switchbulletcode
	set RETURN 0
break

case CANNONBALL2
	state cannondeath
break

endswitch

endevent

eventloadactor SECTOREFFECTOR
getactor[THISACTOR].lotag lotag
ifvare lotag 91
{
	espawn SMALLSMOKE
	setactor[RETURN].lotag 31
	setactor[RETURN].picnum SECTOREFFECTOR
}
getactor[THISACTOR].hitag hitag
getactor[THISACTOR].xvel target
getactor[THISACTOR].yvel activator
getactor[THISACTOR].zvel zveloverride
getactor[THISACTOR].z initz
getactor[THISACTOR].sectnum mysector
getactor[THISACTOR].pal cursed
getactor[THISACTOR].extra temp

ife temp -1 set temp 0

ifvare lotag 68
{
	setvarvar monstflags temp
	ifvare monstflags -1 setvar monstflags 0 // finishing sound
	getactor[THISACTOR].xvel peractor1 // starting sound
	
	ifvare hitag 0 // will move the ceiling to floor and back
	{
		getsector[mysector].ceilingz initz // starting position
		getsector[mysector].floorz target // ending position
	}
	else // will move the floor to ceiling and back
	{
		getsector[mysector].floorz initz // starting position
		getsector[mysector].ceilingz target // ending position
	}
	
	ifvare zveloverride 0 setvar zveloverride 64
	shiftvarl zveloverride 3
}
else
ifvare lotag 70
{
	setvarvar monstflags temp
	ifvare monstflags -1 setvar monstflags 0
}
else
{
	 setvarvar countvar temp
	 setvarvar monstflags temp
}

ifvarg lotag 87 ifvarl lotag 90 // portal cam or teleporter; find other SE
{
	getactor[THISACTOR].extra countvar

	setvar spriteid 0
	whilevarn spriteid 16384
	{
		ifvarn sprite[spriteid].statnum 1024
		ifvare sprite[spriteid].picnum SECTOREFFECTOR
		ifvarvare sprite[spriteid].lotag lotag
		ifvarvare sprite[spriteid].hitag hitag
		ifvarvarn spriteid THISACTOR
		{
			setvarvar myspawner spriteid
			setvar spriteid 16383
		}
		addvar spriteid 1
	}
	ifvare myspawner -1 killit
	ifvare activator 0 setvar peractor1 1
	setvarvar monstflags temp
}
enda

state projeffects

	// ifvare rendmode 4
	// {
		// setvar hitag 4096
		// state lightsout
	// }
	
	ifactor SPARKPROJ break
	ifactor HEADJIBPROJ break
	ifactor LEGJIBPROJ break
	ifactor ARMJIBPROJ break
	ifactor EDHEADJIBPROJ break
	ifactor JIBSPROJ1 break
	ifactor JIBSPROJ2 break
	ifactor JIBSPROJ3 break
	ifactor JIBSPROJ4 break
	ifactor JIBSPROJ5 break
	ifactor FWPROJ6 break
	ifactor ARROWBIT1 break
	ifactor ARROWBIT2 break
	ifactor ARROWBIT3 break
	
	getactor[THISACTOR].owner spriteid
	ifvarn spriteid -1
	ifvare actorvar[spriteid].monstatus 1
	{
		getactorvar[spriteid].aura tempe
		abs tempe
		setvar temp 0
		ifvarn actorvar[spriteid].myspawner -1 // possessed monster
		setvar temp 1 else
		ifvarand tempe 2 setvar temp 2 // might aura
		ifvarn temp 0
		{
			ifvare sprite[THISACTOR].picnum SHOTSPARK1
			spawn WRAITHIMPACT
			else
			ifvare temp 1
			ifrnd 128
			spawn GHOSTTRAIL
			else ifvare temp 2
			ifvare peractor6 0
			{
				setvar peractor6 1
				getactor[THISACTOR].xrepeat x
				mulvar x 3 divvar x 2
				ifvarg x 255 setvar x 255
				setactor[THISACTOR].xrepeat x
				getactor[THISACTOR].yrepeat y
				mulvar y 3 divvar y 2
				ifvarg y 255 setvar y 255
				setactor[THISACTOR].yrepeat y
			}
		}
		ifvarand tempe 4096 // double shot aura
		{
			
			add countvarb 1
			ife countvarb 2
			{
				geta[].picnum picnum
				ifactor RPG_GUIDED espawn RPG_GUIDED else
				eshootvar picnum
				seta[RETURN].xvel sprite[].xvel
				seta[RETURN].zvel sprite[].zvel
				seta[RETURN].pal sprite[].pal
				seta[RETURN].extra sprite[].extra
				seta[RETURN].owner sprite[].owner
				seta[RETURN].htpicnum sprite[].htpicnum
				setav[RETURN].countvarb 3
				setav[RETURN].myspawner myspawner
				seta[RETURN].xrepeat sprite[].xrepeat
				seta[RETURN].yrepeat sprite[].yrepeat
				setav[RETURN].target target
				setav[RETURN].burning burning
				rand angvar 128, sub angvar 64
				add angvar sprite[].ang
				seta[RETURN].ang angvar
			}
			
			
		}
	}
	state projhitscan
	
	ifvarg shieldup 0
	ifvare command 0
	{
		// state projhitscan
		ifvarn hitsprite -1
		ifvare sprite[hitsprite].picnum PLASMASHIELD
		{
			dist xydist THISACTOR hitsprite
			ifvarl xydist 1024
			{
				setvar command 1
			    setactor[THISACTOR].ang sprite[hitsprite].ang
			    setactor[THISACTOR].owner player[THISACTOR].i
			    getplayer[THISACTOR].horiz tempb
			    subvar tempb 100
			    shiftvarl tempb 5
			    getactor[THISACTOR].zvel zvel
			    mulvar zvel -1
			    subvarvar zvel tempb
			    setactor[THISACTOR].zvel zvel
			    sound HITSHIELD
		    }
		}
	}
	else ifvarg barbshield 0
	{
		// state projhitscan
		ifvarn hitsprite -1
		ifvare sprite[hitsprite].picnum BARB_BLOCKER
		{
			dist xydist THISACTOR hitsprite
			ifvarl xydist 1024
			{
				setvar command 1
// 			    setactor[THISACTOR].ang sprite[hitsprite].ang
// 			    setactor[THISACTOR].owner player[THISACTOR].i
// 			    getplayer[THISACTOR].horiz tempb
// 			    subvar tempb 100
// 			    shiftvarl tempb 5
// 			    getactor[THISACTOR].zvel zvel
// 			    mulvar zvel -1
// 			    subvarvar zvel tempb
// 			    setactor[THISACTOR].zvel zvel

				ifactor SLOWBULLET soundonce BLOCK3 else
				{
					ifrnd 96
					soundonce BLOCK1
					else ifrnd 128
					soundonce BLOCK2
					else
					soundonce BLOCK4
				}
				ifactor FREEZEBLAST { killit break }
				ifactor RPG 
				{
					getactor[THISACTOR].extra temp
					setvarvar tempb temp
					mulvar tempb 3 shiftvarr tempb 2 // 75% damage
					setvarvar tempc temp
					shiftvarr tempc 1 // 50% damage
					setvarvar tempd temp
					shiftvarr tempd 2 // 25% damage
					hitradiusvar RPGBLASTRADIUS tempd tempc tempb temp
					killit break 
				}
				getthisprojectile[THISACTOR].workslike temp
				orvar temp 4
				setthisprojectile[THISACTOR].workslike temp
				setthisprojectile[THISACTOR].bounces 2
				setactor[THISACTOR].yvel 0
				setactor[THISACTOR].xvel 0
				setactor[THISACTOR].zvel 0
				
		    }
		}
	}
	ifactor RPG
	ifn sprite[].htpicnum APLAYER
	{
		
		findplayer initx
		ifl initx 4608
		{
			getp[].posx mx
			getp[].posy my
			sub mx sprite[].x
			sub my sprite[].y
			getangle angvar mx my
			getincangle tempb angvar sprite[].ang
			abs tempb
			ifcansee
			{
				ifl tempb 128
					{ ifactorsound THISACTOR FLYBYROX nullop else sound FLYBYROX }
				else
				ifn lastang 9999 ifg tempb lastang
					{ ifactorsound THISACTOR FLYBYROX nullop else sound FLYBYROX }
				else
				ifn inity 0 ifg initx inity
					{ ifactorsound THISACTOR FLYBYROX nullop else sound FLYBYROX }
			}
			set lastang tempb
			set inity initx
			
		}
		
	}
ends

state tracktarget

	ife target -1 break
	
	ifn target player[].i
	{
		ifvarn sprite[target].statnum 1 setvar target -1 else
		ifvarn actorvar[target].monstatus 1 setvar target -1
	}
	
	ifvarn target -1
	{
		ife target player[].i state gradturn2
		else
		state gradualturn
		
		ifvarg countvar 6
		{

			geta[target].z zdist
				
			sub zdist sprite[].z 
			
			geta[target].picnum picnum
			
			set digz tiledata[picnum].ysize
			mul digz sprite[target].yrepeat
			shiftl digz 1
			// digz is proportional to height of enemy sprite
			
			sub zdist digz

			mul zdist sprite[].xvel
			ldist xydist THISACTOR target
			ifvare xydist 0 setvar xydist 1 
			divvarvar zdist xydist
			
			seta[].zvel zdist

			ifvare sprite[target].picnum EVILDUKE setactorvar[target].target2 THISACTOR
		}
	}
	

ends

state validatedecal
	getwall[targetlock].nextsector mysector
	ifvarn mysector -1
	{
		setvar tempb 0
		getsector[mysector].lotag temp
		switch temp
		case 3
		case 16    // ELEVATOR PLATFORM DOWN
		case 17    // ELEVATOR PLATFORM UP
		case 18    // ELEVATOR DOWN
		case 19    // ELEVATOR UP
		case 20    // CEILING DOOR
	    case 21    // FLOOR DOOR
	    case 22    // SPLIT DOOR
	    case 23    // SWING DOOR
	    case 26    // SPLIT STAR TREK DOOR
	    case 28    // DROP FLOOR
	    case 29    // TEETH DOOR
	    case  9    // STAR TREK DOORS
	    case 25    // SLIDE DOOR
	    case 27    // BRIDGE
	    case 30    // ROTATE RISE BRIDGE
	    case 31    // 2 WAY TRAIN
	    setvar tempb 1
	    break
	    default break
	    endswitch
	    ifvare tempb 1 killit
	    
	   	headspritesect spriteid mysector
	   	whilevarn spriteid -1
	   	{
		   	ifvare sprite[spriteid].picnum SECTOREFFECTOR
		   	{
			   	getactor[spriteid].lotag tempc
			   	switch tempc
			   	case 11
			   	case 13
			   	case 15
			   	case 19
			   	case 21
			   	case 22
			   	case 25
			   	case 31
			   	case 32
			   	setvar tempb 1
			   	break
			   	endswitch
		   	}
	   		nextspritesect spriteid spriteid
	   		ifvare tempb 1 setvar spriteid -1
		}
			ifvare tempb 1 killit
	}
ends

onevent EVENT_GAME

// ifvare peractor6 666
// {
	// changespritestat THISACTOR 1
	// setactor[THISACTOR].xrepeat lotag
	// setactor[THISACTOR].yrepeat hitag
	// addvar countvar 1
	// ifvarg countvar 2
	// killit
// }

ifvare sprite[THISACTOR].statnum 4 state projeffects
else
ifspritepal 17
ifn lotag 0
{
	ifvare sprite[THISACTOR].statnum 2
	changespritestat THISACTOR 1 else
	ifvare sprite[THISACTOR].statnum 0
	changespritestat THISACTOR 1
}

switch sprite[].picnum

case SECTOREFFECTOR
/*
ifvare lotag 49 // point light
{
	ifvarn myspawner -1
	{
		getactorvar[myspawner].intensity intensity
		ifvarg peractor6 0 // flicker
		{
			setvarvar tempb intensity
			setvarvar temp intensity
			mulvarvar temp peractor6
			divvar temp 100 // temp is now the random component of the intensity
			randvarvar intensity temp
			// now add the base component
			subvarvar tempb temp // base is what is left after subtracting max flickering amount
			addvarvar intensity tempb
		}
		setactor[THISACTOR].hitag intensity
		getactor[myspawner].statnum temp
		ifvare temp 1024 killit
		getactor[myspawner].picnum temp
		ifvarvarn temp mtype killit
		ifvarn peractor1 2 // moving
		{
			ifvare peractor1 0 setvar peractor1 2
			getactor[myspawner].x x
			getactor[myspawner].y y
			getactor[myspawner].z z
			ifvare mtype APLAYER subvar z 8192
			ifvare mtype 1722 subvar z 8192
			ifvare mtype 3375 subvar z 10240
			ifvare mtype 3830 subvar z 2048
			ifvare mtype 3840 subvar z 8192
			ifvare mtype 3843 subvar z 3072
			ifvare mtype 3846 subvar z 2048
			ifvare mtype 3849 subvar z 20480
			ifvare mtype 3863 subvar z 8192
			ifvare mtype 3867 subvar z 8192
			ifvare mtype 3871 subvar z 16384
			ifvare mtype 3875 subvar z 3072
			ifvare mtype 3878 subvar z 2048
			ifvare mtype 3881 subvar z 6144
			ifvare mtype 4037 subvar z 3072
			updatesectorz x y z mysector
			ifvarn mysector -1
			{
				changespritesect THISACTOR mysector
				getflorzofslope mysector x y mz
				getceilzofslope mysector x y tempb
				setvarvar temp mz
				subvarvar mz z
				ifvarl mz 4096 
				{
					setvarvar z temp 
					subvar z 4096 
					ifvarvarl z tempb setvarvar z tempb
				}
			}
			
			setsprite THISACTOR x y z
		}
	}

	// ifvare rendmode 4
	// ifvare command 1
	  // state lightsout
} 
else
ifvare lotag 50 // spot light
{

	ifvarn myspawner -1
	{
		getactorvar[myspawner].intensity intensity
		setactor[THISACTOR].hitag intensity
		getactor[myspawner].statnum temp
		ifvare temp 1024 killit
		getactor[myspawner].picnum temp
		ifvarvarn temp mtype killit
		getactor[myspawner].x x
		getactor[myspawner].y y
		getactor[myspawner].z z
		ifvare mtype APLAYER subvar z 8192
		ifvare mtype 3840 subvar z 8192
		ifvare mtype 3843 subvar z 3072
		ifvare mtype 3846 subvar z 2048
		ifvare mtype 3849 subvar z 16384
		ifvare mtype 3863 subvar z 8192
		ifvare mtype 3871 subvar z 16384
		ifvare mtype 3875 subvar z 3072
		ifvare mtype 3878 subvar z 2048
		ifvare mtype 4037 subvar z 3072
		updatesectorz x y z mysector
		ifvarn mysector -1
		{
			changespritesect THISACTOR mysector
			getflorzofslope mysector x y mz
			getceilzofslope mysector x y tempb
			setvarvar temp mz
			subvarvar mz z
			ifvarl mz 4096 
			{
				setvarvar z temp 
				subvar z 4096 
				ifvarvarl z tempb setvarvar z tempb
			}
		}
		
		setsprite THISACTOR x y z	
		
	}
}
else
*/
ifvare lotag 60 // spirit vortex effect
{
	ifvare peractor1 0 // not yet activated
	{
		checkactivatormotion hitag
		ifvare RETURN YES setvar mtype 1
		ifvare mtype 1
		{
			setvar peractor1 YES
			espawn REDRIFT
			setactorvar[RETURN].activator activator
		}
	}
}
else
ifvare lotag 61
{
	ifvare mtype 1 // SE has been fake activated by activatorstate
	{
		getactor[THISACTOR].pal pal
		getactor[THISACTOR].shade shade
		
		setsector[THISACTOR].floorpal pal
		setsector[THISACTOR].floorshade shade
		setsector[THISACTOR].ceilingpal pal
		setsector[THISACTOR].ceilingshade shade
		ifvarn target 0
		{
			setsector[THISACTOR].floorpicnum target
			setsector[THISACTOR].ceilingpicnum target
		}
		getsector[THISACTOR].wallptr wallpoint // get the firstwall of the sector
		getsector[THISACTOR].wallnum numwalls // get the number of walls in the sector
		setvar currwall 0
		whilevarvarn currwall numwalls
		{
			setwall[wallpoint].pal pal
			setwall[wallpoint].shade shade
			ifvarn target 0 setwall[wallpoint].picnum target
			
			addvar wallpoint 1
			addvar currwall 1
		}
		
		setvar mtype 2
	}
}
else
ifvare lotag 62 // manages first cut scene
{
	ifvarg character -1
	{
		// ifvarn scroll 0 killit else
		ifvarn returnlevel -1 killit else
		ifvare character 1 
		{
			findnearsprite EVILWARP 65536 temp
			ifvarn temp -1 
			{
				setactorvar[temp].peractor1 1
				setplayer[THISACTOR].posx sprite[temp].x
				setplayer[THISACTOR].posy sprite[temp].y
				setplayer[THISACTOR].posz sprite[temp].z
				setplayer[THISACTOR].cursectnum sprite[temp].sectnum
				
				// make ship invisible
				set spriteid 0
				set countvar 0
				whilevarn spriteid 16384
				{
					ife sprite[spriteid].picnum FRANKENSTINESWITCH
					ife sprite[spriteid].lotag 5
					{
						set countvar 1
						setsprite THISACTOR sprite[spriteid].x sprite[spriteid].y sprite[spriteid].z

						headspritestat peractor4 0
						whilevarn peractor4 -1
						{
							ldist xydist THISACTOR peractor4
							ifvarl xydist 20480
								setactor[peractor4].cstat 32768
							nextspritestat peractor4 peractor4
						}	
					}
					add spriteid 1
					ife countvar 1 set spriteid 16384
				}
				killit
			}
			
		}
		else
		ifvare peractor1 0
		{
			// grab players
			setvar playersprite 0
			getactor[THISACTOR].x x
			getactor[THISACTOR].y y
			getactor[THISACTOR].z z
			getactor[THISACTOR].sectnum mysector
			//whilevarvarn playersprite numplayers
			//{
				setplayer[playersprite].posx x
				setplayer[playersprite].posy y
				setplayer[playersprite].posz z
				setplayer[playersprite].cursectnum mysector
				setplayer[playersprite].ang sprite[THISACTOR].ang
				// addvar playersprite 1
			//}
			setvar cutscene 1
			setvar peractor1 1
			starttrack 18
			set musicepisode 0
			set musictrack 18
			// spritenopal on statnum 0 sprites
			headspritesect spriteid mysector
			whilevarn spriteid -1
			{
				ifvare sprite[spriteid].statnum 0
				setactor[spriteid].htflags 64
				ifvare sprite[spriteid].picnum POWERSOCKET
				{
					changespritestat spriteid 0
					setactor[spriteid].htflags 64
				}
				nextspritesect spriteid spriteid
			}
			setvar countvar 100
			setvar countvarb SHIELDS_CRITICAL
			
		}
		
		ifvare mtype 0 // button not yet pressed
		{
			soundonce ALARM
			ifrnd 3 globalsound SPARK_SND
			ifrnd 2 
			{
				quake 26
				flash
				palfrom 50 63 50 50
				randvar temp 3
				ifvare temp 0 globalsound RPG_EXPLODE2 else
				ifvare temp 1 globalsound EXPL3 else
				ifvare temp 2 globalsound EXPL4 else
				ifvare temp 3 globalsound EXPL5
			}
			addvar countvar 1
			ifvare countvar 130
			{
				setvar countvar 0
				globalsoundvar countvarb
				ifvare countvarb SHIELDS_CRITICAL setvar countvarb THRUSTERS else
				ifvare countvarb THRUSTERS setvar countvarb HULLBREACH else
				ifvare countvarb HULLBREACH setvar countvarb SHIELDS_CRITICAL
			}
			headspritestat spriteid 0
			whilevarn spriteid -1
			{
				ifvare sprite[spriteid].picnum 141 // FRANKENSWITCH PRESSED
				ifvare sprite[spriteid].lotag 5 // hardcoded
				{
					setvar mtype 1
					headspritestat tempd 3
					whilevarn tempd -1
					{
						ifvare sprite[tempd].picnum SECTOREFFECTOR
						ifvare sprite[tempd].lotag 63
							setactorvar[tempd].countvar 1
						
						nextspritestat tempd tempd
					}
					headspritestat tempd 1
					whilevarn tempd -1
					{
						ifvare sprite[tempd].picnum STARFLY
						{
							setactor[tempd].cstat 32768
							getactor[tempd].x mx
							getactor[tempd].y my
							getactor[tempd].z mz
							getactor[tempd].ang angvar
							espawn STARLINE
							setactor[RETURN].ang angvar
							setsprite RETURN mx my mz
						}
						ifvare sprite[tempd].picnum LIGHTHALO
						setactor[tempd].cstat 32768
						nextspritestat tempd tempd
					}
					palfrom 55 63 63 63
					globalsound HYPERSPACE
					findnearsprite EVILWARP 65536 temp
					ifvarn temp -1 setactorvar[temp].peractor1 1
				}
				ifvare mtype 1 setvar spriteid -1 else
				nextspritestat spriteid spriteid
			}
		}
		ifvare mtype 1
		{
			addvar countvar 1
			ifvare countvar 180 { setvar countvar -1000 globalsound ANOMALY_DETECTED }
			
			
		}
		
		ifvare cutscene 0
		{
			setplayer[THISACTOR].movement_lock 0
			killit
		}
	}
	
}
else
ifvare lotag 63
{
	ifvarg countvar 0 // counter has started
	{
		addvar countvar 1
		setvar mtype 1024
		ifvare cutscene 0
		ife portalcam -1 ifn countvarb 0 set countvarb 2
		// killit
	}
	ifvare countvarb 0
	{
		espawn STARFLY
		setactor[RETURN].htflags 128
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		setvarvar mx x
		randvar temp 24576
		addvarvar mx temp
		rotatepoint x y mx y sprite[THISACTOR].ang mx my
		updatesector mx my sect
		ifn sect -1
		setsprite RETURN mx my sprite[].z
		// setactor[RETURN].x mx
		// setactor[RETURN].y my
	}
	addvar countvarb 1
	//ifmultiplayer nullop else ifvarl framerate 20 ifvarg countvarb 10 subvar countvarb 1
	ifvarg countvarb 10
	ifrnd 10
	{
		
		setvar countvarb 1
		
		ifvare countvar 0 
		{
			espawn STARFLY
			setactorvar[RETURN].peractor1 mtype
			setactor[RETURN].htflags 128
		}
		else ifvarg countvar 78
		{
			ifrnd 128 espawn STARFLY
			else 
			{
				ife cutscene 0
				{
					ifrnd 128 espawn LBOLT
					else
					espawn STARFLY
				}
				else
				espawn LBOLT
			}
			setactorvar[RETURN].peractor1 mtype
			setactor[RETURN].htflags 128
			ifrnd 128
			{
				espawn STARFLY
				setactorvar[RETURN].peractor1 mtype
				setactor[RETURN].htflags 128
			}
		}
		
		
	}
}
else
ifvare lotag 65 // jump boot charger
{
	ifvare gotboots YES
	ifp ponground
	ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
	ifvarl player[THISACTOR].jetpack_amount JETPACK_AMOUNT
	{
		soundonce SHIELDON
		palfrom 35 0 50 20
		getplayer[THISACTOR].jetpack_amount temp
		addvar temp 4
		ifvarg temp JETPACK_AMOUNT setvar temp JETPACK_AMOUNT
		setplayer[THISACTOR].jetpack_amount temp
	}
}
else
ifvare lotag 68 // floor or ceiling door that squishes
{
	ifvare weap 1 // time to play start sound
	{
		soundvar peractor1
		setvar weap 0
	}
	// mtype 0 == idle, mtype 1 == moving to destination, mtype 2 == moving back to original position, mtype 3 arrived at destination
	ifvarn mtype 1 ifvarn mtype 2
	{
		checkactivatormotion activator
		ifvare RETURN YES 
		{ 
			ifvare mtype 0 setvar mtype 1 else ifvare mtype 3 setvar mtype 2
			ifvarn peractor1 0 soundvar peractor1
		}
	}
	ifvare mtype 1 // moving to destination
	{
		sectsetinterpolation mysector
		setvarvar temp zveloverride
		ifvare hitag 0 
		{
			getsector[mysector].ceilingz z
			addvarvar z temp
			ifvarvarg z sector[mysector].floorz setvarvar z sector[mysector].floorz
			setsector[mysector].ceilingz z
			ifvarvare z sector[mysector].floorz
			{
				ifvarn monstflags 0 soundvar monstflags
				setvar mtype 3
				sectclearinterpolation mysector
			}
		}
		else
		{
			mulvar temp -1
			getsector[mysector].floorz z
			addvarvar z temp
			ifvarvarl z sector[mysector].ceilingz setvarvar z sector[mysector].ceilingz
			setsector[mysector].floorz z
			ifvarvare z sector[mysector].ceilingz
			{
				ifvarn monstflags 0 soundvar monstflags
				setvar mtype 3
				sectclearinterpolation mysector
			}
		}
		
		
	}
	else
	ifvare mtype 2 // moving back to start
	{
		sectsetinterpolation mysector
		setvarvar temp zveloverride
		ifvare hitag 0 
		{
			getsector[mysector].ceilingz z
			subvarvar z temp
			ifvarvarl z initz setvarvar z initz
			setsector[mysector].ceilingz z
			ifvarvare z initz
			{
				ifvarn monstflags 0 soundvar monstflags
				setvar mtype 0
				sectclearinterpolation mysector
			}
		}
		else
		{
			getsector[mysector].floorz z
			addvarvar z temp
			ifvarvarg z initz setvarvar z initz
			setsector[mysector].floorz z
			ifvarvare z initz
			{
				ifvarn monstflags 0 soundvar monstflags
				setvar mtype 0
				sectclearinterpolation mysector
			}
		}
	}
}
else
ifvare lotag 69
{
	ifvarn activator 0 // awaiting activation
	{
		checkactivatormotion activator
		ifvare RETURN YES setvar activator 0
	}
	else
	ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
	{
		ifvarg hitag 0
		setvarvar pdestination hitag
		getactor[THISACTOR].pal temp
		
		savemapstate
		ifvarand monstflags 1 
		{
			setvar testnodes YES // end level and teleport after
			set secretlevel temp
		}
		else
		{
			setvar loadcached YES
			startlevel VOLUME temp
		}
	}
}
else
ifvare lotag 70 // instant sector motion
{
	ifvare peractor1 0
	{
		checkactivatormotion activator
		ifvare RETURN YES setvar peractor1 1
	}
	ifvare peractor1 1
	{
		ifvarn hitag 0 // works on ceiling
		{
			setsector[mysector].ceilingz sprite[THISACTOR].z
			setsector[mysector].ceilingslope monstflags
			ifvarn monstflags 0
			{
				getsector[mysector].ceilingstat temp
				orvar temp 2
				setsector[mysector].ceilingstat temp
			}
		}
		else // works on floor
		{
			setsector[mysector].floorz sprite[THISACTOR].z
			setsector[mysector].floorslope monstflags
			ifvarn monstflags 0
			{
				getsector[mysector].floorstat temp
				orvar temp 2
				setsector[mysector].floorstat temp
			}
		}
		setvar peractor1 2
	}
}
else
ifvare lotag 77 // firework launcher
{
	ifvare peractor1 1
	{
		addvar countvarb 1
		ifvarg countvarb 182 ifrnd 1 // ifrnd 4
		{	
			spawn FW6
			setvar countvarb 0
		}
	}
	else
	{
		ifvare activator 0 setvar peractor1 1
		// else
		// {
			// set RETURN 0
			// checkactivatormotion activator
			// ifvare RETURN YES { al THISACTOR setvar peractor1 1 }
		// }
	}
}	
else
ifvare lotag 88
{
	ifvare peractor1 1
	{
		ifpdistl 32768 // 16384
		{
			ifcansee
			{
				ifvarn portalcam -1 ifvarvarn portalcam THISACTOR
				{
					findplayer xydist
					dist xydist2 portalcam player[THISACTOR].i
					ifvarvarl xydist xydist2
					{
						setvarvar portalcam myspawner
						setvar portalview 52
					}
				} 
				else
				{
					setvarvar portalcam myspawner
					setvar portalview 52
				}
			}
			else ifpdistl 8192
			{
				setvarvar portalcam myspawner
				setvar portalview 52
			}
		}
	}
	else
	{
		checkactivatormotion activator
		ifvare RETURN YES setvar peractor1 1
	}
}
else
ifvare lotag 89 // teleporter SE
{
	ifvare peractor1 1
	{
		ifvarg monstatus 0 // player just teleported into your sector
		{
			ifvarvarn sprite[THISACTOR].sectnum player[THISACTOR].cursectnum
			sub monstatus 1
		}
		else
		ifvarvare sprite[THISACTOR].sectnum player[THISACTOR].cursectnum
		{
			set temp YES
			ife monstflags 1 ife mtype NO set temp NO
			ife temp YES
			{
				set mtype NO
				getactor[myspawner].x x
				getactor[myspawner].y y
				getactor[myspawner].z z
				getactor[myspawner].ang angvar
				getactor[myspawner].sectnum sect
				setplayer[THISACTOR].posx x
				setplayer[THISACTOR].posy y
				setplayer[THISACTOR].posz z
				setplayer[THISACTOR].cursectnum sect
				setplayer[THISACTOR].ang angvar
				setp[].posxv 0
				setp[].posyv 0
				addvar z 8192
				getplayer[THISACTOR].i spriteid
				setsprite spriteid x y z
				ifvarn target 0 globalsoundvar target
				setactorvar[myspawner].monstatus 3
				ife actorvar[myspawner].monstflags 1
					setav[myspawner].mtype 1 // allow porting back if destination is locked
				ifvarg sprite[THISACTOR].pal 0
				{
					ifspritepal 1 palfrom 63 10 10 55 else
					ifspritepal 2 palfrom 63 55 10 10 else
					ifspritepal 3 palfrom 63 63 63 63 else
					ifspritepal 4 palfrom 63 0 0 0 else
					ifspritepal 7 palfrom 63 50 50 0 else
					ifspritepal 8 palfrom 63 10 55 10
				}
			}
		}
		
	}
	else
	{
		checkactivatormotion activator
		ifvare RETURN YES setvar peractor1 1
	}
}
else
ifvare lotag 90 // cutscene SE
{
	ifvare hitag 0
	ifvarg character -1
		setvarvar camerasprite THISACTOR
	else
	{
		set RETURN 0
		// checkactivatormotion hitag
		
		ifvarand monstflags 32
		{
			ifvare mtype 0
			ifvare RETURN 1 setvar mtype 1 // first activation is occuring
			ifvare mtype 1 ifvare RETURN 0 setvar mtype 2 // first activation is over
			ifvare mtype 2 ifvare RETURN 1 { setvarvar camerasprite THISACTOR xorvar monstflags 32 }
		}
		else
		ifvare RETURN 1
		ifvarg character -1
			setvarvar camerasprite THISACTOR	
	}
	ifvarvare camerasprite THISACTOR
	{
		setp[].over_shoulder_on 1
		ifvarand monstflags 64 nullop // unskippable if flags 64
		else
		{
			ife fta 0 ifn player[].ftq 639 quote 639
			ifhitspace add endcut 1 else set endcut 0
		}
		
		ifvarand monstflags 4 // move player to camera
		{
			getplayer[THISACTOR].i spriteid
			setsprite spriteid sprite[THISACTOR].x sprite[THISACTOR].y sprite[THISACTOR].z
			setplayer[THISACTOR].cursectnum sprite[THISACTOR].sectnum
			setplayer[THISACTOR].posx sprite[THISACTOR].x
			setplayer[THISACTOR].posy sprite[THISACTOR].y
			setplayer[THISACTOR].posz sprite[THISACTOR].z
		}
		setplayer[THISACTOR].knuckle_incs 0
		ifvarand monstflags 8 nullop else
		{
			setplayer[THISACTOR].on_crane 0
			setplayer[THISACTOR].posxv 0
			setplayer[THISACTOR].posyv 0
			getplayer[THISACTOR].i spriteid
			setactor[spriteid].htextra -1
			//ifvarand monstflags 2 nullop else setplayer[THISACTOR].over_shoulder_on YES
		}

		ifvarl target 1 setvar target 130
		ifvare cursed 0 // stationary cam
		{
			ifvarand monstflags 16 addvar countvarb 1
			ifvarl target 1 setvar target 130
			addvar countvar 1
			ifvarand monstflags 1
			{
				setvarvar temp target
				subvarvar temp countvar
				ifvarl temp 22
				{
					mulvar temp 3
					setvar tempb 63
					subvarvar tempb temp
					setplayer[THISACTOR].pals 0 0
					setplayer[THISACTOR].pals 1 0
					setplayer[THISACTOR].pals 2 0
					setplayer[THISACTOR].pals_time tempb
				}
			}
			ifg endcut 25 
			{ 
				set endcut 0 set countvar target 
				add countvar 1 
				ifg subtitle_time 1
				set subtitle_time 1
			}
			ifvarvarg countvar target
			ife subtitle_time 0
			{
				setvar camerasprite -1
				setp[].over_shoulder_on 0
				ifvarn activator 0 state activatorstate
				ifvare camerasprite -1 
				{
					setplayer[THISACTOR].on_crane -1
					//setplayer[THISACTOR].over_shoulder_on NO
				}
				killit
			}
			
		}
		else
		{
			ifvarand monstflags 16 addvar countvarb 1
			ifvare activator 0 { setp[].over_shoulder_on 0 setvar camerasprite -1 setplayer[THISACTOR].on_crane -1 killit }
			ifvare myspawner -1
			{
				headspritestat spriteid 3
				whilevarn spriteid -1 // loop through the SEs
				{
					ifvare actorvar[spriteid].lotag 90
					ifvarvare activator actorvar[spriteid].hitag
					{ setvarvar myspawner spriteid setvar spriteid -1 }
					else
					nextspritestat spriteid spriteid
				}
				ifvare myspawner -1
				{
					setp[].over_shoulder_on 0
					setvar camerasprite -1
					setplayer[THISACTOR].on_crane -1
					//setplayer[THISACTOR].over_shoulder_on NO
					killit // no destination SE found
				}
			}
			ldist xydist THISACTOR myspawner
			ifvarvarn sprite[THISACTOR].shade sprite[myspawner].shade
			{
				setvarvar tempb xydist
				divvarvar tempb target
				ifvarl tempb 26 // adjust z-axis view to next SE in last second
				{
					getactor[THISACTOR].shade shade
					getactor[myspawner].shade tempc
					subvarvar tempc shade
					divvar tempc 25
					ifvare tempc 0 
					{
						ifvarvarl shade sprite[myspawner].shade addvar shade 1
						else subvar shade 1
					}
					else addvarvar shade tempc
					setactor[THISACTOR].shade shade
				}
			}
			ifg endcut 25 { set xydist 1 set endcut 0 }
			
			subvar xydist 1
			ifvarvarl xydist target
			{
				state activatorstate
				setvarvar camerasprite myspawner
				killit
			}
			else
			{
				getactor[myspawner].z mz
				getactor[THISACTOR].z z
				setvarvar temp target
				shiftvarl temp 3
				ifvarvarl z mz
				{
					addvarvar z temp
					ifvarvarg z mz setvarvar z mz
				}
				else
				ifvarvarg z mz
				{
					subvarvar z temp
					ifvarvarl z mz setvarvar z mz
				}
				getactor[myspawner].x mx
				getactor[myspawner].y my
				getactor[THISACTOR].x x
				getactor[THISACTOR].y y
				subvarvar mx x
				subvarvar my y
				getangle angvar mx my
				
				setvarvar tempb xydist
				divvarvar tempb target
				getincangle tempd sprite[THISACTOR].ang sprite[myspawner].ang
				divvarvar tempd tempb
				addvarvar tempd sprite[THISACTOR].ang
				setactor[THISACTOR].ang tempd
				
				setvarvar mx x
				addvarvar mx target // target is the speed
				rotatepoint x y mx y angvar mx my
				
				updatesectorz mx my sprite[].z sect
				ife sect -1 
				{ 
					state activatorstate
					setvarvar camerasprite myspawner
					killit
				}
				setsprite THISACTOR mx my z
				
			}
		}
	}
	
}
else
ifvare lotag 91
{

	ifvarl monstflags 1 setvar monstflags 32
	ifvare hitag 0 setvar hitag 64

	// hitag the var is the amplitude
	// monstflags is the length of the cycle
	// shade is the time offset on the cycle
		
	// ammo at a time = peak deviation from mid-intensity value * sin ( (frequency * time) + offset value )
	
	setvarvar temp sprite[THISACTOR].shade
	setvarvar tempd timer
	addvarvar tempd temp 
	mulvarvar tempd monstflags // frequency * time
	sin targetlock tempd
	mulvarvar targetlock hitag
	
	
	shiftvarr targetlock 10
	addvarvar targetlock initz
	getsector[THISACTOR].floorz z
	setsector[THISACTOR].floorz targetlock
	subvarvar z targetlock // change in z
	
	headspritesect spriteid mysector
	whilevarn spriteid -1
	{
		getflorzofslope mysector sprite[spriteid].x sprite[spriteid].y mz
		getactor[spriteid].z temp
		addvar temp 3072
		ifvarvarg temp mz
		//ifvarand sprite[spriteid].cstat 32 nullop else
		//ifvarand sprite[spriteid].cstat 16 nullop else
		{
			ifvare sprite[spriteid].statnum 0 changespritestat spriteid 2
			getactor[spriteid].z mz
			subvarvar mz z
			setactor[spriteid].z mz
		}
		nextspritesect spriteid spriteid
	}
}
else
ifvare lotag 92 // hazardous weather spawner
{
	ife peractor1 0 // not activated
	{
		// countvar is spawn delay
		ifl countvar 1 set countvar 10 // default
		ife hitag 0 set hitag 8192 // default distance
		else
		shiftl hitag 8
		checkactivatormotion activator
		ifvare RETURN YES setvar peractor1 1
		ife activator 0 setvar peractor1 1
	}
	else
	{
		add countvarb 1
		ifge countvarb countvar
		{
			set countvarb 0
			// hitag is distance
			set mx sprite[THISACTOR].x
			rand temp hitag
			add mx temp
			rand angvar 2047
			rotatepoint sprite[].x sprite[].y mx sprite[].y angvar mx my
			
			updatesector mx my sect
			ifn sect -1
			{
				getceilzofslope sect mx my mz
				addvar mz 1024
				espawn ICEMETEOR	
				setsprite RETURN mx my mz
				setactorvar[RETURN].weap 2
				ife cursed 2 setactorvar[RETURN].mtype 1 // pal 2
				setactorvar[RETURN].myspawner myspawner
			}
		}
		
	}
}
else
ifvare lotag 105
{
	// makes player sleep
	ifvarvare player[THISACTOR].cursectnum mysector
	{
		al lotag
		addvar lotag 1
		setvar sleeping -156 // -130
		getplayer[THISACTOR].i spriteid
		setactorvar[spriteid].myspawner THISACTOR
		
		ifvarand monstflags 1 nullop else
		{
		// playerstuff elements listing, all weapons are actually ammo amounts
		// all weapons get taken away
		// 0 chainsaw, 1 shotgun, 2 dbshotgun, 3 chaingun, 4 rpg, 
		// 5 grenades, 6 pipebombs, 7 bfg, 8 incinerator, 9 plasma, 
		// 10 pistols, 11 eyeballs, 12 corrupter, 13 hammer, 14 axe
		// 15 regular arrows, 16 flamearrows, 17 freezearrows, 18 bombarrows, 19 spyarrows
		// 20 Armageddon sword, 21 gauntlet, 22 cannon
		// 23 demonova, 24 jump boots, 25 spirit vision, 26 elemental shield, 27 gold, 28 armor, 29 quartz flask
		// 32 gems on hand == stash
		// 33 keys on hand == keys
		setarray playerstuff[0] sawammo
		setvar gotsaw NO
		ife character 0
			state sawoff
		
		ife character 0 setarray playerstuff[1] player[].ammo_amount 1 else
		setarray playerstuff[1] dukeammo[1]
		
		ife character 0 setarray playerstuff[2] player[].ammo_amount 2 else
		setarray playerstuff[2] dukeammo[2]
		
		ife character 0 setarray playerstuff[3] player[].ammo_amount 3 else
		setarray playerstuff[3] dukeammo[3]
		
		ife character 0 setarray playerstuff[4] player[].ammo_amount 4 else
		setarray playerstuff[4] dukeammo[4]
		
		setarray playerstuff[5] grenades
		setarray playerstuff[6] player[].ammo_amount 5
		
		ife character 0 setarray playerstuff[7] player[].ammo_amount 6 else
		setarray playerstuff[7] dukeammo[6]
		
		ife character 0 setarray playerstuff[8] player[].ammo_amount 7 else
		setarray playerstuff[8] dukeammo[7]
		
		ife character 0 setarray playerstuff[9] player[].ammo_amount 9 else
		setarray playerstuff[9] dukeammo[9]
		
		ife character 0 setarray playerstuff[10] player[].ammo_amount 11 else
		setarray playerstuff[10] dukeammo[11]
		
		setarray playerstuff[11] eyeballammo
		
		ife character 1 setarray playerstuff[12] player[].ammo_amount 1 else
		setarray playerstuff[12] jedrikammo[1]
		
		ife character 1 setarray playerstuff[13] player[].ammo_amount 2 else
		setarray playerstuff[13] jedrikammo[2]
		
		ife character 1 setarray playerstuff[14] player[].ammo_amount 3 else
		setarray playerstuff[14] jedrikammo[3]
		
		ife character 1 setarray playerstuff[15] player[].ammo_amount 4 else
		setarray playerstuff[15] jedrikammo[4]
		
		setarray playerstuff[16] burnarrows
		setarray playerstuff[17] freezearrows
		setarray playerstuff[18] explarrows
		setarray playerstuff[19] spyarrows
		setarray playerstuff[31] multiarrows
		
		ife character 1 setarray playerstuff[20] player[].ammo_amount 6 else
		setarray playerstuff[20] jedrikammo[6]
		
		ife character 1 setarray playerstuff[21] player[].ammo_amount 7 else
		setarray playerstuff[21] jedrikammo[7]
		
		ife character 1 setarray playerstuff[22] player[].ammo_amount 9 else
		setarray playerstuff[22] jedrikammo[9]
		
		setarray playerstuff[23] player[].holoduke_amount
		setarray playerstuff[24] player[].jetpack_amount
		setarray playerstuff[25] player[].heat_amount
		setarray playerstuff[26] player[].boot_amount
		setarray playerstuff[27] pgold
		setarray playerstuff[28] player[].shield_amount
		setarray playerstuff[29] player[].firstaid_amount
		setarray playerstuff[30] YES

		setarray playerstuff[32] stash
		setarray playerstuff[33] keys
		setarray playerstuff[34] ppods
		
		
		set stash 0
		set keys 0
		set ppods 0
		setp[].holoduke_amount 0
		setp[].jetpack_amount 0
		setp[].heat_amount 0
		setp[].boot_amount 0
		set pgold 0
		setp[].shield_amount 0
		setp[].firstaid_amount 0
		
		setplayer[].gotweapon 1 0
		setplayer[].gotweapon 2 0
		setplayer[].gotweapon 3 0
		setplayer[].gotweapon 4 0
		setplayer[].gotweapon 6 0
		setplayer[].gotweapon 7 0
		setplayer[].gotweapon 8 0
		setplayer[].gotweapon 9 0
		setplayer[].gotweapon 11 0
		setplayer[].curr_weapon 0
		
		set sawammo 0
		set grenades 0
		set eyeballammo 0
		set burnarrows 0
		set explarrows 0
		set multiarrows 0
		set freezearrows 0
		set spyarrows 0
		setp[].ammo_amount 1 0
		setp[].ammo_amount 2 0
		setp[].ammo_amount 3 0
		setp[].ammo_amount 4 0
		setp[].ammo_amount 5 0
		setp[].ammo_amount 6 0
		setp[].ammo_amount 7 0
		setp[].ammo_amount 8 0
		setp[].ammo_amount 9 0
		setp[].ammo_amount 11 0
		set temp 0
			whilevarn temp 13
			{
				setarray jedrikweaps[temp] 0
				setarray dukeweaps[temp] 0
				setarray jedrikammo[temp] 0
				setarray dukeammo[temp] 0
				add temp 1
			}
			ifvarand pow 65536 xorvar pow 65536
			set temp 0
			whilevarn temp 15
			{
				setarray tempammo[temp] 0
				add temp 1
			}
		}
		
	}
}
else
ifvare lotag 166
{
// lotag 166 weird transporter
// transports to another 166 SE of the same hitag
// countvar is how long it waits before doing so
	getactor[THISACTOR].sectnum mysector
	ifvare peractor1 0 // not activated yet
	ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
	ifp ponground
	{
		setvar peractor1 1
		headspritesect spriteid mysector
		whilevarn spriteid -1
		{
			ifvare sprite[spriteid].picnum 3846
			setactorvar[spriteid].lotag 1
			nextspritesect spriteid spriteid
		}
		setvar spriteid 0
		whilevarn spriteid 16384
		{
			ifvarn sprite[spriteid].statnum 1024
			ifvare sprite[spriteid].picnum MONSOUL
			ifvare actorvar[spriteid].peractor1 1
			setactorvar[spriteid].mtype 1
			addvar spriteid 1
		}
		setplayer[THISACTOR].posx sprite[THISACTOR].x
		setplayer[THISACTOR].posy sprite[THISACTOR].y
	}
	
	ifvare peractor1 1
	{
		// hold player and rotate screen
		addvar mtype 3
		setplayer[THISACTOR].rotscrnang mtype
		ifvarg player[THISACTOR].horiz 200 setplayer[THISACTOR].horiz 200 else
		ifvarl player[THISACTOR].horiz 0 setplayer[THISACTOR].horiz 0
		ifvarvarn player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
		{
			getactor[THISACTOR].x x
			getactor[THISACTOR].y y
			setplayer[THISACTOR].posx x
			setplayer[THISACTOR].posy y
			setplayer[THISACTOR].cursectnum mysector
		}
		ifvare countvarb 1
		{
			getsector[mysector].wallptr temp // get the firstwall of the sector
			ifvarn temp -1
			{
				getsector[mysector].wallnum tempb // get the number of walls in the sector
				setvar tempc 0
				whilevarvarn tempc tempb
				{
					getwall[temp].ypanning y
					addvar y 14
					setwall[temp].ypanning y
					//getwall[temp].point2 temp
					addvar temp 1
					addvar tempc 1
				}
			}
		}
		subvar countvar 1
		ifvarl countvar 1
		{
			setvar spriteid 0
			whilevarn spriteid 16384
			{
				ifvarn sprite[spriteid].statnum 1024
				{
					ifvare sprite[spriteid].picnum TOUCHPLATE
					ifvarvare sprite[spriteid].sectnum sprite[THISACTOR].sectnum
					{
						setactor[spriteid].picnum SMALLSMOKE
						changespritestat spriteid 1
					}
					ifvarvarn spriteid THISACTOR
					ifvare sprite[spriteid].picnum SECTOREFFECTOR
					ifvare sprite[spriteid].lotag 166
					ifvarvare actorvar[spriteid].hitag hitag
					{
						starttrackslot 1 5
						setvar music2 0
						set musicepisode 1
						set musictrack 5
						
						// teleport player
						setvar raining 0
						setactorvar[spriteid].mtype mtype
						setactorvar[spriteid].countvarb 1
						getactor[spriteid].x x
						getactor[spriteid].y y
						getactor[spriteid].z z
						subvar z 2048
						
						headspritestat tempc 10
						whilevarn tempc -1 // loop through the player sprites
						{
							
							// getplayer[THISACTOR].i temp
							setsprite tempc x y z
							getactor[spriteid].sectnum tempb
							changespritesect tempc tempb
							getactor[tempc].yvel tempd
							setplayer[tempd].posx x
							setplayer[tempd].posy y
							subvar z 8192
							setplayer[tempd].posz z
							addvar z 8192
							setplayer[tempd].cursectnum tempb
							addvar x 128 addvar y 128 // so players aren't in same spot
							nextspritestat tempc tempc
						}
				
						setvar spriteid 16383
					}
				}
				addvar spriteid 1
			}
			headspritesect spriteid mysector
			whilevarn spriteid -1
			{
				ifvare sprite[spriteid].picnum 3846
				setactorvar[spriteid].lotag 3
				nextspritesect spriteid spriteid
			}
			
			setplayer[THISACTOR].rotscrnang 0
			killit
		}
	}
}
else
ifvare lotag 666
{
	getactor[THISACTOR].sectnum mysector
	headspritesect spriteid mysector
	whilevarn spriteid -1
	{
		getactor[spriteid].picnum picnum
		setvar temp 0
		ifvare picnum APLAYER
		{
//			getuserdef[THISACTOR].god tempb
//			ifvare tempb NO
//			{
				getactor[spriteid].yvel tempb
				getplayer[tempb].dead_flag tempc
				ifvare tempc 0 setvar temp 1
//			}
		}
		else ifvarg picnum 325 ifvarl picnum 337
			setactorvar[spriteid].peractor1 1 // gold
		else ifvare picnum KEY setactorvar[spriteid].peractor1 1
		else ifvare picnum GEMSPRITE setav[spriteid].peractor1 1
		else ife sprite[spriteid].statnum 1
		{
			 ife actorvar[spriteid].monstatus 1
				set temp 1
			 ife actorvar[spriteid].monstatus 3
				set temp 1
		}
		
		ifvare temp 1
		{
			getactor[THISACTOR].z initz
			getactor[spriteid].z mz
			ifvarvarg mz initz
			{
				setactor[spriteid].htextra 140
				setactor[spriteid].htpicnum RADIUSEXPLOSION
				setactor[spriteid].htowner spriteid	
			}
		}
		nextspritesect spriteid spriteid
	}
}
else
{
	getactor[THISACTOR].htflags temp
	orvar temp 128
	setactor[THISACTOR].htflags temp // do not process here again
}
break

case SLOTDOOR case 133
case LIGHTSWITCH case 135
case SPACEDOORSWITCH case 137
case SPACELIGHTSWITCH case 139
case FRANKENSTINESWITCH case 141
case MULTISWITCH case 147 case 148 case 149
case DIPSWITCH case 163
case DIPSWITCH2 case 165
case TECHSWITCH case 167
case DIPSWITCH3 case 169
case ACCESSSWITCH2 case 171
case LIGHTSWITCH2 case 713
case POWERSWITCH1 case 861
case LOCKSWITCH1 case 863
case POWERSWITCH2 case 865
case HANDSWITCH case 1112
case PULLSWITCH case 1123
case ALIENSWITCH case 1143

ifvare countvar 0
{
	getactor[THISACTOR].htflags temp
	orvar temp 256
	ifvare activator 0
	orvar temp 128 // do not process here again
	setactor[THISACTOR].htflags temp
	setvar countvar 1
}
ifn sprite[].picnum mtype // switch has been used
ifvarn activator 0
{
	state activatorstate
	setvarvar mtype sprite[THISACTOR].picnum
}
break


case MOVESHIPCAM

	ifn hitag 0
	ife lotag 1
	{
		// the starting cam has an activation tag
		checkactivatormotion hitag
		ifvare RETURN YES set hitag 0
	}
	
	ife hitag 0
	ife shipcam -1
	ife lotag 1
	{
		getp[].posx initx
		getp[].posy inity
		getp[].posz initz
		set shipcam THISACTOR
		changespritestat THISACTOR 1
		
		ife activator 0
		{
			ifmove 0
			move SHIPMOVE0 geth
		}
		
		updatesector sprite[].x sprite[].y sect
		ifg sect -1 ifl sect 4096 changespritesect THISACTOR sect
		set spriteid 0
		whilevarn spriteid 16384
		{
			ife sprite[spriteid].picnum MOVESHIPCAM
			ife actorvar[spriteid].lotag 2
			{
				set target spriteid 
				set spriteid 16383
			}
			add spriteid 1
		}
		geta[].ang mtype
	}
	ife shipcam THISACTOR 
	{
		seta[].htflags 18432
		ife monstatus 2
		{
			getactor[shipcam].z z
			getav[shipcam].initz mz
			sub mz player[].posz
			sub z mz
			setp[].posz z
			
			getp[].posx mx
			getp[].posy my
			getav[shipcam].initx x
			getav[shipcam].inity y
			subvarvar mx x
			subvarvar my y
			getangle angvar mx my // angvar is now the displacement angle
			set xydist x
			sub xydist player[].posx
			mul xydist xydist
			sub y player[].posy
			mul y y
			add xydist y
			sqrt xydist xydist
			set xvel sprite[shipcam].x
			add xvel xydist
			add angvar sprite[shipcam].ang
			rotatepoint sprite[shipcam].x sprite[shipcam].y xvel sprite[shipcam].y angvar mx my
			updatesector mx my sect
			ife sect -1 set sect sprite[shipcam].sectnum
			setp[].posx mx
			setp[].posy my
			setp[].cursectnum sect
			getav[shipcam].mtype angvar
			add angvar player[].ang
			ifn shipangstart 999999
			sub angvar shipangstart
			setp[].ang angvar
			set shipcam -2
			stopsound SHIPWATER
			stopsound SHIPAIR
			// ifn target -1 setav[target].monstatus 2
			set monstatus 0
			set transition 0
		}
		ife monstflags 1
		{
			setp[].ang sprite[].ang
			setp[].posx sprite[].x
			setp[].posy sprite[].y
			setp[].posz sprite[].z
			setp[].cursectnum sprite[].sectnum
			set shipcam -2
			stopsound SHIPWATER
			stopsound SHIPAIR
			setsprite THISACTOR countvar countvarb fear
			move 0
			set transition 0
			// killit
		}
		else
		ife target -1
		{
			set temp lotag
			add temp 1
			ifspritepal 23 set temp 1
			set spriteid 0
			whilevarn spriteid 16384
			{
				ife sprite[spriteid].picnum MOVESHIPCAM
				ife actorvar[spriteid].lotag temp
				{
					set target spriteid 
					set spriteid 16383
				}
				add spriteid 1
			}
		}
		iffloordistl 160 
		ifg shipcam -1
		{
			ifsound SHIPWATER nullop else 
			{
				ife camerasprite -1
				{
					ife sector[].lotag 1 screensound SHIPWATER
					else ifsound SHIPAIR nullop else
					screensound SHIPAIR
				}
			}
		}
		else stopsound SHIPWATER
		
		iffloordistl 128 stopsound SHIPAIR else 
		ifg shipcam -1 { ifsound SHIPAIR nullop else ife camerasprite -1 screensound SHIPAIR }
					
	}
	else setsprite THISACTOR countvar countvarb fear // maintain original coords
	
	ifg activator 0
	{
		set RETURN NO
		checkactivatormotion activator
		ifvare RETURN YES 
		{
			setvar activator 0
			ifmove 0
			move SHIPMOVE0 geth
		}
	}
	else ife activator -1
	{
		set activator 0
		ifmove 0
		move SHIPMOVE0 geth
	}
	
	ifn target -1
	ife activator 0
	{
		ldist xydist THISACTOR target
		seta[].ang mtype
		ifmove SHIPMOVE0 nullop else
		{
			getactor[target].x mx
			getactor[target].y my
			getactor[].x x
			getactor[].y y
			subvarvar mx x
			subvarvar my y
			getangle angvar mx my
			getactor[].ang tempb
			getincangle tempd angvar tempb
			
			ifvarl tempd 9 ifvarg tempd -9
				setactor[].ang angvar
			else
			{
				shiftl tempd 10 // 9
				div tempd xydist
				sub tempb tempd
				setactor[].ang tempb
			}
			// vertical movement
			geta[target].z mz
			sub mz sprite[].z
			// shiftl mz 10
			mul mz 768
			div mz xydist
			movesprite THISACTOR 0 0 mz CLIPMASK0 RETURN
			mul mz -1
			set shotpitch mz
			
			
		}
		geta[].ang mtype
		
		ife actorvar[target].monstflags 1 // end of journey
		{
			ifl xydist 512 // disembark
			{
				set shipcam target
				setav[target].initx initx
				setav[target].inity inity
				setav[target].initz initz
				palfrom 63 1 1 1
				setsprite THISACTOR countvar countvarb fear
				move 0
				// killit
			}
			else
			ifl xydist 1536
			{
				ifmove SHIPMOVE1
				move SHIPMOVE0 geth
			}
			else
			ifl xydist 4096
			{
				ifmove SHIPMOVE2
				move SHIPMOVE1 geth
			}
			else
			ifl xydist 8192 
			{
				ifmove SHIPMOVE4
				move SHIPMOVE3 geth
				ifmove SHIPMOVE3 ifcount 30
				move SHIPMOVE2 geth
			}
			else
			ifl xydist 12288
			{
				ifmove SHIPMOVE4
				move SHIPMOVE3 geth
			}
			else
			{
				ifmove SHIPMOVE0 ifcount 30 move SHIPMOVE1 geth else
				ifmove SHIPMOVE1 ifcount 30 move SHIPMOVE2 geth else
				ifmove SHIPMOVE2 ifcount 30 move SHIPMOVE3 geth else
				ifmove SHIPMOVE3
				{
					iffloordistl 96 nullop else
					move SHIPMOVE4 geth
				}
			}
		}
		else
		{
			ifl xydist 644
			{
				set shipcam target
				setav[target].initx initx
				setav[target].inity inity
				setav[target].initz initz
				seta[target].ang sprite[].ang
				setav[target].mtype mtype
				setsprite THISACTOR countvar countvarb fear
				seta[].x countvar, seta[].y countvarb, seta[].z fear
				ifn mysector -1 changespritesect THISACTOR mysector
				move 0
				// killit
			}
			else
			{
				ifmove SHIPMOVE0 ifcount 30 move SHIPMOVE1 geth else
				ifmove SHIPMOVE1 ifcount 30 move SHIPMOVE2 geth else
				ifmove SHIPMOVE2 ifcount 30 move SHIPMOVE3 geth else
				ifmove SHIPMOVE3
				{
					iffloordistl 96 nullop else
					move SHIPMOVE4 geth
				}
			}
		}
		ife shipcam THISACTOR
		ife activator 0 ifmove 0 move SHIPMOVE3 geth
	}
	
	
break

case APLAYER
	getplayer[].ang oang
	getplayer[].horiz ohoriz
break

case HEAVYHBOMB
	ife mtype 1
	{
		ifn sprite[].htmovflag 0 
		{
			geta[].htmovflag temp
			addvar temp 16384
			ifvarl temp 16384 ifvarg temp -1 
			{ seta[].htextra 10, seta[].htpicnum BFGIMPACT seta[].htowner player[].i }
		}
	}
break

case BOULDER
ifvarn lotag 0
{
	checkactivatormotion lotag
	ifvare RETURN YES setvar lotag 0
}
else
{
	getactor[THISACTOR].htflags temp
	orvar temp 128
	setactor[THISACTOR].htflags temp // do not process here again
}
break

case LADDER
	
	getactorvar[THISACTOR].dodge dodge
	ifvare mtype 1 ifvare dodge 0
	{
		getplayer[THISACTOR].posz mz
		ifp pducking subvar mz 4096
		getactor[THISACTOR].z z
		addvar z 1024 // allow some slack
		ifvarvarg mz topladder ifvarvarl mz z
		{
			getplayer[THISACTOR].i target
			ldist xydist THISACTOR target

			ifangdiffl 384 ifvarl xydist 384
			{
				ifvare onladder 0
				{
					getplayer[THISACTOR].posx lastladderx
					getplayer[THISACTOR].posy lastladdery
				}		
				setvar onladder 3
				ifvarn lotag 0 setvarvar laddersound lotag else setvar laddersound -1
			}
		}
	}	

break

case TEXTURIZER
ifvarn activator 0
{
	checkactivatormotion activator
	setvar temp 0
	ifvare RETURN YES setvar mtype 1
	ifvare mtype 1
	{
		ifvarn monstflags 1 // 1 = sprites only
		{
			setvar tempd 0
			whilevarvarn tempd NUMWALLS
			{
				getwall[tempd].picnum picnum
				ifvarvare picnum lotag setwall[tempd].picnum hitag
				ifvarn peractor6 0
				{
					getwall[tempd].shade shade
					addvarvar shade peractor6
					setwall[tempd].shade shade
				}
				addvar tempd 1
			}
		
		
			setvar tempd 0
			whilevarvarn tempd NUMSECTORS
			{
				ifvarn peractor6 0
				{
					getsector[tempd].floorshade shade
					addvarvar shade peractor6
					setsector[tempd].floorshade shade
					getsector[tempd].ceilingshade shade
					addvarvar shade peractor6
					setsector[tempd].ceilingshade shade
				}
				getsector[tempd].floorpicnum picnum
				ifvarvare picnum lotag 
				{
					setsector[tempd].floorpicnum hitag
					// delete grass from sector
					headspritesect spriteid tempd
					whilevarn spriteid -1
					{
						ifvarg sprite[spriteid].picnum 65 ifvarl sprite[spriteid].picnum 69 
						{
							setactor[spriteid].picnum SMALLSMOKE
							setav[spriteid].monstatus 2
							changespritestat spriteid 1
						}
						nextspritesect spriteid spriteid
					}
				}
				getsector[tempd].ceilingpicnum picnum
				ifvarvare picnum lotag setsector[tempd].ceilingpicnum hitag
				

				
				addvar tempd 1
			}
		}
		ifvarn monstflags 2 // 2 = textures only
		{
			setvar tempd 0
			whilevarn tempd 16384
			{
				ifvarn sprite[tempd].statnum 1024
				{
					ifvarvare sprite[tempd].picnum lotag
					setactor[tempd].picnum hitag
				}
				addvar tempd 1
			}
		}
		setvar activator 0
	}
}
else 
{
	getactor[THISACTOR].htflags temp
	orvar temp 128 // do not process here again
	setactor[THISACTOR].htflags temp
}
break

case MUSICSECTOR

	ife player[].cursectnum sprite[].sectnum
	ife endlevel 0
	ife camerasprite -1
	ife music2 0
	{
		getuserdef[].music_episode temp
		getuserdef[].music_level tempb
		ife temp mtype ife tempb lotag nullop else
		starttrackslot mtype lotag
		set musicepisode mtype
		set musictrack lotag
		set music2 0
	}

break

case MUSICSWITCH

ifvarn activator 0
{
	checkactivatormotion activator
	ifvare RETURN YES setvar mtype 1
	ifvarand monstflags 1 ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum setvar mtype 1
	ifvare mtype 1
	{
		// starttrackvar hitag
		starttrackslot peractor1 hitag
		set musicepisode peractor1
		set musictrack hitag
		set music2 0
		
		setvar activator 0
	}
}
else 
{
	getactor[THISACTOR].htflags temp
	orvar temp 128 // do not process here again
	setactor[THISACTOR].htflags temp
}
break

case TEMPSPRITE

	ifvare peractor1 0 
	{
		ifvare hitag 0 setvar peractor1 1
		else
		{
			setvarvar temp hitag
			checkactivatormotion temp
			ifvare RETURN 1 setvar peractor1 1
		}
	}
	else
	ifvare peractor1 1 // activated
	{
		getactor[THISACTOR].mdflags temp
		orvar temp 16
		setactor[THISACTOR].mdflags temp
		setactor[THISACTOR].cstat initcstat
	}
	else killit

break

case PORTALCLOSED
case PORTAL2OPEN
case DUKEENDACTOR
case BIGGEYSER
case MEDIUMGEYSER
case GHOST
case LAVASPAWNER
case LIGHTBUG
case AXON
case HAMMERPROJ
case MONSTERFINDER
case COFFIN
case STRINGNODE
	seta[].httimetosleep 0
	changespritestat THISACTOR 1
break

case EVILKNIGHT ife monstatus 1 changespritestat THISACTOR 1
break

case GEMCHANGE
ifvare lotag 1
ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
{
	// exchange gold for gems
	divvar pgold 100
	addvarvar stash pgold
	ifvarg pgold 0 { globalsound GOLDBIG quote 151 }
	setvar pgold 0
	killit
}
break

// case WEAPONS
// ifvare lotag 1
// ifvarg timer 1
// ifvarvare player[THISACTOR].cursectnum sprite[THISACTOR].sectnum
// {
	// addlogvar 66666
// //	exchange weapons for gold on all players
	// setvarvar temp numplayers
	// subvar temp 1
	// whilevarn temp -1
	// {
		// setvarvar tempd pgold
		// setplayer[temp].gotweapon 1 0
		// setplayer[temp].ammo_amount 1 0 // you get nothing for the first weapon
		
		// getplayer[temp].gotweapon 2 tempb
		// ifvare tempb YES addvar pgold 200
		// setplayer[temp].gotweapon 2 0
		// getplayer[temp].ammo_amount 2 tempb
		// shiftvarl tempb 2
		// addvarvar pgold tempb
		// setplayer[temp].ammo_amount 2 0
		
		// getplayer[temp].gotweapon 3 tempb
		// ifvare tempb YES addvar pgold 200
		// setplayer[temp].gotweapon 3 0
		// getplayer[temp].ammo_amount 3 tempb
		// addvarvar pgold tempb
		// setplayer[temp].ammo_amount 3 0
		
		// getplayervar[temp].grenades tempb
		// shiftvarl tempb 2
		// addvarvar pgold tempb
		// setplayervar[temp].grenades 0
		
		// getplayervar[temp].character tempc
		// ifvare tempc 0
		// {
			// getplayer[temp].gotweapon 4 tempb
			// ifvare tempb YES addvar pgold 200
			// setplayer[temp].gotweapon 4 0
			
			// getplayer[temp].ammo_amount 4 tempb
			// shiftvarl tempb 3
			// addvarvar pgold tempb
			// setplayer[temp].ammo_amount 4 0
		// }
		// else ifvare tempc 1
		// {

			// setvarvar tempb burnarrows
			// shiftvarl tempb 1
			// addvarvar pgold tempb
			// setvarvar tempb explarrows
			// shiftvarl tempb 2
			// addvarvar pgold tempb
			// setvarvar tempb multiarrows
			// shiftvarl tempb 3
			// addvarvar pgold tempb
			// setvarvar tempb freezearrows
			// shiftvarl tempb 3
			// addvarvar pgold tempb
			// setvarvar tempb spyarrows
			// shiftvarl tempb 2
			// addvarvar pgold tempb
			// setplayervar[temp].burnarrows 0
			// setplayervar[temp].explarrows 0
			// setplayervar[temp].multiarrows 0
			// setplayervar[temp].freezearrows 0
			// setplayervar[temp].spyarrows 0
			
		// }
		
		// setplayer[temp].gotweapon 5 0
		// getplayer[temp].ammo_amount 5 tempb
		// shiftvarl tempb 3
		// addvarvar pgold tempb
		// setplayer[temp].ammo_amount 5 0
		
		// getplayer[temp].gotweapon 6 tempb
		// ifvare tempb YES addvar pgold 400
		// setplayer[temp].gotweapon 6 0
		// getplayer[temp].ammo_amount 6 tempb
		// shiftvarl tempb 4
		// addvarvar pgold tempb
		// setplayer[temp].ammo_amount 6 0
		
		// getplayer[temp].gotweapon 7 tempb
		// ifvare tempb YES addvar pgold 200
		// setplayer[temp].gotweapon 7 0
		// getplayer[temp].ammo_amount 7 tempb
		// shiftvarl tempb 1
		// addvarvar pgold tempb
		// setplayer[temp].ammo_amount 7 0
		
		// setplayer[temp].gotweapon 8 0
		// getplayer[temp].ammo_amount 8 tempb
		// shiftvarl tempb 3
		// addvarvar pgold tempb
		// setplayer[temp].ammo_amount 8 0
		
		// getplayer[temp].gotweapon 9 tempb
		// ifvare tempb YES addvar pgold 300
		// setplayer[temp].gotweapon 9 0
		// getplayer[temp].ammo_amount 9 tempb
		// shiftvarl tempb 2
		// addvarvar pgold tempb
		// setplayer[temp].ammo_amount 9 0
		
		// setplayer[temp].gotweapon 11 0
		// setplayer[temp].ammo_amount 11 0
		
		// getplayer[temp].firstaid_amount tempb
		// shiftvarl tempb 1
		// addvarvar pgold tempb
		// setplayer[temp].firstaid_amount 0
		
		
		// getplayer[THISACTOR].holoduke_amount tempb
		// divvar tempb 12
		// addvarvar pgold tempb
		
		// getplayer[THISACTOR].jetpack_amount tempb
		// shiftvarr tempb 3
		// addvarvar pgold tempb
		
		// getplayer[THISACTOR].heat_amount tempb
		// shiftvarr tempb 4
		// addvarvar pgold tempb
		
		// getplayer[THISACTOR].boot_amount tempb
		// addvarvar pgold tempb
		
		// setplayer[temp].firstaid_amount 0
		// setplayer[THISACTOR].steroids_amount 0
		// setplayer[THISACTOR].holoduke_amount 0
		// setplayer[THISACTOR].jetpack_amount 0
		// setplayer[THISACTOR].heat_amount 0
		// setplayer[THISACTOR].boot_amount 0
		
		// setplayer[temp].shield_amount STARTARMORHEALTH
		// getplayer[temp].max_player_health tempb
		// getplayer[temp].i spriteid
		// setactor[spriteid].extra tempb
		
		// setplayer[temp].curr_weapon 0
		// subvar temp 1
	// }
	// ifvarvarg pgold tempd
	// {
		// globalsound GOLDBIG
		// quote 151
	// }
	// killit
// }

// break


case FTDUMMY
killit
break

case BLOODPOOL

ifvarn sprite[THISACTOR].pal 0
{
	ifrnd 128 cactor NEWBLOODP1 else cactor NEWBLOODP2
	cstator 32
	randvar x 8
	addvarvar x 24
	randvar y 8
	addvarvar y 24
	setactor[THISACTOR].xrepeat x
	setactor[THISACTOR].yrepeat y
	
	getflorzofslope sprite[THISACTOR].sectnum sprite[THISACTOR].x sprite[THISACTOR].y z // z is the return var
	setactor[THISACTOR].z z
	ifvarand sector[].floorstat 1 cstat 32768
}
insertspriteq

ifspritepal 0 spritepal 14
getactor[THISACTOR].htflags temp
orvar temp 128
setactor[THISACTOR].htflags temp // do not process here again

break

case CRACK1
case CRACK2
case CRACK3
case CRACK4
	ife monstatus 2 killit
break

case JIBSPROJ1
case JIBSPROJ2
case JIBSPROJ3
case JIBSPROJ4
case JIBSPROJ5
case HEADJIBPROJ
case EDHEADJIBPROJ
case LEGJIBPROJ
case ARMJIBPROJ

ifvare countvar 0
{
	ifspawnedby DRONE { setthisprojectile[THISACTOR].trail -1 setvar mtype -1 } else
	ifspawnedby SKELKNIGHT { setthisprojectile[THISACTOR].trail -1 setvar mtype -1 } else
	ifspawnedby DETHNITE { setthisprojectile[THISACTOR].trail -1 setvar mtype -1 } else
	ifspawnedby SKELKNIGHTBONES { setthisprojectile[THISACTOR].trail -1 setvar mtype -1 } else
	ifspawnedby DETHNITEBONES { setthisprojectile[THISACTOR].trail -1 setvar mtype -1 }
	ifspritepal 1 { setthisprojectile[THISACTOR].trail -1 setvar mtype -1 }
	ifspritepal 120 { setthisprojectile[THISACTOR].trail -1 setvar mtype -1 }
}
addvar countvar 1
addvar countvarb 1
ifvare countvarb 18 setthisprojectile[THISACTOR].trail -1
ifvarg countvar 3
{
	ifaction JIBSPROJFRAME1 action JIBSPROJFRAME2 else
	ifaction JIBSPROJFRAME2 action JIBSPROJFRAME3 else
	ifaction JIBSPROJFRAME3 action JIBSPROJFRAME4 else
	action JIBSPROJFRAME1
	setvar countvar 0
	
	ifactor JIBSPROJ1
	{
		ifaction JIBSPROJFRAME1 cstat 128 else
		ifaction JIBSPROJFRAME2 cstat 132 else
		ifaction JIBSPROJFRAME3 cstat 140 else
		ifaction JIBSPROJFRAME4 cstat 136
	}
}
ifspritepal 1 
{
	ifvarg sprite[THISACTOR].yvel 2 
	ifvarand timer 1
	{ 
		espawn SMALLSMOKE 
		seta[RETURN].pal 1 
		seta[RETURN].cstat 2
	}
}
else
state random_wall_jibs


break

case JIBS1
case JIBS2
case JIBS3
case JIBS4
case JIBS5
	ife htg3 -1
	{
		geta[].xrepeat temp, div temp 2, seta[].xrepeat temp
		geta[].yrepeat temp, div temp 2, seta[].yrepeat temp
		set htg3 999999
	}
ifspritepal 24 spritepal 0
ifspawnedby HORNET nullop else
ifge framerate 30 ifle Numsprites 12288
{
	espawn BLOODTRAIL
	// ifrnd 32 state random_wall_jibs
	getactor[THISACTOR].pal pal
	setactor[RETURN].pal pal
	
	ifvare mtype 0
	{
		setvar temp 3072
		getactor[THISACTOR].x x
		getactor[THISACTOR].y y
		getactor[THISACTOR].z z
		updatesectorz x y z mysector
		ifvarn mysector -1
		{
			getflorzofslope mysector x y temp
			subvarvar temp z
		}
		ifvarl temp 2048
		{
			setvar mtype 1
			getactor[THISACTOR].picnum picnum
			addvar picnum 4
			espawnvar picnum
			getactor[THISACTOR].xrepeat x
			setactor[RETURN].xrepeat x
			getactor[THISACTOR].yrepeat y
			setactor[RETURN].yrepeat y
			getactor[THISACTOR].pal pal
			setactor[RETURN].pal pal
		}
		
		ifvarand sector[THISACTOR].ceilingstat 1 nullop else
		ifvarl sprite[THISACTOR].zvel 0
		{
			getceilzofslope sprite[THISACTOR].sectnum sprite[THISACTOR].x sprite[THISACTOR].y mz
			getactor[THISACTOR].z z
			subvarvar z mz
			ifvarl z 4096
			{
				getactor[THISACTOR].zvel zvel
				mulvar zvel -1
				addvar zvel 256
				setactor[THISACTOR].zvel zvel
			}
		}
	}
}
break


	case SCRAP6 case 2391 case 2392 case 2393 case 2394 case 2395
	case 2396 case 2397 case 2398 case 2399 case SCRAP1 case 2401 
	case 2402 case 2403 case SCRAP2 case 2405 case 2406 case 2407
	case SCRAP3 case SCRAP4 case SCRAP5
	case 2409 case 2410 case 2411 case 2413 case 2414 case 2415 case 2417 case 2418

	ife htg3 -1
	{
		geta[].xrepeat temp, div temp 2, seta[].xrepeat temp
		geta[].yrepeat temp, div temp 2, seta[].yrepeat temp
		set htg3 999999
	}
	
	getactor[THISACTOR].htflags temp
	orvar temp 128
	setactor[THISACTOR].htflags temp // do not process here again
	
break

case JIBS6
	ife htg3 -1
	{
		geta[].xrepeat temp, div temp 2, seta[].xrepeat temp
		geta[].yrepeat temp, div temp 2, seta[].yrepeat temp
		set htg3 999999
	}
ifspritepal 24 spritepal 0
ifspawnedby HORNET spritepal 6
break

case SLOWBULLET
case EXPLOSIVEBULLET
case EVILBULLET
addvar countvar 1
ifvarg sprite[THISACTOR].zvel 6144
{
	getplayer[THISACTOR].cursectnum mysector
	ifvarn mysector -1
	changespritesect THISACTOR mysector
}
break

case KORAXPROJ

addvar countvar 1
ifvare countvar 1
{
	seta[].blend 1
	cstator 2
	setvar tempd 2
	getactor[THISACTOR].pal pal
	// setvar intensity 4096
	setvar tempc 1 // moving
	// state spawnpointlight
	ifn sprite[].pal 11 ifn sprite[].pal 97
	{
		espawn KORPROJSPAWN
		setactor[RETURN].pal sprite[THISACTOR].pal
	}
}
ifvarg countvar 14
{
	set temp NO
	ife sprite[].pal 18 set temp YES
	ife sprite[].pal 97 set temp YES
	ife temp YES
	{
		state gradualturn
		ifvare target -1 setvarvar target player[THISACTOR].i
		getactor[THISACTOR].z z
		getactor[target].z mz
		setvarvar zdist mz
		subvarvar zdist z
		getactor[target].extra temp
		ifvarg temp 0 subvar zdist 4096 // seek down to feet if dead to dispose of body
		ldist xydist THISACTOR target
		ifvare xydist 0 setvar xydist 1
		mul zdist sprite[].xvel
		divvarvar zdist xydist // zdist now holds the desired z vel
		setactor[THISACTOR].zvel zdist
		ifvarvare target player[THISACTOR].i setvar target -1
	}
}
ifpdistl 512 
{
	setactor[THISACTOR].yvel 0
	getplayer[THISACTOR].i spriteid
	getactor[spriteid].htextra tempb
	addvar tempb 25
	setactor[spriteid].htextra tempb
	setactor[spriteid].htpicnum KORAXPROJ
	setactor[spriteid].htang sprite[THISACTOR].ang
	ifvarn bossid -1 setactor[spriteid].htowner bossid
}

break

case NOVAPROJ

ifn target -1
{
	state gradturn2
	sizeat 48 48
	getactor[THISACTOR].z z
	getactor[target].z mz
	setvarvar zdist mz
	subvarvar zdist z
	getactor[target].extra temp
	ifvarg temp 0 subvar zdist 6144 // seek down to feet if dead to dispose of body
	ldist xydist THISACTOR target
	ifvare xydist 0 setvar xydist 1
	mul zdist sprite[].xvel
	divvarvar zdist xydist // zdist now holds the desired z vel
	setactor[THISACTOR].zvel zdist
	
	ifhitweapon { seta[].yvel 0 al THISACTOR }
}
break

case FWPROJ6

setactor[THISACTOR].shade -127
seta[].blend 1
cstator 2

ifvarg sprite[THISACTOR].xrepeat 4 // 8
{
	ifvarg countvar 8
	{
		espawn FWSTREAK6
		
		setactor[RETURN].xrepeat sprite[].xrepeat
		setactor[RETURN].yrepeat sprite[].yrepeat
		
		setactor[RETURN].htflags 192
		setactor[RETURN].shade -127
		setactor[RETURN].pal sprite[THISACTOR].pal
		setactor[RETURN].cstat 130
	}
	
	sizeto 0 0
	ifvarand countvar 2 ifrnd 20
	{
		espawn FWTRAIL6
		setav[RETURN].ammo ammo
		setactor[RETURN].pal sprite[THISACTOR].pal
		setactorvar[RETURN].mtype 6
		setactor[RETURN].cstat 32768
	}
}
else
{
	setvar countvar 41
	espawn FWTRAIL6
	setav[RETURN].ammo ammo
	setactor[RETURN].pal sprite[THISACTOR].pal
	espawn FWTRAIL6
	setav[RETURN].ammo ammo
	setactor[RETURN].pal sprite[THISACTOR].pal
	espawn FWTRAIL6
	setav[RETURN].ammo ammo
	setactor[RETURN].pal sprite[THISACTOR].pal
	ife subtitle_time 0
	globalsound FWPOPS
	killit
}
ifvarg sprite[THISACTOR].xvel 128
{
	getactor[THISACTOR].xvel xvel
	subvar xvel 8
	setactor[THISACTOR].xvel xvel
}
addvar countvar 1
ifvarg countvar 40
ifrnd 16
{
	espawn FWTRAIL6
	setav[RETURN].ammo ammo
	setactor[RETURN].pal sprite[THISACTOR].pal
	espawn FWTRAIL6
	setav[RETURN].ammo ammo
	setactor[RETURN].pal sprite[THISACTOR].pal
	espawn FWTRAIL6
	setav[RETURN].ammo ammo
	setactor[RETURN].pal sprite[THISACTOR].pal
	ife subtitle_time 0
	soundonce FWPOPS
	killit
}
break

case LAVAROCK
addvar countvar 1
ifvarg countvar 2
{
	spawn SMALLSMOKE
	setvar countvar 0
}
break

case SHIELD
sizeat 20 16
getactor[THISACTOR].htflags temp
orvar temp 128
setactor[THISACTOR].htflags temp // do not process here again
break

case WEBPROJ
sizeto 16 16
break

case RPG_GUIDED
state projeffects
break

case SEEDPROJ
addvar countvar 1
ifvare countvar 4
{
	setvar countvar 0
	getactor[THISACTOR].cstat temp
	ifvare temp 128 setvar temp 132 else
	ifvare temp 132 setvar temp 136 else
	ifvare temp 136 setvar temp 140 else
	setvar temp 128
	setactor[THISACTOR].cstat temp
}
break

case PUSHPROJ
getactor[THISACTOR].owner spriteid
ifvarn spriteid -1
{
	getactor[spriteid].pal pal
	setactor[THISACTOR].pal pal
	setthisprojectile[THISACTOR].pal pal
}
break


case WATERFALL
case JUMPAD
cstat 32768
changespritestat THISACTOR 1
break

case CHAINLINK
ife monstflags 1
ife player[].cursectnum sprite[].sectnum
{
	changespritestat THISACTOR 1
	sleeptime -1
}
break

case SKYKILL
ifvare lotag 666 changespritestat THISACTOR 1
break

// case FLOATHITBOX
case SPAWNER
case SUPERTOUCHPLATE
case SHOOTER
case DEMONOVA
case AXONEFFECTOR
case MONPATH
case MINOTAUR
case BOSSPATH
case KHANNAFIGHT
changespritestat THISACTOR 1
break

case REDRIFT
ifvarn activator 0
{
	changespritestat THISACTOR 1
	checkactivatormotion activator
	ifvare RETURN YES setvar mtype 1
	ifvare mtype 1
		setvar activator 0
}
break

case DRACARRY
changespritestat THISACTOR 1
ifvarn lotag 0
{
	checkactivatormotion lotag
	ifvare RETURN YES setvar lotag 0
}
break


case MONSOUL
ifvare peractor1 1 // following player
{
	ifcansee 
	ifpdistl 4096 
	setvar countvar 0
	else
	ifvare endlevel 0
	{
		getplayer[THISACTOR].cursectnum temp
		ifvarn temp -1
		{
			getsector[temp].lotag tempb
			ifvarn tempb 2
			{
				addvar countvar 1
				ifvarg countvar 780
				{
					sound TELEPORTER
					espawn TRANSPORTERSTAR
					setactor[RETURN].pal 2
					setvar countvar 0
					getplayer[THISACTOR].posx x
					getplayer[THISACTOR].posy y
					getplayer[THISACTOR].posz z
					setsprite THISACTOR x y z
					changespritesect THISACTOR temp
					sound TELEPORTER
					espawn TRANSPORTERSTAR
					setactor[RETURN].pal 2
				}
			}
		}
	}
	getplayer[THISACTOR].cursectnum tempb
	getsector[tempb].hitag tempc
	ifvare tempc 777
	{
		state specialdeath
		// espawn SOUNDMAKER
		// setactorvar[RETURN].peractor1 SOULBOUNCE
		screensound SOULHITDOOR
		spritepal 2
	    spawn BLUDSPLASH
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
	    spawn BLOODCLOUD
		killit
	}
	ife command 0 set command 1
	
}
break
			
case SOULDOOR
setvar doorinmap 30
break

case PIGCOP
case PIGCOPSTAYPUT
ifspritepal 10 sizeat 36 31 // 54 46
ifspritepal 14 sizeat 27 23 // 40 34
getactor[THISACTOR].htflags temp
orvar temp 128
setactor[THISACTOR].htflags temp // do not process here again
break

case DRONE
ifspritepal 21 sizeat 48 48 else sizeat 26 26
getactor[THISACTOR].htflags temp
orvar temp 128
setactor[THISACTOR].htflags temp // do not process here again
break


// case SHELL
// state getfloorz
// getactor[THISACTOR].z mz
// subvarvar z mz
// ifvarl z 512
// {
	// getactor[THISACTOR].statnum tempb
	// ifvarn tempb 1
	// {
		// addvar picnum 1 setactor[THISACTOR].picnum picnum
		// changespritestat THISACTOR 1
	// }
// }
// break

case SHOTGUNSHELL

ifaction 0 { action NEWSHELLSPIN cstator 128 }
state getfloorz
getactor[THISACTOR].z mz
subvarvar z mz
ifvarl z 512
ifvarn sprite[THISACTOR].statnum 1
	changespritestat THISACTOR 1

break

case ARROWPROJ
getactor[THISACTOR].xvel xvel
subvar xvel 2
setactor[THISACTOR].xvel xvel
getthisprojectile[THISACTOR].drop zvel
ifvarg zvel -256 subvar zvel 1
setthisprojectile[THISACTOR].drop zvel

ifvare weap 0
{
	 setvar weap 1 
	 ifvare arrowtype 1
	 {
		 spritepal 2
		 setthisprojectile[THISACTOR].pal 2
	 }
	 ifvare arrowtype 2
	 {
		 spritepal 7
		 setthisprojectile[THISACTOR].pal 7
		 setthisprojectile[THISACTOR].hitradius 2048
		 setthisprojectile[THISACTOR].extra 120
		 setactor[THISACTOR].extra 120
		 setthisprojectile[THISACTOR].spawns EXPLOSION2
	 }
	 ifvare arrowtype 3 
	 {
		 spritepal 3
		 setthisprojectile[THISACTOR].pal 3
		 state randtraj
	 }
	 ifvare arrowtype 4
	 {
		 spritepal 1
		 setthisprojectile[THISACTOR].pal 1
		 lotsofglass 1
	 }
	 ifvare arrowtype 5
	 {
		 spritepal 8
		 setthisprojectile[THISACTOR].pal 8 
	 }
}

ifspritepal 2 ifpdistg 1560 spawn STICKYFIRE
ifspritepal 7 spawn SMALLSMOKE
ifspritepal 1 lotsofglass 1
ifspritepal 8
{
	getactor[THISACTOR].extra temp
	addvar temp 10 ifvarg temp 600 setvar temp 600
	
	setactor[THISACTOR].extra temp
	ifvarvare arrowview THISACTOR
	{	
		getplayer[THISACTOR].oang temp
		getplayer[THISACTOR].ang tempb
		getincangle tempb temp tempb
		shiftvarr tempb 1
		ife upside YES mulvar tempb -1
		getactor[THISACTOR].ang angvar
		addvarvar angvar tempb
		setactor[THISACTOR].ang angvar
		// setplayer[THISACTOR].ang player[THISACTOR].oang
		
		getplayer[THISACTOR].ohoriz temp
		getplayer[THISACTOR].horiz tempb
		subvarvar tempb temp
		shiftvarl tempb 4
		ife upside YES mul tempb -1
		getactor[THISACTOR].zvel zvel
		subvarvar zvel tempb
		setactor[THISACTOR].zvel zvel
		// setplayer[THISACTOR].horiz player[THISACTOR].ohoriz
		
		addvar peractor4 1
		ifvarg peractor4 180 setvar arrowview -1
	}
}

break

case SPEARPROJ

	add countvar 1
	ifge countvar 3
	{
		cstat 32
		cstator 16
		
		geta[].xvel xvel
		geta[].zvel z	
		shiftr z 4
		getangle tempb z xvel
		sub tempb 512
		
		div tempb 16
		seta[].yoffset tempb
		
		geta[].zvel zvel
		add zvel 8
		seta[].zvel zvel
	}

break

case ARROWBIT1 case ARROWBIT2 case ARROWBIT3
	add countvar 1
	ifg countvar 4
	{
		ife sprite[].cstat 128 cstat 132 else 
		ife sprite[].cstat 132 cstat 136 else
		ife sprite[].cstat 136 cstat 140 else
		cstat 128
		set countvar 0
	}
break

case POTDEBRIS1 case POTDEBRIS2 case POTDEBRIS3 case POTDEBRIS4
// case WOODDEBRIS case STONEDEBRIS
	ife sprite[].yvel 1
	{
		geta[].zvel z
		add z 256
		seta[].zvel z
	}
break

case RPG

spawn ROCKETHALO

ifvare mtype -1 killit else
ifspawnedby APLAYER 
	ifvare CURRWEAP 4
		ifvare WEAPON4_FIRESOUND SHOOTROX
		setvar mtype 1 // guided rocket

ifvare mtype 1
{
	ifvarl countvar 7
	ifvarg roxq 1
	ifvare target -1
	state randtraj
	addvar countvar 1
	ifvare countvar 1
	{
		//ifvarn playertarg -1 setvarvar target playertarg
		setvar spriteid 0
		whilevarn spriteid 5 // search through target list for viable targets
		{
			setvarvar tempb playertarg[spriteid]
			ifvarn tempb -1
			{
				setvar tempd YES // lock on by default
				setvar temp 0
				whilevarn temp 5
				{
					setvarvar tempc guidedrox[temp]
					ifvarn tempc -1
					ifvarvare actorvar[tempc].target tempb setvar tempd NO
					addvar temp 1
				}
				ifvare tempd YES 
				{
					setvarvar target tempb 
					setvar spriteid 4
					ifvare guidedrox[0] -1 setarray guidedrox[0] THISACTOR else
					ifvare guidedrox[1] -1 setarray guidedrox[1] THISACTOR else
					ifvare guidedrox[2] -1 setarray guidedrox[2] THISACTOR else
					ifvare guidedrox[3] -1 setarray guidedrox[3] THISACTOR else
					ifvare guidedrox[4] -1 setarray guidedrox[4] THISACTOR
				}
			}
			addvar spriteid 1

		}
	}
	else ifvarg countvar 1 ifvare target -1
	{
		ifn scannedsprite -1
		ife actorvar[scannedsprite].monstatus 1
		ife actorvar[scannedsprite].cursed 0
			set target scannedsprite
		else
		{
			setvar spriteid 0
			whilevarn spriteid 5 // search through target list for viable targets
			{
				setvarvar tempb playertarg[spriteid]
				ifvarn tempb -1 { setvarvar target tempb setvar spriteid 4 }
				addvar spriteid 1
			}
		}
	}
	ifvarn target -1
	state tracktarget
}
else
ifvare mtype 2 // drunken
{
	ifvare countvar 0
	{
		sizeat 64 64
		setactor[THISACTOR].extra 60
		getactor[THISACTOR].xvel xvel
		shiftvarl xvel 1
		setactor[THISACTOR].xvel xvel
		getactor[THISACTOR].zvel zvel
		shiftvarl zvel 1
		setactor[THISACTOR].zvel zvel
		getactor[THISACTOR].x mx
		addvar mx 1024
		rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y sprite[THISACTOR].ang x y
		setsprite THISACTOR x y sprite[THISACTOR].z
	}
	addvar countvar 1
	ifrnd 128
	state randtraj
	else ifn target -1 
	{
		ifrnd 128
		state tracktarget
	}
	
}

break

case GRENADEPROJ

// ifvarn sprite[THISACTOR].htmovflag 0
// {
	// findnearspritez CRACK1 1024 24576 spriteid
	// ifvare spriteid -1
	// findnearspritez CRACK2 1024 24576 spriteid
	// ifvare spriteid -1
	// findnearspritez CRACK3 1024 24576 spriteid
	// ifvare spriteid -1
	// findnearspritez CRACK4 1024 24576 spriteid
	// ifvarn spriteid -1
		// setactor[THISACTOR].yvel 0	
// }
	state blowupcrack
	
break

case BIGGRENADEPROJ
spawn ROCKETSPARK2

	ife target player[].i
	{
		geta[].z z
		sub z 2048
		getp[].posz mz
		ifg mz z
		{
			sub mz z
			mul mz sprite[].xvel
			ldist temp THISACTOR target
			div mz temp
			movesprite THISACTOR 0 0 mz CLIPMASK0 RETURN
		}
	}

break

case BFGPROJ
addvar countvar 1
ifvarg countvar 2
{
	cstat 128
	setthisprojectile[THISACTOR].cstat 128
}
break

case FREEZEBLAST


	ife sprite[].cstat 642 cstat 646 else
	ife sprite[].cstat 646 cstat 650 else
	ife sprite[].cstat 650 cstat 654 else
	cstat 642
ifvare mtype 1 
{
	addvar countvar 1
	ifspritepal 0
	{
		getplayer[THISACTOR].palookup pal
		setactor[THISACTOR].pal pal
	}
	ifvare countvar 0 cstat 32768
	else ifvare countvar 2 cstat 128
	
	ifvarg countvar 3
	{
		ifvarn target -1 state tracktarget
		else
		{
			ifvarn plasmatarg -1 set target plasmatarg
			
			// findnearactorz SHOOTME 4096 32768 spriteid
			// ifvare spriteid -1
			// findnearactorz SHOOTME 8192 65536 spriteid
			// ifvarn spriteid -1
			// {
				// getactorvar[spriteid].myspawner target
				// canseespr THISACTOR target temp
				// ifvare temp 0 setvar target -1
			// }
		}
	}
}
else ifvare mtype 2
{
	strength 25
	sizeat 20 20
	seta[].shade -127
}


break

case BARONBALL

	ife sprite[].cstat 130 cstat 134 else
	ife sprite[].cstat 134 cstat 138 else
	ife sprite[].cstat 138 cstat 142 else
	cstat 130
	addvar countvar 1
	
	ifg countvar 3 ifl countvar 12 
	state gradualturn
	
	ifspritepal 12
	{
		ifpdistl 1280 
		{
			
			getplayer[THISACTOR].i spriteid
			getav[spriteid].burning temp
			sub temp 10
			setav[spriteid].burning temp
			ifg temp -15
			ifn sprite[].htowner -1
				set retaliate sprite[].htowner
			
		}
	}
	ifspritepal 21
	{
		ifpdistl 1280 
		{
			getplayer[THISACTOR].i spriteid
			getav[spriteid].burning temp
			add temp 10
			setav[spriteid].burning temp
			ifl temp 15
			ifn sprite[].htowner -1
				set retaliate sprite[].htowner
			
		}
	}

break

case FTPROJ

ifvare countvar 0
{
	ifspawnedby APLAYER
	{
		getthisprojectile[THISACTOR].extra temp
		shiftvarr temp 1
		setthisprojectile[THISACTOR].extra temp
		set tempb NO
		ifvarand pow 128 set tempb YES
		ife WEAP7MODE 1 set tempb YES
		ife tempb YES
		{
			spritepal 1 
			setthisprojectile[THISACTOR].pal 1 
			setvar burning -30
			getthisprojectile[THISACTOR].extra temp
			ifvarand pow 128
			shiftvarl temp 3
			setthisprojectile[THISACTOR].extra temp
		}
		ifvare ALTFIRING 0 // 1
		{
			setvar mtype 1
			setthisprojectile[THISACTOR].spawns BIGSMOKE
		}
	}
	getactor[THISACTOR].z z
	ifspawnedby APLAYER ifvarn upside 0 subvar z 4096 else
	addvar z 4096
	setactor[THISACTOR].z z
	getactor[THISACTOR].zvel z
	subvar z 512
	setactor[THISACTOR].zvel z
}

addvar countvar 1
ifvare mtype 1 sizeto 24 20 else
sizeto 40 20

ifvarg countvar 6
ifinwater { spawn WATERBUBBLE killit }


ifvarg countvar 1
{
	espawn FTTRAIL
	getactor[THISACTOR].yrepeat y
	shiftvarl y 1
	setactor[RETURN].xrepeat y
	shiftvarr y 1
	setactor[RETURN].yrepeat y
	ifvare peractor1 1 setvar temp 650 else
	setvar temp 514
	setactor[RETURN].cstat temp
	set tempb NO
	ifvarand pow 128 set tempb YES
	ife WEAP7MODE 1 set tempb YES
	ife tempb YES
	{
		setactorvar[RETURN].burning -30
		setactor[RETURN].pal 1
		seta[RETURN].blend 1
		seta[RETURN].cstat 32768
		setav[RETURN].peractor1 peractor1
	}
}

break

case DEMONSPIT
addvar countvar 1
ifvarg countvar 2
{
	setvar countvar 0
	ifaction SPITFRAME1 action SPITFRAME2 else
	ifaction SPITFRAME2 action SPITFRAME3 else
	ifaction SPITFRAME3 action SPITFRAME1
}
ifspawnedby WRAITH { spritepal 2 state randtraj }
break

// x32 y32
case 3615 case 1616 case 3622
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 15 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break


// x128 y32
case 4789 case 4790
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 65 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x75 y75
case 3585 case 5086 case 3605 case 3664
case 3600 case 3617 case 3625 case 3821 case 3825 case 3603 case 3604
case 3601 case 3629 case 2624 case 3626 case 5092 case 3628 case 3630 
case 7058 case 7059 case 7060 case 7228
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
	setactor[THISACTOR].mdflags 16
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 80 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x70 y110
case 3586
case 3596 case 3667 case 5088 case 7176
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
	setactor[THISACTOR].mdflags 16
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 100 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x125 y110
case 3631 case 3632 case 7056 case 7057
case 3595 case 3606 case 3634 case 3659 case 3660 case 3661
case 4791 case 4792 case 7313
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 125 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x55 y120
case 3599 case 3584 case 3587 case 3588 
case 3607 case 3663 case 5090 case 3635
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 70 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x90 y165
case 3608 case 3669 case 3613 case 3611 case 3619
case 3627 case 3672 case 5093 case 7329
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
	setactor[THISACTOR].mdflags 16
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 150 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x145 y175
case 3602 case 3639 case 3640 case 3670
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
	setactor[THISACTOR].mdflags 16
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 145 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x115 y186
case 3597 case 3666 case 5089 case 3592 case 3612 case 3638 case 3641 case 3671
case 3623 case 3665 case 5091 case 3614 case 7055 case 7185
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
	setactor[THISACTOR].mdflags 16
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 130 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

// x256 y256
case 3925
case 3593 case 3594 case 3668 case 5087
ifvare sprite[THISACTOR].statnum 0 
{
	changespritestat THISACTOR 1
	getactor[THISACTOR].xrepeat peractor1
	divvar peractor1 2
	setactor[THISACTOR].mdflags 16
}
ifvarg burning 0
{
	addvar burning 2 // flammable things burn until they die
	ifspritepal 2 nullop else spritepal 2
	ifvare mtype 0 { setvar mtype 1 strength 200 }
	state imonfire
	ifhitweapon ifdead 
	{
		strength 0
		getactor[THISACTOR].xrepeat temp
		subvar temp 1
		setactor[THISACTOR].xrepeat temp
		ifvarvarl temp peractor1
		{
			spawn BIGSMOKE 
			killit 
		}
	}
} else
ifhitweapon
{
	ifwasweapon FTPROJ addvar burning 30
	ifwasweapon RPG addvar burning 30
	ifwasweapon RADIUSEXPLOSION addvar burning 30
}
break

case WALLARROW
ifvare peractor1 0
ifn peractor4 STUCKSPEAR
{
	ifn sprite[].owner -1
	ife actorvar[sprite[].owner].peractor4 STUCKSPEAR nullop else
	ifvare target2 APLAYER
	ifvarn targetlock -1
		state validatedecal
	
}

ife peractor4 STUCKSPEAR
{
	add countvar 1
	state spearexplode
}
break

case VERTARROW
ife peractor4 VERTSPEAR
{
	ifvarand sprite[].cstat 8 fall
	add countvar 1
	state spearexplode
}
break

case MOVEHERE
	ife peractor1 1
	{
		setsprite player[].i sprite[].x sprite[].y sprite[].z
		geta[].z z, add z 8192
		setp[].posz z
		setp[].posx sprite[].x
		setp[].posy sprite[].y
		setp[].cursectnum sprite[].sectnum
		setp[].ang sprite[].ang
		seta[player[].i].ang sprite[].ang
		killit
	}
break

case TELEPORTONCE
	ife peractor1 1 killit
	else
	ife player[].cursectnum sprite[].sectnum
	{
		set countvar 0
		whilevarn countvar 16384
		{
			ife sprite[countvar].picnum TELEPORTONCE
			ifn countvar THISACTOR
			ife actorvar[countvar].lotag lotag
			{
				palfrom 63 0 0 0
				geta[countvar].z z
				sub z 8192
				setsprite player[].i sprite[countvar].x sprite[countvar].y z
				setp[].posz z
				setp[].posx sprite[countvar].x
				setp[].posy sprite[countvar].y
				setp[].cursectnum sprite[countvar].sectnum
				setp[].ang sprite[countvar].ang
				seta[player[].i].ang sprite[countvar].ang
				set countvar 16383
				set peractor1 1
				setav[countvar].peractor1 1
			}
			add countvar 1
		}
		ife peractor1 1 killit
	}
break

case SPARKPROJ
	ife sprite[].statnum 4
	{
		seta[].blend 1
		add countvar 1
		ife countvar 3
		{
			set countvar 0
			ife sprite[].cstat 642 cstat 646 else
			ife sprite[].cstat 646 cstat 650 else
			ife sprite[].cstat 650 cstat 654 else
			cstat 642
		}
		spawn SPARKPROJ
	}
	
break

case DARKPROJ

	ifl sprite[].zvel 0 cstator 8
	
	add countvar 1
	ifg countvar 2
	ifvarn target -1
	{
		ifvare sprite[target].statnum 1024 setvar target -1 else
		ifvare actorvar[target].monstatus 2 setvar target -1
		
		ifn target -1
		{
			ldist tempc THISACTOR target
			ifg tempc 1280
			{
				getactor[target].x mx
				getactor[target].y my
				sub mx sprite[].x
				sub my sprite[].y
				getangle angvar mx my
				getactor[].ang tempb
				getincangle tempd angvar tempb

				ifvarl tempd 17 ifvarg tempd -17
					setactor[].ang angvar
				else
				{
					ifl tempd 0 
						add tempb 16
					else
					ifg tempd 0 
						subvar tempb 16
					seta[].ang tempb
				}
			}
			
		}
	}

break

case REPLAYSPRITE
break

case PATHMANAGER

	// set temp player[].player_par
    // modvar temp 3
    // ife temp 0
	// {
		// first, wipe rankings from the BOSSPATH sprites
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ife sprite[spriteid].picnum BOSSPATH
				setav[spriteid].peractor1 0
			nextspritestat spriteid spriteid
		}
		set playersprite player[].i
		set saveit sprite[playersprite].z
		seta[playersprite].z player[].posz

		// next set peractor1 to 1 on those that see player
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ife sprite[spriteid].picnum BOSSPATH
			{
				canseespr spriteid playersprite temp
				ife temp 1
				{
					ldist tempb spriteid playersprite
					ifl tempb MAXPATHDIST
					{
						setav[spriteid].peractor1 1
						// seta[spriteid].pal 1
						ife sprite[spriteid].pal 2
						ifn bossid -1
						{
							ldist tempd spriteid player[].i
							ifl tempd 8192
							{
								setav[bossid].zveloverride 6
								// force player visibility
							}
						}
					}
				}
			}
			nextspritestat spriteid spriteid
		}
		
		seta[playersprite].z saveit
		
		// loop will end when either all BOSSPATH are != peractor1 0
		// or our peractor1 > designated stopping point
		
		set peractor1 0
		set countvarb 0
		
		whilevarn countvarb 1
		{
			set mtype 1 // only continue big loop if this becomes 0
			add peractor1 1 // degrees of separation from seeing player
			headspritestat countvar 1
			whilevarn countvar -1
			{
				ife sprite[countvar].picnum BOSSPATH
				ife actorvar[countvar].peractor1 peractor1
				{
					set tempb peractor1
					add tempb 1
					
					headspritestat spriteid 1
					whilevarn spriteid -1
					{
						ife sprite[spriteid].picnum BOSSPATH
							ife actorvar[spriteid].peractor1 0
							{
								set mtype 0 // found a virgin node
								
								canseespr spriteid countvar temp
								ife temp 1
								{
									ldist tempc countvar spriteid
									ifl tempc MAXPATHDIST
									{
										setav[spriteid].peractor1 tempb
										ife tempb 2 seta[spriteid].pal 2
										ife tempb 3 seta[spriteid].pal 4
										ife tempb 4 seta[spriteid].pal 6
										ife tempb 5 seta[spriteid].pal 8
										ife tempb 6 seta[spriteid].pal 121
									}
								}
							}
						
						nextspritestat spriteid spriteid
					}
				}
				
				nextspritestat countvar countvar
			}
			ife peractor1 8 set countvarb 1 // end loop
			ife mtype 1 set countvarb 1 // end loop
		}
		
		// final pass; any nodes still unconnected get a very low score
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ife sprite[spriteid].picnum BOSSPATH
			{
				ife actorvar[spriteid].peractor1 0
				setav[spriteid].peractor1 9999
			}
			nextspritestat spriteid spriteid
		}
	// }
break

case CANNONBALL2
	addvar countvar 1
	ifvare countvar 2 spawn BIGSMOKE
break

default

ife sprite[].pal 17 ifn lotag 0 nullop else
ifn sprite[].statnum 4
{
	getactor[THISACTOR].htflags temp
	orvar temp 128
	setactor[THISACTOR].htflags temp // do not process here again
}
break
endswitch

endevent

onevent EVENT_ANIMATESPRITES

gettspr[THISACTOR].tsprpicnum picnum
gettspr[THISACTOR].tsprowner spriteid

ife spriteid player[].i
{
	gettspr[].tsprxrepeat x
	gettspr[].tspryrepeat y
	// mul x 2, div x 3
	// mul y 2, div y 3
	mul x 5, div x 8
	mul y 5, div y 8
	settspr[].tsprxrepeat x
	settspr[].tspryrepeat y
	ifvarn upside 0 // reversed gravity
	{
		gettspr[THISACTOR].tsprcstat temp
		orvar temp 8
		settspr[THISACTOR].tsprcstat temp
		gettspr[THISACTOR].tsprz temp
		subvar temp 6144
		settspr[THISACTOR].tsprz temp
	}
	ifn camerasprite -1 settspr[].tsprcstat 0
}

switch sprite[spriteid].picnum

case TEMPSPRITE
	settspr[THISACTOR].tsprpicnum actorvar[spriteid].monstflags
break

case WEBPROJ
settspr[THISACTOR].tsprpicnum 72
break

case NOVAPROJ
settspr[THISACTOR].tsprpicnum 6106
break

case BFGPROJ
settspr[THISACTOR].tsprpicnum 5391
break

case LIGHTHALO
	getav[spriteid].myspawner temp
	ifg temp -1
	{
		geta[temp].x x
		settspr[].tsprx x
		geta[temp].y y
		settspr[].tspry y
	}
break

case SHOP
	getactorvar[spriteid].hitag picnum
	ife character 1 ife picnum HBOMBAMMO set picnum 9137
	settspr[THISACTOR].tsprpicnum picnum 
	set y tiledata[picnum].ysize
	ifg y tiledata[picnum].xsize
	set y tiledata[picnum].xsize
	
	add y tiledata[picnum].yoffset
	
	ifg y 36 set y 36
	ifl y 20 set y 20
	
	set x 1024
	div x y
	
	settspr[].tsprxrepeat x
	settspr[].tspryrepeat x
	
	ife picnum APPLE 
	{
		settspr[THISACTOR].tsprxrepeat 16
		settspr[THISACTOR].tspryrepeat 16
		settspr[THISACTOR].tsprpal 7
	}
	
break

case QUESTITEM

	getactorvar[spriteid].hitag picnum
	settspr[THISACTOR].tsprpicnum picnum
break

case QUESTSPRITE

	getav[spriteid].htg5 picnum
	ifn picnum -1 
	{
		settspr[].tsprpicnum picnum
		set my 1024
		set y tiledata[picnum].ysize
		div my y
		settspr[].tsprxrepeat my
		settspr[].tspryrepeat my
		gettspr[].tsprz mz
		sub mz 1024
		settspr[].tsprz mz
		
	}
break

case DEMONOVA
	ifvarand sprite[spriteid].cstat 8
	ife upside YES
	{
		gettspr[].tsprz mz
		sub mz 2048
		settspr[].tsprz mz
	}
break

case 3585
case 3593
case 3594
case 3596
case 3608
case 3614
case 3619
case 3620
case 3623
case 3627
case 3638
case 3639
case 3640
case 3641
case 3665
case 3667
case 3668
case 3669
case 3670
case 3671
case 3672
case 5086
case 5087
case 5088
case 5091
case 5093
case 7176 case 7228 case 7329
gettspr[THISACTOR].tsprpal pal
ifvare pal 4
{
	//gettspr[THISACTOR].tsprowner spriteid
	//setactor[spriteid].htflags 1
	settspr[THISACTOR].tsprcstat 130
}
break

case VINES
case GOODRIFT
	gettspr[].tsprx x
	ifg player[].posx x add x 32 else sub x 32
	gettspr[].tspry y
	ifg player[].posy y add y 32 else sub y 32
	settspr[].tspry y
	settspr[].tsprx x
break

case ARCHON
	ife actorvar[spriteid].savedpicnum 666
	{
		set temp timer
		modvar temp 3
		ife temp 0
		settspr[].tsprpal 96
		rand mx 96 sub mx 48 add mx sprite[spriteid].x
		settspr[].tsprx mx
		rand my 96 sub my 48 add my sprite[spriteid].y
		settspr[].tspry my
	}
break

case HAMMERTRAIL
	getav[spriteid].myspawner temp
	ifn temp -1
	{
		geta[temp].x x
		geta[temp].y y
		ifl player[].posx x add x 32 else sub x 32
		ifl player[].posy y add y 32 else sub y 32
		settspr[].tspry y
		settspr[].tsprx x
	}
break

case STUCKARROW
case WALLARROW
	getav[spriteid].peractor4 temp
	ife temp STUCKSPEAR settspr[].tsprpicnum STUCKSPEAR
break

case VERTARROW
	getav[spriteid].peractor4 temp
	ife temp VERTSPEAR settspr[].tsprpicnum VERTSPEAR
break

endswitch

ifvarn spriteid -1
{
	getav[spriteid].burning temp
	getav[spriteid].aura tempb
	ifl tempb 0 mul tempb -1
	gettspr[].tsprpal pal
	ifvarl temp 0 // ifn actorvar[spriteid].htg0 -1
	settspr[spriteid].tsprpal 1
	else
	ifg temp 0 
	ifn pal 4
	{
		ifvarand tempb 64 nullop else
		{
			settspr[].tsprpal 96
			ifg sprite[spriteid].extra 1
			settspr[].tsprshade -50
		}
	}
	ife actorvar[spriteid].monstatus 1
	{
		ife actorvar[spriteid].droptile MONSOUL
		{
			set temp player[].player_par
			modvar temp 15
			ife temp 0 settspr[].tsprpal 110
		}
		else
		ifg actorvar[spriteid].group 0
		{
			set temp player[].player_par
			modvar temp 15
			ife temp 0 settspr[].tsprpal 118
		}
	}
	
	getactorvar[spriteid].aura temp
	ifvarl temp 0 mulvar temp -1
	ifvarand temp 4 // invisible aura
	{
		ifvare player[screenpeek].heat_on YES settspr[THISACTOR].tsprcstat 0
		else
		{
			displayrandvar tempb 3
			ifvare tempb 0
			settspr[THISACTOR].tsprcstat 2
			else
			settspr[THISACTOR].tsprcstat 514
		}
	}
	
	ifn actorvar[spriteid].cursed 0
	ife actorvar[spriteid].monstatus 1
	ifn tspr[].tsprpal 4
	{
		settspr[].tsprpal 85
		settspr[].tsprshade -10
	}
	
	// ifvare actorvar[spriteid].peractor6 666
	// {
		// subvar picnum 7000
		// settspr[THISACTOR].tsprpicnum picnum
	// }

	
	ifvarn actorvar[spriteid].mtype 0
	ifvarg picnum 5251 ifvarl picnum 5356
	{
		settspr[THISACTOR].tsprxrepeat 64
		settspr[THISACTOR].tspryrepeat 56
	}
	
	ifvare actorvar[spriteid].command 32768
	ifvarg actorvar[spriteid].burning -1
	{
		gettspr[THISACTOR].tsprpal pal
		ifvarn pal 4
		{
			getactor[spriteid].z z
			subvar z 2048		
			setvarvar temp timer
			setvarvar tempb spriteid
			ifvarand tempb 1 addvar tempb 4096
			addvarvar temp tempb
			shiftvarl temp 6
			sin tempb temp
			shiftvarr tempb 4	
			subvarvar z tempb
			settspr[THISACTOR].tsprz z	
		}
	}
	ifvare actorvar[spriteid].command 65536
	{
	  setvarvar mx camerax
	  setvarvar my cameray
	  subvarvar mx sprite[spriteid].x
	  subvarvar my sprite[spriteid].y
	  getangle angvar mx my
	  settspr[THISACTOR].tsprang angvar
	  settspr[THISACTOR].tsprcstat 16
	}
	
}

endevent

onevent EVENT_INVENTORY

ifvarg endlevel 0 setvar RETURN -1

endevent

onevent EVENT_INVENTORYLEFT

setvar RETURN -1
setplayer[THISACTOR].invdisptime 0
ifvare player[THISACTOR].firstaid_amount 0
//ifvare player[THISACTOR].steroids_amount 0
// ifvare ppods 0
ifvare player[THISACTOR].holoduke_amount 0
ifvare player[THISACTOR].jetpack_amount 0
ifvare player[THISACTOR].heat_amount 0
ifvare player[THISACTOR].boot_amount 0
break
//  break if no inventory or else the following loop will be infinite

/*
ifvare player[THISACTOR].boot_amount 0
{
	setvar temp 0
	ifvarg LEVEL 0 ifvarl LEVEL 4 ifvarand scroll 1 setvar temp 1 else
	ifvarg LEVEL 3 ifvarl LEVEL 7 ifvarand scroll 2 setvar temp 1 else
	ifvarg LEVEL 6 ifvarl LEVEL 10 ifvarand scroll 4 setvar temp 1
	ifvare temp 0 break
	//  break if no inventory or else the following loop will be infinite
}
*/

getplayer[THISACTOR].inven_icon invicon
subvar invicon 1
ifvarl invicon 0 setvar invicon 5
setvar temp 0
whilevarn temp 1 // loop stops when valid choice found
{
	switch invicon
	case 0
	// ifvarg LEVEL 0 ifvarl LEVEL 4 ifvarand scroll 1 setvar temp 1 else
	// ifvarg LEVEL 3 ifvarl LEVEL 7 ifvarand scroll 2 setvar temp 1 else
	// ifvarg LEVEL 6 ifvarl LEVEL 10 ifvarand scroll 4 setvar temp 1
	break
	case 1
	ifvarg player[THISACTOR].firstaid_amount 0
		setvar temp 1
	break
	case 3
	ifvarg player[THISACTOR].holoduke_amount 0
		setvar temp 1
	break
	case 4
	ifvarg player[THISACTOR].jetpack_amount 0
		setvar temp 1
	break
	case 5
	ifvarg player[THISACTOR].heat_amount 0
		setvar temp 1
	break
	
	endswitch
	ifvare temp 0
	{
		subvar invicon 1
		ifvare invicon 2 setvar invicon 1 // steroids not a valid selection
		ifvarl invicon 0 setvar invicon 5
	}
}

setplayer[THISACTOR].inven_icon invicon
setvar invmsg 78
endevent

onevent EVENT_INVENTORYRIGHT

setvar RETURN -1
setplayer[THISACTOR].invdisptime 0
ifvare player[THISACTOR].firstaid_amount 0
//ifvare player[THISACTOR].steroids_amount 0
// ifvare ppods 0
ifvare player[THISACTOR].holoduke_amount 0
ifvare player[THISACTOR].jetpack_amount 0
ifvare player[THISACTOR].heat_amount 0
ifvare player[THISACTOR].boot_amount 0
break
//  break if no inventory or else the following loop will be infinite

/*
ifvare player[THISACTOR].boot_amount 0
{
	setvar temp 0
	ifvarg LEVEL 0 ifvarl LEVEL 4 ifvarand scroll 1 setvar temp 1 else
	ifvarg LEVEL 3 ifvarl LEVEL 7 ifvarand scroll 2 setvar temp 1 else
	ifvarg LEVEL 6 ifvarl LEVEL 10 ifvarand scroll 4 setvar temp 1
	ifvare temp 0 break
	//  break if no inventory or else the following loop will be infinite
}
*/
getplayer[THISACTOR].inven_icon invicon
addvar invicon 1
ifvare invicon 2 setvar invicon 3 // steroids not a valid selection
ifvarg invicon 5 setvar invicon 0
setvar temp 0
whilevarn temp 1 // loop stops when valid choice found
{
	switch invicon
	case 0
	// ifvarg LEVEL 0 ifvarl LEVEL 4 ifvarand scroll 1 setvar temp 1 else
	// ifvarg LEVEL 3 ifvarl LEVEL 7 ifvarand scroll 2 setvar temp 1 else
	// ifvarg LEVEL 6 ifvarl LEVEL 10 ifvarand scroll 4 setvar temp 1
	break
	case 1
	ifvarg player[THISACTOR].firstaid_amount 0
		setvar temp 1
	break
	case 3
	ifvarg player[THISACTOR].holoduke_amount 0
		setvar temp 1
	break
	case 4
	ifvarg player[THISACTOR].jetpack_amount 0
		setvar temp 1
	break
	case 5
	ifvarg player[THISACTOR].heat_amount 0
		setvar temp 1
	break
	endswitch
	ifvare temp 0
	{
		addvar invicon 1
		ifvare invicon 2 setvar invicon 3 // steroids not a valid selection
		ifvarg invicon 5 setvar invicon 0
	}
}

setplayer[THISACTOR].inven_icon invicon
setvar invmsg 78

endevent

onevent EVENT_QUICKKICK

ifvarg barbshield 0 setvar RETURN -1

ifvarn camerasprite -1
{
	ifvarand actorvar[camerasprite].monstflags 2 nullop else
	{ setvar RETURN -1 break }
}

endevent

gamevar saferand 0 0
onevent EVENT_SOUND

ifg cheatscreen 0 { ifn RETURN ARCHLAUGH set RETURN -1 break }

switch RETURN

case FLY_BY
	ife logo_on YES
	set RETURN ARCHROAM2
break

case DUKE_REWARD
	ife character 1
	set RETURN BARBNICE
break

case NITEVISION_ONOFF
	ifand player[].gm 4 nullop else set RETURN MENU_SELECT
break

case EXITMENUSOUND
	ifand player[].gm 1 set RETURN MENU_OUT
break

case PISTOL_BODYHIT
	ifand player[].gm 1 set RETURN MENU_SELECT
break

case KICK_HIT 

	ifand player[].gm 1 set RETURN MENU_CHANGE 
	else
	{
		ife ARROWHACK YES nullop else
		{
			set RETURN -1
			ifn player[].quick_kick 0 nullop else
			{
				ifsound SMACK1 break
				ifsound SMACK2 break
				ifsound SMACK3 break
				ifsound SMACK4 break
				ifsound SMACK5 break
			}
			set RETURN SMACK2
			// rand saferand 4
			// ife saferand 0 set RETURN SMACK1 else
			// ife saferand 1 set RETURN SMACK2 else
			// ife saferand 2 set RETURN SMACK3 else
			// ife saferand 3 set RETURN SMACK4 else
			// ife saferand 4 set RETURN SMACK5
		}
	}
break

case DUKE_KILLED1 
case DUKE_KILLED2  
	ife character 1
	set RETURN BARBDETH1
break
case DUKE_KILLED3 
	ife character 1
	set RETURN BARBDETH2
break
case DUKE_KILLED4
	ife character 1
	set RETURN BARBDETH4
break
case DUKE_KILLED5
case DUKE_DEAD
	ife character 1
	set RETURN BARBDETH3
break
case FOUNDJONES
	ife character 1
	set RETURN -1
break
case JEDRIK_VICTORY
	ife twuwuv YES
	set RETURN TWUWUV
break
case DAY2DIE
	ifand player[].gm 1
	set RETURN GUTSGLORY
break
endswitch


endevent



