
state sawon
setvar WEAPON0_SHOOTS SPIDERBITE
setvar WEAPON0_SHOTSPERBURST 3
setvar WEAPON0_FLAGS 268
ends

state sawoff
setvar WEAPON0_SHOOTS KNEE
setvar WEAPON0_SHOTSPERBURST 0
setvar WEAPON0_FLAGS 292
ends

state inithelp

setvar newtip YES
setvar helpcount HELPTICS
globalsound SECRETSND
savegamevar fintips
savegamevar fintips2

ends

state affirmcharacter
// used as a safety in case the player is reentering a map with vars set from other character

ife character 0
{
	setplayer[THISACTOR].runspeed RUNNINGSPEED	
	setvar WEAPON0_TOTALTIME 14
	setvar WEAPON0_FLAGS 292
	setvar WEAPON0_FIREDELAY 7
	setvar WEAPON0_SHOOTS KNEE
	ifvare gotsaw 1 state sawon
	setvar WEAPON1_SHOOTS SHOTGUN
	setvar WEAPON1_TOTALTIME 30
	setvar WEAPON1_FIREDELAY 4
	setvar WEAPON1_FLAGS 1024
	setvar WEAPON1_SPAWN SHOTGUNSHELL
	setvar WEAPON1_FIRESOUND SHOTGUN_FIRE
	setvar WEAPON1_SOUND2SOUND SHOTCOCK2
	setvar WEAPON1_RELOADSOUND1 -1
	setvar WEAPON1_RELOADSOUND2 -1
	setvar WEAPON1_SHOTSPERBURST 7
		
	setvar WEAPON2_SHOOTS DBSHOT
	setvar WEAPON2_TOTALTIME 16
	setvar WEAPON2_FIREDELAY 4
	setvar WEAPON2_SPAWNTIME 24
	setvar WEAPON2_FLAGS 1024
	setvar WEAPON2_SPAWN SHOTGUNSHELL
	setvar WEAPON2_FIRESOUND DB_FIRE
	setvar WEAPON2_SOUND2SOUND -1
	setvar WEAPON2_RELOADSOUND1 4
	setvar WEAPON2_RELOADSOUND2 5
	setvar WEAPON2_SHOTSPERBURST 15
	setvar WEAPON2_CLIP 2
	setvar WEAPON2_RELOAD 50
		
	setvar WEAPON3_SHOOTS CHAINGUN
	setvar WEAPON3_TOTALTIME 12
	setvar WEAPON3_FIREDELAY 2
	setvar WEAPON3_FLAGS 73812
	setvar WEAPON3_SPAWN NEWSHELL
	setvar WEAPON3_FIRESOUND MINIGUN_FIRE
	setvar WEAPON3_SOUND2SOUND 0
	setvar WEAPON3_RELOADSOUND1 EJECT_CLIP
	setvar WEAPON3_RELOADSOUND2 INSERT_CLIP
	setvar WEAPON3_SHOTSPERBURST 1
	setvar WEAPON3_CLIP 0
	setvar WEAPON3_RELOAD 0
	
	setvar WEAPON4_FIREDELAY 4
	ifvarand WEAPON4_FLAGS 256
	xorvar WEAPON4_FLAGS 256
	setvar WEAPON4_SHOOTS RPG
	setvar WEAPON4_FIRESOUND RPG_SHOOT
	
	setvar WEAPON5_SHOOTS HEAVYHBOMB
	
	setvar WEAPON6_SHOOTS BFGPROJ
	setvar WEAPON6_TOTALTIME 40
	setvar WEAPON6_FIREDELAY 16
	setvar WEAPON6_FLAGS 2
	setvar WEAPON6_SPAWN 0
	setvar WEAPON6_FIRESOUND SHRINKER_FIRE
	setvar WEAPON6_SOUND2SOUND 0
	setvar WEAPON6_RELOADSOUND1 EJECT_CLIP
	setvar WEAPON6_RELOADSOUND2 INSERT_CLIP
	setvar WEAPON6_SHOTSPERBURST 1
	setvar WEAPON6_SELECTSOUND BFG_CHANGE
	setvar WEAPON6_INITIALSOUND BFG_FIRE
	

	setvar WEAPON7_SHOOTS FIREBEAM
	setvar WEAPON7_FIRESOUND -1
	setvar WEAPON7_TOTALTIME 4
	setvar WEAPON7_FIREDELAY 2
	setvar WEAPON7_FLAGS 65536
	setvar WEAPON7_FLASHCOLOR 255
	setvar WEAPON7_SHOTSPERBURST 0
	setvar WEAPON7_INITIALSOUND -1
	setvar WEAPON7_SOUND2TIME 0
	setvar WEAPON7_SOUND2SOUND -1
	setvar WEAP7MODE 0
	
	setvar WEAPON9_SELECTSOUND SELECT_WEAPON
	setvar WEAPON9_TOTALTIME 8
	setvar WEAPON9_SHOTSPERBURST 3
	setvar WEAPON9_FIREDELAY 3
	setvar WEAPON9_SHOOTS FREEZEBLAST
	setvar WEAPON9_FIRESOUND CAT_FIRE
	setvar WEAPON9_FLASHCOLOR 16744576
	setvar WEAPON9_INITIALSOUND CAT_FIRE
	
	ife ammoupgrade NO
	{
		setp[].max_ammo_amount 1 MAXPISTOLAMMO
		setp[].max_ammo_amount 2 MAXSHOTGUNAMMO
		setp[].max_ammo_amount 3 MAXCHAINGUNAMMO
		setp[].max_ammo_amount 4 MAXRPGAMMO
		setp[].max_ammo_amount 5 MAXHANDBOMBAMMO
		setp[].max_ammo_amount 6 MAXSHRINKERAMMO
		setp[].max_ammo_amount 7 MAXFLAMEAMMO
		setp[].max_ammo_amount 8 MAXTRIPBOMBAMMO
		setp[].max_ammo_amount 9 MAXPLASMAAMMO
		setp[].max_ammo_amount 11 MAXSMGAMMO
		set maxsaw MAXSAWFUEL
	}
	else
	{
		set temp MAXPISTOLAMMO, mul temp 2
		setp[].max_ammo_amount 1 temp
		set temp MAXSHOTGUNAMMO, mul temp 2
		setp[].max_ammo_amount 2 temp
		set temp MAXCHAINGUNAMMO, mul temp 2
		setp[].max_ammo_amount 3 temp
		set temp MAXRPGAMMO, mul temp 2
		setp[].max_ammo_amount 4 temp
		set temp MAXHANDBOMBAMMO, mul temp 2
		setp[].max_ammo_amount 5 temp
		set temp MAXSHRINKERAMMO, mul temp 2
		setp[].max_ammo_amount 6 temp
		set temp MAXFLAMEAMMO, mul temp 2
		setp[].max_ammo_amount 7 temp
		set temp MAXTRIPBOMBAMMO, mul temp 2
		setp[].max_ammo_amount 8 temp
		set temp MAXPLASMAAMMO, mul temp 2
		setp[].max_ammo_amount 9 temp
		set temp MAXSMGAMMO, mul temp 2
		setp[].max_ammo_amount 11 temp
		set maxsaw MAXSAWFUEL
		mul maxsaw 2
	}
}
else
{
	setplayer[THISACTOR].runspeed RUNNINGSPEED2
	setvar WEAPON0_TOTALTIME 14
	setvar WEAPON0_FLAGS 256
	setvar WEAPON0_FIREDELAY 6
	setvar WEAPON0_SHOOTS PUNCHPROJ
	setvar WEAPON0_SHOTSPERBURST 0

	setvar WEAPON1_SHOOTS SWORDPROJ
	setvar WEAPON1_TOTALTIME 16
	setvar WEAPON1_FIREDELAY 5
	setvar WEAPON1_FLAGS 65792
	setvar WEAPON1_SPAWN -1
	setvar WEAPON1_FIRESOUND -1
	setvar WEAPON1_SOUND2SOUND -1
	setvar WEAPON1_RELOADSOUND1 -1
	setvar WEAPON1_RELOADSOUND2 -1
	setvar WEAPON1_SHOTSPERBURST 1
	
	setvar WEAPON2_SHOOTS KNEE
	setvar WEAPON2_TOTALTIME 24
	setvar WEAPON2_FIREDELAY 6
	setvar WEAPON2_FLAGS 65792
	setvar WEAPON2_SPAWN -1
	setvar WEAPON2_FIRESOUND -1
	setvar WEAPON2_SOUND2SOUND -1
	setvar WEAPON2_RELOADSOUND1 -1
	setvar WEAPON2_RELOADSOUND2 -1
	setvar WEAPON2_SHOTSPERBURST 2
	setvar WEAPON2_CLIP 0
	setvar WEAPON2_RELOAD 0
	
	setvar WEAPON3_SHOOTS SWORDPROJ
	setvar WEAPON3_TOTALTIME 22
	setvar WEAPON3_FIREDELAY 8
	setvar WEAPON3_FLAGS 65792
	setvar WEAPON3_SPAWN -1
	setvar WEAPON3_FIRESOUND -1
	setvar WEAPON3_SOUND2SOUND -1
	setvar WEAPON3_RELOADSOUND1 -1
	setvar WEAPON3_RELOADSOUND2 -1
	setvar WEAPON3_SHOTSPERBURST 1
	setvar WEAPON3_CLIP 0
	setvar WEAPON3_RELOAD 0
	
	setvar WEAPON4_FIREDELAY 16
	orvar WEAPON4_FLAGS 256
	setvar WEAPON4_SHOOTS ARROWPROJ
	set roxq 0
	
	setvar WEAPON5_SHOOTS SMALLSMOKE
	
	setvar WEAPON6_SHOOTS SWORDPROJ
	setvar WEAPON6_TOTALTIME 16
	setvar WEAPON6_FIREDELAY 8
	setvar WEAPON6_FLAGS 256
	setvar WEAPON6_SPAWN -1
	setvar WEAPON6_FIRESOUND -1
	setvar WEAPON6_INITIALSOUND -1
	setvar WEAPON6_SOUND2SOUND -1
	setvar WEAPON6_RELOADSOUND1 -1
	setvar WEAPON6_RELOADSOUND2 -1
	setvar WEAPON6_SHOTSPERBURST 3
	setvar WEAPON6_SELECTSOUND -1
	
	setvar WEAPON7_TOTALTIME 10
	setvar WEAPON7_FIREDELAY 6
	setvar WEAPON7_SHOOTS REDSHOCK
	setvar WEAPON7_SHOTSPERBURST 3
	setvar WEAPON7_FIRESOUND -1

	setvar WEAPON9_SELECTSOUND CANSEL
	setvar WEAPON9_TOTALTIME 60 // 70
	setvar WEAPON9_FIREDELAY 31 // 41
	setvar WEAPON9_SHOOTS CANNONBALL2
	setvar WEAPON9_FIRESOUND SHOOT_CANNON
	setvar WEAPON9_FLASHCOLOR 24575
	setvar WEAPON9_INITIALSOUND FUSE
	setvar WEAPON9_SHOTSPERBURST 1

	ife ammoupgrade NO
	{
		setplayer[THISACTOR].max_ammo_amount 1 31
		setplayer[THISACTOR].max_ammo_amount 2 31
		setplayer[THISACTOR].max_ammo_amount 3 31
		setplayer[THISACTOR].max_ammo_amount 4 31
		setplayer[THISACTOR].max_ammo_amount 6 30
		setplayer[THISACTOR].max_ammo_amount 7 MAXGAUNTAMMO
		setplayer[THISACTOR].max_ammo_amount 9 15
	}
	else
	{
		setplayer[THISACTOR].max_ammo_amount 1 61
		setplayer[THISACTOR].max_ammo_amount 2 61
		setplayer[THISACTOR].max_ammo_amount 3 61
		setplayer[THISACTOR].max_ammo_amount 4 61
		setplayer[THISACTOR].max_ammo_amount 6 60
		setplayer[THISACTOR].max_ammo_amount 7 400
		setplayer[THISACTOR].max_ammo_amount 9 30
	}	
}

ends

state switchcharacter

	// if infinite ammo active, must restore regular amounts before switching chars
	ifvarand pow 65536 // infinite ammo
	ife tempammo[14] YES
	{
		set sawammo tempammo[0]
		set grenades tempammo[12]
		set eyeballammo tempammo[13]
		set temp 1
		whilevarn temp 12
		{
			ifn temp 10
			setp[].ammo_amount temp tempammo[temp]
			add temp 1
		}
	}
	
	setplayer[THISACTOR].weapon_pos -9
	ifvare character 0
	{
		setvar character 1
		ifvarand fintips 134217728 nullop else
		{
			setvar currtip2 0 setvar currtip 134217728
			orvar fintips 134217728
			state inithelp
		}
		setplayer[THISACTOR].runspeed RUNNINGSPEED2
		
		setvar WEAPON0_TOTALTIME 14
		setvar WEAPON0_FLAGS 256
		setvar WEAPON0_FIREDELAY 6
		setvar WEAPON0_SHOOTS PUNCHPROJ
		setvar WEAPON0_SHOTSPERBURST 0

		setvar WEAPON1_SHOOTS SWORDPROJ
		setvar WEAPON1_TOTALTIME 16
		setvar WEAPON1_FIREDELAY 5
		setvar WEAPON1_FLAGS 65792
		setvar WEAPON1_SPAWN -1
		setvar WEAPON1_FIRESOUND -1
		setvar WEAPON1_SOUND2SOUND -1
		setvar WEAPON1_RELOADSOUND1 -1
		setvar WEAPON1_RELOADSOUND2 -1
		setvar WEAPON1_SHOTSPERBURST 1
		
		setvar WEAPON2_SHOOTS KNEE
		setvar WEAPON2_TOTALTIME 24
		setvar WEAPON2_FIREDELAY 6
		setvar WEAPON2_FLAGS 65792
		setvar WEAPON2_SPAWN -1
		setvar WEAPON2_FIRESOUND -1
		setvar WEAPON2_SOUND2SOUND -1
		setvar WEAPON2_RELOADSOUND1 -1
		setvar WEAPON2_RELOADSOUND2 -1
		setvar WEAPON2_SHOTSPERBURST 2
		setvar WEAPON2_CLIP 0
		setvar WEAPON2_RELOAD 0
		
		setvar WEAPON3_SHOOTS SWORDPROJ
		setvar WEAPON3_TOTALTIME 22
		setvar WEAPON3_FIREDELAY 8
		setvar WEAPON3_FLAGS 65792
		setvar WEAPON3_SPAWN -1
		setvar WEAPON3_FIRESOUND -1
		setvar WEAPON3_SOUND2SOUND -1
		setvar WEAPON3_RELOADSOUND1 -1
		setvar WEAPON3_RELOADSOUND2 -1
		setvar WEAPON3_SHOTSPERBURST 1
		setvar WEAPON3_CLIP 0
		setvar WEAPON3_RELOAD 0
		
		setvar WEAPON4_FIREDELAY 16
		orvar WEAPON4_FLAGS 256
		setvar WEAPON4_SHOOTS ARROWPROJ
		set roxq 0
		
		setvar WEAPON5_SHOOTS SMALLSMOKE
		
		setvar WEAPON6_SHOOTS SWORDPROJ
		setvar WEAPON6_TOTALTIME 16
		setvar WEAPON6_FIREDELAY 8
		setvar WEAPON6_FLAGS 256
		setvar WEAPON6_SPAWN -1
		setvar WEAPON6_FIRESOUND -1
		setvar WEAPON6_INITIALSOUND -1
		setvar WEAPON6_SOUND2SOUND -1
		setvar WEAPON6_RELOADSOUND1 -1
		setvar WEAPON6_RELOADSOUND2 -1
		setvar WEAPON6_SHOTSPERBURST 3
		setvar WEAPON6_SELECTSOUND -1
		
		setvar WEAPON7_TOTALTIME 10
		setvar WEAPON7_FIREDELAY 6
		setvar WEAPON7_SHOOTS REDSHOCK
		setvar WEAPON7_SHOTSPERBURST 3
		setvar WEAPON7_FIRESOUND -1

		setvar WEAPON9_SELECTSOUND CANSEL
		setvar WEAPON9_TOTALTIME 60 // 70
		setvar WEAPON9_FIREDELAY 31 // 41
		setvar WEAPON9_SHOOTS CANNONBALL2
		setvar WEAPON9_FIRESOUND SHOOT_CANNON
		setvar WEAPON9_FLASHCOLOR 24575
		setvar WEAPON9_INITIALSOUND FUSE
		setvar WEAPON9_SHOTSPERBURST 1
	
		ife ammoupgrade NO
		{
			setplayer[THISACTOR].max_ammo_amount 1 31
			setplayer[THISACTOR].max_ammo_amount 2 31
			setplayer[THISACTOR].max_ammo_amount 3 31
			setplayer[THISACTOR].max_ammo_amount 4 31
			setplayer[THISACTOR].max_ammo_amount 6 30
			setplayer[THISACTOR].max_ammo_amount 7 MAXGAUNTAMMO
			setplayer[THISACTOR].max_ammo_amount 9 15
		}
		else
		{
			setplayer[THISACTOR].max_ammo_amount 1 61
			setplayer[THISACTOR].max_ammo_amount 2 61
			setplayer[THISACTOR].max_ammo_amount 3 61
			setplayer[THISACTOR].max_ammo_amount 4 61
			setplayer[THISACTOR].max_ammo_amount 6 60
			setplayer[THISACTOR].max_ammo_amount 7 400
			setplayer[THISACTOR].max_ammo_amount 9 30
		}	
		setarray jedrikweaps[11] 0
		ife jedrikweaps[player[].curr_weapon] 0 setplayer[THISACTOR].curr_weapon 0
		ifrnd 128 sound BARBINPOS else sound BARBTAUNT4
		setarray dukeweaps[1] player[].gotweapon 1
		setarray dukeweaps[2] player[].gotweapon 2
		setarray dukeweaps[3] player[].gotweapon 3
		setarray dukeweaps[4] player[].gotweapon 4
		// setarray dukeweaps[5] player[].gotweapon 5
		setarray dukeweaps[6] player[].gotweapon 6
		setarray dukeweaps[7] player[].gotweapon 7
		// setarray dukeweaps[8] player[].gotweapon 8
		setarray dukeweaps[9] player[].gotweapon 9
		setarray dukeweaps[11] player[].gotweapon 11
		
		setp[].gotweapon 1 jedrikweaps[1]
		setp[].gotweapon 2 jedrikweaps[2]
		setp[].gotweapon 3 jedrikweaps[3]
		setp[].gotweapon 4 jedrikweaps[4]
		// setp[].gotweapon 5 jedrikweaps[5]
		setp[].gotweapon 6 jedrikweaps[6]
		setp[].gotweapon 7 jedrikweaps[7]
		// setp[].gotweapon 8 jedrikweaps[8]
		setp[].gotweapon 9 jedrikweaps[9]
		setp[].gotweapon 11 jedrikweaps[11]
		
		setarray dukeammo[1] player[].ammo_amount 1
		setarray dukeammo[2] player[].ammo_amount 2
		setarray dukeammo[3] player[].ammo_amount 3
		setarray dukeammo[4] player[].ammo_amount 4
		// setarray dukeammo[5] player[].ammo_amount 5
		setarray dukeammo[6] player[].ammo_amount 6
		setarray dukeammo[7] player[].ammo_amount 7
		// setarray dukeammo[8] player[].ammo_amount 8
		setarray dukeammo[9] player[].ammo_amount 9
		setarray dukeammo[11] player[].ammo_amount 11
		
		setp[].ammo_amount 1 jedrikammo[1]
		setp[].ammo_amount 2 jedrikammo[2]
		setp[].ammo_amount 3 jedrikammo[3]
		setp[].ammo_amount 4 jedrikammo[4]
		// setp[].ammo_amount 5 jedrikammo[5]
		setp[].ammo_amount 6 jedrikammo[6]
		setp[].ammo_amount 7 jedrikammo[7]
		// setp[].ammo_amount 8 jedrikammo[8]
		setp[].ammo_amount 9 jedrikammo[9]
		setp[].ammo_amount 11 jedrikammo[11]
	}
	else
	ifvare character 1
	{
		setvar character 0
		setplayer[THISACTOR].runspeed RUNNINGSPEED
		
		setvar WEAPON0_TOTALTIME 14
		setvar WEAPON0_FLAGS 292
		setvar WEAPON0_FIREDELAY 7
		setvar WEAPON0_SHOOTS KNEE
		ifvare gotsaw 1 state sawon
		setvar WEAPON1_SHOOTS SHOTGUN
		setvar WEAPON1_TOTALTIME 30
		setvar WEAPON1_FIREDELAY 4
		setvar WEAPON1_FLAGS 1024
		setvar WEAPON1_SPAWN SHOTGUNSHELL
		setvar WEAPON1_FIRESOUND SHOTGUN_FIRE
		setvar WEAPON1_SOUND2SOUND SHOTCOCK2
		setvar WEAPON1_RELOADSOUND1 -1
		setvar WEAPON1_RELOADSOUND2 -1
		setvar WEAPON1_SHOTSPERBURST 7
			
		setvar WEAPON2_SHOOTS DBSHOT
		setvar WEAPON2_TOTALTIME 16
		setvar WEAPON2_FIREDELAY 4
		setvar WEAPON2_SPAWNTIME 24
		setvar WEAPON2_FLAGS 1024
		setvar WEAPON2_SPAWN SHOTGUNSHELL
		setvar WEAPON2_FIRESOUND DB_FIRE
		setvar WEAPON2_SOUND2SOUND -1
		setvar WEAPON2_RELOADSOUND1 4
		setvar WEAPON2_RELOADSOUND2 5
		setvar WEAPON2_SHOTSPERBURST 15
		setvar WEAPON2_CLIP 2
		setvar WEAPON2_RELOAD 50
			
		setvar WEAPON3_SHOOTS CHAINGUN
		setvar WEAPON3_TOTALTIME 12
		setvar WEAPON3_FIREDELAY 2
		setvar WEAPON3_FLAGS 73812
		setvar WEAPON3_SPAWN NEWSHELL
		setvar WEAPON3_FIRESOUND MINIGUN_FIRE
		setvar WEAPON3_SOUND2SOUND 0
		setvar WEAPON3_RELOADSOUND1 EJECT_CLIP
		setvar WEAPON3_RELOADSOUND2 INSERT_CLIP
		setvar WEAPON3_SHOTSPERBURST 1
		setvar WEAPON3_CLIP 0
		setvar WEAPON3_RELOAD 0
		
		setvar WEAPON4_FIREDELAY 4
		ifvarand WEAPON4_FLAGS 256
		xorvar WEAPON4_FLAGS 256
		setvar WEAPON4_SHOOTS RPG
		setvar WEAPON4_FIRESOUND RPG_SHOOT
		
		setvar WEAPON5_SHOOTS HEAVYHBOMB
		
		setvar WEAPON6_SHOOTS BFGPROJ
		setvar WEAPON6_TOTALTIME 40
		setvar WEAPON6_FIREDELAY 16
		setvar WEAPON6_FLAGS 2
		setvar WEAPON6_SPAWN 0
		setvar WEAPON6_FIRESOUND SHRINKER_FIRE
		setvar WEAPON6_SOUND2SOUND 0
		setvar WEAPON6_RELOADSOUND1 EJECT_CLIP
		setvar WEAPON6_RELOADSOUND2 INSERT_CLIP
		setvar WEAPON6_SHOTSPERBURST 1
		setvar WEAPON6_SELECTSOUND BFG_CHANGE
		setvar WEAPON6_INITIALSOUND BFG_FIRE
		

		setvar WEAPON7_SHOOTS FIREBEAM
		setvar WEAPON7_FIRESOUND -1
		setvar WEAPON7_TOTALTIME 4
		setvar WEAPON7_FIREDELAY 2
		setvar WEAPON7_FLAGS 65536
		setvar WEAPON7_FLASHCOLOR 255
		setvar WEAPON7_SHOTSPERBURST 0
		setvar WEAPON7_INITIALSOUND -1
		setvar WEAPON7_SOUND2TIME 0
		setvar WEAPON7_SOUND2SOUND -1
		setvar WEAP7MODE 0
		
		setvar WEAPON9_SELECTSOUND SELECT_WEAPON
		setvar WEAPON9_TOTALTIME 8
		setvar WEAPON9_SHOTSPERBURST 3
		setvar WEAPON9_FIREDELAY 3
		setvar WEAPON9_SHOOTS FREEZEBLAST
		setvar WEAPON9_FIRESOUND CAT_FIRE
		setvar WEAPON9_FLASHCOLOR 16744576
		setvar WEAPON9_INITIALSOUND CAT_FIRE
		
		ife ammoupgrade NO
		{
			setp[].max_ammo_amount 1 MAXPISTOLAMMO
			setp[].max_ammo_amount 2 MAXSHOTGUNAMMO
			setp[].max_ammo_amount 3 MAXCHAINGUNAMMO
			setp[].max_ammo_amount 4 MAXRPGAMMO
			setp[].max_ammo_amount 5 MAXHANDBOMBAMMO
			setp[].max_ammo_amount 6 MAXSHRINKERAMMO
			setp[].max_ammo_amount 7 MAXFLAMEAMMO
			setp[].max_ammo_amount 8 MAXTRIPBOMBAMMO
			setp[].max_ammo_amount 9 MAXPLASMAAMMO
			setp[].max_ammo_amount 11 MAXSMGAMMO
			set maxsaw MAXSAWFUEL
		}
		else
		{
			set temp MAXPISTOLAMMO, mul temp 2
			setp[].max_ammo_amount 1 temp
			set temp MAXSHOTGUNAMMO, mul temp 2
			setp[].max_ammo_amount 2 temp
			set temp MAXCHAINGUNAMMO, mul temp 2
			setp[].max_ammo_amount 3 temp
			set temp MAXRPGAMMO, mul temp 2
			setp[].max_ammo_amount 4 temp
			set temp MAXHANDBOMBAMMO, mul temp 2
			setp[].max_ammo_amount 5 temp
			set temp MAXSHRINKERAMMO, mul temp 2
			setp[].max_ammo_amount 6 temp
			set temp MAXFLAMEAMMO, mul temp 2
			setp[].max_ammo_amount 7 temp
			set temp MAXTRIPBOMBAMMO, mul temp 2
			setp[].max_ammo_amount 8 temp
			set temp MAXPLASMAAMMO, mul temp 2
			setp[].max_ammo_amount 9 temp
			set temp MAXSMGAMMO, mul temp 2
			setp[].max_ammo_amount 11 temp
			set maxsaw MAXSAWFUEL
			mul maxsaw 2
		}

		randvar temp 3
		ifvare temp 0 sound BONUS_SPEECH1 else
		ifvare temp 1 sound BONUS_SPEECH2 else
		ifvare temp 2 sound BONUS_SPEECH3 else
		sound BONUS_SPEECH4
		ife dukeweaps[player[].curr_weapon] 0 setplayer[THISACTOR].curr_weapon 0
		setarray jedrikweaps[1] player[].gotweapon 1
		setarray jedrikweaps[2] player[].gotweapon 2
		setarray jedrikweaps[3] player[].gotweapon 3
		setarray jedrikweaps[4] player[].gotweapon 4
		// setarray jedrikweaps[5] player[].gotweapon 5
		setarray jedrikweaps[6] player[].gotweapon 6
		setarray jedrikweaps[7] player[].gotweapon 7
		// setarray jedrikweaps[8] player[].gotweapon 8
		setarray jedrikweaps[9] player[].gotweapon 9
		setarray jedrikweaps[11] 0 // player[].gotweapon 11
		
		setp[].gotweapon 1 dukeweaps[1]
		setp[].gotweapon 2 dukeweaps[2]
		setp[].gotweapon 3 dukeweaps[3]
		setp[].gotweapon 4 dukeweaps[4]
		// setp[].gotweapon 5 dukeweaps[5]
		setp[].gotweapon 6 dukeweaps[6]
		setp[].gotweapon 7 dukeweaps[7]
		// setp[].gotweapon 8 dukeweaps[8]
		setp[].gotweapon 9 dukeweaps[9]
		setp[].gotweapon 11 dukeweaps[11]
		
		setarray jedrikammo[1] player[].ammo_amount 1
		setarray jedrikammo[2] player[].ammo_amount 2
		setarray jedrikammo[3] player[].ammo_amount 3
		setarray jedrikammo[4] player[].ammo_amount 4
		// setarray jedrikammo[5] player[].ammo_amount 5
		setarray jedrikammo[6] player[].ammo_amount 6
		setarray jedrikammo[7] player[].ammo_amount 7
		// setarray jedrikammo[8] player[].ammo_amount 8
		setarray jedrikammo[9] player[].ammo_amount 9
		setarray jedrikammo[11] 0 // player[].ammo_amount 11
		
		setp[].ammo_amount 1 dukeammo[1]
		setp[].ammo_amount 2 dukeammo[2]
		setp[].ammo_amount 3 dukeammo[3]
		setp[].ammo_amount 4 dukeammo[4]
		// setp[].ammo_amount 5 dukeammo[5]
		setp[].ammo_amount 6 dukeammo[6]
		setp[].ammo_amount 7 dukeammo[7]
		// setp[].ammo_amount 8 dukeammo[8]
		setp[].ammo_amount 9 dukeammo[9]
		setp[].ammo_amount 11 dukeammo[11]
	}
	ife VOLUME 0 
	{
		set temp NO
		ife LEVEL 0 set temp YES
		ife LEVEL 15 set temp YES
		ife temp YES
		{
			setp[].gotweapon 1 YES
			setp[].gotweapon 2 YES
			ife character 1 setp[].gotweapon 4 YES else
			setp[].gotweapon 11 YES
		}
	}
	ife firstcharchange YES
	{
		set firstcharchange NO
		ifl player[].ammo_amount 1 10 setp[].ammo_amount 1 10
		ifl player[].ammo_amount 2 10 setp[].ammo_amount 2 10
		ife character 1 
		{
			ifl player[].ammo_amount 4 10 setp[].ammo_amount 4 10
			// also check for game tips on those weapons
			ifvarand fintips 268435456 nullop else
			{	          
				setvar currtip2 0 setvar currtip 268435456
				orvar fintips 268435456
				state inithelp
			}
			ifvarand fintips 536870912 nullop else
			{
				setvar currtip2 0 setvar currtip 536870912
				orvar fintips 536870912
				state inithelp
			}
			ifvarand fintips 1073741824 nullop else
            {
	          setvar currtip2 0 setvar currtip 1073741824
	          orvar fintips 1073741824
	          state inithelp
            }
		}
		ife character 0 
		{
			ifl player[].ammo_amount 11 32 setp[].ammo_amount 11 32
			
		}
	}

ends

state eventloadactorstate

getactor[THISACTOR].xvel droptile
setactor[THISACTOR].xvel 0
getactor[THISACTOR].yvel activator
setactor[THISACTOR].yvel 0
getactor[THISACTOR].zvel group
getactor[THISACTOR].extra monstflags
getactor[THISACTOR].owner aura
ifvare aura -1 setvar aura 0 else
{
	mulvar aura -1
	setactor[THISACTOR].owner -1
}

ifvarl monstflags 1 
	setvar monstflags 0

setactor[THISACTOR].extra 0

ends

state FIND_CENTER_OF_SECTOR
// also calculates area of sector

whilevarvarn currwall numwalls
{
	getwall[wallpoint].x WALLX
	getwall[wallpoint].y WALLY
	ifvare currwall 0 
	{
		setvarvar SMALLX WALLX setvarvar BIGX WALLX 
		setvarvar SMALLY WALLY setvarvar BIGY WALLY
	}
	else
	{
		ifvarvarl WALLX SMALLX setvarvar SMALLX WALLX else
		ifvarvarg WALLX BIGX setvarvar BIGX WALLX
		
		ifvarvarl WALLY SMALLY setvarvar SMALLY WALLY else
		ifvarvarg WALLY BIGY setvarvar BIGY WALLY
	}
	
	addvar wallpoint 1
	addvar currwall 1
}

subvarvar BIGX SMALLX
subvarvar BIGY SMALLY
ifvarl BIGX 0 mulvar BIGX -1
ifvarl BIGY 0 mulvar BIGY -1
setvarvar x BIGX
shiftvarr x 3
setvarvar y BIGY
shiftvarr y 3
setvarvar area x
mulvarvar area y
shiftvarr area 12

ifvarg area 320 setvar area 320

ends

state spawngrass
	getsector[sect].wallptr wallpoint // get the firstwall of the sector
	// ifvare wallpoint -1 break
	getsector[sect].wallnum numwalls // get the number of walls in the sector
	setvar currwall 0
	state FIND_CENTER_OF_SECTOR
	// mx, my is the center point
	// BIGX is the x length of sector
	// BIGY is the y length of sector
		
	setvar saveit 0
	//addvarvar attempts area
	whilevarvarn saveit area
	{
		randvarvar tempb BIGX
		randvarvar tempc BIGY
		setvarvar x SMALLX
		setvarvar y SMALLY
		addvarvar x tempb
		addvarvar y tempc
		updatesector x y tempd
		ifvarvare sect tempd
		{
			addvar saveit 1
			addvar grasscount 1
			randvar tempd 2
			addvar tempd 66
			espawnvar tempd
			ifvarn sector[sect].floorslope 0
			{
				getflorzofslope sect x y z
				ifrnd 128
				setactor[RETURN].cstat 2 else
				setactor[RETURN].cstat 6	
			}
			else 
			{
				getflorzofslope sect x y z
				// getsector[sect].floorz z
				setactor[RETURN].cstat 16
			}
			setsprite RETURN x y z
			changespritestat RETURN 1
			setactor[RETURN].xrepeat 12
			randvar tempc 4 addvar tempc 12
			setactor[RETURN].yrepeat tempc
			randvar angvar 2047
			setactor[RETURN].ang angvar
			setactor[RETURN].shade sector[sect].floorshade
		}
		ifvarvarl saveit area
		addvar saveit 1
		ifvarg grasscount 7000 setvarvar saveit area
	}
	
ends

state onetimeonly

ife LEVEL 24 break

setvar sect 0
whilevarvarn sect NUMSECTORS
{
	getsector[sect].floorpicnum picnum
	switch picnum 
		case 3589 case 3590 case 3598
		case 3618 case 3621 case 3713 
		case 530
		state spawngrass
		break
	endswitch
	addvar sect 1
	ifvarg grasscount 6000 setvarvar sect NUMSECTORS // failsafe
}
addlogvar grasscount
//addlogvar attempts
setvar grasscount 0
//setvar attempts 0

ends

state convertbarbitems
ifmultiplayer break
					
setvar spriteid 0
whilevarn spriteid 16384
{
	ifvarn sprite[spriteid].statnum 1024
	ifvare sprite[spriteid].pal 0
	{
		getactor[spriteid].picnum picnum
		switch picnum
		
		case FIRSTGUNSPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum NECROSWORD setactor[spriteid].xrepeat 40 setactor[spriteid].yrepeat 40 }
		break
		case AMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum SWORDAMMO setactor[spriteid].xrepeat 12 setactor[spriteid].yrepeat 12 }
		break
		case SHOTGUNSPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum HAMMERSPRITE setactor[spriteid].xrepeat 40 setactor[spriteid].yrepeat 40 }
		break
		case SHOTGUNAMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum HAMMERAMMO setactor[spriteid].xrepeat 16 setactor[spriteid].yrepeat 16 }
		break
		case CHAINGUNSPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum AXESPRITE setactor[spriteid].xrepeat 40 setactor[spriteid].yrepeat 40 }
		break
		case BATTERYAMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum AXEAMMO setactor[spriteid].xrepeat 16 setactor[spriteid].yrepeat 16 }
		break
		case RPGSPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum GAUNTSPRITE setactor[spriteid].xrepeat 24 setactor[spriteid].yrepeat 24 setactor[spriteid].pal 0 }
		break
		case RPGAMMO 
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum QUIVERSPRITE setactor[spriteid].xrepeat 24 setactor[spriteid].yrepeat 24 }
			setactor[spriteid].pal 18
		break
		case GRENADEAMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum GAUNTAMMO setactor[spriteid].xrepeat 18 setactor[spriteid].yrepeat 18 }
		break
		case BFGSPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum SWORDSPRITE setactor[spriteid].xrepeat 32 setactor[spriteid].yrepeat 28 }
		break
		case BFGAMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum ARMSWORDAMMO setactor[spriteid].xrepeat 12 setactor[spriteid].yrepeat 12 }
		break
		case FLAMETHROWERSPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum GAUNTSPRITE setactor[spriteid].xrepeat 24 setactor[spriteid].yrepeat 24 seta[spriteid].pal 3 }
		break
		case FLAMEAMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum QUIVERSPRITE setactor[spriteid].xrepeat 24 setactor[spriteid].yrepeat 24 }
			setactor[spriteid].pal 10 	
		break
		case PLASMASPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum CANNONSPRITE setactor[spriteid].xrepeat 24 setactor[spriteid].yrepeat 24 }
		break
		
		case PLASMAAMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum CANNONAMMO setactor[spriteid].xrepeat 32 setactor[spriteid].yrepeat 32 }
		break
		
		case REVOLVERSPRITE
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum BOWSPRITE setactor[spriteid].xrepeat 26 setactor[spriteid].yrepeat 24 }
		break
		
		case REVOLVERAMMO
			ifvare actorvar[spriteid].hitag 6 setactor[spriteid].cstat 32768 
			else { setactor[spriteid].picnum QUIVERSPRITE setactor[spriteid].xrepeat 24 setactor[spriteid].yrepeat 24 }
			setactor[spriteid].pal 12
		break
		
		endswitch
	}
	addvar spriteid 1
}

ends

state projhitscan

getactor[THISACTOR].ang angvar
getactor[THISACTOR].zvel zvel
getactor[THISACTOR].xvel xvel
shiftvarl zvel 14
ifvare xvel 0 setvar xvel 1
divvarvar zvel xvel
cos mycos angvar
sin mysin angvar
hitscan sprite[THISACTOR].x sprite[THISACTOR].y sprite[THISACTOR].z sprite[THISACTOR].sectnum mycos mysin zvel hitsector hitwall hitsprite hitx hity hitz clipmask // 4294901809

ifn hitsprite -1
{
	ife sprite[hitsprite].picnum BATGUNNER setav[hitsprite].target2 THISACTOR else
	ife sprite[hitsprite].picnum EVILKNIGHT setav[hitsprite].target2 THISACTOR else
	ife sprite[hitsprite].picnum HELLHOUND setav[hitsprite].target2 THISACTOR else
	ifspawnedby APLAYER
	ife sprite[hitsprite].picnum CYCLORD setav[hitsprite].target2 THISACTOR
}

ends

/*
state paltoRGB
switch pal
case 0 case 3 case 12 case 5 case 17
setvar xvel 255 setvar yvel 255 setvar zvel 255 break
case 1 setvar xvel 64 setvar yvel 64 setvar zvel 192 break
case 21
case 2 setvar xvel 192 setvar yvel 64 setvar zvel 64 break
case 4 setvar xvel 0 setvar yvel 0 setvar zvel 0 break
case 6 setvar xvel 0 setvar yvel 192 setvar zvel 0 break
case 23
case 7 setvar xvel 160 setvar yvel 160 setvar zvel 0 break
case 11
case 8 setvar xvel 64 setvar yvel 192 setvar zvel 64 break
case 24
case 10 setvar xvel 128 setvar yvel 32 setvar zvel 32 break
case 13 setvar xvel 184 setvar yvel 184 setvar zvel 224 break
case 14 setvar xvel 32 setvar yvel 128 setvar zvel 32 break
case 15 setvar xvel 192 setvar yvel 96 setvar zvel 0 break
case 16 setvar xvel 32 setvar yvel 32 setvar zvel 128 break
case 18 setvar xvel 128 setvar yvel 0 setvar zvel 128 break
case 25 setvar xvel 192 setvar yvel 192 setvar zvel 255 break
default setvar xvel 128 setvar yvel 128 setvar zvel 128 break
endswitch

setactor[RETURN].xvel xvel // R value
setactor[RETURN].yvel yvel // G value
setactor[RETURN].zvel zvel // B value
ends


state genericlightsettings
ifactor APLAYER
{
	getplayer[THISACTOR].posz z
	setactor[RETURN].z z
} else
{
	// lights don't take sector shade
	getactor[THISACTOR].htflags tempe
	orvar tempe 4
	setactor[THISACTOR].htflags tempe
}
setactor[RETURN].cstat tempd // 0=high priority, 2=lower, 512=lowest
// setactor[RETURN].hitag intensity // light radius
setactor[RETURN].xrepeat 2
setactor[RETURN].yrepeat 2
setactorvar[RETURN].myspawner THISACTOR
getactor[THISACTOR].picnum picnum
setactorvar[RETURN].mtype picnum
setactorvar[RETURN].peractor6 peractor6 // flicker amount
setactor[RETURN].picnum SECTOREFFECTOR
changespritestat RETURN 3
setactorvar[RETURN].command 1 // flags it as a spawned light, subject to culling
ends

state spawnpointlight

ifvarn rendmode 4 break

getactor[THISACTOR].x x
getactor[THISACTOR].y y
getactor[THISACTOR].z z
updatesectorz x y z sect
ifvarl sect 0 break
ifvarg sect 4095 break

espawn SMALLSMOKE
setactor[RETURN].lotag 49 // 49 is point light, 50 is spotlight
setactorvar[RETURN].lotag 49
setactorvar[RETURN].peractor1 tempc
state paltoRGB
state genericlightsettings

ends

state spawnspotlight

ifvarn rendmode 4 break

espawn SMALLSMOKE
setactor[RETURN].lotag 50 // 49 is point light, 50 is spotlight
setactorvar[RETURN].lotag 50
state paltoRGB
state genericlightsettings
setactor[RETURN].shade shade // this controls the width of the spotlight
setactor[RETURN].extra temp // this controls the horiz of the spotlight
ends
*/

state dodgecheck
	ifn target2 -1
	{
		ife peractor4 0
		{
			ife sprite[target2].statnum 4
			{
				set peractor4 10
				geta[target2].x x
				geta[target2].y y
				sub x sprite[].x
				sub y sprite[].y
				getangle dodgeang x y
				add dodgeang 512
				ifrnd 128 sub dodgeang 1024
			}
			
		}
		set target2 -1
	}
ends

defstate randomaura

ifvarl aura 0 break

  randvar temp 12 // 13
  switch temp
  case 0 // SPEED
    ifactornotstayput
	setvar aura -1
    else setvar aura -256
  break 
  case 1 setvar aura -2 break // MIGHT
  case 3 
		 // setvar aura -4 break // INVIS
		 setvar aura -8192 break // SIDEGUN EYEBALLS
  case 4 setvar aura -8 break // LIGHTNING
  case 5 setvar aura -16 break // POISON
  case 6 setvar aura -32 break // FREEZING
  case 7 setvar aura -64 break // BURNING
  case 8 setvar aura -128 break // VAMPIRE
  case 9 setvar aura -256 break // TOUGH
  case 10  // MAGNET
	ifn sprite[].picnum DRONE
	ifn sprite[].picnum KAMIKAZE
	ifn sprite[].picnum LIZTROOP
	ifn sprite[].picnum DRAGON
	ifn sprite[].picnum DRACARRY
	setvar aura -512
	else
	setvar aura -8
  break 
  case 11 // REVENGE BOLT
	ifn activator 0 setvar aura -1 else
	setvar aura -1024 
  break 
  // case 12 // TELEPORT
    // ifactornotstayput 
	// ifn sprite[].picnum DRONE
	// ifn sprite[].picnum KAMIKAZE
	// ifn sprite[].picnum WIZARD
	// ifn sprite[].picnum DRAGON
	// ifn sprite[].picnum DRACARRY
	// ife activator 0	
		// setvar aura -2048
	// else setvar aura -256 
  // break
  case 12 // DOUBLE SHOTS
	ifn sprite[].picnum HELLHOUND
	ifn sprite[].pal 88 // charghing caco
	ifn sprite[].picnum DRONE
	ifn sprite[].picnum KAMIKAZE
	ifn sprite[].picnum GOLEM
	ifn sprite[].picnum LIZMAN
		setvar aura -4096 
	else setvar aura -2
  break 
  endswitch
ends

state getfloorz
   getactor[THISACTOR].x x
   getactor[THISACTOR].y y
   updatesector x y mysector
   ifvare mysector -1
   getactor[THISACTOR].sectnum mysector
   getflorzofslope mysector x y z
ends

state calczdist

	geta[target].z zdist

	sub zdist sprite[].z 
	geta[target].picnum picnum
	
	set digz sprite[target].yrepeat
	mul digz tiledata[picnum].ysize
	div digz 2
	// digz is proportional to height of enemy sprite
	
	geta[].picnum picnum
	set mz sprite[].yrepeat
	mul mz tiledata[picnum].ysize
	div mz 2
	// mz is now proportional to height of THISACTOR
	
	ifg mz digz // aim down
	{
		sub mz digz
		
		mul mz 5
		div mz 2
		
		add zdist mz
	}
	// note there is no need to aim up at taller enemies

/*
	getactor[THISACTOR].z z
	ifactor CYBERDEMON ifp phigher subvar z 4096

	getactor[target].z mz
	setvarvar zdist mz
	subvarvar zdist z // zdist now holds how far up or down you would have to go from THISACTOR's position to get to target's position
	getactor[target].picnum temp
	ifvare temp SPIDER2 addvar zdist 6144
	ifvare temp ETTIN addvar zdist 4096
	ifvare temp HORNET addvar zdist 6144
	ifvare temp GOLEM ifvarl sprite[temp].xrepeat 33 addvar zdist 6144


	ifvarl zdist -8192 subvar zdist 4096 // aim for the head when shooting up into windows
*/

ends

state hitscan_targetprep

	ife target -1 { set zdist 0 break }
	
	geta[target].z zdist
	
	sub zdist sprite[].z 
	geta[target].picnum picnum
	
	set mz sprite[target].yrepeat
	mul mz tiledata[picnum].ysize
	// mz is proportional to height of enemy sprite
	
	geta[].picnum picnum
	set temp sprite[].yrepeat
	mul temp tiledata[picnum].ysize
	// temp is now proportional to height of THISACTOR
	
	ifg temp mz // aim down
	{
		sub temp mz
		
		mul temp 5
		div temp 2
		
		add zdist temp
	}
	// note there is no need to aim up at taller enemies
	shiftl zdist 8
	ldist temp THISACTOR target
	ifvare temp 0 setvar temp 1 
	divvarvar zdist temp

ends

state projzveltotarg
// don't use this unless target is already set

	ife target -1 break
	
	geta[target].z zdist
	sub zdist sprite[RETURN].z 
	
	geta[target].picnum picnum
	
	set mz tiledata[picnum].ysize
	mul mz sprite[target].yrepeat
	
	shiftl mz 1
	
	// mz is proportional to height of enemy sprite
	
	sub zdist mz

	mul zdist sprite[RETURN].xvel
	ldist tempe THISACTOR target
	ifvare tempe 0 setvar tempe 1 
	divvarvar zdist tempe
	
	seta[RETURN].zvel zdist

ends

state moveatangvar

	ife sprite[].xvel 0 break

	cos xvel angvar
	sin yvel angvar
	shiftr xvel 8
	shiftr yvel 8
	movesprite THISACTOR xvel yvel 0 CLIPMASK0 RETURN

ends

state strafechecklong
	
	geta[].ang angvar
	sub angvar 256
	geta[].z z
	sub z 8192
	cos mycos angvar
	sin mysin angvar
	hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz 16777281
	
	set tempb sprite[].x
	sub tempb hitx
	mul tempb tempb
	set my sprite[].y
	sub my hity
	mul my my
	add tempb my
	sqrt tempb tempb
	
	add angvar 512
	cos mycos angvar
	sin mysin angvar
	hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz 16777281
	set tempc sprite[].x
	sub tempc hitx
	mul tempc tempb
	set my sprite[].y
	sub my hity
	mul my my
	add tempc my
	sqrt tempc tempc
	
	ifl tempc tempb ifl tempc 1024
	{
		set angvar sprite[].ang
		sub angvar 512
		state moveatangvar
	}
	else
	{
		ifle tempb tempc ifl tempb 1024
		{
			set angvar sprite[].ang
			add angvar 512
			state moveatangvar
		}
	}

ends


state randtraj // randomize the trajectory of a projectile

randvar tempb 16
getactor[THISACTOR].ang angvar
ifrnd 128 addvarvar angvar tempb else subvarvar angvar tempb
setactor[THISACTOR].ang angvar
randvar tempb 512
getactor[THISACTOR].zvel zdist
ifrnd 128 addvarvar zdist tempb else subvarvar zdist tempb
setactor[THISACTOR].zvel zdist
ends

state randtraj2 // randomize the trajectory of a projectile

randvar tempb 24
getactor[THISACTOR].ang angvar
ifrnd 128 addvarvar angvar tempb else subvarvar angvar tempb
setactor[THISACTOR].ang angvar
randvar tempb 768
getactor[THISACTOR].zvel zdist
ifrnd 128 addvarvar zdist tempb else subvarvar zdist tempb
setactor[THISACTOR].zvel zdist
ends

defstate gradualturn

ifvare target -1 setvarvar target player[THISACTOR].i

getactor[target].x mx
getactor[target].y my

sub mx sprite[].x
sub my sprite[].y
getangle angvar mx my
getactor[THISACTOR].ang tempb
getincangle tempd angvar tempb

ifvarl tempd 33 ifvarg tempd -33
{
	setactor[THISACTOR].ang angvar
	ifvarvare target player[THISACTOR].i setvar target -1
	break
}

ifvarl tempd 0 
	addvar tempb 32
else
ifvarg tempd 0 
	subvar tempb 32

setactor[THISACTOR].ang tempb

ifvarvare target player[THISACTOR].i setvar target -1

ends

state gradturn2

	ife target -1 break
	geta[target].x mx
	geta[target].y my

	sub mx sprite[].x
	sub my sprite[].y
	getangle angvar mx my
	getactor[].ang tempb
	getincangle tempd angvar tempb

	ifvarl tempd 33 ifvarg tempd -33
	{
		seta[].ang angvar
		break
	}

	ifvarl tempd 0 
		addvar tempb 32
	else
	ifvarg tempd 0 
		subvar tempb 32

	setactor[THISACTOR].ang tempb

ends

state minodie
	getactor[THISACTOR].z z
	subvar z 2048
	setactor[THISACTOR].z z
	espawn TRANSPORTERSTAR
	espawn SOUNDMAKER
	setactorvar[RETURN].peractor1 TELEPORTER
	
	ife myminotaur THISACTOR set myminotaur -1
	// ifvare peractor1 0
	// setplayervar[myspawner].myminotaur -1
	killit
ends

state getoutofwater

	getactor[THISACTOR].ang angvar
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	setvarvar mx x
	addvar mx 1024
	rotatepoint x y mx y angvar mx my
	updatesector mx my mysector
	
	ifvarn mysector -1
	ifn sector[mysector].lotag 1
	{
		getflorzofslope mysector mx my mz
		getactor[THISACTOR].z z
		subvarvar z mz
		ifvarl z 16384 // 8192
		{
			setsprite THISACTOR mx my mz
			sound SURFACE
		}
	}
	else
	{
		add angvar 1024
		rotatepoint x y mx y angvar mx my
		updatesector mx my mysector
		ifvarn mysector -1
		ifn sector[mysector].lotag 1
		{
			getflorzofslope mysector mx my mz
			getactor[THISACTOR].z z
			subvarvar z mz
			ifvarl z 16384 // 8192
			{
				setsprite THISACTOR mx my mz
				sound SURFACE
			}
		}
	}
ends

state motionblur

break 
// this state is disabled because it no longer works as intended due to renderer changes

getactor[THISACTOR].htdispicnum picnum
addvar picnum 7000
espawnvar picnum
setactor[RETURN].pal sprite[THISACTOR].pal
setactorvar[RETURN].lotag sprite[THISACTOR].xrepeat
setactorvar[RETURN].hitag sprite[THISACTOR].yrepeat
getactor[THISACTOR].cstat temp
ifvarand temp 1 xorvar temp 1 ifvarand temp 256 xorvar temp 256
ifvare monstatus 1 ifvarg sprite[THISACTOR].xvel 32
{
	getincangle tempb player[THISACTOR].ang sprite[THISACTOR].ang
    ifvarg tempb 100 orvar temp 4
}
orvar temp 514
setactor[RETURN].cstat temp
setactorvar[RETURN].peractor6 666
setactor[RETURN].mdflags 16
ends

state checksight

getactor[THISACTOR].z z
subvar z 8192
setactor[THISACTOR].z z
getactor[target].z mz
subvar mz 8192
setactor[target].z mz
canseespr THISACTOR target tempc
addvar z 8192
setactor[THISACTOR].z z
addvar mz 8192
setactor[target].z mz
ifvarn command 3 ifvare tempc 0 setvar target -1 // command 3 means ignore visibility
ifvarn target -1
	ife actorvar[target].monstatus 2
	{
		ifn sprite[target].picnum DETHNITEBONES
		ifn sprite[target].picnum SKELKNIGHTBONES
			set target -1
	}

// ifvarn target -1
// {
// 	getactor[target].cstat temp
// 	ifvarand temp 256 nullop else setvar target -1
// 	ifvarand temp 32768 setvar target -1
// }

ends

state jib_sounds

ifrnd SWEARFREQUENCY
{
  randvar temp 19
  switch temp
  case 0 globalsound JIBBED_ACTOR12 break
  case 1 globalsound JIBBED_ACTOR1 break
  case 2 globalsound JIBBED_ACTOR9 break
  case 3 globalsound JIBBED_ACTOR14 break
  case 4 globalsound SMACKED break
  case 5 globalsound JIBBED_ACTOR2 break
  case 6 globalsound MDEVSPEECH break
  case 7 globalsound JIBBED_ACTOR5 break
  case 8 globalsound JIBBED_ACTOR11 break
  case 9 globalsound JIBBED_ACTOR13 break
  case 10 globalsound JIBBED_ACTOR3 break
  case 11 globalsound JIBBED_ACTOR8 break
  case 12 globalsound PIECEOFCAKE break
  case 13 globalsound JIBBED_ACTOR4 break
  case 14 globalsound JIBBED_ACTOR10 break
  case 15 globalsound JIBBED_ACTOR15 break
  case 16 globalsound JIBBED_ACTOR7 break
  case 17 globalsound RESTPIECES break
  case 18 globalsound DUKE_GETWEAPON2 break
  case 19 globalsound GUTSGLORY break
  endswitch
}
ends

state barbjib_sounds

ifrnd SWEARFREQUENCY
{
  espawn SOUNDMAKER
  randvar temp 11
  addvar temp 704
  setactorvar[RETURN].peractor1 temp
  setactorvar[RETURN].countvar 13
  setactorvar[RETURN].monstatus 4
}

ends


state facetarget

ifvarn htg0 -1 ifl burning 0 break // frozen
ifactor DRAGON break

ifvare target -1 setvarvar target player[THISACTOR].i

ife sprite[target].statnum 1024
{
	setvar target -1 
	setvar targetlock 0
	break 
}

ife actorvar[target].monstatus 2
{
	setvar target -1 
	setvar targetlock 0
	break 
}

geta[target].x mx
geta[target].y my
sub mx sprite[].x
sub my sprite[].y
getangle angvar mx my
setactor[THISACTOR].ang angvar

ifvarvare target player[THISACTOR].i setvar target -1

ends

state npcfacetarget

ifvare target -1 break
ifvare sprite[target].statnum 1024
{
	setvar target -1 
	break 
}
ifvare actorvar[target].monstatus 2
{
	ifn sprite[target].picnum DETHNITEBONES
	ifn sprite[target].picnum SKELKNIGHTBONES
	{
		setvar target -1
		break
	}
}

getactor[target].x mx
getactor[target].y my
getactor[THISACTOR].x x
getactor[THISACTOR].y y
subvarvar mx x
subvarvar my y
getangle angvar mx my
setactor[THISACTOR].ang angvar

ends

state faceaway

ifvarn htg0 -1 ifl burning 0 break // frozen
getplayer[THISACTOR].posx mx
getplayer[THISACTOR].posy my
getactor[THISACTOR].x x
getactor[THISACTOR].y y
subvarvar mx x
subvarvar my y
getangle angvar mx my
ifnotmoving nullop else
ifvare cursed 0
addvar angvar 1024
setactor[THISACTOR].ang angvar

ends

state portforward

getactor[THISACTOR].ang angvar
getactor[THISACTOR].x x
getactor[THISACTOR].y y
setvarvar mx x
addvar mx 4096
rotatepoint x y mx y angvar mx my

updatesector mx my temp
ifvarn temp -1
{
	spawn DIAMONDPORT // TRANSPORTERSTAR
	getactor[THISACTOR].z mz
	setsprite THISACTOR mx my mz
	sound TELEPORTER
	spawn DIAMONDPORT // TRANSPORTERSTAR

}

ends

state portbackward

getactor[THISACTOR].ang angvar
add angvar 1024
getactor[THISACTOR].x x
getactor[THISACTOR].y y
setvarvar mx x
addvar mx 4096
rotatepoint x y mx y angvar mx my

updatesector mx my temp
ifvarn temp -1
{
	spawn DIAMONDPORT // TRANSPORTERSTAR
	getactor[THISACTOR].z mz
	setsprite THISACTOR mx my mz
	sound TELEPORTER
	spawn DIAMONDPORT // TRANSPORTERSTAR
}
else 
{
	state portforward
	ifn target -1
	{
		geta[target].x mx
		geta[target].y my
		sub mx sprite[].x
		sub my sprite[].y
		getangle angvar mx my
		setactor[].ang angvar
	}
}

ends

state knockplayer

getplayer[THISACTOR].posx mx
getplayer[THISACTOR].posy my
getactor[THISACTOR].x x
getactor[THISACTOR].y y
subvarvar mx x
subvarvar my y
getangle angvar mx my

getactor[THISACTOR].ang temp

getincangle tempb angvar temp
ifvarl tempb 0 mulvar tempb -1
ifvarg tempb 128 break

soundonce THUMPIN

getplayer[THISACTOR].i playersprite
getactorvar[playersprite].dodge temp
ifactor GOLEM
addvar temp 32768 else
ifactor LUGLORD add temp 16384
else addvar temp 6144
setactorvar[playersprite].dodge temp
setactorvar[playersprite].dodgeang angvar
randvar tempb 5
addvar tempb 8
setactor[playersprite].htextra tempb
setactor[playersprite].htang dodgeang
setactor[playersprite].htpicnum SHOTSPARK1
setactor[playersprite].htowner THISACTOR
ifspritepal 10
{
	getactorvar[playersprite].burning temp
	addvar temp 52
	setactorvar[playersprite].burning temp
}
// sound



// verify that you are facing the player; if not, break
// add to the player's knockback var
// set his knockback angle to the ang calculated to face him
// cause him some damage and palfrom

ends

state blowupcrack
headspritestat spriteid 6
whilevarn spriteid -1
{
	getactor[spriteid].picnum picnum
	switch picnum
	case CRACK1 case CRACK2 case CRACK3 case CRACK4
	dist xydist THISACTOR spriteid
	ifl xydist 1025
		seta[].yvel 0
	break
	default break
	endswitch
	nextspritestat spriteid spriteid
}
ends

state barbquakecheck
// xydist is distance to player

setvarvar temp barbquake
subvar temp 767
ifvarvarg xydist temp ifvarvarl xydist barbquake
{
	setvar tempb 17408
	subvarvar tempb barbquake
	// shiftvarr tempb 8
	divvar tempb 320
	ifvarl tempb 8 setvar tempb 8
	getactor[THISACTOR].htextra tempc
	addvarvar tempc tempb
	setactor[THISACTOR].htextra tempc
	
	ifvarn sprite[THISACTOR].htpicnum RPG
	setactor[THISACTOR].htpicnum KNEE
	setactor[THISACTOR].htowner player[THISACTOR].i
	setactor[THISACTOR].htang player[THISACTOR].ang

	shiftvarl tempb 8
	setvarvar tempd sprite[THISACTOR].extra
	ifvare tempd 0 setvar tempd 1
	divvarvar tempb tempd
	ifvarg tempb 0
	ifvare monstatus 1
	{
		ifvarl tempb 8 setvar tempb 8
		ifvarg fear 0 setvar fear 0
		subvarvar fear tempb
		ifvarl fear -78 setvar fear -78
	}
	spawn BIGSMOKE
	sound WTIMPACT
	spawn LIGHTNINGAURA
}

ends

defstate activatorstate

setvar spriteid 0
ifactor FLOORPANEL setvar spriteid 16384
whilevarn spriteid 16384
{
	ifvarn sprite[spriteid].statnum 1024
	{
		switch sprite[spriteid].picnum
		
		case ACTIVATOR
		case ACTIVATORLOCKED
		case MASTERSWITCH
			ife sprite[spriteid].lotag activator
			{
				getactor[spriteid].sectnum tempb
				ifvarn tempb -1
				{
					getsector[tempb].lotag tempc
					ifvare tempc 9 { setvar bigmsg 152 setvar bigmsgcount 104 setvar spriteid 16383 } else
					ifvarg tempc 19 ifvarl tempc 30
					{
						setvar bigmsg 152 setvar bigmsgcount 104 
						setvar spriteid 16383	
					}
					ifactor KORAX ifvare bigmsg 152 setvar bigmsgcount 0
				}
			}
		break

		endswitch
	}
	addvar spriteid 1
}

setvar spriteid 0
whilevarn spriteid 16384
{
	ifvarn sprite[spriteid].statnum 1024
	{
		ifvare sprite[spriteid].pal 17
		ifvarvare actorvar[spriteid].lotag activator
		setactorvar[spriteid].lotag 0
		
		switch sprite[spriteid].picnum
		
		case SPAWNER
			ife actorvar[spriteid].mtype 1
			{
				ife actorvar[spriteid].activator activator
				ifl actorvar[spriteid].monstatus 0
					setav[spriteid].initz -1
			}
			else
			ife actorvar[spriteid].lotag activator
			ifg actorvar[spriteid].lotag 1
			setav[spriteid].mtype 1
		break
		
		case HOMEWARP
			ife actorvar[spriteid].activator activator
				setav[spriteid].peractor1 1
			ife actorvar[spriteid].hitag activator
				setav[spriteid].peractor1 2
		break
		
		case ENERGYBALL
			ife actorvar[spriteid].peractor1 0
			ifn actorvar[spriteid].lotag 0
			{
				ifvarvare activator actorvar[spriteid].lotag
				{
					setav[spriteid].peractor1 1
					changespritestat spriteid 1
				}
			}
		break
		
		case KHANNAFIGHT
			ife activator actorvar[spriteid].activator
			ifn sprite[spriteid].pal 21
				setav[spriteid].monstatus 666
		break
		
		case MOVEHERE
			ife activator actorvar[spriteid].lotag
				setav[spriteid].peractor1 1
		break
		
		case TEMPSPRITE
			
			ifvare actorvar[spriteid].peractor1 0
			{
				ifvarvare activator actorvar[spriteid].hitag
				setactorvar[spriteid].peractor1 1
			}
			else
			{
				ifvarvare activator actorvar[spriteid].lotag
				setactorvar[spriteid].peractor1 2
			}
		break
		
		case MOVESHIPCAM
		
			ife activator actorvar[spriteid].activator
			setav[spriteid].activator -1
			
			ife activator actorvar[spriteid].hitag
			ife actorvar[spriteid].lotag 1
			setav[spriteid].hitag 0
		break
		
		
		case QUESTSPRITE
		
			ifvarvare activator actorvar[spriteid].hitag
			{
				setactorvar[spriteid].hitag 0
				setactor[spriteid].cstat 0
			}
			
			ifvarvare activator actorvar[spriteid].command
			{
				ifvare actorvar[spriteid].peractor1 1 // quest started
				{
					// note that it does not check for whether the player has the quest item
					// if the quest is ended this way, no quest item should exist
					getactorvar[spriteid].mtype tempb
					ifvarn Cquests[tempb] 2 // quest not yet complete
					{
						globalsound CQUEST	
						setactorvar[spriteid].peractor1 2
						setarray Cquests[tempb] 2
						setvarvar temp actorvar[spriteid].monstflags
						addvar temp 20
						setvarvar popup temp
						setvar popuptime -1
						// sets popup window to display the quest completion dialogue
						setactor[spriteid].cstat 32768
						operatemasterswitches activator
						operaterespawns activator
						operateactivators activator 0
						setvarvar activator actorvar[spriteid].lotag
						// state activatorstate
						// break
					}
				}
				else
				ifvare actorvar[spriteid].peractor1 2 // quest completed
			 	setactor[spriteid].picnum SMALLSMOKE			
			}
			
		break
		
		case SUPERTOUCHPLATE
			ifvarvare activator actorvar[spriteid].droptile
			setactorvar[spriteid].droptile 0
		break
		
		case SHOOTER
			ifvarvare activator actorvar[spriteid].lotag
			setactorvar[spriteid].mtype 1
		break
		
		case REWARD
			ifvarvare activator actorvar[spriteid].lotag
			setactorvar[spriteid].lotag 0
		break
				
		case SPAWNPOINT
		case SHOP
			ifvarvare actorvar[spriteid].activator activator
			setactorvar[spriteid].activator 0
		break
			
		case MUSICSWITCH
		case REDRIFT
		case TEXTURIZER
			ifvarvare actorvar[spriteid].activator activator
			setactorvar[spriteid].mtype 1
		break
		
		case BOULDER
		case DRACARRY
		case BADKING
			ifvarvare actorvar[spriteid].lotag activator
			setactorvar[spriteid].lotag 0
		break
		
		case GRAVUP
		case GRAVDOWN
			ifn actorvar[spriteid].activator 0
			{
				// ifvarvare actorvar[spriteid].activator lotag
				// {
					// ife actorvar[spriteid].peractor1 0 setav[spriteid].peractor1 1
					// else setav[spriteid].peractor1 0
				// } else
				ifvarvare actorvar[spriteid].activator activator
				{
					ife actorvar[spriteid].peractor1 0 setav[spriteid].peractor1 1
					else setav[spriteid].peractor1 0
				}
			}
		break
		
		case INVULN
		case QUADDAMAGE
		case TIMERUNE
			ife activator actorvar[spriteid].lotag
				setav[spriteid].lotag 0
		break
		
		case KHANNASIPHON	
			ife activator actorvar[spriteid].lotag
			ifn actorvar[spriteid].lotag 0
			{
				setav[spriteid].lotag 0
				changespritestat spriteid 1
			}
			else
			ife activator actorvar[spriteid].hitag
			ife actorvar[spriteid].mtype 0
				setav[spriteid].mtype 1
		break
		
		case SUBTITLE_TRIGGER
			ife activator actorvar[spriteid].activator
				setav[spriteid].mtype 1
		break
		
		case DUKEENDACTOR
			ife activator actorvar[spriteid].activator
				setav[spriteid].peractor1 1
		break
		
		case COFFIN
		ife actorvar[spriteid].activator activator
		ife actorvar[spriteid].peractor1 NO
			setav[spriteid].peractor1 YES
		break
		
		endswitch
	}
	addvar spriteid 1
}

headspritestat spriteid 3
whilevarn spriteid -1 // loop through the SEs
{
	switch sprite[spriteid].lotag
	
	case 60
	
		ifvarvare actorvar[spriteid].hitag activator
		setactorvar[spriteid].mtype 1
	break
	case 61 // color changer SE
	
		ifvarvare activator actorvar[spriteid].hitag
			setactorvar[spriteid].mtype 1
	break
	case 68 // floor or ceiling door that squishes
	
		ifvarvare activator actorvar[spriteid].activator
		{
			ifvare actorvar[spriteid].mtype 0 { setactorvar[spriteid].mtype 1 setactorvar[spriteid].weap 1 } else
			ifvare actorvar[spriteid].mtype 1 setactorvar[spriteid].mtype 2 else
			ifvare actorvar[spriteid].mtype 2 setactorvar[spriteid].mtype 1 else
			ifvare actorvar[spriteid].mtype 3 { setactorvar[spriteid].mtype 2 setactorvar[spriteid].weap 1 } 
		}
	break
	
	case 69
		ifvarvare activator actorvar[spriteid].activator
		setactorvar[spriteid].activator 0
	
	break
	case 70
	
		ifvarvare activator actorvar[spriteid].activator
		ifvare actorvar[spriteid].peractor1 0
			setactorvar[spriteid].peractor1 1
	
	break

	case 77
	case 88
	case 89
		ifvarvare activator actorvar[spriteid].activator
			setactorvar[spriteid].peractor1 1
	break
	
	case 90 // cutscene camera SE
		ifvarvare activator actorvar[spriteid].hitag
		set camerasprite spriteid
	break

	case 92 // weather hazard ice meteors
		ife activator actorvar[spriteid].activator
		{
			ife actorvar[spriteid].peractor1 0
				setav[spriteid].peractor1 1 else
			ife actorvar[spriteid].peractor1 1
				setav[spriteid].peractor1 0
		}
	break
	endswitch
	nextspritestat spriteid spriteid
}

operatemasterswitches activator
operaterespawns activator
operateactivators activator 0

ends

state spawngem

	set saveit gold
	whilevarn saveit 0
	{
		ifvarand pow 262144 ifg LEVEL 16 ifn LEVEL 19
		{
			espawn PALHELM
			seta[RETURN].pal 12
			spawn MEDIUMPOTION
			set saveit 0
		}
		else
		{
			ifge saveit 100
			{
				sub saveit 100
				espawn GEMSPRITE
				screensound DROPGEM
				seta[RETURN].htpicnum AXON
				setav[RETURN].peractor1 1 // do not add to level total
			}
			else
			{
				rand tempc 100
				ifle tempc saveit
				{
					espawn GEMSPRITE
					screensound DROPGEM
					seta[RETURN].htpicnum AXON
					setav[RETURN].peractor1 1 // do not add to level total
				}
				set saveit 0
			}
		}
	}

ends

state directgem

	set saveit gold
	whilevarn saveit 0
	{
		ifge saveit 100
		{
			sub saveit 100
			add stash 1
			screensound DROPGEM
		}
		else
		{
			rand tempc 100
			ifle tempc saveit
			{
				add stash 1
				screensound DROPGEM
				
			}
			set saveit 0
		}
	}

ends

state spawngold

	ifvarand pow 262144 state spawngem // gem farmer pow
	whilevarn gold 0
	{
		ifvarg gold 14
		{
			ifrnd 128 spawn BIGGOLD else
			{
				ifrnd 128 { spawn MEDIUMGOLD spawn SMALLGOLD } else
				{ spawn SMALLGOLD spawn SMALLGOLD spawn SMALLGOLD }
			}
			subvar gold 15
		} else
		ifvarg gold 9
		{
			ifrnd 128 spawn MEDIUMGOLD else
			{ spawn SMALLGOLD spawn SMALLGOLD }
			subvar gold 10
		}
		else
		ifvarg gold 4
		{
			spawn SMALLGOLD
			subvar gold 5
		}
		else
		{
			spawn SMALLGOLD
			// it's impossible to make small change
			setvar gold 0
		}
	}
	setvar gold -1


ends

defstate directgold

	ifvarand pow 262144 state directgem // gem farmer pow
	screensound COINPICKUP3
	add pgold gold
	add globalgold gold
	setvarvar temp foundgold[LEVEL]
	addvarvar temp gold
	setarray foundgold[LEVEL] temp
	set gold -1

ends

defstate specialdeath

ife sprite[].sectnum -1 { al gold al THISACTOR }

ife droptile 1 set droptile 0 else
ifvarg gold 0 
{
	ife cursed 0
		state spawngold
	else 
		state directgold
}

ifvarn activator 0
{
	ifvarn group 0
	{
		ifvarand fintips2 32 nullop else
		{
			setvar currtip2 32 setvar currtip 0
			orvar fintips2 32
			state inithelp
		}
		setvarvar temp mongroup[group]
		ifvarg temp 0 subvar temp 1
		setarray mongroup[group] temp
		ifvare temp 0 state activatorstate
	}
	else
	state activatorstate
}
setvar activator 0
ifactor TCHEST break
ifvarg droptile 10
{
	ifvare droptile 62 { espawn ACCESSCARD  setactor[RETURN].pal 21 } else
	ifvare droptile 63 { espawn ACCESSCARD  setactor[RETURN].pal 23 } else
	{
		espawnvar droptile
		ifvare droptile POWERPOD
		{
			getactor[THISACTOR].z z
			setactor[RETURN].z z // so they don't float too high
		}
		ifvare droptile MONSOUL setactorvar[RETURN].peractor1 1
	}
	setvar droptile -1
}

getactor[THISACTOR].htowner spriteid
ifvare sprite[spriteid].picnum APLAYER
ifvarn sprite[THISACTOR].picnum DRONE
ifvare monstatus 1
ifvare character 0
ifrnd SWEARFREQUENCY
ifrnd 128
{
	ifwasweapon SHOTSPARK1
	ifvarg CURRWEAP 0 ifvarl CURRWEAP 3
	{
		espawn SOUNDMAKER
		randvar temp 7
		ifvare temp 0 setvar tempb BOOMSTICK else
		ifvare temp 1 setvar tempb DIETAUNT else
		ifvare temp 2 setvar tempb LEAVSCAR else
		ifvare temp 3 setvar tempb NEWHOLE else
		ifvare temp 4 setvar tempb WAR_AMBIENCE7 else
		ifvare temp 5 setvar tempb WASTED else
		ifvare temp 6 setvar tempb ENDSEQVOL3SND2 else
		setvar tempb ALLDAY
		setactorvar[RETURN].peractor1 tempb
		setactorvar[RETURN].countvar 13
		setactorvar[RETURN].monstatus 4
	}
	else ifwasweapon BURNING 
	{
		espawn SOUNDMAKER
		setvar tempb CRISPY
		setactorvar[RETURN].peractor1 tempb
		setactorvar[RETURN].countvar 13
		setactorvar[RETURN].monstatus 4
	}
}
setvar monstatus 2 // dead
ife plasmatarg THISACTOR set plasmatarg -1

// ifvarg mval 0
// {
	// setvarvar temp weapscore[CURRWEAP]
	// addvarvar temp mval
	// setarray weapscore[CURRWEAP] temp
	// subvar temp 1
	// ifvarvarg temp weapcap[CURRWEAP]
	// {
		// setvarvar temp weaplevels[CURRWEAP]
		// addvar temp 1
		// setarray weaplevels[CURRWEAP] temp
		// setvarvar temp weapcap[CURRWEAP]
		// switch temp
		// case 0 case 300 setvar tempb 1000 break
		// case 1000 setvar tempb 2500 break
		// case 2500 setvar tempb 5000 break
		// case 5000 setvar tempb 10000 break
		// case 10000 setvar tempb 20000 break
		// case 20000 setvar tempb 50000 break
		// case 50000 setvar tempb 100000 break
		// default setvar tempb 999999 break // something is wrong
		// endswitch
		// setarray weapcap[CURRWEAP] tempb
		// addvar weaptotal 1
		// globalsound WEAPUP
	// }
	// addvarvar xp mval
	// setvar mval 0
// }

ifvare cursed 0
ifvarl aura 0
{
	// turn off your aura(s) on all monsters in range
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ifvarg actorvar[spriteid].aura 0
		{
			dist temp THISACTOR spriteid
			ifvarl temp 8192
			{
				setactorvar[spriteid].aura 0
// 				getactorvar[spriteid].aura tempb
// 				setvarvar tempd aura
// 				mulvar tempd -1
// 				xorvarvar tempb tempd
// 				setactorvar[spriteid].aura tempb
			}
			
		}
		nextspritestat spriteid spriteid
	}
	set temp aura
	abs temp
	ifvarand temp 64 // fire
	{
		iffloordistl 4
		{
			espawn LAVASPAWNER
			setav[RETURN].mtype 2
		}
	}
	
}
abs aura

set temp NO
ifl player[].boot_amount 200 ife shieldupgrade NO set temp YES
ifl player[].boot_amount BOOT_AMOUNT ife shieldupgrade YES set temp YES
ife temp YES
{
	ifvarand aura 4 spawn SHARD else
	ifvarand aura 8 spawn SHARD else
	ifvarand aura 16 spawn SHARD else
	ifvarand aura 32 spawn SHARD else
	ifvarand aura 64 spawn SHARD
}


ifvarand aura 1024 // revenge bolt
ife cursed 0
{
	// setprojectile[NOVAPROJ].workslike 32774
	// setprojectile[NOVAPROJ].bounces 2
	// setprojectile[NOVAPROJ].cstat 384
	// eshoot NOVAPROJ
	// ife target -1 set target player[].i
	// seta[RETURN].extra 40
	// setav[RETURN].target target
	// geta[target].x mx
	// geta[target].y my
	// sub mx sprite[].x
	// sub my sprite[].y
	// getangle angvar mx my
	// seta[RETURN].ang angvar
	// sound PRED_ATTACK
	// setprojectile[NOVAPROJ].workslike 32770
	// setprojectile[NOVAPROJ].bounces 0
	// setprojectile[NOVAPROJ].cstat 128
	
	geta[].z initz
	sub initz 8192
	seta[].z initz
	
	espawn RPG_GUIDED
	ifvarn target -1 setactorvar[RETURN].target target 
	// else
	// setav[RETURN].target player[].i
	sound RPG_SHOOT
	
	add initz 8192
	seta[].z initz
	
	
}

setvar aura 0
ifvarvare scannedsprite THISACTOR setvar scannedsprite -1
ifvarvare bossid THISACTOR 
{
	setvar bossid -1
	ifvarn music2 0
	{
		set music2 0
		starttrackslot musicepisode musictrack
	}
}

ife command 32768 set command 0

ifspritepal 3
{
	ifactor PIGCOP { espawn MONSOUL setactorvar[RETURN].peractor1 1 spritepal 0 } else
	ifactor LIZMAN { espawn MONSOUL setactorvar[RETURN].peractor1 1 spritepal 0 } else
	ifactor LIZTROOP { espawn MONSOUL setactorvar[RETURN].peractor1 1 spritepal 0 }
}
ends

state randsquishsound

randvar temp 5
switch temp
case 0 setvar tempc SQUISHED break
case 1 setvar tempc NEWGIB1 break
case 2 setvar tempc NEWGIB2 break
case 3 setvar tempc NEWGIB3 break
case 4 setvar tempc NEWGIB4 break
case 5 setvar tempc NEWGIB5 break
endswitch
espawn SOUNDMAKER
setactorvar[RETURN].peractor1 tempc

ends

state directdamage

ifvarvare swordtarg THISACTOR break
ifn invulntime 0 break

getplayer[THISACTOR].i spriteid
getactor[spriteid].htextra tempe
subvarvar tempe tempd // tempd is negative
addvar tempe 1
setactor[spriteid].htextra tempe
ifvarl tempe 50
setactor[spriteid].htpicnum SHOTSPARK1 else
setactor[spriteid].htpicnum RPG
setactor[spriteid].htowner THISACTOR
setactor[spriteid].htang sprite[THISACTOR].ang

ends

state monsterbite

ifn htg0 -1 ifl burning 0 break // frozen

ifpdistl 1280 ifcansee
ifvare target -1
ifvare myspawner -1
{
	ifp pfacing
	{
		ifvarg shieldup 0 
		{
			soundonce HITSHIELD 
			break
		}
	 	ifvarg barbshield 0
	 	{
		 	ifrnd 96
			soundonce BLOCK1
			else ifrnd 128
			soundonce BLOCK2
			else
			soundonce BLOCK4
		 	break
	 	}
 	}
	getplayer[THISACTOR].posx mx
	getplayer[THISACTOR].posy my
	getactor[THISACTOR].x x
	getactor[THISACTOR].y y
	subvarvar mx x
	subvarvar my y
	getangle angvar mx my
	
	getactor[THISACTOR].ang temp
	
	getincangle tempb angvar temp
	ifvarl tempb 0 mulvar tempb -1
	ifvarl tempb 128
	{
		getplayer[THISACTOR].i playersprite
		getactor[playersprite].htextra temp
		addvar temp 6
		ifvarl temp 6 setvar temp 6
		randvar tempb 4
		addvarvar temp tempb
		setactor[playersprite].htextra temp
		setactor[playersprite].htpicnum SHOTSPARK1
		setactor[playersprite].htang angvar
		setactor[playersprite].htowner THISACTOR
		
		ifactor ETTIN sound AXEHIT else
	    ifactor SKELKNIGHT sound AXEHIT else
	    ifactor DETHNITE sound AXEHIT else
	    ifactor LIZMAN sound AXEHIT else
		ifactor EVILKNIGHT sound SWORDHIT else
	    sound HITFLESH
	}
}
else
{
	ifvare target -1 
	{
		ifvarn cursed 0 break 
		ifvarvare swordtarg THISACTOR break
		getplayer[THISACTOR].i target
		
	}
	state calczdist
	shiftvarl zdist 8
	divvarvar zdist xydist
	zshoot zdist MONSTERBITE
	ifvarvare target player[THISACTOR].i setvar target -1
}

ends

defstate arrow_bits

	rand zdist 1024
	sub zdist 3072
	ezshoot zdist ARROWBIT1
	rand angvar 1024
	add angvar 512
	add angvar sprite[].ang
	seta[RETURN].ang angvar
	seta[RETURN].pal sprite[].pal
	rand zdist 1024
	sub zdist 3072
	ezshoot zdist ARROWBIT2
	rand angvar 1024
	add angvar 512
	add angvar sprite[].ang
	seta[RETURN].ang angvar
	seta[RETURN].pal sprite[].pal
	rand zdist 1024
	sub zdist 3072
	ezshoot zdist ARROWBIT3
	rand angvar 1024
	add angvar 512
	add angvar sprite[].ang
	seta[RETURN].ang angvar
	seta[RETURN].pal sprite[].pal

ends

defstate pottery_debris

	rand zdist 844
	sub zdist 2560
	ezshoot zdist POTDEBRIS1
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha
	
	rand zdist 844
	sub zdist 2560
	ezshoot zdist POTDEBRIS2
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha
	
	rand zdist 844
	sub zdist 2560
	ezshoot zdist POTDEBRIS3
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha
	
	rand zdist 844
	sub zdist 2560
	ezshoot zdist POTDEBRIS4
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha
	
	rand zdist 844
	sub zdist 2048
	ezshoot zdist POTDEBRIS1
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha
	
	rand zdist 844
	sub zdist 2048
	ezshoot zdist POTDEBRIS2
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha
	
	rand zdist 844
	sub zdist 2048
	ezshoot zdist POTDEBRIS3
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha
	
	rand zdist 844
	sub zdist 2048
	ezshoot zdist POTDEBRIS4
	rand zdist 2048
	seta[RETURN].ang zdist
	rand zdist 3
	ife zdist 0 seta[RETURN].cstat 128 else
	ife zdist 1 seta[RETURN].cstat 132 else
	ife zdist 2 seta[RETURN].cstat 136 else
	ife zdist 3 seta[RETURN].cstat 140
	seta[RETURN].pal sprite[].pal
	seta[RETURN].alpha sprite[].alpha

ends

state wraithprojathero
setprojectile[WRAITHPROJ].workslike 36866

state calczdist
ldist temp THISACTOR target
ifvare temp 0 setvar temp 1
mulvar zdist 768
divvarvar zdist temp
ezshoot zdist WRAITHPROJ

setprojectile[WRAITHPROJ].workslike 32770
ends

state shotgunathero

setprojectile[SLOWBULLET].workslike 36866

state calczdist
ldist temp THISACTOR target
ifvare temp 0 setvar temp 1
shiftvarl zdist 10
divvarvar zdist temp

				
ezshoot zdist SLOWBULLET
ezshoot zdist SLOWBULLET
ezshoot zdist SLOWBULLET
ezshoot zdist SLOWBULLET
ezshoot zdist SLOWBULLET
ezshoot zdist SLOWBULLET
ezshoot zdist SLOWBULLET
ezshoot zdist SLOWBULLET
ifspritepal 10
{
   ezshoot zdist SLOWBULLET
	ezshoot zdist SLOWBULLET
	ezshoot zdist SLOWBULLET
	ezshoot zdist SLOWBULLET
	ezshoot zdist SLOWBULLET
	ezshoot zdist SLOWBULLET
}

setprojectile[SLOWBULLET].workslike 32770
ends

state spiderbite

ifn htg0 -1 ifl burning 0 break // frozen

ifvare target -1 
{
	ifvarvare swordtarg THISACTOR break
	setvarvar target player[THISACTOR].i
}
state calczdist
shiftvarl zdist 8
divvarvar zdist xydist
zshoot zdist SPIDERBITE

ifvarvare target player[THISACTOR].i setvar target -1

ends

state surfacetype

// 1 = GRASS OR FOLIAGE
// 2 = SNOW
// 3 = DIRT OR GRAVEL
// 4 = WOOD
// 0 = GENERIC HARD SURFACE

	switch picnum
	// GRASS OR FOLIAGE
	case 3589 case 3590 case 3598 
	case 3618 case 3621 case 3683 case 3713 
	case 6923 case 6924 case 6944 case 6935
	case 7003
	setvar tempb 1
	break
	// SNOW
	case 5104 case 5111
	setvar tempb 2
	break
	// DIRT OR GRAVEL
	case 3700 case 3702 case 3705 case 3706 case 3708 case 3710
	case 3714 case 3725 case 3728 
	case 4157 case 4787
	case 5108 case 6938 case 6939 case 7054
	case 7004 case 7139 case 7140 case 7167 case 7204
	case 7223 case 7257
	setvar tempb 3
	break
	// WOOD
	case 3563 case 3566 case 3567 case 3568 case 3569
	case 3577 case 3578 case 3579 case 3580
	case 3794 case 3795 case 3796 case 3797 case 3798 case 3799
	case 3885 case 3886 case 3887
	case 3942 case 3943 case 3947 case 3954 case 3955 case 3951
	case 6941 case 6968 case 7249 case 7272 case 7286
	case 7287 case 7288 case 7289
	setvar tempb 4
	break
	default
	// STONE OR GENERIC HARD SURFACE
	setvar tempb 0
	break
	endswitch

ends

state wacksounds

ife sprite[].yvel PUNCHPROJ
ife player[].curr_weapon 0
ifg sawammo 0
{
	espawn SHOTSPARK2 seta[RETURN].pal 33
	espawn SHOTSPARK2 seta[RETURN].pal 33
	espawn SHOTSPARK2 seta[RETURN].pal 33
	espawn SHOTSPARK2 seta[RETURN].pal 33
	espawn SHOTSPARK2 seta[RETURN].pal 33
	
	randvar temp 4
	ifvare temp 0 sound LIGHTN1 else
	ifvare temp 1 sound LIGHTN2 else
	ifvare temp 2 sound LIGHTN3 else
	ifvare temp 3 sound LIGHTN4 else
	ifvare temp 4 sound LGTNSND
	spawn SHOCK_ACTOR
	break
}

ifsound SMACK1 break
ifsound SMACK2 break
ifsound SMACK3 break
ifsound SMACK4 break
ifsound SMACK5 break


randvar temp 4
ifvare temp 0 setvar tempb SMACK1 else
ifvare temp 1 setvar tempb SMACK2 else
ifvare temp 2 setvar tempb SMACK3 else
ifvare temp 3 setvar tempb SMACK4 else
setvar tempb SMACK5

espawn SOUNDMAKER
setactorvar[RETURN].peractor1 tempb

ends

state woodchips
	
getactor[THISACTOR].z z
addvar z 5120
setactor[THISACTOR].z z
ifrnd 128 debris SCRAP4 1 else
debris SCRAP5 1
subvar z 5120
setactor[THISACTOR].z z

ifrnd 128 { ifrnd 128 sound BREAKWOOD1 else sound BREAKWOOD2 }
else { ifrnd 128 sound BREAKWOOD3 else sound BREAKWOOD4 }
	
ends

state random_ooz
  ifrnd 128
    spawn OOZ2
  else
    spawn OOZ
ends

action ANULLACTION 0

action JIBSPROJFRAME1 -1 1 1 1 8
action JIBSPROJFRAME2 0 1 1 1 8
action JIBSPROJFRAME3 1 1 1 1 8
action JIBSPROJFRAME4 2 1 1 1 8

actor JIBSPROJ1 0 JIBSPROJFRAME1 enda
actor JIBSPROJ2 0 JIBSPROJFRAME1 enda
actor JIBSPROJ3 0 JIBSPROJFRAME1 enda
actor JIBSPROJ4 0 JIBSPROJFRAME1 enda
actor JIBSPROJ5 0 JIBSPROJFRAME1 enda
actor HEADJIBPROJ 0 JIBSPROJFRAME1 enda
actor LEGJIBPROJ 0 JIBSPROJFRAME1 enda
actor ARMJIBPROJ 0 JIBSPROJFRAME1 enda
actor EDHEADJIBPROJ 0 JIBSPROJFRAME1 enda



state aimjib

randvar xvel 64
addvar xvel 32
randvar zdist 512
addvar zdist 512
mulvar zdist -1

setvarvar tempc bleeding
ifvarl tempc 96 setvar tempc 96
// ifvare weap SHOTSPARK1 shiftvarr tempc 1

randvar tempb 48
addvar tempb 16
mulvarvar tempb tempc
shiftvarr tempb 1
subvarvar zdist tempb

randvar tempb 96
addvar tempb 32
mulvarvar tempc tempb
shiftvarr tempc 6
addvarvar xvel tempc


ends

state setjib

ifvare sprite[RETURN].picnum HEADJIBPROJ shiftvarr xvel 1
ifvare sprite[RETURN].picnum EDHEADJIBPROJ shiftvarr xvel 1
setactor[RETURN].xvel xvel
getactor[THISACTOR].pal pal
ifvarl burning 0
{
	setthisprojectile[RETURN].pal 1 
	seta[RETURN].pal 1
}
else
ifvarl pal 9
{
	setthisprojectile[RETURN].pal pal
	seta[RETURN].pal pal
}
else 
ifvare pal 17
{
	setthisprojectile[RETURN].pal pal
	seta[RETURN].pal pal
}
else
ifvarl sprite[RETURN].picnum 1960
{
	setthisprojectile[RETURN].pal pal
	seta[RETURN].pal pal
}
else
ifg pal 30
{
	setthisprojectile[RETURN].pal pal
	seta[RETURN].pal pal
}
randvar angvar 2047
setactor[RETURN].ang angvar

// getactor[THISACTOR].xrepeat x
// getactor[THISACTOR].yrepeat y
// ifge sprite[RETURN].picnum 2245 ifle sprite[RETURN].picnum 2287
// {
	// shiftr x 1, shiftr y 1
// }
// ifvarg x 64 setvar x 64
// ifvarg y 64 setvar y 64
// ifvare sprite[RETURN].picnum JIBSPROJ2 { subvar x 4 subvar y 4 }
// ifvare sprite[RETURN].picnum LEGJIBPROJ subvar y 8



// set x tiledata[sprite[RETURN].picnum].xsize
// mul x tiledata[sprite[RETURN].picnum].ysize
// mul x sprite[].xrepeat
// div x tiledata[sprite[].picnum].xsize
// div x tiledata[sprite[].picnum].ysize


set mx 2048

set my tiledata[sprite[RETURN].picnum].xsize
add my tiledata[sprite[RETURN].picnum].ysize
div my 2
div mx my

// x is now a SIZE BIAS. The Bigger MX is, the SMALLER the base jib size is
// therefore, multiplying by MX will correct size

set x sprite[].xrepeat
shiftl x 6

set tempb tiledata[sprite[].picnum].xsize
add tempb tiledata[sprite[].picnum].ysize
ifg tempb 192 set tempb 192
add tempb 384
div tempb 12
div x tempb

mul x mx
shiftr x 7
ife sprite[RETURN].picnum JIBSPROJ2 div x 2
set y x

setthisprojectile[RETURN].xrepeat x
setthisprojectile[RETURN].yrepeat y

ife sprite[RETURN].picnum HEADJIBPROJ
{
	seta[RETURN].xrepeat sprite[].xrepeat
	seta[RETURN].yrepeat sprite[].yrepeat
}
else
{
	seta[RETURN].xrepeat x
	seta[RETURN].yrepeat y
}
ifrnd 128
{
	setactor[RETURN].cstat 132
	setthisprojectile[RETURN].cstat 132
}
ifvare command BFGPROJ setthisprojectile[RETURN].trail -1
ifvarl framerate 25 setthisprojectile[RETURN].trail -1

ends

state standard_jibs
//   guts JIBS2 1
//   guts JIBS3 4
//   guts JIBS4 6
//   guts JIBS5 4
     guts JIBS6 4


ifactor PIGCOP
{
	// resize to normal because no HD jibs
	sizeat 48 40
	ifspritepal 10 sizeat 54 46
	ifspritepal 14 sizeat 40 34
	
	state aimjib
	ezshoot zdist JIBSPROJ1
	state setjib

	state aimjib
	ezshoot zdist JIBSPROJ3
	state setjib
	state aimjib
	ezshoot zdist JIBSPROJ3
	state setjib
	state aimjib
	ezshoot zdist JIBSPROJ4
	state setjib
	state aimjib
	ezshoot zdist JIBSPROJ4
	state setjib
	state aimjib
	ezshoot zdist JIBSPROJ5
	state setjib
	// state aimjib
	// ezshoot zdist JIBSPROJ5
	// state setjib
	ifvarn command 1 // still has a head
	{
		state aimjib
		ezshoot zdist HEADJIBPROJ
		state setjib
		
		state aimjib
		ezshoot zdist JIBSPROJ2
		state setjib
		state aimjib
		ezshoot zdist JIBSPROJ2
		state setjib
	}
	state aimjib
	ezshoot zdist LEGJIBPROJ
	state setjib
	state aimjib
	ezshoot zdist LEGJIBPROJ
	state setjib
	state aimjib
	ezshoot zdist ARMJIBPROJ
	state setjib
	state aimjib
	ezshoot zdist ARMJIBPROJ
	state setjib
	
}
else
{
	state aimjib
	ezshoot zdist JIBSPROJ1
	state setjib
	ifvarn command 1 // STILL HAS EYEBALLS
	{
		state aimjib
		ezshoot zdist JIBSPROJ2
		state setjib
		state aimjib
		ezshoot zdist JIBSPROJ2
		state setjib
	}
// 	state aimjib
// 	ezshoot zdist JIBSPROJ3
// 	state setjib
	// state aimjib
	// ezshoot zdist JIBSPROJ3
	// state setjib
	state aimjib
	ezshoot zdist JIBSPROJ3
	state setjib
	state aimjib
	ezshoot zdist JIBSPROJ3
	state setjib
	state aimjib
	ezshoot zdist JIBSPROJ4
	state setjib
	state aimjib
	ezshoot zdist JIBSPROJ4
	state setjib
// 	state aimjib
// 	ezshoot zdist JIBSPROJ4
// 	state setjib
	// state aimjib
	// ezshoot zdist JIBSPROJ5
	// state setjib
	state aimjib
	ezshoot zdist JIBSPROJ5
	state setjib
}
   
ifvare command BFGPROJ setvar command 0 
   
   ifn sprite[].pal 6 ifn sprite[].pal 120
   ifvarn sprite[THISACTOR].picnum DRONE
   ifvarn sprite[THISACTOR].picnum SKELKNIGHT
   ifvarn sprite[THISACTOR].picnum DETHNITE
   spawn BLOODPOOL
   
   
  
  ifactor HERO nullop else
  {
	getactor[THISACTOR].htowner spriteid
	ifvare sprite[spriteid].picnum APLAYER
	{
		getactor[spriteid].yvel temp
		// getplayervar[temp].character tempb
		ifvare character 0
  		state jib_sounds // duke sounds
  		else ifvare character 1
  		state barbjib_sounds
	}
  }
ends

state lite_jibs

    guts JIBS6 4
	state aimjib
	ezshoot zdist JIBSPROJ1
	state setjib
	
	state aimjib
	ezshoot zdist JIBSPROJ3
	state setjib
	
	ezshoot zdist JIBSPROJ4
	state setjib

	state aimjib
	ezshoot zdist JIBSPROJ5
	state setjib
  ifactor HERO nullop else
  {
	getactor[THISACTOR].htowner spriteid
	ifvare sprite[spriteid].picnum APLAYER
	{
		getactor[spriteid].yvel temp
		// getplayervar[temp].character tempb
		ifvare character 0
  		state jib_sounds // duke sounds
  		else ifvare character 1
  		state barbjib_sounds
	}
  }

ends

state genericshrunkcode
  ifcount 32
  {
	state specialdeath
    ifpdistl SQUISHABLEDISTANCE
    pstomp
  }
  else
  {
    sizeto MINXSTRETCH MINYSTRETCH
    spawn FRAMEEFFECT1
  }
ends

state genericgrowcode
  ifcount 32
  {
    guts JIBS4 24
    guts JIBS6 28
    addkills 1 add globalkills 1
    state specialdeath
    sound SQUISHED
    sound PIPEBOMB_EXPLODE
    hitradius 2048 60 70 80 90
    spawn BLOODPOOL
    spawn EXPLOSION2
    killit
  }
  else
  {
    ifactor CYBERDEMON
      sizeto 100 100
    else
      ifactor SHARK
        sizeto 84 84
    else
      sizeto MAXXSTRETCH MAXYSTRETCH
    break
  }
ends



state painsounds
ifvarn swordattk 0 break
ifvare character 1
{
	randvar temp 4
	ifvare temp 0 globalsound BARBDETH2 else
	ifvare temp 1 globalsound BARBPAIN1 else
	ifvare temp 2 globalsound BARBPAIN2 else
	ifvare temp 3 globalsound BARBPAIN3 else
	globalsound BARBPAIN4
	break
}
randvar temp 7
switch temp
case 0 globalsound DUKE_LONGTERM_PAIN2 break
case 1 globalsound DUKE_LONGTERM_PAIN3 break
case 2 globalsound DUKE_LONGTERM_PAIN4 break
case 3 globalsound DUKE_LONGTERM_PAIN5 break
case 4 globalsound DUKE_LONGTERM_PAIN6 break
case 5 globalsound DUKE_LONGTERM_PAIN7 break
case 6 globalsound DUKE_LONGTERM_PAIN8 break
case 7 globalsound DUKE_DEAD break
endswitch
ends

state dukepainsounds

ifvare character 1
{
	randvar temp 3
	ifvare temp 0 globalsound BARBDETH2 else
	ifvare temp 1 globalsound BARBPAIN1 else
	ifvare temp 2 globalsound BARBPAIN2 else
	globalsound BARBPAIN3
	break
}
ifphealthl YELLHURTSOUNDSTRENGTHMP
{
  ifrnd 64
    globalsound DUKE_LONGTERM_PAIN2
  else
    ifrnd 64
      globalsound DUKE_LONGTERM_PAIN3
  else
    ifrnd 64
      globalsound DUKE_LONGTERM_PAIN4
  else
    globalsound DUKE_DEAD
}
else
{
  ifrnd 64
    globalsound DUKE_LONGTERM_PAIN5
  else ifrnd 64
    globalsound DUKE_LONGTERM_PAIN6
  else ifrnd 64
    globalsound DUKE_LONGTERM_PAIN7
  else
    globalsound DUKE_LONGTERM_PAIN8
}
ends

move NUMBERUP 64 -40

state numberstate
ifvare peractor1 0 break

spriteflags 68
seta[].blend 1
seta[].shade -100
ifvare peractor1 2 // moves up
{
	ifmove 0
		move NUMBERUP geth	
	cstator 2
	// ifcount 34 cstator 512
	geta[].alpha temp
	add temp 6
	seta[].alpha temp
	ifcount 42 killit
	sizeat 64 64
	cstator 80
	spritepal 110
	break
}
sizeat 64 64

cstat 80
getactorvar[myspawner].peractor1 temp
ifvare temp -1 killit
ifvare sprite[myspawner].statnum 1024 killit
ifvarvarn mtype sprite[myspawner].picnum killit

ife mtype MONSOUL { spritepal 2 seta[].blend 0 seta[].alpha sprite[myspawner].alpha sizeat 32 32 ifcount 2 killit break }

// we know the spawner is a SHOP or TCHEST
ifvare sprite[myspawner].picnum SHOP
{
	getactorvar[myspawner].lotag ammo // and command 10 means it compares with stash
	ifvare actorvar[myspawner].command 10 
	{
		ifg ammo stash { spritepal 2 cstat 82 } else { spritepal 23 cstat 80 }
	}
	else
	{
		ifg ammo pgold { spritepal 2 cstat 82 } else { spritepal 23 cstat 80 }
	}
}
else
{
	getactorvar[myspawner].gold ammo // and pal 20 menas it compares with stash
	getactor[myspawner].pal pal
	ifvarvarg ammo pgold { spritepal 2 cstat 82 } else { spritepal 23 cstat 80 }
}

ends

useractor notenemy 2837 0 state numberstate enda

useractor notenemy 2838 0 state numberstate enda

useractor notenemy 2839 0 state numberstate enda

useractor notenemy 2840 0 state numberstate enda

useractor notenemy 2841 0 state numberstate enda

useractor notenemy 2842 0 state numberstate enda

useractor notenemy 2843 0 state numberstate enda

useractor notenemy 2844 0 state numberstate enda

useractor notenemy 2845 0 state numberstate enda

useractor notenemy 2846 0 state numberstate enda

state moveitleft
getactor[THISACTOR].ang angvar
addvar angvar 512
getactor[RETURN].x x
getactor[RETURN].y y
setvarvar mx x
addvar mx 128
ifvare sprite[RETURN].picnum GEMSPRITE addvar mx 48
rotatepoint x y mx y angvar mx my
updatesector mx my sect
	ifn sect -1
		setsprite RETURN mx my sprite[RETURN].z
// setactor[RETURN].x mx
// setactor[RETURN].y my
ends

state moveitright
getactor[THISACTOR].ang angvar
subvar angvar 512
getactor[RETURN].x x
getactor[RETURN].y y
setvarvar mx x
addvar mx 128
rotatepoint x y mx y angvar mx my
updatesector mx my sect
	ifn sect -1
		setsprite RETURN mx my sprite[RETURN].z
// setactor[RETURN].x mx
// setactor[RETURN].y my
ends

state spawn_key
espawn KEY
setactorvar[RETURN].myspawner THISACTOR
setactor[RETURN].pal 12
setactorvar[RETURN].mtype TCHEST2
getactor[THISACTOR].z z
subvar z 12288
setactor[RETURN].z z
setactor[RETURN].ang sprite[THISACTOR].ang
ends

state spawn_number
setvarvar tempb temp
addvar tempb 2837
espawnvar tempb
ifn sprite[].picnum TCHEST 
ifn sprite[].picnum SHOP
ifn sprite[].picnum MONSOUL
{
	setactorvar[RETURN].peractor1 2
	setactor[RETURN].pal 2
}	
else
{
	ifspritepal 0 setactor[RETURN].pal 7 else
	ifspritepal 10 setactor[RETURN].pal 21 else
	ifspritepal 23 setactor[RETURN].pal 23 else
	setactor[RETURN].pal sprite[THISACTOR].pal
	setactorvar[RETURN].peractor1 1
}
setactorvar[RETURN].myspawner THISACTOR
getactor[THISACTOR].z z

ifactor SHOP subvar z 7680 else
ifactor TCHEST subvar z 10240
else
{
	geta[].picnum picnum
	set zdist tiledata[picnum].ysize
	mul zdist sprite[].yrepeat
	shiftl zdist 2
	sub z zdist
}
ifactor MONSOUL sub z 2048

setactor[RETURN].z z
getactor[THISACTOR].ang angvar
setactor[RETURN].ang angvar
setactorvar[RETURN].mtype sprite[THISACTOR].picnum


ends

defstate imonfire

	setvarvar temp aura
	ifvarl temp 0 mulvar temp -1
	
	ifvarand temp 64
	{
		ifg sprite[].htextra 0 ife sprite[].htpicnum FIREBEAM
				seta[].htextra -1
	}
	else
	{
		ifactor DRAGON { ifspritepal 1 nullop else setvar burning 0 }
		ifactor WIZARD ifspritepal 10 setvar burning 0
		ifactor GOLEM ifspritepal 10 setvar burning 0
		ifactor DRONE setvar burning 0
		ifactor DETHNITE ifvarn peractor4 0 setvar burning 0
		ifvare burning 0 
		{
			ifg sprite[].htextra 0 ife sprite[].htpicnum FIREBEAM
				seta[].htextra -1
			break
		}
	}

	ifvarg burning 1024 setvar burning 1024
	subvar burning 1, ifl burning 0 set burning 0
	ifactor APLAYER
	{
		ifg burning 512 set burning 512
		ifvarand fintips 33554432 nullop else
		{
			setvar currtip2 0 setvar currtip 33554432
			orvar fintips 33554432
			state inithelp
		}
		getplayer[].boot_amount temp
		ifvarg temp 0
		{
			soundonce ENVSUIT
			subvar temp 1
			setplayer[].boot_amount temp
			subvar burning 4
			ifvarl burning 0 setvar burning 0
		}
	}
	else ifstrength 100 
	ifn sprite[].picnum SKELKNIGHT
	ifn sprite[].picnum DETHNITE
	{
		setvarvar temp aura
		ifvarl temp 0 mulvar temp -1
		ifvarand temp 64 nullop else
		addvar fear 2
	}
	ifinwater shiftr burning 1
	ifonwater iffloordistl 2 ifvarg burning 1 subvar burning 1
	ifvarl sprite[THISACTOR].htextra 1
	ifvarand timer 1
	{
		set tempb YES
		ifl burning 1 set tempb NO
		ifactor APLAYER ifg player[].boot_amount 0 set tempb NO
		
		setvarvar temp aura
		ifvarl temp 0 mulvar temp -1
		ifvarand temp 64 set tempb NO
		
		ife tempb YES
		{
			ifactor APLAYER ifrnd 128 state painsounds else
			{
				seta[].mdflags 16
				setvarvar temp burning
				shiftvarr temp 6
				ifvarl temp 1 setvar temp 1
				ifactor APLAYER ifg temp 4 set temp 4
				subvarvar burning temp
				ifvarl burning 0 setvar burning 0
				// ifrnd 128 subvar temp 1
				ifrnd 128 subvar temp 1
				ifvarg temp 0
				{
					setactor[THISACTOR].htextra temp
					setactor[THISACTOR].htpicnum BURNING
					addvar temp 1
					ifvarvarl sprite[THISACTOR].extra temp
					{
						getactor[THISACTOR].htflags temp
						orvar temp 4
						setactor[THISACTOR].htflags temp
						getsector[THISACTOR].floorshade shade
						addvar shade 12 ifvarg shade 30 setvar shade 30
						setactor[THISACTOR].shade shade
					}
					ifactor APLAYER ifvarn flameowner -1 setactor[THISACTOR].htowner flameowner else
					{
						getplayer[THISACTOR].i spriteid
						setactor[THISACTOR].htowner spriteid
					}
				}
			}
		}
	}
	ifvare burning 0 ifactor APLAYER 
		setvar flameowner -1
		
	ifvare aura -64
	{
		getactor[THISACTOR].z saveit
		subvar saveit 8192
		setactor[THISACTOR].z saveit
	}
	getactor[THISACTOR].picnum tempc
	espawn STICKYFIRE
	setactorvar[RETURN].monstatus tempc
	setactorvar[RETURN].myspawner THISACTOR
	changespritesect RETURN sprite[].sectnum
	espawn STICKYFIRE
	setactorvar[RETURN].monstatus tempc
	setactorvar[RETURN].myspawner THISACTOR
	changespritesect RETURN sprite[].sectnum
	ifvarg burning 260
	{
		espawn STICKYFIRE
		setactorvar[RETURN].monstatus tempc
		setactorvar[RETURN].myspawner THISACTOR
		changespritesect RETURN sprite[].sectnum
	}
	ifvare aura -64
	{
		addvar saveit 8192
		setactor[THISACTOR].z saveit
	}
	ifvarn monstatus 0
	{
		setvarvar temp aura
		ifvarl temp 0 mulvar temp -1
		ifvarand temp 64 nullop else
		soundonce COOKINGDEEPFRIER
	}
ends

state random_wall_jibs
  ifrnd 96
    shoot BLOODSPLAT1
  ifrnd 96
    shoot BLOODSPLAT2
  ifrnd 96
    shoot BLOODSPLAT3
  ifrnd 96
    shoot BLOODSPLAT4
  ifrnd 96
    shoot BLOODSPLAT1
ends

state rf
  ifrnd 128
    cstat 4
  else
    cstat 0
ends

state drop_ammo
ifvare droptile -1 break
  ifrnd SPAWNAMMOODDS
    spawn AMMO
ends

state drop_battery
ifvare droptile -1 break
  ifrnd SPAWNAMMOODDS
    spawn BATTERYAMMO
ends
state drop_sgshells
ifvare droptile -1 break
  ifrnd SPAWNAMMOODDS
    spawn SHOTGUNAMMO
ends

state drop_shotgun
ifvare droptile -1 break
  ifspritepal 10
  {
	 ifvare character 1 
	 {
		 espawn HAMMERAMMO 
		 setactor[RETURN].pal 21
	 }
	 else
	 spawn SHOTGUNSPRITE
  }
  else
 ifvare character 1 
 ife player[].gotweapon 1 YES
 {
	  espawn SWORDAMMO
	  setactor[RETURN].pal 21
 }
   else
	// spawn AMMO
    spawn FIRSTGUNSPRITE
ends

state drop_chaingun
ifvare droptile -1 break
  ifrnd SPAWNAMMOODDS
  {
    ifrnd 32
     spawn CHAINGUNSPRITE
    else
      spawn BATTERYAMMO
  }
ends

state validatetarg

ifvarn actorvar[target].cursed 0 { setvar target -1 break }
ifvare actorvar[target].monstatus 2 
{ 
	ifn sprite[target].picnum DETHNITEBONES
	ifn sprite[target].picnum SKELKNIGHTBONES
	{
		setvar target -1 break 
	}
}
ifvarn sprite[target].statnum 1 ifvarn sprite[target].statnum 10 { setvar target -1 break }
ifvarand sprite[target].cstat 256 nullop else 
{ 
	ifn sprite[target].picnum DETHNITEBONES
	ifn sprite[target].picnum SKELKNIGHTBONES
	{
		setvar target -1 break 
	}
}

getactor[THISACTOR].z z
subvar z 8192
setactor[THISACTOR].z z
getactor[target].z mz
subvar mz 8192
setactor[target].z mz
canseespr THISACTOR target tempc
addvar z 8192
setactor[THISACTOR].z z
addvar mz 8192
setactor[target].z mz
ifvare tempc 0 setvar target -1

ends

state targetsearch

addvar countvarb 1
ifvarg countvarb 20
{
	setvar countvarb 0
	
	ifactor MINOTAUR
	ifmultiplayer ifvarn COOP YES // in DM target enemy players first
	{
		setvar target -1
		headspritestat spriteid 10
		whilevarn spriteid -1
		{
			getactor[spriteid].yvel temp
			ifvare target -1
			ifvarvarn temp myspawner
			{
				setvarvar target spriteid
				state validatetarg
			}
			nextspritestat spriteid spriteid
		}
		ifvarn target -1 break
	}
			
	ifvarn target -1
	{
		state validatetarg
		ifvarn target -1
		{
			dist xydist THISACTOR target
			ifvarl xydist 3072 break
		}
	}
	
	
	findnearactorz SHOOTME 4096 12288 target
	ifvarn target -1
	{
		getactorvar[target].myspawner target
		state validatetarg
	} 
	ifvare target -1
	{
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ifvare sprite[spriteid].picnum SHOOTME
			{
				dist xydist2 THISACTOR spriteid
				ifvarl xydist2 16384 
				{
					getactorvar[spriteid].myspawner target
					ifvarvare target THISACTOR setvar target -1 else
					state validatetarg
				}
			}
			nextspritestat spriteid spriteid
			
			ifvarn target -1 
			setvar spriteid -1
				
		}
	}
	
	ifactor MINOTAUR
	{
		ifvarn target -1 ifrnd 128 soundonce MINATK1 else soundonce MINATK2
	}
}

ends

state targetmon

addvar countvarb 1
ifvarg countvarb 20
{
	setvar countvarb 0
				
	ifvarn target -1
	{
		state validatetarg
		ifvarn target -1
		{
			dist xydist THISACTOR target
			ifvarl xydist 4096
			{
				setvar targetlock 26
				break
			}
		}
		
	}
	
	setvar target -1
	set tempe 16384
	set saveit -1
	
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ifvare sprite[spriteid].picnum SHOOTME
		{
			dist xydist2 THISACTOR spriteid
			ifl xydist2 tempe 
			{
				getactorvar[spriteid].myspawner target
				ifvarvare target THISACTOR setvar target -1 else
				state validatetarg
				ifn target -1 { set saveit target set tempe xydist2 }
			}
		}
		nextspritestat spriteid spriteid
	}
	
	ifn saveit -1 { set target saveit set targetlock 26 }
}

ends

state avoidwater

ifinwater break // too late

switch sprite[].picnum

case DRONE
case LIZTROOP
case BADFISH
case DRAGON
case WIZARD
case WRAITH
case GHOST 
// case EVILDUKE
case CYBERFLOAT
case BATGUNNER
case SIDEGUN
break

default
	geta[].htflags temp
	orvar temp 134217728
	seta[].htflags temp
	
	ifonwater 
	{
		ifnotmoving
		state getoutofwater 
	}
/*
	else // ifvarg sprite[THISACTOR].xvel 0
	{
		getactor[THISACTOR].ang angvar
		ifvarl sprite[THISACTOR].xvel 0 addvar angvar 1024 // moving backwards
		
		// 	getactor[THISACTOR].x x
		// 	getactor[THISACTOR].y y
		// 	getactor[THISACTOR].z z
		// 	getactor[THISACTOR].sectnum mysector
			
		// 	// neartag <x> <y> <z> <sect> <ang> <nearTagSector> <nearTagWall> <nearTagSprite> <nearTagHitDist> <nearTagRange> <tagSearch> 
		// 	// <tagSearch> 1-lotag only, 2-hitag only, 3-lotag&hitag 
		// 	neartag x y z mysector angvar hitsector hitwall hitsprite temp 1024 1
		// 	ifvarn hitsector -1
		// 	ifvare sector[hitsector].lotag 1 // water found ahead
		
		setvarvar mx sprite[THISACTOR].x
		addvar mx 1024
		rotatepoint sprite[THISACTOR].x sprite[THISACTOR].y mx sprite[THISACTOR].y angvar xvel yvel
		updatesectorz xvel yvel sprite[THISACTOR].z mysector
		setvar tempd 0
		ifvarn mysector -1
			getsector[mysector].lotag tempd
		
		ifvare tempd 1 // water sector ahead
		{
			ifvare monstatus 3
			{
				getactor[THISACTOR].ang angvar
				addvar angvar 768
				randvar temp 512
				addvarvar angvar temp
				setactor[THISACTOR].ang angvar
				setactor[THISACTOR].xvel 0
			}
			else
			{
				getactor[THISACTOR].xvel xvel
				ifvarg xvel 0 setvar xvel 0
				ifvarg xvel -96 subvar xvel 96
				setactor[THISACTOR].xvel xvel
			}
			
		}
		
	}
*/
break
endswitch

ends

state avoidcliffs

ifcount 10 nullop else break

getactor[THISACTOR].x x
getactor[THISACTOR].y y
getactor[THISACTOR].ang angvar
ifactor EVILDUKE ifvarn dodgeang 6666 setvarvar angvar dodgeang
ifvarl sprite[THISACTOR].xvel -16 addvar angvar 1024 // moving backwards
setvarvar mx x
addvar mx 768

rotatepoint x y mx y angvar mx my
updatesector mx my mysector
ifvarn mysector -1
ifvarvarn mysector sprite[THISACTOR].sectnum
{
	getflorzofslope mysector mx my temp
	getflorzofslope sprite[THISACTOR].sectnum x y tempb
	subvarvar temp tempb
	ifvarand sector[mysector].floorstat 1 set temp 100000
	ifvarg temp 65536 // 20480
	{
		addvar angvar 768
		randvar temp 512
		addvarvar angvar temp
		ifvarl sprite[THISACTOR].xvel -16 // moving backwards
		{
			getactor[THISACTOR].xvel xvel
			mulvar xvel -1
			setactor[THISACTOR].xvel xvel
		}
		ifactor EVILDUKE ifvarn dodgeang 6666 setvarvar dodgeang angvar
		else
		setactor[THISACTOR].ang angvar
		
	}
}


ends

ai AIFROZEN ANULLACTION STOPPED geth

state unfreeze

ifvarn monstatus 2
{
	setactor[THISACTOR].htg_t 0 htg0
	setactor[THISACTOR].htg_t 1 htg1
	setactor[THISACTOR].htg_t 2 htg2
	setactor[THISACTOR].htg_t 3 htg3
	setactor[THISACTOR].htg_t 4 htg4
	setactor[THISACTOR].htg_t 5 htg5
}
setvar htg0 -1
setvar htg1 -1
setvar htg2 -1
setvar htg3 -1
setvar htg4 -1
setvar htg5 -1

ends

defstate imfrozen

	geta[].htpicnum picnum
	
	getactor[THISACTOR].mdflags temp
	orvar temp 16
	setactor[THISACTOR].mdflags temp

	setvarvar temp aura
	abs temp
	
	ifvarand temp 32
	{
		set burning 0
		ifg sprite[].htextra 0 ife sprite[].htpicnum ICEBEAM
				seta[].htextra -1
	}
	else
	{
		ifactor GOLEM
		ifspritepal 0
			setvar burning 0
		
		ifactor DRAGON
		{
			ifspritepal 20
			
				setvar burning 0
			ifspritepal 1
				setvar burning 0
		}
		ifactor WRAITH
		ifspritepal 20
			setvar burning 0
		
		ifactor WIZARD
		ifspritepal 25
			setvar burning 0
	}
	
	ifl burning -900 set burning -900
	ifstrength 1000
	addvar burning 1
	else { addvar burning 2 ifvarg burning 0 setvar burning 0 }
	
	ifge burning 0 
	{
		ifg sprite[].htextra 0 ife sprite[].htpicnum ICEBEAM
			seta[].htextra -1
		break
	}
	ifvare htg0 -1
	ifvarn monstatus 2
	{
		set temp inithp, div temp 2
		set tempb sprite[].extra
		ifg sprite[].htextra 0 sub tempb sprite[].htextra
		ifg tempb temp { ifl burning -300 set burning -300 break }
		ifge tempb 800 { ifl burning -300 set burning -300 break }
		
		globalsound FREEZEOVER
		sound SOMETHINGFROZE
		getactor[THISACTOR].htg_t 0 htg0
		getactor[THISACTOR].htg_t 1 htg1
		getactor[THISACTOR].htg_t 2 htg2
		getactor[THISACTOR].htg_t 3 htg3
		getactor[THISACTOR].htg_t 4 htg4
		getactor[THISACTOR].htg_t 5 htg5
		spawn SMALLSMOKE
		spawn SMALLSMOKE
		spawn SMALLSMOKE
		spawn SMALLSMOKE
		spawn SMALLSMOKE
		spawn SMALLSMOKE
		spawn SMALLSMOKE
		spawn SMALLSMOKE
		espawn ICESPRITE
		setav[RETURN].myspawner THISACTOR
		setav[RETURN].mtype sprite[].picnum
	}
	cstator 256
	ifn htg0 -1 ife sprite[].htpicnum ICEBEAM
	ifg sprite[].htextra 0
	{
		ifge sprite[].htextra sprite[].extra seta[].htextra 0
		else
		{
			geta[].htextra temp
			shiftr temp 1
			seta[].htextra temp
		}
	}

	getactor[THISACTOR].cstat temp
	ifvarand temp 2 xorvar temp 2
	orvar temp 257
	setactor[THISACTOR].cstat temp

	ifvare monstatus 2 cstat 256
	else
	{
		ai AIFROZEN
		ifvarn htg4 -1 setactor[THISACTOR].htg_t 4 htg4
		ifvarn htg2 -1 setactor[THISACTOR].htg_t 2 htg2
		ifactor DRAGON fall
		ifactor WRAITH fall
		ifactor WIZARD fall
		ifactor DRONE fall
		ifactor CYBERFLOAT fall
		ifactor BATGUNNER fall
	}

	ifvare burning 0 state unfreeze
	else 
	{
		ifl sprite[].extra 0 ife sprite[].htextra -1 seta[].htextra 10
		ifvarg sprite[THISACTOR].htextra 0 setactor[THISACTOR].htpicnum RPG
	}

ends

state showdamage

getactor[THISACTOR].ang saveit
getplayer[THISACTOR].posx mx
getplayer[THISACTOR].posy my
getactor[THISACTOR].x x
getactor[THISACTOR].y y
subvarvar mx x
subvarvar my y
getangle angvar mx my
setactor[THISACTOR].ang angvar


// bleeding is damage
setvarvar tempc bleeding

ifvarg bleeding 999
{
	setvarvar temp tempc
	divvar temp 1000
	state spawn_number
	mulvar temp 1000
	subvarvar tempc temp // tempc is now the number that is left over
	state moveitleft
	state moveitleft
}
ifvarg bleeding 99
{
	setvarvar temp tempc
	divvar temp 100
	state spawn_number
	mulvar temp 100
	subvarvar tempc temp
	state moveitleft
}
ifvarg bleeding 9
{
	setvarvar temp tempc
	divvar temp 10
	state spawn_number
	mulvar temp 10
	subvarvar tempc temp
}
setvarvar temp tempc
state spawn_number
state moveitright

setactor[THISACTOR].ang saveit

ends


state barbswordtarg

ifactor HORNET break
ifactor SPIDER2 break

ifvarand monstflags 4 // super boss
{
	getactor[THISACTOR].z z
	subvar z 32768
	setactor[THISACTOR].z z
} else
ifactor KORAX
{
	getactor[THISACTOR].z z
	subvar z 8192
	setactor[THISACTOR].z z
}

ifvarl xydist 24576
ifp pfacing
ifvarg cursed -1
ifcansee
{
	ifvarl KICKBACKPIC 2
	{
		ifvare swordtarg -1
		setvarvar swordtarg THISACTOR
		else
		ifvarvarn swordtarg THISACTOR
		{
			dist temp swordtarg player[THISACTOR].i
			ifvarvarl xydist temp setvarvar swordtarg THISACTOR
		}
	}
	ifvarvare swordtarg THISACTOR
	{
		espawnvar targframe
		setactorvar[RETURN].lotag 1
		setactorvar[RETURN].myspawner THISACTOR
	}
}
else ifvarvare swordtarg THISACTOR ifvare KICKBACKPIC 0 setvar swordtarg -1

ifvarand monstflags 4 // super boss
{
	getactor[THISACTOR].z z
	addvar z 32768
	setactor[THISACTOR].z z
} else
ifactor KORAX
{
	getactor[THISACTOR].z z
	addvar z 8192
	setactor[THISACTOR].z z
}

ends

// note this is actually for the magical buzzsaw, but it uses the swordtarg variable
state dukeswordtarg

// ifactor HORNET break
// ifactor SPIDER2 break

set temp YES
ifn sprite[].sectnum player[].cursectnum
{
	getp[].posz mz
	sub mz sprite[].z
	ifg mz 8192 set temp NO
	
	ifg player[].falling_counter 8 set temp NO
}

ife temp YES
ifvarl xydist 16384
ifp pfacing
ifvarg cursed -1
ifcansee
{
	ifvare swordtarg -1
	setvarvar swordtarg THISACTOR
	else
	ifvarvarn swordtarg THISACTOR
	{
		ife scannedsprite THISACTOR
		set swordtarg THISACTOR
		else
		{
			dist temp swordtarg player[THISACTOR].i
			ifvarvarl xydist temp setvarvar swordtarg THISACTOR
		}
	}
	
	ifvarvare swordtarg THISACTOR
	{
		espawnvar targframe
		setactorvar[RETURN].lotag 1
		setactorvar[RETURN].myspawner THISACTOR
	}
}
else ife swordtarg THISACTOR set swordtarg -1

ends

state barbhammertarg

ifvarand monstflags 4 // super boss
{
	geta[].z z
	subvar z 32768
	seta[].z z
} else
ifactor KORAX
{
	geta[].z z
	subvar z 8192
	seta[].z z
}

ifvarl xydist 24576
ifp pfacing
ifvare cursed 0
ifcansee
{
	ifvare hammertarg -1
	setvarvar hammertarg THISACTOR
	else
	ifvarvarn hammertarg THISACTOR
	{
		dist temp hammertarg player[THISACTOR].i
		ifvarvarl xydist temp setvarvar hammertarg THISACTOR
	}
	
	ifvarvare hammertarg THISACTOR
	{
		espawnvar targframe
		setactorvar[RETURN].lotag 1
		setactorvar[RETURN].myspawner THISACTOR
	}
}
else ifvare KICKBACKPIC 0 ifvarvare hammertarg THISACTOR setvar hammertarg -1

ifvarand monstflags 4 // super boss
{
	geta[].z z
	addvar z 32768
	seta[].z z
} else
ifactor KORAX
{
	geta[].z z
	addvar z 8192
	seta[].z z
}

ends

defstate playertargetting

ifactor BADFISH break

ifvare character 1
{
	ifvare CURRWEAP 6
	ifvarg player[THISACTOR].ammo_amount 6 0
		state barbswordtarg
	else
	ifvare CURRWEAP 2
	// ifvarand bits 268435456
	ifvarand extbits 64
	ifvarg player[THISACTOR].ammo_amount 2 1
	state barbhammertarg
	else ifvare KICKBACKPIC 0 setvar hammertarg -1
	break
}

ife player[].curr_weapon 9
{
	ifp pfacing
	{
		ife scannedsprite THISACTOR set plasmatarg THISACTOR
		else ifcansee
		{
			ife plasmatarg -1 set plasmatarg THISACTOR
		}
		else ife plasmatarg THISACTOR set plasmatarg -1
	}
	else ife plasmatarg THISACTOR set plasmatarg -1
}
else set plasmatarg -1

ife plasmatarg THISACTOR
{
	espawnvar targframe
	setactorvar[RETURN].lotag 1
	seta[RETURN].pal 1
	setactorvar[RETURN].myspawner THISACTOR
}

ife CURRWEAP 0
ifg sawammo 0
{
	state dukeswordtarg
}

ifvarl altfirehold 20 break

setvar tempb 0
ifvarn playertarg[0] -1 addvar tempb 1
ifvarn playertarg[1] -1 addvar tempb 1
ifvarn playertarg[2] -1 addvar tempb 1
ifvarn playertarg[3] -1 addvar tempb 1
ifvarn playertarg[4] -1 addvar tempb 1
// tempb is now the number of targets
setvarvar tempc altfirehold
divvar tempc 20
// tempc is now the max possible targets


ifvarvarn playertarg[0] THISACTOR
ifvarvarn playertarg[1] THISACTOR
ifvarvarn playertarg[2] THISACTOR
ifvarvarn playertarg[3] THISACTOR
ifvarvarn playertarg[4] THISACTOR
{
	// this actor not currently targetted
	getactor[THISACTOR].z saveit
	ifvarand monstflags 4 // super boss
	{
		getactor[THISACTOR].z z
		subvar z 32768
		setactor[THISACTOR].z z
	}
	else
	ifvarvarg saveit player[THISACTOR].posz
	{
		subvar saveit 6144 setactor[THISACTOR].z saveit addvar saveit 6144
	}
	ifvare cursed 0
	ifp pfacing ifcansee
	ifvarvarl tempb tempc
	{
		// try to add to targetting list
		ifvare playertarg[0] -1 setarray playertarg[0] THISACTOR else
		ifvare playertarg[1] -1 setarray playertarg[1] THISACTOR else
		ifvare playertarg[2] -1 setarray playertarg[2] THISACTOR else
		ifvare playertarg[3] -1 setarray playertarg[3] THISACTOR else
		ifvare playertarg[4] -1 setarray playertarg[4] THISACTOR
	}
	setactor[THISACTOR].z saveit
}
else
{
	// this actor is currently targetted

	espawnvar targframe


	setactorvar[RETURN].lotag 1
	setactorvar[RETURN].myspawner THISACTOR
	// now move actor up for sight check
	getactor[THISACTOR].z saveit
	ifvarvarg saveit player[THISACTOR].posz
	{
		subvar saveit 6144 setactor[THISACTOR].z saveit addvar saveit 6144
	}
	ifcansee ifvare cursed 0 nullop else // remove from target list
	{
		ifvarvare playertarg[0] THISACTOR setarray playertarg[0] -1
		ifvarvare playertarg[1] THISACTOR setarray playertarg[1] -1
		ifvarvare playertarg[2] THISACTOR setarray playertarg[2] -1
		ifvarvare playertarg[3] THISACTOR setarray playertarg[3] -1
		ifvarvare playertarg[4] THISACTOR setarray playertarg[4] -1
	}
	setactor[THISACTOR].z saveit
}

ends

state monpathnotag

	ifn htg5 -1 break

	// mymonpath is either -1 or the value of current nodes
	// turn to node if you cannot see target, or
	// only if node is closer to you than your target AND
	// only if you are moving forward xvel > 32; otherwise drop node
	// look for another node if you have none or if yours is < 768 ldist
	// next node cannot be more than 1023 turn unless it is the only option
	
	// do NOT change the following vars: target, target2, xydist, xydist2
	// seevar should be preset
	
	ifn target -1 ldist xydist3 THISACTOR target else
	ldist xydist3 THISACTOR player[].i
	
	ife seevar YES ifl xydist3 10240 { set mymonpath -1 break }
	
	ifnotmoving set mymonpath -1
	
	geta[].ang angvar
	ifn mymonpath -1 // determine if you should turn towards it
	{
		geta[mymonpath].x mx
		geta[mymonpath].y my
		sub mx sprite[].x
		sub my sprite[].y
		getangle angvar mx my
		
		ldist temp THISACTOR mymonpath
		ifl temp 1024 set mymonpath -1 else
		{
			ife seevar NO
			{
				seta[].ang angvar
				break
			}
			else
			ifl temp xydist3 // closer to path node than target
			{
				seta[].ang angvar
				break
			}
			else set mymonpath -1
		}
	}
	
	ife mymonpath -1
	{
		set mx 999999 // distance
		set my 999 // rank
		geta[].z saveit2
		set z saveit2
		sub z 16384
		seta[].z z
		
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ife sprite[spriteid].picnum BOSSPATH
			{
				canseespr THISACTOR spriteid temp
				ife temp YES
				{
					ldist tempb THISACTOR spriteid
					
					// first test, turn to it in <1024 degrees
					geta[spriteid].x x
					geta[spriteid].y y
					sub x sprite[].x
					sub y sprite[].y
					getangle digz x y
					getincangle temp digz angvar
					abs temp
					ifl temp 1024
					ifg tempb 3072 // it isn't the one you just dropped
					{
						ife mymonpath -1
						{
							set mymonpath spriteid
							set mx tempb
						}
						else
						{
							// is it closer than maximum distance
							// and better rank
							
							ifl tempb 16384
							ifl actorvar[spriteid].peractor1 my
							{
								
								set mymonpath spriteid
								set mx tempb
								set my actorvar[spriteid].peractor1
								
							}
							
						}
					}
					
				}
			}
			nextspritestat spriteid spriteid
		}
		ifn mymonpath -1
		{
			geta[mymonpath].x mx
			geta[mymonpath].y my
			sub mx sprite[].x
			sub my sprite[].y
			getangle angvar mx my
			seta[].ang angvar
		}
		
		seta[].z saveit2
	}
	

ends

state targetport
	ife target -1 set saveit player[].i else
	set saveit target
	ifl sprite[saveit].sectnum 0 break
	ifg sprite[saveit].sectnum 4095 break
	ldist temp saveit THISACTOR
	shiftr temp 2
	ifl temp 512 set temp 512
	ifg temp 3072 set temp 3072
			
	set x sprite[saveit].x
	add x temp
	rand mx 768
	add x mx
	
	set tempb 0
	set tempc 0
	whilevarn tempc 1
	{
		rand angvar 2048
		rotatepoint sprite[saveit].x sprite[saveit].y x sprite[saveit].y angvar mx my
		updatesectorz mx my sprite[saveit].z sect 
		ifn sect -1
		ife sect sprite[saveit].sectnum
		set tempc 1
		else
		ifn sect -1
		{
			// cansee <x1> <y1> <z1> <sect1> <x2> <y2> <z2> <sect2> <returnvar>
			cansee mx my sprite[saveit].z sect sprite[saveit].x sprite[saveit].y sprite[saveit].z sprite[saveit].sectnum RETURN
			ife RETURN YES set tempc 1
		}
		ife tempc 0 add tempb 1
		
		ifg tempb 64 { set tempc 1 set mx sprite[saveit].x set my sprite[saveit].x set sect sprite[saveit].sectnum }
	}
	spawn DIAMONDPORT
	setsprite THISACTOR mx my sprite[saveit].z
	spawn DIAMONDPORT
	sound TELEPORTER
ends

state teleportauracode

spawn TELEPORTAURA

ifrnd 1
{
	set temp NO
	ifn target -1 set temp YES else
	ifpdistl 12288 ifcansee set temp YES
	ife temp YES // teleport!
	{
		state targetport
	}
}

ends

state followmonpath

	set temp YES // yes turn towards the monpath
	ifvarn target -1 set temp NO
	else
	ifmove STOPPED set temp NO else
	ifmove DRONESTOPPED set temp NO else
	ifmove WRAITHSTOPPED set temp NO else
	ifcansee ifl xydist 6144 set temp NO
	
	ife temp YES 
	{
		seta[].htactorstayput -1
		geta[mymonpath].x mx
		geta[mymonpath].y my
		sub mx sprite[].x
		sub my sprite[].y
		getangle angvar mx my
		setactor[].ang angvar
		
		ifnotmoving 
		{
			getactor[THISACTOR].htmovflag spriteid
			addvar spriteid 16384
			ifvarl spriteid 16384 ifvarg spriteid -1
			{
				ife actorvar[spriteid].monstatus 1
				{
					// getincangle tempb sprite[].ang sprite[spriteid].ang
					// abs tempb
					// geta[].ang angvar
					// ifl tempb 512 sub angvar 384 else
					add angvar 256
					set mx sprite[].x, add mx 256
					rotatepoint sprite[].x sprite[].y mx sprite[].y angvar saveit saveit2
					updatesector saveit saveit2 sect 
					ifn sect -1 setsprite THISACTOR saveit saveit2 sprite[].z
				}
			}
	
			ifn sprite[].sectnum sprite[mymonpath].sectnum
			set tempc 99999
			headspritestat spriteid 1
			whilevarn spriteid -1
			{
				ife sprite[spriteid].picnum MONPATH
				ife actorvar[spriteid].hitag hitag
				{
					dist tempb THISACTOR spriteid
					ifl tempb tempc
					{
						canseespr THISACTOR spriteid temp
						ife temp YES
						{
							set mymonpath spriteid
							set tempc tempb
						}
					}
				}
				nextspritestat spriteid spriteid
			}
		}
	}
	else // we are stopped or fighting, do not turn towards the monpath
	{
		ifn sprite[].picnum KAMIKAZE
		ifn sprite[].picnum HELLHOUND
		seta[].htactorstayput sprite[].sectnum
	}

	ldist temp THISACTOR mymonpath
	ifl temp 768 // 512
	{
		getav[mymonpath].lotag tempb add tempb 1
		ife sprite[mymonpath].pal 23 set tempb 0
		set tempd NO
		ife sprite[mymonpath].pal 4 { set mymonpath -1 set hitag 0 break }
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ife sprite[spriteid].picnum MONPATH
			ife actorvar[spriteid].hitag hitag
			ife actorvar[spriteid].lotag tempb
			{
				set mymonpath spriteid
				set tempd YES
			}
			nextspritestat spriteid spriteid
			ife tempd YES set spriteid -1
		}
	}

ends

gamevar killmon 0 0

defstate knockback

	ifactornotstayput
	{
		set temp bleeding
		shiftl temp 12
		set tempb inithp
		ife tempb 0 set tempb 100
		div temp tempb
		add temp bleeding
		
		ifg temp dodge
		{
			set dodge temp
			set dodgeang sprite[].htang
		}
	}

ends

defstate monsterai

ifn killmon 0
ifcansee ife cursed 0
ife monstatus 1
{
	seta[].htextra 500
	seta[].htowner player[].i
	seta[].htpicnum RPG
}

// ifvarg livemon 100 sleeptime 32768

ifvare monstatus 0
{
	ifvarand monstflags 4
	ifn sprite[].picnum CYBERDEMON
	ifn sprite[].picnum KORAX
		xorvar monstflags 4
		
	getactor[].htflags temp
	orvar temp 16 // don't teleport
	orvar temp 8192 // smooth move
	setactor[].htflags temp
	setvar monstatus 1
	ife droptile MONSOUL seta[].mdflags 16
	ifvarg group 0 seta[].mdflags 16
	getactor[].extra inithp

	ifvare cursed 0
	ifn sprite[].picnum SIDEGUN
	{
	 	espawn SHOOTME
	 	setactorvar[RETURN].myspawner THISACTOR
 	}
	ifvarand monstflags 1 setvar gold 0
	
	ifactornotstayput // look for MONPATH
	ifn sprite[].picnum KORAX
	ifn sprite[].picnum SIDEGUN
	{
		// mymonpath is my current MONPATH sprite
		// hitag is the track i'm on
		set tempc 99999
		headspritesect spriteid sprite[].sectnum
		whilevarn spriteid -1
		{
			ife sprite[spriteid].picnum MONPATH
			{
				dist tempb THISACTOR spriteid
				ifl tempb tempc
				{
					set mymonpath spriteid
					set tempc tempb
					set hitag actorvar[mymonpath].hitag
				}
			}
			nextspritesect spriteid spriteid
		}
	}
}

findplayer xydist

ifvarg auracount 0
{
	subvar auracount 1
	ifvare auracount 0
	setvar aura 0
}
setvar tempd 0
ifvarl aura 0
{
	setvarvar tempd aura
	mulvar tempd -1
	
	ifvarand tempd 4 // invisibility
		seta[].alpha 160
	else
		seta[].alpha 0
	
	// find nearby active monsters, including yourself
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ifvare sprite[spriteid].picnum SHOOTME
		{
			getactorvar[spriteid].myspawner tempc
			ifvarn tempc -1
			ifvare actorvar[tempc].monstatus 1
			ifvare sprite[tempc].statnum 1
			ifvarg actorvar[tempc].aura -1
			ife actorvar[tempc].cursed cursed
			ifn sprite[tempd].picnum SPIDER2
			{
				dist temp THISACTOR tempc
				ifvarl temp 7168 // 8192
				{
					getactorvar[tempc].aura tempb
					orvarvar tempb tempd
					setactorvar[tempc].aura tempb
					setactorvar[tempc].auracount 6
				}
			}
		}
		nextspritestat spriteid spriteid
	}
}

ifvare tempd 0 ifvarg aura 0 setvarvar tempd aura
ifvarg tempd 0
{
	ifvarand tempd 1 // speed
	{
		spawn SPEEDAURA
		ifmove STOPPED nullop else
		ifvarg sprite[THISACTOR].xvel 16 ifvarl sprite[THISACTOR].xvel 416
		{
			geta[].xvel xvel
			mul xvel 2
			ifg xvel 644 set xvel 644
			setactor[THISACTOR].xvel xvel
		}
	}
	ifvarand tempd 2 // might
	spawn MIGHTAURA
	ifvarand tempd 4 // invisibility
	setactor[THISACTOR].mdflags 16
	ifvarand tempd 8 // lightning
	{
		spawn LIGHTNINGAURA
		ifvarg sprite[THISACTOR].htextra 2
		{
			espawn LIGHTNINGBOLT
			randvar angvar 2047
			setactor[RETURN].ang angvar
			espawn LIGHTNINGBOLT
			randvar angvar 2047
			setactor[RETURN].ang angvar
		}
	}
	ifvarand tempd 16 // poison
	spawn POISONAURA
	ifvarand tempd 32 // freeze
	{
		spawn FREEZEAURA
		ife sprite[].htpicnum ICEBEAM seta[].htextra -1
		else ifg sprite[].htextra sprite[].extra
		{
			sub burning 300
			ifl burning 0
			seta[].htextra RPG
		}
			
	}
	ifvarand tempd 64
	{
		spawn FIREAURA
		ifg sprite[].htextra 0
		ife sprite[].htpicnum ICEBEAM nullop else
		ifg burning -1
		setvar burning 10
		ife sprite[].htpicnum FIREBEAM seta[].htextra -1
	}
	ifvarand tempd 128 spawn VAMPIREAURA
	ifvarand tempd 256 
	{
		espawn TOUGHAURA
		setactor[RETURN].pal 17
		ifvarg sprite[THISACTOR].htextra 1
		{
			getactor[THISACTOR].htextra tempc
			shiftvarr tempc 1
			setactor[THISACTOR].htextra tempc
		}
	}
	ifvarand tempd 512
	{
		ifl aura 0 set temp 9216
		else set temp 5120
		ifl xydist temp
		ifp palive
		ifcansee
		ife fear 0
		ifn sector[].floorpicnum 4820
		ifn sector[].floorpicnum 4085
		{
			set spriteid player[].i
			geta[spriteid].x mx
			geta[spriteid].y my
			sub mx sprite[].x
			sub my sprite[].y
			getangle angvar mx my
			add angvar 1024
			cos xvel angvar
			sin yvel angvar
			
			shiftl xvel 5
			shiftl yvel 5
			ifg sprite[player[].i].z sprite[].z { shiftr xvel 1 shiftr yvel 1 }
			add xvel player[].posxv
			add yvel player[].posyv
			setplayer[].posxv xvel
			setplayer[].posyv yvel
		}
		spawn MAGNETAURA
	}
	ifvarand tempd 1024
		spawn NOVAAURA
	ifvarand tempd 2048 // teleporting
	ife fear 0
		state teleportauracode
	ifvarand tempd 4096
		spawn X2SHOTAURA
		
	ifvarand tempd 8192
	ifl aura 0 // don't spread to other monsters
	ifn topladder SIDEGUN
	ifn sprite[].picnum SIDEGUN
	{
		set topladder SIDEGUN
		
		espawn SIDEGUN
		setav[RETURN].myspawner THISACTOR
		setav[RETURN].ammo -384
		rand saveit 4
		setav[RETURN].mtype saveit
		espawn SIDEGUN
		setav[RETURN].myspawner THISACTOR
		setav[RETURN].ammo 384
		setav[RETURN].mtype saveit
	}
}
// ife monstatus 1 ifvarg group 0 spawn GROUPAURA
ifvarg burning 0 state imonfire
ifvarl burning 0 state imfrozen else
ifvarn htg0 -1 state unfreeze  // failsafe

ifvarg peractor4 0 subvar peractor4 1

ifonwater 
iffloordistl 8
ifvarn sprite[THISACTOR].picnum SPIDER2
{
	ifvare monstatus 2
	{
		getactor[THISACTOR].htflags temp
		ifvarand temp 16 xorvar temp 16
		setactor[THISACTOR].htflags temp
	} else
	ifvarg sprite[THISACTOR].xvel 16 ifrnd 16
	{
		soundonce DUKE_ONWATER
		spawn WATERSPLASH2
	}
}

ifvarg dodge 0
{
	setactor[THISACTOR].xvel 0
	cos xvel dodgeang
	sin yvel dodgeang
	setvarvar temp dodge
	ifvarg temp 1024 setvar temp 1024
	mulvarvar xvel temp
	mulvarvar yvel temp
	shiftvarr xvel 13
	shiftvarr yvel 13
	setvarvar zvel dodge
	shiftvarr zvel 1
	mulvar zvel -1
	movesprite THISACTOR xvel yvel zvel CLIPMASK0 RETURN 
	// ifvarl sprite[THISACTOR].extra 1 setvar dodge 0
	shiftvarr dodge 1
	ifvarl dodge 4 setvar dodge 0
}

ifvare monstatus 2 break

ifn mymonpath -1 ifn sprite[mymonpath].picnum BOSSPATH state followmonpath

ifvare character 1
{
	ifvarg barbquake 0 state barbquakecheck
	
	ifvarg barbshield 0
	ifvarg boost 0
	ifvare dodge 0
	ifvarl xydist 1536
	{
		getactor[].x mx
		getactor[].y my
		sub mx player[].posx
		sub my player[].posy
		getangle angvar mx my
		getincangle tempc angvar player[].ang
		ifvarg tempc -512 ifvarl tempc 512
		{
			sound THUMPIN
			ifvarg boost 10
			{
				globalsound BIGTHUD
				quake 13
			}
			setvarvar dodgeang player[].ang
			subvar sprint 30
			setvar ftap 0
			setvar btap 0
			setvar fhold 0
			
			setvarvar temp boost
			addvar temp 6
			setvarvar dodge temp
			mulvar dodge 3072
			
			getactor[].extra temp
			shiftvarl temp 7
			subvarvar dodge temp
			ifvarl dodge 0 setvar dodge 0
			else
			{
				getactor[].z z
				subvar z 1024
				setactor[].z z
			}
			
			ifvarl sprite[].htextra 50
			{
				setvarvar temp boost
				shiftvarl temp 1
				addvar temp 10
				setactor[].htextra temp
				setactor[].htpicnum SHOTSPARK1
				setactor[].htowner player[].i
				setactor[].htang player[].ang
				
				shiftvarl temp 8
				ifp ponsteroids shiftvarl temp 2
				divvarvar temp sprite[].extra
				ifvarg temp 0
				{
					ifvarl temp 8 setvar temp 8
					ifvarg fear 0 setvar fear 0
					subvarvar fear temp
					ifvarl fear -78 setvar fear -78
				}
			}
			setvar boost 0
		}
	}
}

ifg powcount 0
{
	ifvarand pow 256
	ifvarl xydist 2560
	ifvarvarg sprite[THISACTOR].z player[THISACTOR].posz
	ifvare cursed 0
	{
		getactor[THISACTOR].htextra temp
		ifvarl temp 1 setvar temp 1
		addvar temp 8
		setactor[THISACTOR].htextra temp
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htowner player[THISACTOR].i
		setactor[THISACTOR].htang player[THISACTOR].ang
		ifvarand timer 8 sound CHOP
		
	}

	ifvarand pow 1024
	ifvarl xydist 4096
	ifvarl dodge 8
	ifvare cursed 0
	{
		soundonce PUFFSND
		
		ifstrength 2000
		{
			geta[].x mx
			geta[].y my
			sub mx player[].posx
			sub my player[].posy
			getangle dodgeang mx my
			
			ifvarand pow 256 // if blade vortex is on, we want the monster closer
			ifvarn sprite[THISACTOR].picnum DRONE
			ifvarg xydist 1560
			{
				addvar dodgeang 1024
				setvar dodge 512
			}
			else
			setvar dodge 1024
		}

		ifvarl sprite[THISACTOR].htextra 1
		ifvarg fear -1
		{
			setactor[THISACTOR].htextra 1
			setactor[THISACTOR].htpicnum PLASMAPROJ
			setactor[THISACTOR].htang player[THISACTOR].ang
			setactor[THISACTOR].htowner player[THISACTOR].i
		}
		ifvare fear 0 ifstrength 100 setvar fear -10
	}
}

ifvare scannedsprite -1 ifp pfacing ifcansee setvarvar scannedsprite THISACTOR
ife monid THISACTOR 
{ 
	ife scannedsprite THISACTOR set monidcount 0 else add monidcount 1 
	ifg monidcount 300 set monid -1 
}

getactor[].htextra bleeding
ifvarg bleeding 0
{
	getactor[].htowner spriteid
	ife spriteid -1 set spriteid player[].i else
	ife actorvar[spriteid].monstatus 0 set spriteid player[].i
	
	ife spriteid player[].i
	{
		set temp pdamage
		ifvarn temp 100 
		{ 
			mul bleeding temp 
			div bleeding 100 
			setactor[THISACTOR].htextra bleeding 
		}
		ifvarg player[].steroids_amount 0 ifvarl player[].steroids_amount 400
		{
			shiftvarl bleeding 2
			setactor[THISACTOR].htextra bleeding
		}
	}

	ife sprite[].htpicnum SHOTSPARK1 ife spriteid player[].i
	ife character 0
	ife CURRWEAP 7
	{
		ife WEAP7MODE 0 seta[].htpicnum FIREBEAM
		ife WEAP7MODE 1 seta[].htpicnum ICEBEAM
	}
	
	setactor[THISACTOR].ang lastang
	getactor[THISACTOR].extra temp
	ifvarl burning 0 ifvarvarg bleeding temp sound GLASS_BREAKING
	ifge temp 250
	ifvare powcount 0
	{
		setvarvar tempb temp
		subvarvar tempb bleeding
		divvar temp 250
		divvar tempb 250
		ifvarvarl tempb temp ifvare powmode 0 
		ifl combo combomax
			addvar combo 1
	}
	getactor[THISACTOR].htpicnum picnum
	
	ifvare command 1 // headshot
	{
		ifn sprite[].htpicnum SLUGPROJ set command 0
		else
		{
			addvar bleeding 70
			setactor[THISACTOR].htextra bleeding
		}
	}
	else
	ifvarn sprite[THISACTOR].picnum SKELKNIGHT
	ifvarn sprite[THISACTOR].picnum DETHNITE
	ifvarg bleeding 99 // lotsa damage
	{
		setvar temp NO
		subvar bleeding 20
		ifvarvarg bleeding inithp setvar temp YES
		addvar bleeding 20
		getactor[THISACTOR].extra tempb
		shiftvarl tempb 1
		ifvarvarg bleeding tempb
		setvar temp YES
		ifvare temp YES
		{
			// setvarvar weap picnum
			setactor[THISACTOR].htpicnum RPG
			setvar picnum RPG
		}
	}
	ifvarn actorvar[spriteid].cursed 0
	ifvarn sprite[spriteid].picnum APLAYER
	{
		mul bleeding 2
		seta[].htextra bleeding
	}
	switch picnum
	case KNEE
		// ife character 1
		ifvare sprite[spriteid].picnum APLAYER
		ifn player[].quick_kick 0
		{
			ifn bossid THISACTOR
			{
				ifstrength 1000
				ife fear 0 sub fear 20
				ife dodge 0
				ifactornotstayput
				{
					set dodge 3072
					set dodgeang player[].ang
				}
			}
		}
		ifsound SMACK2
		{
			stopsound SMACK2
			rand temp 3
			ife temp 0 sound SMACK1 else
			ife temp 1 sound SMACK3 else
			ife temp 2 sound SMACK4 else
			ife temp 3 sound SMACK5
		}
		
	break
	
	case SPEARPROJ
		ifn bossid THISACTOR
		{
			ifstrength 1000
			ife fear 0 sub fear 20
			state knockback
			
			ifactor SKELKNIGHT ifge bleeding sprite[].extra seta[].htpicnum RPG
		}
	break
	
	case GRENADEPROJ
	    setactor[THISACTOR].htpicnum RPG
	    setvar picnum RPG
		state knockback
    break
    case FTPROJ addvar burning 78
    break
    
    case FEARBULLET
    	ifvarn sprite[THISACTOR].picnum SKELKNIGHT
    	ifvarn sprite[THISACTOR].picnum DETHNITE
    	{
	    	setvar tempb 10000
	    	ifp ponsteroids shiftvarl tempb 2
	    	getactor[THISACTOR].extra tempc
	    	ifvarl tempc 10 setvar tempc 10
	    	divvarvar tempb tempc
	    	addvarvar fear tempb
    	}
    break
	
	case BFGIMPACT
		seta[].htpicnum RPG
	break

    case RPG
	case CANNONBALL
	// knock back direction code
	// getactor[THISACTOR].xvel xvel
	// mulvar xvel -1
	setactor[THISACTOR].xvel 0
	state knockback
	break
	
	case RADIUSEXPLOSION
	// knock back direction code
	getactor[THISACTOR].xvel xvel
	mulvar xvel -1
	break

	case SHOTSPARK1
	ifvarg fear 0 { shiftvarl bleeding 1 setactor[THISACTOR].htextra bleeding }
	ifvarn spriteid -1
	{
		ife spriteid player[].i
		ifn player[].kickback_pic 0
		{
			ifg sawammo 0
			ife CURRWEAP 0
			{
				ife character 0
				{
					shiftl bleeding 2
					sub sawammo 1
				}
				else
				{
					shiftl bleeding 1
					sub sawammo 4
					espawn SHOCK_ACTOR
					setav[RETURN].myspawner THISACTOR
					sub fear 15
					flash
				}
				
				seta[].htextra bleeding
				seta[].htpicnum RPG
			}
			else
			ife character 0
			ife CURRWEAP 2
				state knockback
			else
			ife character 1
			ife CURRWEAP 9
			{
				ifn bossid THISACTOR
				{
					ifstrength 2000
					ife fear 0 sub fear 30
					ife dodge 0
					ifactornotstayput
					{
						set dodge 4096
						sub dodge inithp
						getp[].posx mx
						getp[].posy my
						sub mx sprite[].x
						sub my sprite[].y
						getangle dodgeang mx my
						add dodgeang 1024
						ifl dodge 0 set dodge 0
						geta[].z z, sub z 1024, seta[].z z
						set zvel dodge, mul zvel -1
						seta[].zvel zvel
					}
				}
			}
		}
		ifvare actorvar[spriteid].cursed 0
		ifvare cursed 0
		{
			// setvar tempd 0
			// ifvare sprite[spriteid].picnum ETTIN setvar tempd 1
			// ifvare sprite[spriteid].picnum DEMON setvar tempd 1
			// ifvare sprite[spriteid].picnum SKELKNIGHT setvar tempd 1
			// ifvare sprite[spriteid].picnum DETHNITE setvar tempd 1
			// ifvare sprite[spriteid].picnum LIZMAN setvar tempd 1
			// ifvare sprite[spriteid].picnum SPIDER2 setvar tempd 1
			// ifvare sprite[spriteid].picnum HELLHOUND setvar tempd 1
			// ifvare sprite[spriteid].picnum BARON setvar tempd 1
			// ifvare sprite[spriteid].picnum EVILKNIGHT setvar tempd 1
			// ifvare tempd 1
			ife monstatus 1
			ife actorvar[spriteid].monstatus 1
			{
				setvar bleeding 0
				setactor[THISACTOR].htextra -1
				setactor[THISACTOR].htpicnum -1
			}
		}
	}
	break
	
	case ARROWPROJ
	ifvarg bleeding 20
	{
		ifvare sprite[spriteid].picnum APLAYER
		{
			// ifrnd 128 
			globalsound ARROWFLESH 
			// else
			// globalsound HITFLESH2
		} else
		sound ARROWFLESH
	}
	break
	
	endswitch

	ifvarvare spriteid THISACTOR
	ifvarn picnum RADIUSEXPLOSION
	{
		setvar bleeding 0
		setactor[THISACTOR].htextra -1
		setactor[THISACTOR].htpicnum -1
	}
	
	//ifvarn spriteid -1
	ifvare sprite[spriteid].picnum APLAYER
	{
		getactor[spriteid].yvel saveit
		// getplayervar[saveit].pdamage temp
		// set temp pdamage
		// ifvarn temp 100 
		// { 
			// mul bleeding temp 
			// div bleeding 100 
			// setactor[THISACTOR].htextra bleeding 
		// }
		// ifvarg player[saveit].steroids_amount 0 ifvarl player[saveit].steroids_amount 400
		// {
			// shiftvarl bleeding 2
			// setactor[THISACTOR].htextra bleeding
		// }
		
		// damage bonus is now calculated earlier
		
		ifvare picnum KNEE setvar picnum SHOTSPARK1
		ifvare picnum SHOTSPARK1
		{
			ifvare player[saveit].curr_weapon 6
			setactor[THISACTOR].htpicnum RPG
			
			ifvare character 1 // barbarian
			ifvarl barbshield 1
			{
				setvar tempb 0 // flag for curse hit
				ifvare player[saveit].curr_weapon 1
				ifvarg player[saveit].ammo_amount 1 1
				ifn KICKBACKPIC 0
				ife sprite[].htowner player[].i
				{
					setvar tempb 1 // curse flag set
					ifactor CYBERDEMON nullop else
					ifactor DRAGON nullop else
					ifvarvare bossid THISACTOR setvar tempb 0
					ifle gold 0 setvar tempb 0
					
					getplayer[saveit].ammo_amount 1 temp
					subvar temp 1
					setplayer[saveit].ammo_amount 1 temp
					mul bleeding 2
					seta[].htextra bleeding
				}
				
				ifvarvarg bleeding sprite[THISACTOR].extra
				{
					ifvare tempb 1 // curse flag
					ifrnd 96
					{
						setvar countvarb 30 // to make sure it targets right away
		
						setvar bleeding 2
						setactor[THISACTOR].htextra 2
										
						getactor[THISACTOR].picnum tempe
						switch tempe
						case EGG strength 30 break
						case HORNET strength 10 break
						case LIZTROOP strength TROOPSTRENGTH break
						case DRONE ifspritepal 21 strength TROOPSTRENGTH else strength DRONESTRENGTH break
						case PIGCOP ifspritepal 10 strength TROOPSTRENGTH else strength PIGCOPSTRENGTH break
						case LIZMAN ifspritepal 7 strength TROOPSTRENGTH else strength LIZSTRENGTH break
						case ROTATEGUN strength ROTTURRETSTRENGTH break
						case BOSS1
						case ARCHON
						case CYBERDEMON
						case CYBERFLOAT strength BOSS1PALSTRENGTH break
						case BATGUNNER case BATGUNNERSTAYPUT strength 1000 break
						case WIZARD
						case DRAGON strength DRAGONSTRENGTH break
						case WRAITH strength WRAITHSTRENGTH break
						case SKELKNIGHT strength SKELSTRENGTH break
						case DEMON
						case EVILDUKE
						case EVILDUKECROUCH strength DEMONSTRENGTH break
						case SPIDER2 strength SPIDERSTRENGTH break
						case DETHNITE
						case GOLEM strength DETHSTRENGTH break
						case EVILKNIGHT strength EVILKNIGHTSTRENGTH break
						case ETTIN strength ETTINSTRENGTH break
						case KAMIKAZE strength 50 break
						case HELLHOUND strength HOUNDSTRENGTH break
						default strength 100 break
						endswitch
						geta[].extra temp
						mul temp 2 seta[].extra temp
						ifl temp 100 seta[].extra 100 
						
						ifvarl burning 0 setvar burning -2 else ifvarg burning 0 setvar burning 0
						setvar fear 0
						cstat 256
						setvar cursed -900
						sound RESURRECT
						state specialdeath
						setvar monstatus 1	
						break				
					}
					else
					{
						ifvarg fear 0 setvar fear 0
						subvarvar fear tempd
						ifvarl fear -78 setvar fear -78
						
						ife tempb 1 ifrnd 96 seta[].htpicnum RPG
					}
				}
			}
			else
			ifactor DETHNITE
			ifvare player[saveit].curr_weapon 0
			{
				shiftvarl bleeding 1
				setactor[THISACTOR].htextra bleeding
			}
			
		}
		
		getactorvar[spriteid].cursed tempd
		// getplayervar[tempc].cursed tempd
		ifvarg tempd 0
		ife player[].boot_amount 0
		{
			shiftvarr bleeding 2
			ifvarl bleeding 1 setvar bleeding 1
			setactor[THISACTOR].htextra bleeding
		}
		ifvarn myspawner -1 // possessed
		ifvare player[saveit].heat_on YES
		{
			shiftvarl bleeding 1
			setactor[THISACTOR].htextra bleeding
		}
		
		ifg powcount 0
		{
			ifvarand pow 2 // leech effect
			ifvarg bleeding 0
			ifvare cursed 0 // no leeching from allies
			{
				setvarvar tempb bleeding	
				ifvarand pow 256 ifvarl xydist 2560 ifvare picnum RPG shiftvarr tempb 1 // leech penalty on powblades
				ifvarvarg tempb sprite[THISACTOR].extra setvarvar tempb sprite[THISACTOR].extra
				ifvarg tempb 1000 setvar tempb 1000
				addvarvar leech tempb	
			}
			ifvarand pow 4
			{
				ifvare picnum SHOTSPARK1
				{
					shiftvarl bleeding 1
					setactor[THISACTOR].htextra bleeding
					setactor[THISACTOR].htpicnum RPG
				}
				else
				{
					setvarvar tempb bleeding
					shiftvarl tempb 1
					addvarvar burning tempb
				}
			}
			
			ifvarand pow 128
			{
				setvar tempc 0
				ifvarg burning -1 setvar tempc YES
				setvarvar tempb bleeding
				shiftvarl tempb 10
				
				getactor[THISACTOR].extra tempd
				addvar tempd 1000
				divvarvar tempb tempd
				subvarvar burning tempb
				ifvarl burning -900 setvar burning -900
				ifvare tempc YES
				ifvarl burning 0 state imfrozen
			}
			
			ifvarand pow 2048
			ifvarvarg bleeding sprite[THISACTOR].extra
			ifg gold 0
			{
				setactor[THISACTOR].htextra 2
				setvar bleeding 2
				switch sprite[].picnum
				case EGG strength 30 break
				case HORNET strength 10 break
				case LIZTROOP strength TROOPSTRENGTH break
				case DRONE ifspritepal 21 strength TROOPSTRENGTH else strength DRONESTRENGTH break
				case PIGCOP ifspritepal 10 strength TROOPSTRENGTH else strength PIGCOPSTRENGTH break
				case LIZMAN ifspritepal 7 strength TROOPSTRENGTH else strength LIZSTRENGTH break
				case ROTATEGUN strength ROTTURRETSTRENGTH break
				case BOSS1
				case ARCHON
				case CYBERDEMON
				case CYBERFLOAT strength BOSS1PALSTRENGTH break
				case BATGUNNER case BATGUNNERSTAYPUT strength 1000 break
				case WIZARD
				case DRAGON strength DRAGONSTRENGTH break
				case WRAITH strength WRAITHSTRENGTH break
				case SKELKNIGHT strength SKELSTRENGTH break
				case DEMON
				case EVILDUKE
				case EVILDUKECROUCH strength DEMONSTRENGTH break
				case SPIDER2 strength SPIDERSTRENGTH break
				case EVILKNIGHT strength EVILKNIGHTSTRENGTH break
				case DETHNITE
				case GOLEM strength DETHSTRENGTH break
				case ETTIN strength ETTINSTRENGTH break
				case KAMIKAZE strength 50 break
				case HELLHOUND strength HOUNDSTRENGTH break
				case LUGLORD ifspritepal 0 set cursed 99999 else ifspritepal 33 set cursed 99999 break
				endswitch
				
				ife bossid THISACTOR set cursed 99999
				
				ifn cursed 99999
				{
					ifvarl burning 0 setvar burning -2 else ifvarg burning 0 setvar burning 0
					setvar fear 0
					cstat 256
					setvar cursed -900
					set target -1
					set targetlock 0
					sound RESURRECT
					state specialdeath
					setvar monstatus 1
				}
				else
				{
					set cursed 0
					set bleeding 100
					seta[].htextra 100
					seta[].extra 10
				}
			}
		}
		
	}
	else
	{
		ifvare cursed 0
		ifactor DRONE ifvarn picnum RADIUSEXPLOSION
		ifvare actorvar[spriteid].monstatus 1
		ifvare actorvar[spriteid].cursed 0
		{
			setvar bleeding 0
			setactor[THISACTOR].htextra -1
		}
		ifvare target -1
		ife monstatus 1
		{
			ife actorvar[spriteid].monstatus 3
			ife cursed 0
			{
				set target spriteid
				set targetlock 60
				dist xydist2 THISACTOR target
			}
			else
			ifvarn actorvar[spriteid].cursed 0
			{
				ifn cursed 0 ifrnd 224 nullop else
				{
					setvarvar target spriteid
					setvar targetlock 52
					dist xydist2 THISACTOR target
				}
			}
		}
	}
	
	ifvare monstatus 1
	ifvare SHOWDAMAGE YES
	ifvarg bleeding 1
	ifvarg inithp 199
	{
		ifactor DETHNITE ifn peractor4 0 nullop else
		ifactor EVILKNIGHT ifn peractor4 0 nullop else
		state showdamage
	}
	set mhurtago 0
	  
}
else 
{
	getactor[].ang lastang
	add mhurtago 1
	ifg mhurtago 600 { ifcansee nullop else add mhurtago 1 }
}

ifvarn cursed 0
{
	ifvarvare target player[THISACTOR].i setvar target -1 // safeguard
	state targetmon
	ifvarn target -1 { ifvarg fear 0 setvar fear 0 }
	// else ifvarl fear 10 setvar fear 10
	ifvarg cursed 0
	{
		subvar cursed 1
		ifvare cursed 0
		ifvarl sprite[THISACTOR].htextra 150
		{
			setvar bleeding 150
			setactor[THISACTOR].htextra 150
			setactor[THISACTOR].htpicnum RPG
			setactor[THISACTOR].htowner player[THISACTOR].i
			espawn BIGSMOKE
			setactor[RETURN].pal 4
		}
	}
	else
	ifvarl cursed -1
	{
		cstat 0
		seta[].htactorstayput -1
		addvar cursed 1
		ifvare cursed -1
		{
			strength 1
			setactor[THISACTOR].htextra 100
			setvar bleeding 100
			setactor[THISACTOR].htpicnum RPG
			setactor[THISACTOR].htowner player[THISACTOR].i
			espawn BIGSMOKE
			setactor[RETURN].pal 4
			setvar cursed 0
		}
		else
		{
			setactor[THISACTOR].htextra -1
			setvar bleeding 0
		}
	}
	
	ifactor GOODHEAD nullop else
	ifactor CHICKEN nullop else
	ifvarn cursed 0 
	{
		seta[].mdflags 16
		ifn target -1
		ifg sprite[].xvel 0
		{
			ldist temp THISACTOR target
			ifl temp 1024
				seta[].xvel -64
		}
	}
}
ifvarn fear 0 
{
	ifvarvare bossid THISACTOR
	ifvarn sprite[THISACTOR].picnum CYBERDEMON
	ifvarn sprite[THISACTOR].picnum DRAGON setvar fear 0
	
	ifvarg fear 0
	{
		state faceaway
		subvar fear 1
	}
	else addvar fear 1
	
}
else ifvarn target -1
ifn sprite[].picnum DEMONOVA
{
	state facetarget
	ifvarn target -1
	{
		dist xydist2 THISACTOR target
		ifvarl xydist2 4096
		ifvare actorvar[target].target -1
		ifvare actorvar[target].monstatus 1
		{
			setactorvar[target].target THISACTOR
			setactorvar[target].targetlock 52
		}
		else
		ifvare actorvar[target].monstatus 2 setvar target -1
		ifvarg targetlock 0
		{
			subvar targetlock 1
			ifvare targetlock 0 setvar target -1
		}
		
	}
		
}

ifvare CURRWEAP 0
ifvarl xydist 3072 setvar sawidle 0

ifactornotstayput state avoidwater

/*
ifvarn myspawner -1 // spawn ghost image
{
	getactor[THISACTOR].htdispicnum picnum
	addvar picnum 7000
	espawnvar picnum
	setactorvar[RETURN].lotag sprite[THISACTOR].xrepeat
	setactorvar[RETURN].hitag sprite[THISACTOR].yrepeat
	setactor[RETURN].pal 17
	getactor[THISACTOR].cstat temp
	ifvarand temp 1 xorvar temp 1 ifvarand temp 256 xorvar temp 256
	orvar temp 514
	setactor[RETURN].cstat temp
	setactorvar[RETURN].peractor6 666
	setactor[RETURN].mdflags 16
}
*/

ifvare cursed 0
{
	addvar peractor6 1
	ifvarg peractor6 25
	{
		setvar peractor6 0
		{
			espawn SHOOTME
			setactorvar[RETURN].myspawner THISACTOR
		}
	}
}

// state monsttarget

state playertargetting

ifvarg shieldup 0
ifp pfacing
ifvarl xydist 1536
ifvare activator 0
ifvare droptile 0
ifcansee
{
	sound PUFFSND
	ifvarl sprite[THISACTOR].htextra 8
	{
		setactor[THISACTOR].htextra 8
		setactor[THISACTOR].htpicnum RPG
		setactor[THISACTOR].htang angvar
		setactor[THISACTOR].htowner player[THISACTOR].i
	}
	ifvarn sprite[THISACTOR].picnum CYBERDEMON
	ifvarl sprite[THISACTOR].extra 400
	{
		getp[].posx mx
		getp[].posy my
		sub mx sprite[].x
		sub my sprite[].y
		getangle angvar mx my
		add angvar 1024
		cos xvel angvar
		sin yvel angvar
		shiftvarr xvel 3
		shiftvarr yvel 3
		set zvel 0
		movesprite THISACTOR xvel yvel zvel CLIPMASK0 RETURN
		ifvarn RETURN 0
		{
			getactor[THISACTOR].htextra temp
			ifvarl temp 1
			{
				sound SQUISHED
				setactor[].htextra 16
				setactor[].htpicnum RPG
				setactor[].htang angvar
				setactor[].htowner player[].i
			}
		}
	}
}

ends

state playerturntome

	geta[].x x
	geta[].y y
	sub x player[].posx
	sub y player[].posy
	getangle angvar x y

	getincangle tempb player[].ang angvar
	getp[].ang temp
	shiftr tempb 4
	add temp tempb
	setp[].ang temp

ends
