// Status bar parameters

appendevent EVENT_SETDEFAULTS
  setuserdef[].statusbarflags 24
endevent

// Pause text

appendevent EVENT_DISPLAYSTART
  ife userdef[].pause_on 1
  {
    set V_Mark_pause_on 1
    setuserdef[].pause_on 2
  }
  else
  ife userdef[].pause_on 0
    set V_Mark_pause_on 0
endevent

appendevent EVENT_DISPLAYREST
  ifn V_Mark_pause_on 1
    break

  ifand player[].gm MODE_MENU
    break

  redefinequote D_Quote_Temp1 GAME PAUSED

  setarrayseq A_State_Draw BIGALPHANUM 160 89 65536 0 0 D_Quote_Temp1 0 0 RS_TOPLEFT 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Psx
  state S_Draw_Quote
endevent

// 2D map text

appendevent EVENT_DISPLAYOVERHEADMAPTEXT
  set RETURN -1

  ifn userdef[].overhead_on 2
    break

  set V_Y 11927552
  ifge userdef[].screen_size 4
  {
    scalevar V_Temp1 2293760 userdef[].statusbarscale 100
    sub V_Y V_Temp1
  }

  ifand LOGO_FLAGS LOGO_HIDEEPISODE
    nullop // ifandn
  else
  ife userdef[].user_map 0
  {
    qgetsysstr D_Quote_Temp1 STR_VOLUMENAME

    setarrayseq A_State_Draw STARTALPHANUM 1048576 V_Y 65536 0 0 D_Quote_Temp1 0 0 2320 0 D_Font_X_Between 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256), ROTATESPRITE_FULL16 (2048)
    state S_Draw_Quote
  }

  add V_Y 393216
  qgetsysstr D_Quote_Temp1 STR_MAPNAME

  setarrayseq A_State_Draw STARTALPHANUM 1048576 V_Y 65536 0 0 D_Quote_Temp1 0 0 2320 0 D_Font_X_Between 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256), ROTATESPRITE_FULL16 (2048)
  state S_Draw_Quote
endevent

// 2D map compass

appendevent EVENT_DISPLAYSBAR
  ife userdef[].overhead_on 0
    break

  set V_Red totalclock
  add V_Red 72
  mod V_Red 384
  shiftl V_Red 10
  div V_Red 384
  sin V_Red V_Red
  shiftr V_Red 7
  add V_Red 72

  set V_Blue V_Red

  set V_Green totalclock
  add V_Green 312
  mod V_Green 384
  shiftl V_Green 10
  div V_Green 384
  sin V_Green V_Green
  shiftr V_Green 7
  add V_Green 72

  set V_Rgb V_Blue
  shiftl V_Rgb 8
  add V_Rgb V_Green
  shiftl V_Rgb 8
  add V_Rgb V_Red

  // PSX uses only RGB values, get closest color in the palette
  getclosestcol V_Color V_Rgb 254

  ife userdef[].scrollmode 0
    set V_Ang player[].oang
  else
    set V_Ang userdef[].fola
  add V_Ang D_Automap_North_Dir_Ang

  // Arrow 

  set V_Win_X1 122880
  set V_Win_Y1 114688

  set V_Temp1 V_Ang
  add V_Temp1 1024
  sin V_Sin V_Temp1
  shiftl V_Sin 1
  cos V_Cos V_Temp1
  shiftl V_Cos 1
  add V_Win_X1 V_Sin
  add V_Win_Y1 V_Cos

  sin V_Win_X2 V_Ang
  shiftl V_Win_X2 2
  cos V_Win_Y2 V_Ang
  shiftl V_Win_Y2 2

  add V_Win_X2 V_Win_X1
  add V_Win_Y2 V_Win_Y1

  setarrayseq A_State_Draw V_Win_X1 V_Win_Y1 V_Win_X2 V_Win_Y2 V_Color V_Rgb
  state S_Draw_Vector

  set V_Temp1 33554432
  sqrt V_Temp1 V_Length

  set V_Temp1 V_Ang
  add V_Temp1 256
  sin V_Win_X2 V_Temp1
  mul V_Win_X2 V_Length
  shiftr V_Win_X2 12
  cos V_Win_Y2 V_Temp1
  mul V_Win_Y2 V_Length
  shiftr V_Win_Y2 12

  add V_Win_X2 V_Win_X1
  add V_Win_Y2 V_Win_Y1

  setarrayseq A_State_Draw V_Win_X1 V_Win_Y1 V_Win_X2 V_Win_Y2 V_Color V_Rgb
  state S_Draw_Vector

  set V_Temp1 V_Ang
  sub V_Temp1 256
  sin V_Win_X2 V_Temp1
  mul V_Win_X2 V_Length
  shiftr V_Win_X2 12
  cos V_Win_Y2 V_Temp1
  mul V_Win_Y2 V_Length
  shiftr V_Win_Y2 12

  add V_Win_X2 V_Win_X1
  add V_Win_Y2 V_Win_Y1

  setarrayseq A_State_Draw V_Win_X1 V_Win_Y1 V_Win_X2 V_Win_Y2 V_Color V_Rgb
  state S_Draw_Vector

  // "N"

  set V_Temp1 V_Ang
  add V_Temp1 1024
  sin V_Sin V_Temp1
  mul V_Sin 3
  cos V_Cos V_Temp1
  mul V_Cos 3

  set V_Win_X1 114688
  set V_Win_Y1 102400
  set V_Win_X2 114688
  set V_Win_Y2 122880
  add V_Win_X1 V_Sin
  add V_Win_Y1 V_Cos
  add V_Win_X2 V_Sin
  add V_Win_Y2 V_Cos

  setarrayseq A_State_Draw V_Win_X1 V_Win_Y1 V_Win_X2 V_Win_Y2 V_Color V_Rgb
  state S_Draw_Vector

  set V_Win_X2 131072
  add V_Win_X2 V_Sin

  setarrayseq A_State_Draw V_Win_X1 V_Win_Y1 V_Win_X2 V_Win_Y2 V_Color V_Rgb
  state S_Draw_Vector

  set V_Win_X1 131072
  add V_Win_X1 V_Sin

  setarrayseq A_State_Draw V_Win_X1 V_Win_Y1 V_Win_X2 V_Win_Y2 V_Color V_Rgb
  state S_Draw_Vector
endevent

// Crosshair is not transparent

appendevent EVENT_DISPLAYCROSSHAIR
  set RETURN -1

  set V_X 160
  set V_Temp1 player[].look_ang
  shiftr V_Temp1 1
  sub V_X V_Temp1

  scalevar V_Scale 65536 userdef[].crosshairscale 100

  ife D_Enable_Pal_Ver 1
    setarrayseq A_State_Draw V_X 100 V_Scale 0 CROSSHAIR 0 CROSSHAIR_PAL 0 0 D_Aspect_Psx
  else
    setarrayseq A_State_Draw V_X 90 V_Scale 0 CROSSHAIR 0 CROSSHAIR_PAL 0 0 D_Aspect_Psx
  state S_Draw_View_Sprite
endevent

/*
appendevent EVENT_DISPLAYPOINTER
  set RETURN -1

  setarrayseq A_State_Draw userdef[].return 1 userdef[].return 2 65536 0 CROSSHAIR 0 CROSSHAIR_PAL ROTATESPRITE_FULL16 0 D_Aspect_Pc
  state S_Draw_View_Sprite
endevent
*/

// Quotes

appendevent EVENT_DISPLAYSTART
  ife V_Mark_DISPLAYSBAR 0
  {
    set V_Old_fta player[].fta
    setplayer[].fta 0
  }
endevent

appendevent EVENT_DISPLAYREST
  ife V_Mark_DISPLAYSBAR 1
    setplayer[].fta V_Old_fta
endevent

appendevent EVENT_DISPLAYSBAR
  ifand player[].gm MODE_DEMO
  {
    // Demo message

    set V_Shade totalclock
    shiftr V_Shade 1
    and V_Shade 15

    set V_Pal totalclock
    shiftr V_Pal 5
    and V_Pal 1

    // redefinequote D_Quote_Temp1 PRESS ANY BUTTON
    redefinequote D_Quote_Temp1 PRESS ANY KEY

    setarrayseq A_State_Draw BIGALPHANUM 160 14 65536 0 0 D_Quote_Temp1 V_Shade V_Pal RS_TOPLEFT 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Psx_or_D_Aspect_T
    state S_Draw_Quote
  }
  else
  ifg V_Old_fta 0
  {
    switch player[].ftq
    default
      set V_Aspect D_Aspect_Psx_or_D_Aspect_T
      set V_Y 8
    break
    case QUOTE_RESERVED
    case QUOTE_RESERVED2
    case QUOTE_RESERVED3
      set V_Aspect D_Aspect_Psx_or_D_Aspect_B
      ifg userdef[].screen_size 0
        set V_Y 151
      else
        set V_Y 188
    break
    endswitch

    // Don't fade at the end

    setarrayseq A_State_Draw STARTALPHANUM 160 V_Y 65536 0 0 player[].ftq 0 0 RS_TOPLEFT 0 D_Font_X_Between TEXT_XCENTER V_Aspect
    state S_Draw_Quote
  }
endevent

// Inventory bar

appendevent EVENT_DISPLAYSTART
  ife V_Mark_DISPLAYSTART 1
    break
  set V_Old_invdisptime player[].invdisptime
  setplayer[].invdisptime 0
endevent

appendevent EVENT_DISPLAYREST
  ife V_Mark_DISPLAYSTART 0
    break
  setplayer[].invdisptime V_Old_invdisptime
endevent

appendevent EVENT_DISPLAYSBAR
  ifg V_Old_invdisptime 0
  {
    // If any inventory is avaiable
    set V_Count 0
    for V_This_Inv range D_Max_Inv
    {
      add V_This_Inv 1
      set V_State_Inv V_This_Inv
      state S_Check_Inv_Amount
      add V_Count V_State_True
    }
    ifg V_Count 0
    {
      set V_X 10485760
      set V_Temp1 V_Count
      mul V_Temp1 720896
      sub V_X V_Temp1

      ifg userdef[].screen_size 4
        set V_Y 10092544
      else
        set V_Y 11272192

      ifg userdef[].screen_size 4
      {
        set V_Temp1 tilesizy[BOTTOMSTATUSBAR]
        shiftl V_Temp1 15
        add V_Y V_Temp1

        ife userdef[].statusbarmode 1
          shiftl V_Temp1 1
        scalevar V_Temp1 V_Temp1 userdef[].statusbarscale 100
        sub V_Y V_Temp1
      }
      else
      ife userdef[].screen_size 4
      {
        ife userdef[].althud 1
        {
          scalevar V_Temp1 1638400 userdef[].statusbarscale 100
          sub V_Y V_Temp1
        }
        else
        {
          ifmultiplayer
            set V_Temp1 3670016
          else
            set V_Temp1 4259840
          scalevar V_Temp1 V_Temp1 userdef[].statusbarscale 100
          add V_X V_Temp1
        }
      }

      for V_This_Inv range D_Max_Inv
      {
        add V_This_Inv 1
        set V_State_Inv V_This_Inv
        state S_Check_Inv_Amount
        ife V_State_True 1
        {
          set V_X2 V_X
          set V_Y2 V_Y

          // Use shade to indicate the selected icon instead of ARROW
          ife player[].inven_icon V_This_Inv
            set V_Shade 0
          else
            set V_Shade 16

          switch V_This_Inv
          case ICON_FIRSTAID
            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 FIRSTAID_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          case ICON_STEROIDS
            add V_X2 65536

            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 STEROIDS_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          case ICON_HOLODUKE
            add V_X2 65536

            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 HOLODUKE_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          case ICON_JETPACK
            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 JETPACK_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          case ICON_HEATS
            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 HEAT_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          case ICON_SCUBA
            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 AIRTANK_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          case ICON_BOOTS
            sub V_Y2 65536

            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 BOOT_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          case ICON_TRIPBOMB
            setarrayseq A_State_Draw V_X2 V_Y2 65536 0 TRIPBOMB_ICON V_Shade 0 2064 0 D_Aspect_Psx_or_D_Aspect_B // RS_TOPLEFT (16), ROTATESPRITE_FULL16 (2048)
            state S_Draw_View_Sprite
          break
          endswitch

          add V_X 1441792
        }
      }
    }
  }
endevent

// Status bar

defstate S_Display_Sbar_Inv
  getarrayseq A_State_Sbar V_Sbar_X V_Sbar_Y V_Sbar_Orient V_Sbar_Aspect

  set V_X V_Sbar_X
  set V_Y V_Sbar_Y

  switch player[].inven_icon
  case ICON_FIRSTAID
    set V_Picnum FIRSTAID_ICON
  break
  case ICON_STEROIDS
    add V_X 1
    set V_Picnum STEROIDS_ICON
  break
  case ICON_HOLODUKE
    sub V_Y 2
    set V_Picnum HOLODUKE_ICON
  break
  case ICON_JETPACK
    set V_Picnum JETPACK_ICON
  break
  case ICON_HEATS
    set V_Picnum HEAT_ICON
  break
  case ICON_SCUBA
    set V_Picnum AIRTANK_ICON
  break
  case ICON_BOOTS
    set V_Picnum BOOT_ICON
  break
  case ICON_TRIPBOMB
    sub V_Y 1
    set V_Picnum TRIPBOMB_ICON
  break
  endswitch

  or V_Sbar_Orient RS_TOPLEFT

  setarrayseq A_State_Draw V_X V_Y 65536 0 V_Picnum 0 0 V_Sbar_Orient 0 V_Sbar_Aspect
  state S_Draw_Sbar_Sprite

  set V_X V_Sbar_X
  set V_Y V_Sbar_Y

  add V_X 31
  add V_Y 8

  // -1 = Skip
  // 0 = Off
  // 1 = On
  // 2 = Auto

  switch player[].inven_icon
  case ICON_FIRSTAID
    set V_Amount player[].firstaid_amount

    set V_Mode -1
  break
  case ICON_STEROIDS
    set V_Amount player[].steroids_amount
    add V_Amount 3
    shiftr V_Amount 2

    set V_Mode -1
  break
  case ICON_HOLODUKE
    set V_Amount player[].holoduke_amount
    add V_Amount 15
    div V_Amount 24

    ifn player[].holoduke_on -1
      set V_Mode 1
    else
      set V_Mode 0
  break
  case ICON_JETPACK
    set V_Amount player[].jetpack_amount
    add V_Amount 15
    shiftr V_Amount 4

    ifn player[].jetpack_on 0
      set V_Mode 1
    else
      set V_Mode 0
  break
  case ICON_HEATS
    set V_Amount player[].heat_amount
    div V_Amount 12

    set V_Mode player[].heat_on
  break
  case ICON_SCUBA
    set V_Amount player[].scuba_amount
    add V_Amount 63
    shiftr V_Amount 6

    set V_Mode 2
  break
  case ICON_BOOTS
    set V_Amount player[].boot_amount
    shiftr V_Amount 1

    set V_Mode 2
  break
  case ICON_TRIPBOMB
    set V_Amount player[].ammo_amount TRIPBOMB_WEAPON

    set V_Mode -1
  break
  endswitch

  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Amount

  setarrayseq A_State_Draw THREEBYFIVE V_X V_Y 65536 0 0 D_Quote_Temp1 0 0 V_Sbar_Orient 0 1 TEXT_XRIGHT V_Sbar_Aspect
  state S_Draw_Sbar_Quote

  ifn player[].inven_icon 8 // No % in tripbomb
  {
    add V_X 1
    redefinequote D_Quote_Temp1 %

    setarrayseq A_State_Draw D_Old_MINIFONT V_X V_Y 65536 0 0 D_Quote_Temp1 0 0 V_Sbar_Orient 0 1 0 V_Sbar_Aspect
    state S_Draw_Sbar_Quote
  }

  ifn V_Mode -1
  {
    set V_X V_Sbar_X
    set V_Y V_Sbar_Y

    add V_X 27
    sub V_Y 1

    ife V_Mode 0
      redefinequote D_Quote_Temp1 OFF
    else
    ife V_Mode 1
      redefinequote D_Quote_Temp1 ON
    else
    ife V_Mode 2
      redefinequote D_Quote_Temp1 AUTO

    setarrayseq A_State_Draw D_Old_MINIFONT V_X V_Y 65536 0 0 D_Quote_Temp1 0 0 V_Sbar_Orient 0 1 TEXT_XCENTER V_Sbar_Aspect
    state S_Draw_Sbar_Quote
  }
ends

defstate S_Display_Weap_Num
  set V_X V_Sbar_X
  set V_Y V_Sbar_Y

  ife V_Sbar_Num -1 // "T"
  {
    sub V_X 3
    add V_Y 2
    set V_Picnum D_Old_MINIFONT

    redefinequote D_Quote_Temp1 T
  }
  else
  {
    sub V_X 4
    add V_Y 4
    set V_Picnum THREEBYFIVE

    redefinequote D_Quote_Temp1 %d
    qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Sbar_Num
  }

  // Tripbomb is never avaiable or in use
  ife player[].curr_weapon HANDREMOTE_WEAPON
  ife V_Sbar_Weap HANDBOMB_WEAPON
    set V_Shade 0
  else
  ife player[].curr_weapon V_Sbar_Weap
  ifn V_Sbar_Weap TRIPBOMB_WEAPON // Fix flickering
    set V_Shade 0
  else
  ife player[].gotweapon V_Sbar_Weap 1
  ifn V_Sbar_Weap TRIPBOMB_WEAPON // Fix flickering
    set V_Shade 3
  else
    set V_Shade 12

  setarrayseq A_State_Draw V_Picnum V_X V_Y 65536 0 0 D_Quote_Temp1 V_Shade 0 V_Sbar_Orient 0 1 TEXT_XRIGHT V_Sbar_Aspect
  state S_Draw_Sbar_Quote

  set V_X V_Sbar_X
  set V_Y V_Sbar_Y

  sub V_X 4
  add V_Y 4

  ifg V_Shade 0
    add V_Shade 9

  setarrayseq A_State_Draw V_X V_Y 65536 0 THREEBYFIVE_add_10 V_Shade 0 V_Sbar_Orient 0 V_Sbar_Aspect
  state S_Draw_Sbar_Sprite
ends

defstate S_Display_Weap_Num_2_Digits
  getarrayseq A_State_Sbar V_Sbar_X V_Sbar_Y V_Sbar_Num V_Sbar_Weap V_Sbar_Orient V_Sbar_Aspect

  state S_Display_Weap_Num

  set V_X V_Sbar_X
  set V_Y V_Sbar_Y

  add V_X 10
  add V_Y 4

  setarrayseq A_State_Draw V_X V_Y 65536 0 THREEBYFIVE_add_11 V_Shade 0 V_Sbar_Orient 0 V_Sbar_Aspect
  state S_Draw_Sbar_Sprite

  set V_X V_Sbar_X

  add V_X 7

  set V_Value player[].ammo_amount V_Sbar_Weap
  ifg V_Value 99
    set V_Value 99
  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

  setarrayseq A_State_Draw THREEBYFIVE V_X V_Y 65536 0 0 D_Quote_Temp1 V_Shade 0 V_Sbar_Orient 0 1 TEXT_XRIGHT V_Sbar_Aspect
  state S_Draw_Sbar_Quote

  set V_X V_Sbar_X

  add V_X 20

  set V_Value player[].max_ammo_amount V_Sbar_Weap
  ifg V_Value 99
    set V_Value 99
  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

  setarrayseq A_State_Draw THREEBYFIVE V_X V_Y 65536 0 0 D_Quote_Temp1 V_Shade 0 V_Sbar_Orient 0 1 TEXT_XRIGHT V_Sbar_Aspect
  state S_Draw_Sbar_Quote
ends

defstate S_Display_Weap_Num_3_Digits
  getarrayseq A_State_Sbar V_Sbar_X V_Sbar_Y V_Sbar_Num V_Sbar_Weap V_Sbar_Orient V_Sbar_Aspect

  state S_Display_Weap_Num

  set V_X V_Sbar_X
  set V_Y V_Sbar_Y

  add V_X 14
  add V_Y 4

  setarrayseq A_State_Draw V_X V_Y 65536 0 THREEBYFIVE_add_11 V_Shade 0 V_Sbar_Orient 0 V_Sbar_Aspect
  state S_Draw_Sbar_Sprite

  set V_X V_Sbar_X

  add V_X 11

  set V_Value player[].ammo_amount V_Sbar_Weap
  ifg V_Value 999
    set V_Value 999
  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

  setarrayseq A_State_Draw THREEBYFIVE V_X V_Y 65536 0 0 D_Quote_Temp1 V_Shade 0 V_Sbar_Orient 0 1 TEXT_XRIGHT V_Sbar_Aspect
  state S_Draw_Sbar_Quote

  set V_X V_Sbar_X

  add V_X 28

  set V_Value player[].max_ammo_amount V_Sbar_Weap
  ifg V_Value 999
    set V_Value 999
  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

  setarrayseq A_State_Draw THREEBYFIVE V_X V_Y 65536 0 0 D_Quote_Temp1 V_Shade 0 V_Sbar_Orient 0 1 TEXT_XRIGHT V_Sbar_Aspect
  state S_Draw_Sbar_Quote
ends

defstate S_Display_Sbar
  // There are 3 types of status bar on PSX
  ifand player[].gm MODE_DEMO
    set V_Picnum D_Sbar_3
  else
  ifmultiplayer
  ifand gametype_flags GAMETYPE_FRAGBAR
    set V_Picnum D_Sbar_2
  else
    set V_Picnum D_Sbar_1

  setarrayseq A_State_Draw 160 197 65536 0 V_Picnum 0 0 0 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Draw_Sbar_Sprite

  ifand player[].gm MODE_DEMO
    break

  // Draw black rectangles in the areas that are updated

  /* setarrayseq A_State_Sbar 18022400 12845056 19595264 13631488
  state S_Draw_Sbar_Black_Rectangle

  setarrayseq A_State_Sbar 1310720 12910592 2883584 13565952
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 3407872 12910592 4980736 13565952
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 12779520 12910592 14417920 13565952
  state S_Draw_Sbar_Black_Rectangle

  setarrayseq A_State_Sbar 6291456 12582912 7077888 12910592
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 7405568 12582912 8192000 12910592
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 6291456 12976128 7077888 13303808
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 7405568 12976128 8192000 13303808
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 6291456 13369344 7077888 13697024
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 7405568 13369344 8192000 13697024
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 8716288 12582912 9240576 12910592
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 9568256 12582912 10092544 12910592
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 8716288 12976128 9240576 13303808
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 9568256 12976128 10092544 13303808
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 8716288 13369344 9240576 13697024
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 9568256 13369344 10092544 13697024
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 10747904 12582912 11272192 12910592
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 11599872 12582912 12124160 12910592
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 10747904 12976128 11272192 13303808
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 11599872 12976128 12124160 13303808
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 10747904 13369344 11272192 13697024
  state S_Draw_Sbar_Black_Rectangle
  setarrayseq A_State_Sbar 11599872 13369344 12124160 13697024
  state S_Draw_Sbar_Black_Rectangle

  setarrayseq A_State_Sbar 15138816 12582912 17432576 13762560
  state S_Draw_Sbar_Black_Rectangle */

  ifmultiplayer
  ifand gametype_flags GAMETYPE_FRAGBAR
  {
    set V_Value player[].frag
    sub V_Value player[].fraggedself
    redefinequote D_Quote_Temp1 %d
    qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

    setarrayseq A_State_Draw DIGITALNUM 286 197 65536 0 0 D_Quote_Temp1 0 0 RS_TOPLEFT 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Psx_or_D_Aspect_B
    state S_Draw_Sbar_Quote
  }
  else
  {
    ifand player[].got_access 4
    {
      setarrayseq A_State_Draw 280 198 65536 0 ACCESS_ICON 0 23 0 0 D_Aspect_Psx_or_D_Aspect_B
      state S_Draw_Sbar_Sprite
    }
    ifand player[].got_access 2
    {
      setarrayseq A_State_Draw 293 198 65536 0 ACCESS_ICON 0 21 0 0 D_Aspect_Psx_or_D_Aspect_B
      state S_Draw_Sbar_Sprite
    }
    ifand player[].got_access 1
    {
      setarrayseq A_State_Draw 286 205 65536 0 ACCESS_ICON 0 0 0 0 D_Aspect_Psx_or_D_Aspect_B
      state S_Draw_Sbar_Sprite
    }
  }

  set V_Value player[].last_extra
  ifspritepal 1
  ifl V_Value 2
    set V_Value 1
  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

  setarrayseq A_State_Draw DIGITALNUM 32 197 65536 0 0 D_Quote_Temp1 0 0 RS_TOPLEFT 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Psx_or_D_Aspect_B
  state S_Draw_Sbar_Quote

  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].shield_amount

  setarrayseq A_State_Draw DIGITALNUM 64 197 65536 0 0 D_Quote_Temp1 0 0 RS_TOPLEFT 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Psx_or_D_Aspect_B
  state S_Draw_Sbar_Quote

  redefinequote D_Quote_Temp1 %d
  ife player[].curr_weapon HANDREMOTE_WEAPON
    qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].ammo_amount HANDBOMB_WEAPON
  else
    qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].ammo_amount player[].curr_weapon

  setarrayseq A_State_Draw DIGITALNUM 208 197 65536 0 0 D_Quote_Temp1 0 0 RS_TOPLEFT 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Psx_or_D_Aspect_B
  state S_Draw_Sbar_Quote

  setarrayseq A_State_Sbar 96 192 1 PISTOL_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_3_Digits
  setarrayseq A_State_Sbar 96 198 2 SHOTGUN_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_3_Digits
  setarrayseq A_State_Sbar 96 204 3 CHAINGUN_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_3_Digits
  setarrayseq A_State_Sbar 133 192 4 RPG_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_2_Digits
  setarrayseq A_State_Sbar 133 198 5 HANDBOMB_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_2_Digits
  ife player[].bsubweapon GROW_WEAPON 1
    setarrayseq A_State_Sbar 133 204 6 GROW_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  else
    setarrayseq A_State_Sbar 133 204 6 SHRINKER_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_2_Digits
  setarrayseq A_State_Sbar 164 192 7 DEVISTATOR_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_2_Digits
  setarrayseq A_State_Sbar 164 198 8 FREEZE_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_2_Digits
  setarrayseq A_State_Sbar 164 204 -1 TRIPBOMB_WEAPON 0 D_Aspect_Psx_or_D_Aspect_B
  state S_Display_Weap_Num_2_Digits

  ifn player[].inven_icon ICON_NONE
  {
    setarrayseq A_State_Sbar 231 194 0 D_Aspect_Psx_or_D_Aspect_B
    state S_Display_Sbar_Inv
  }
ends

defstate S_Display_Mini_Sbar
  setarrayseq A_State_Draw 5 172 65536 0 HEALTHBOX 0 0 272 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
  state S_Draw_Sbar_Sprite
  ifn player[].inven_icon ICON_NONE
  {
    setarrayseq A_State_Draw 69 170 65536 0 INVENTORYBOX 0 0 272 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
    state S_Draw_Sbar_Sprite
  }

  redefinequote D_Quote_Temp1 %d
  set V_Value player[].last_extra
  ifspritepal 1
  ifl V_Value 2
    set V_Value 1
  qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

  setarrayseq A_State_Draw DIGITALNUM 20 183 65536 0 0 D_Quote_Temp1 0 0 272 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
  state S_Draw_Sbar_Quote

  setarrayseq A_State_Draw 37 172 65536 0 AMMOBOX 0 0 272 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
  state S_Draw_Sbar_Sprite

  redefinequote D_Quote_Temp1 %d
  ife player[].curr_weapon HANDREMOTE_WEAPON
    qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].ammo_amount HANDBOMB_WEAPON
  else
    qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].ammo_amount player[].curr_weapon

  setarrayseq A_State_Draw DIGITALNUM 52 183 65536 0 0 D_Quote_Temp1 0 0 272 0 D_Font_X_Between TEXT_XCENTER D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
  state S_Draw_Sbar_Quote

  ifn player[].inven_icon ICON_NONE
  {
    // 1px down on PSX
    setarrayseq A_State_Sbar 73 180 RS_ALIGN_L D_Aspect_Pc_or_D_Aspect_B
    state S_Display_Sbar_Inv
  }
ends

// Eduke32 new status bar

defstate S_Display_Alt_Hud
  set V_Draw_Shadow 1

  setarrayseq A_State_Draw 2 179 49152 0 COLA 0 0 272 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
  state S_Draw_Sbar_Sprite

  set V_Temp1 1
  set V_Temp2 player[].max_player_health
  div V_Temp2 4
  ifle player[].last_extra V_Temp1
  {
    set V_Continue totalclock
    shiftr V_Continue 5
    and V_Continue 1
  }
  else
    set V_Continue 1
  ife V_Continue 1
  {
    ifg player[].last_extra player[].max_player_health
    {
      set V_Shade totalclock
      shiftl V_Shade 5
      sin V_Shade V_Shade
      shiftr V_Shade 11
    }
    else
      set V_Shade 0

    set V_Value player[].last_extra
    ifspritepal 1
    ifl V_Value 2
      set V_Value 1
    redefinequote D_Quote_Temp1 %d
    qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value

    setarrayseq A_State_Draw BIGALPHANUM 40 178 65536 0 0 D_Quote_Temp1 V_Shade 0 272 0 1 TEXT_XCENTER D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
    state S_Draw_Sbar_Quote
  }

  setarrayseq A_State_Draw 62 175 49152 0 SHIELD 0 0 272 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
  state S_Draw_Sbar_Sprite

  redefinequote D_Quote_Temp1 %d
  qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].shield_amount

  setarrayseq A_State_Draw BIGALPHANUM 105 178 65536 0 0 D_Quote_Temp1 0 0 272 0 1 TEXT_XCENTER D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
  state S_Draw_Sbar_Quote

  ifn player[].inven_icon ICON_NONE
  {
    // 1px down on PSX
    setarrayseq A_State_Sbar 129 177 RS_ALIGN_L D_Aspect_Pc_or_D_Aspect_B
    state S_Display_Sbar_Inv
  }

  ifg player[].got_access 0
  {
    ifand player[].got_access 1
    {
      setarrayseq A_State_Draw 281 157 32768 0 ACCESSCARD 0 0 528 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_R (512)
      state S_Draw_Sbar_Sprite
    }
    ifand player[].got_access 4
    {
      setarrayseq A_State_Draw 286 159 32768 0 ACCESSCARD 0 23 528 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_R (512)
      state S_Draw_Sbar_Sprite
    }
    ifand player[].got_access 2
    {
      setarrayseq A_State_Draw 291 161 32768 0 ACCESSCARD 0 21 528 0 D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_R (512)
      state S_Draw_Sbar_Sprite
    }
  }

  ifn player[].curr_weapon KNEE_WEAPON
  {
    switch player[].curr_weapon
    case KNEE_WEAPON
      set V_Picnum BOOTS
    break
    case PISTOL_WEAPON
      set V_Picnum AMMO
    break
    case SHOTGUN_WEAPON
      set V_Picnum SHOTGUNAMMO
    break
    case CHAINGUN_WEAPON
      set V_Picnum BATTERYAMMO
    break
    case RPG_WEAPON
      set V_Picnum RPGAMMO
    break
    case HANDBOMB_WEAPON
    case HANDREMOTE_WEAPON
      set V_Picnum HBOMBAMMO
    break
    case SHRINKER_WEAPON
      set V_Picnum CRYSTALAMMO
    break
    case GROW_WEAPON
      set V_Picnum GROWAMMO
    break
    case DEVISTATOR_WEAPON
      set V_Picnum DEVISTATORAMMO
    break
    case TRIPBOMB_WEAPON
      set V_Picnum TRIPBOMBSPRITE
    break
    case FREEZE_WEAPON
      set V_Picnum FREEZEAMMO_add_1
    break
    endswitch

    ifge tilesizy[V_Picnum] 50
      set V_Scale 16384
    else
      set V_Scale 32768

    setarrayseq A_State_Draw 263 185 V_Scale 0 V_Picnum 0 0 RS_ALIGN_R 0 D_Aspect_Pc_or_D_Aspect_B
    state S_Draw_Sbar_Sprite

    ife player[].curr_weapon HANDREMOTE_WEAPON
      set V_Weap HANDBOMB_WEAPON
    else
      set V_Weap player[].curr_weapon
    set V_Temp1 player[].max_ammo_amount V_Weap
    div V_Temp1 10
    ifle player[].ammo_amount V_Weap V_Temp1
    {
      set V_Continue totalclock
      shiftr V_Continue 5
      and V_Continue 1
    }
    else
      set V_Continue 1
    ife V_Continue 1
    {
      redefinequote D_Quote_Temp1 %d
      qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].ammo_amount V_Weap

      setarrayseq A_State_Draw BIGALPHANUM 299 178 65536 0 0 D_Quote_Temp1 0 0 528 0 1 TEXT_XCENTER D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_R (512)
      state S_Draw_Sbar_Quote
    }
  }

  set V_Draw_Shadow 0
ends

// Display status bar

appendevent EVENT_DISPLAYSBAR
  set RETURN -1

  ifl userdef[].screen_size 4
    break

  ife userdef[].screen_size 4
  ife userdef[].althud 1
    state S_Display_Alt_Hud
  else
  {
    ife userdef[].screen_size 4
      state S_Display_Mini_Sbar
    else
      state S_Display_Sbar
  }
endevent

// Level stats
// Remove palettes

appendevent EVENT_DISPLAYLEVELSTATS
  set RETURN -1
  set V_Mark_DISPLAYLEVELSTATS 1
endevent

appendevent EVENT_DISPLAYSBAR
  ife V_Mark_DISPLAYLEVELSTATS 1
  {
    set V_Mark_DISPLAYLEVELSTATS 0

    set V_Temp1 STARTALPHANUM
    add V_Temp1 32
    set V_X_Between tilesizx[V_Temp1]

    set V_Value player[].player_par
    div V_Value REALGAMETICSPERSEC
    div V_Value 60
    set V_Value2 player[].player_par
    div V_Value2 REALGAMETICSPERSEC
    mod V_Value2 60
    set V_Value4 player[].player_par
    mod V_Value4 REALGAMETICSPERSEC
    mul V_Value4 33
    div V_Value4 10
    set V_Value3 V_Value2
    div V_Value2 10
    mod V_Value3 10
    set V_Value5 V_Value4
    div V_Value4 10
    mod V_Value5 10
    redefinequote D_Quote_Temp1 T:^15%d:%d%d.%d%d
    qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value V_Value2 V_Value3 V_Value4 V_Value5

    setarrayseq A_State_Draw STARTALPHANUM 2 177 65536 0 0 D_Quote_Temp1 0 10 272 0 V_X_Between TEXT_XOFFSETZERO D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
    state S_Draw_Stats_Quote

    ifmultiplayer
    ifand gametype_flags GAMETYPE_PLAYERSFRIENDLY // GAMETYPE_FRAGBAR
    {
      redefinequote D_Quote_Temp1 K:^15%d
      set V_Value player[].frag
      sub V_Value player[].fraggedself
      qsprintf D_Quote_Temp1 D_Quote_Temp1 V_Value
    }
    else
    {
      set V_Value player[].max_actors_killed
      ifl V_Value player[].actors_killed
        set V_Value player[].actors_killed

      ife userdef[].respawn_monsters 1
        redefinequote D_Quote_Temp1 K:^15%d
      else
      ifge player[].actors_killed player[].max_actors_killed
        redefinequote D_Quote_Temp1 K:%d/%d
      else
        redefinequote D_Quote_Temp1 K:^15%d/%d
      qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].actors_killed V_Value
    }

    setarrayseq A_State_Draw STARTALPHANUM 2 184 65536 0 0 D_Quote_Temp1 0 10 272 0 V_X_Between TEXT_XOFFSETZERO D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
    state S_Draw_Stats_Quote

    ifl player[].secret_rooms player[].max_secret_rooms
      redefinequote D_Quote_Temp1 S:^15%d/%d
    else
      redefinequote D_Quote_Temp1 S:%d/%d
    qsprintf D_Quote_Temp1 D_Quote_Temp1 player[].secret_rooms player[].max_secret_rooms

    setarrayseq A_State_Draw STARTALPHANUM 2 191 65536 0 0 D_Quote_Temp1 0 10 272 0 V_X_Between TEXT_XOFFSETZERO D_Aspect_Pc_or_D_Aspect_B // RS_TOPLEFT (16), RS_ALIGN_L (256)
    state S_Draw_Stats_Quote
  }
endevent