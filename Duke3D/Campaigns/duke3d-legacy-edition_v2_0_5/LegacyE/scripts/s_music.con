/*
--------------------------------------------------------------------------------
Duke Nukem 3D - Blast Edition Version 2.0
By Marcos
2022 - Space In a Bottle
*/

//Music system

gamearray musicSamples 12

var loopMusic YES 0
var loopSample 0 0
var endSample 0 0
var endOfMusic 0 0
var endingSample 0 0
var sampleIndex 0 0
var manualMusic NO 0
var musicIsEnding NO 0

var music_load_pos 0 0

include sys/music_defs.con

gamearray levelmusic_play 165

var fadeMusicStart 0 0
var fadeMusicTime 0 0
var fadeMusicCounter 0 0
var fadeMusicAdder 0 0
var fadeMusicVolumeSet 0 0 

defstate LevelMusicDefs

	setarray levelmusic_play[0] E1L1_Load
	setarray levelmusic_play[1] E1L1_Reg
	setarray levelmusic_play[2] E1L1_Action
	setarray levelmusic_play[3] E1L2_Load
	setarray levelmusic_play[4] E1L2_Reg
	setarray levelmusic_play[5] E1L2_Action
	setarray levelmusic_play[6] E1L3_Load
	setarray levelmusic_play[7] E1L3_Reg
	setarray levelmusic_play[8] E1L3_Action
	setarray levelmusic_play[9] E1L4_Load
	setarray levelmusic_play[10] E1L4_Reg
	setarray levelmusic_play[11] E1L4_Action
	setarray levelmusic_play[12] E1L5_Load
	setarray levelmusic_play[13] E1L5_Reg
	setarray levelmusic_play[14] E1L5_Action
	setarray levelmusic_play[15] E1L6_Load
	setarray levelmusic_play[16] E1L6_Reg
	setarray levelmusic_play[17] E1L6_Action
	setarray levelmusic_play[18] E1L7_Load
	setarray levelmusic_play[19] E1L7_Reg
	setarray levelmusic_play[20] E1L7_Action
	setarray levelmusic_play[21] E1L8_Load
	setarray levelmusic_play[22] E1L8_Reg
	setarray levelmusic_play[23] E1L8_Action
	setarray levelmusic_play[24] E1L9_Load
	setarray levelmusic_play[25] E1L9_Reg
	setarray levelmusic_play[26] E1L9_Action
	setarray levelmusic_play[27] E1L10_Load
	setarray levelmusic_play[28] E1L10_Reg
	setarray levelmusic_play[29] E1L10_Action
	setarray levelmusic_play[30] E1L11_Load
	setarray levelmusic_play[31] E1L11_Reg
	setarray levelmusic_play[32] E1L11_Action
	setarray levelmusic_play[33] E2L1_Load
	setarray levelmusic_play[34] E2L1_Reg
	setarray levelmusic_play[35] E2L1_Action
	setarray levelmusic_play[36] E2L2_Load
	setarray levelmusic_play[37] E2L2_Reg
	setarray levelmusic_play[38] E2L2_Action
	setarray levelmusic_play[39] E2L3_Load
	setarray levelmusic_play[40] E2L3_Reg
	setarray levelmusic_play[41] E2L3_Action
	setarray levelmusic_play[42] E2L4_Load
	setarray levelmusic_play[43] E2L4_Reg
	setarray levelmusic_play[44] E2L4_Action
	setarray levelmusic_play[45] E2L5_Load
	setarray levelmusic_play[46] E2L5_Reg
	setarray levelmusic_play[47] E2L5_Action
	setarray levelmusic_play[48] E2L6_Load
	setarray levelmusic_play[49] E2L6_Reg
	setarray levelmusic_play[50] E2L6_Action
	setarray levelmusic_play[51] E2L7_Load
	setarray levelmusic_play[52] E2L7_Reg
	setarray levelmusic_play[53] E2L7_Action
	setarray levelmusic_play[54] E2L8_Load
	setarray levelmusic_play[55] E2L8_Reg
	setarray levelmusic_play[56] E2L8_Action
	setarray levelmusic_play[57] E2L9_Load
	setarray levelmusic_play[58] E2L9_Reg
	setarray levelmusic_play[59] E2L9_Action
	setarray levelmusic_play[60] E2L10_Load
	setarray levelmusic_play[61] E2L10_Reg
	setarray levelmusic_play[62] E2L10_Action
	setarray levelmusic_play[63] E2L11_Load
	setarray levelmusic_play[64] E2L11_Reg
	setarray levelmusic_play[65] E2L11_Action
	setarray levelmusic_play[66] E3L1_Load
	setarray levelmusic_play[67] E3L1_Reg
	setarray levelmusic_play[68] E3L1_Action
	setarray levelmusic_play[69] E3L2_Load
	setarray levelmusic_play[70] E3L2_Reg
	setarray levelmusic_play[71] E3L2_Action
	setarray levelmusic_play[72] E3L3_Load
	setarray levelmusic_play[73] E3L3_Reg
	setarray levelmusic_play[74] E3L3_Action
	setarray levelmusic_play[75] E3L4_Load
	setarray levelmusic_play[76] E3L4_Reg
	setarray levelmusic_play[77] E3L4_Action
	setarray levelmusic_play[78] E3L5_Load
	setarray levelmusic_play[79] E3L5_Reg
	setarray levelmusic_play[80] E3L5_Action
	setarray levelmusic_play[81] E3L6_Load
	setarray levelmusic_play[82] E3L6_Reg
	setarray levelmusic_play[83] E3L6_Action
	setarray levelmusic_play[84] E3L7_Load
	setarray levelmusic_play[85] E3L7_Reg
	setarray levelmusic_play[86] E3L7_Action
	setarray levelmusic_play[87] E3L8_Load
	setarray levelmusic_play[88] E3L8_Reg
	setarray levelmusic_play[89] E3L8_Action
	setarray levelmusic_play[90] E3L9_Load
	setarray levelmusic_play[91] E3L9_Reg
	setarray levelmusic_play[92] E3L9_Action
	setarray levelmusic_play[93] E3L10_Load
	setarray levelmusic_play[94] E3L10_Reg
	setarray levelmusic_play[95] E3L10_Action
	setarray levelmusic_play[96] E3L11_Load
	setarray levelmusic_play[97] E3L11_Reg
	setarray levelmusic_play[98] E3L11_Action
	setarray levelmusic_play[99] E4L1_Load
	setarray levelmusic_play[100] E4L1_Reg
	setarray levelmusic_play[101] E4L1_Action
	setarray levelmusic_play[102] E4L2_Load
	setarray levelmusic_play[103] E4L2_Reg
	setarray levelmusic_play[104] E4L2_Action
	setarray levelmusic_play[105] E4L3_Load
	setarray levelmusic_play[106] E4L3_Reg
	setarray levelmusic_play[107] E4L3_Action
	setarray levelmusic_play[108] E4L4_Load
	setarray levelmusic_play[109] E4L4_Reg
	setarray levelmusic_play[110] E4L4_Action
	setarray levelmusic_play[111] E4L5_Load
	setarray levelmusic_play[112] E4L5_Reg
	setarray levelmusic_play[113] E4L5_Action
	setarray levelmusic_play[114] E4L6_Load
	setarray levelmusic_play[115] E4L6_Reg
	setarray levelmusic_play[116] E4L6_Action
	setarray levelmusic_play[117] E4L7_Load
	setarray levelmusic_play[118] E4L7_Reg
	setarray levelmusic_play[119] E4L7_Action
	setarray levelmusic_play[120] E4L8_Load
	setarray levelmusic_play[121] E4L8_Reg
	setarray levelmusic_play[122] E4L8_Action
	setarray levelmusic_play[123] E4L9_Load
	setarray levelmusic_play[124] E4L9_Reg
	setarray levelmusic_play[125] E4L9_Action
	setarray levelmusic_play[126] E4L10_Load
	setarray levelmusic_play[127] E4L10_Reg
	setarray levelmusic_play[128] E4L10_Action
	setarray levelmusic_play[129] E4L11_Load
	setarray levelmusic_play[130] E4L11_Reg
	setarray levelmusic_play[131] E4L11_Action

ends

var m_tmp 0 0
var m_tmp2 0 0
var m_tmp3 0 0
var curr_music -1 0

defstate LoopMusic

	ife loopMusic 1
	{
		getmusicposition m_tmp
		ifge m_tmp endSample
			setmusicposition loopSample
	}
	else
	{
		getmusicposition m_tmp2
		
		ifge m_tmp2 endingSample
			set musicIsEnding YES
		else
			set musicIsEnding NO
	
		set m_tmp endOfMusic
		sub m_tmp 2048
		
		ifge m_tmp2 m_tmp
			stopallmusic
	}

ends

defstate NextSample

	add sampleIndex 2
	
	ifge sampleIndex 12
		set sampleIndex 0
		
	set loopSample musicSamples[sampleIndex]
	
	add sampleIndex 1
	
	ifge sampleIndex 12
		set sampleIndex 0
		
	set endSample musicSamples[sampleIndex]

ends

defstate SwapToNextSample

	set m_tmp sampleIndex
	add m_tmp 1
	
	ifge m_tmp 12
		set m_tmp 0
		
	setmusicposition musicSamples[m_tmp]

	state NextSample

ends

defstate FadeOutMusic

	ife fadeMusicStart 0
	{
		set fadeMusicVolumeSet userdef.configmusic
		set fadeMusicCounter fadeMusicTime
		setmusicvolume userdef.configmusic
		set fadeMusicAdder fadeMusicTime
		div fadeMusicAdder userdef.configmusic
		
		ifl fadeMusicAdder 1
			set fadeMusicAdder 1
		
		set fadeMusicStart 1
	}

ends

defstate FadeInMusic

	ife fadeMusicStart 0
	{
		set fadeMusicVolumeSet 0
		setmusicvolume 0
		set fadeMusicCounter totalclock
		set fadeMusicAdder fadeMusicTime
		div fadeMusicAdder userdef.configmusic
		
		ifl fadeMusicAdder 1
			set fadeMusicAdder 1
			
		add fadeMusicCounter fadeMusicAdder
		
		set fadeMusicStart 2
	}

ends

defstate MusicFadeState

	ife fadeMusicStart 1
	{
		ifg fadeMusicVolumeSet 0
		{
			ifge totalclock fadeMusicCounter
			{
				sub fadeMusicVolumeSet 1
				setmusicvolume fadeMusicVolumeSet
				
				set fadeMusicCounter totalclock
				add fadeMusicCounter fadeMusicAdder
			}
		}
		else
		{
			setmusicvolume 0
			set fadeMusicStart 0
		}
	}
	else ife fadeMusicStart 2
	{
		ifl fadeMusicVolumeSet userdef.configmusic
		{
			ifge totalclock fadeMusicCounter
			{
				add fadeMusicVolumeSet 1
				setmusicvolume fadeMusicVolumeSet
				
				set fadeMusicCounter totalclock
				add fadeMusicCounter fadeMusicAdder
			}
		}
		else
		{
			setmusicvolume userdef.configmusic
			set fadeMusicStart 0
		}
	}
	
ends

defstate PlayLoadingMusic

	stopallmusic
	
	ife LEVEL 11
	ife VOLUME 2
	{
		set m_tmp3 LEVEL
		setu[].level_number 4
	}
	
	ife userdef.user_map 1
	{
		getu[].um_music m_tmp3
		
		ifn m_tmp3 0
		{
			ifl m_tmp3 2000
			{
				setu[].volume_number 0
				
				set m_tmp m_tmp3
				div m_tmp 100
				
				mul m_tmp 3
				
				set m_tmp2 m_tmp3
				mod m_tmp2 100
				div m_tmp2 10
				
				add m_tmp m_tmp2
			}
			else ifge m_tmp3 2000
			ifl m_tmp3 4000
			{
				setu[].volume_number 1
				
				sub m_tmp3 2000
				
				set m_tmp m_tmp3
				div m_tmp 100
				
				mul m_tmp 3
				
				set m_tmp2 m_tmp3
				mod m_tmp2 100
				div m_tmp2 10
				
				add m_tmp m_tmp2
			}
			else ifge m_tmp3 4000
			ifl m_tmp3 6000
			{
				setu[].volume_number 2
				
				sub m_tmp3 4000
				
				set m_tmp m_tmp3
				div m_tmp 100
				
				mul m_tmp 3
				
				set m_tmp2 m_tmp3
				mod m_tmp2 100
				div m_tmp2 10
				
				add m_tmp m_tmp2
			}
			else ifge m_tmp3 6000
			ifl m_tmp3 8000
			{
				setu[].volume_number 3
				
				sub m_tmp3 6000
				
				set m_tmp m_tmp3
				div m_tmp 100
				
				mul m_tmp 3
				
				set m_tmp2 m_tmp3
				mod m_tmp2 100
				div m_tmp2 10
				
				add m_tmp m_tmp2
			}
			else
			{
				setu[].volume_number 7
				set m_tmp 0
			}
			
			starttrackslot VOLUME m_tmp
			set curr_music 0
			
			setu[].volume_number 0
			
			break
		}
		else
			break
	}
	
	set m_tmp LEVEL
	mul m_tmp 3
	
	set m_tmp2 33
	mul m_tmp2 VOLUME
	
	add m_tmp m_tmp2
	
	set m_tmp2 LEVEL
	mul m_tmp2 3
	
	ifge levelmusic_play[m_tmp] 1
	{
		starttrackslot VOLUME m_tmp2
		setmusicposition music_load_pos
		set curr_music 0
	}
	else
		set curr_music -1	
		
	ife LEVEL 11
	ife VOLUME 2
		setu[].level_number m_tmp3

ends

defstate PlayRegularMusic

	set m_tmp LEVEL
	mul m_tmp 3
	add m_tmp 1
	
	set m_tmp2 33
	mul m_tmp2 VOLUME
	
	add m_tmp m_tmp2
	
	set m_tmp2 LEVEL
	mul m_tmp2 3
	add m_tmp2 1
	
	ifge levelmusic_play[m_tmp] 1
	{
		ife music_reset 0
		{
			starttrackslot VOLUME m_tmp2
			setmusicposition music_load_pos
			set music_reset 1
		}
		else ifn m_tmp2 userdef.music_level
			starttrackslot VOLUME m_tmp2
		else ife LEVEL 8
		ife VOLUME 2
			starttrackslot VOLUME m_tmp2
			
		set curr_music 1
		
		ife levelmusic_play[m_tmp] 2
		{
			set manualMusic YES
			state SetupSampleLoop
		}
		else
			set manualMusic NO
	}

ends

defstate PlayActionMusic

	set m_tmp LEVEL
	mul m_tmp 3
	add m_tmp 2
	
	set m_tmp2 33
	mul m_tmp2 VOLUME
	
	add m_tmp m_tmp2
	
	set m_tmp2 LEVEL
	mul m_tmp2 3
	add m_tmp2 2
	
	ifge levelmusic_play[m_tmp] 1
	{
		ife music_reset 0
		{
			starttrackslot VOLUME m_tmp2
			setmusicposition music_load_pos
			set music_reset 1
		}
		else ifn m_tmp2 userdef.music_level
			starttrackslot VOLUME m_tmp2
			
		ife levelmusic_play[m_tmp] 2
		{
			set manualMusic YES
			state SetupSampleLoop
		}
		else
			set manualMusic NO
			
		set curr_music 2
	}

ends

appendevent EVENT_SAVEGAME

	getmusicposition music_load_pos

endevent

appendevent EVENT_LOADGAME

	set music_reset 0
	
	ifn userdef.um_music 9000
	{
		ife curr_music 0
			state PlayLoadingMusic
		else ife curr_music 1
			state PlayRegularMusic
		else ife curr_music -1
			stopallmusic
		else
			state PlayActionMusic
	}

endevent

appendevent EVENT_ENDLEVELSCREEN

	set music_load_pos 0

endevent

onevent EVENT_PLAYLEVELMUSICSLOT

	ifn userdef.um_music 9000
		set RETURN -1

endevent

appendevent EVENT_DISPLAYSTART

	ife manualMusic YES
		state LoopMusic
		
	ifn fadeMusicStart 0
		state MusicFadeState

endevent
