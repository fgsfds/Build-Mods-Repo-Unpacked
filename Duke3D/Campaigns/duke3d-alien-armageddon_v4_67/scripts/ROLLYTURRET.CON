// ROLLYTURRET

spriteshadow ROLLYTURRET

action AROLLGO  21  4  7  -1  5
action AROLLHATCH  28  1  7  1  10
action AROLLREADY  35  1  7  1  10
action AROLLSHOOT  42  1  7  1  10
move ROLLYMOV 256


state rollyexplode

	espawn MINEEXP
	seta[RETURN].xrepeat sprite[].xrepeat
	seta[RETURN].yrepeat sprite[].yrepeat
	
	// hitradius PIPEBOMBRADIUS 15 30 45 60
	sound PIPEBOMB_EXPLODE
	debris SCRAP1 4
	debris SCRAP2 4
	debris SCRAP5 4
	state tech_debris
	killit

ends

state rollyfirerpg

	sound RPG_SHOOT
	ife team 1 set xvel 1024 else
	set xvel 644
	state rpg_targetprep	
	ezshoot zdist RPG
	ife team 1
	seta[RETURN].extra 70
	else
	seta[RETURN].extra 60
	ife team 1 seta[RETURN].xvel 1024
	seta[RETURN].ang sprite[].ang
	addstrength -12
	set botclip -1

ends

state rollyshoot

	switch sprite[bottarget].picnum
	case CRACK1 case CRACK2 case CRACK3 case CRACK4
		
		geta[bottarget].z zdist
		add zdist 3072
		
		sub zdist sprite[].z
		ldist xydist THISACTOR bottarget
		ife xydist 0 setvar xydist 1
		ifl xydist 768 hitradius 844 2 2 2 2
		sound RPG_SHOOT
		mulvar zdist 644
		div zdist xydist
		geta[].z savz
		sub savz 2048
		seta[].z savz
		ezshoot zdist RPG
		add savz 2048
		seta[].z savz
		seta[RETURN].ang sprite[].ang
	
		addstrength -15
		set botclip -1
		
		dist xydist THISACTOR bottarget
		ifl xydist 2048 hitradius 2560 2 2 2 2
	break
	
	case APLAYER
	case SHELLY
	case SHELLYCROUCH
	case DUKEBOT
	case DUKEBOTCROUCH
		
		geta[].z savz
		sub savz 2048
		seta[].z savz
			state rollyfirerpg
		add savz 2048
		seta[].z savz
		seta[RETURN].ang sprite[].ang
		
	break
	
	default
	ife sprite[bottarget].statnum 12
	{
		geta[bottarget].z zdist
		add zdist 3072
		ifvarand sprite[bottarget].cstat 32
		{
			ifl sprite[bottarget].z sprite[].z sub zdist 6144 else
			add zdist 2048
		}
		sub zdist sprite[].z
		ldist xydist THISACTOR bottarget
		ife xydist 0 setvar xydist 1
		ifl xydist 768 hitradius 844 2 2 2 2
		sound RPG_SHOOT
		mulvar zdist 644
		div zdist xydist
		geta[].z savz
		sub savz 2048
		seta[].z savz
		ezshoot zdist RPG
		add savz 2048
		seta[].z savz
		seta[RETURN].ang sprite[].ang

		addstrength -15
		set botclip -1
	}
	else
	{
		ife initsprite 1
			state rollyfirerpg
		else
		{
			spawn AIRFLASH1
			sound M4FIRE
			state hitscan_targetprep
			zshoot zdist CHAINGUN
		}
	}
	break
	endswitch
	
	resetcount
	ifn sprite[].pal 19
	addstrength -3
	sub botclip 1
ends

state reclaimcheck
	
	ife team 0 break // badguy turret
	ifge player[].ammo_amount HANDBOMB_WEAPON MAXHANDBOMBAMMO break
	
	// ifn pchar 1 break
	ifp pfacing
	ifp palive
	ifcansee
	ifpdistl 1280
	{
		ifl player[].fta 30
		ife myspawner player[].i
		{
			setp[].fta 60
			setp[].ftq 158
		}
		ifhitspace
		{
			// ifn myspawner player[].i
			ife myspawner myshelly
			{
				set subtitle_time 30
				set subtitle_numlines 1
				set subtitle_start 1360
				break
			}
			getp[].ammo_amount HANDBOMB_WEAPON temp
			geta[].extra tempb
			ifvarand shellyupgrades[HANDBOMB_WEAPON] 2
			{
				ifg tempb 100
				{
					sub tempb 100
					add temp 1
					setp[].ammo_amount HANDBOMB_WEAPON temp
				}
			}
			else
			{
				ifg tempb 75
				{
					sub tempb 75
					add temp 1
					setp[].ammo_amount HANDBOMB_WEAPON temp
				}
			}
			add temp 1
			setp[].ammo_amount HANDBOMB_WEAPON temp
			shiftl tempb 1
			add turret_leftover tempb
			ifvarand shellyupgrades[HANDBOMB_WEAPON] 2
			{
				ifge turret_leftover 200 set turret_leftover 0
			}
			else
			ifge turret_leftover 150 set turret_leftover 0

			ife player[].ftq 158 setp[].fta 0
			globalsound DUKE_GET
			palfrom 16 0 32
			killit
		}
	}
	else ife player[].ftq 158 setp[].fta 0
	
ends

useractor notenemy ROLLYTURRET 150

ifaction 0
{
	action AROLLGO
	sizeat 30 26
	strength 150
	set spawnprotect 0
	
	ife team 1
	// ifspawnedby APLAYER
	ifvarand shellyupgrades[HANDBOMB_WEAPON] 2
	{
		orvar monstflags 8 // energy barrier
		espawn EBARRIER
		setav[RETURN].myspawner THISACTOR
		addstrength 50
		sizeat 34 32
	}
	ife myspawner player[].i
	ifg turret_leftover 0 { seta[].extra turret_leftover set turret_leftover 0 }
	cstat 256
	move ROLLYMOV geth
	seta[].zvel mtype
	shiftr dodgetime 3
	add dodgetime 20
	spriteflags 2097152
	getp[].player_par ikicked
	ifg gametype 0 // max 3 active turrets per player
	{
		set TMP_A -1
		set countvar 0
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ife sprite[spriteid].picnum ROLLYTURRET
			ife actorvar[spriteid].team 1
			ifn spriteid THISACTOR
			ife myspawner actorvar[spriteid].myspawner
			{
				ifl actorvar[spriteid].ikicked ikicked set TMP_A spriteid
				add countvar 1
			}
			nextspritestat spriteid spriteid
		}
		ifg countvar 2 { seta[TMP_A].htextra 150, seta[TMP_A].htpicnum RPG seta[TMP_A].htowner 0 }
	}
	set countvar 0
	set teamspawned 99999
	
}

ifg sprite[].zvel 0 { add countvar 1 geta[].zvel FEMFALLDMG }
else set countvar 0

ifmove ROLLYMOV
ifg countvar 0
iffloordistl 2
{
	sound GRENADE_BOUNCE
	ifl countvarb 3
	{
		add countvarb 1
		set countvar 0
		mul FEMFALLDMG -1
		ifl FEMFALLDMG -2560 set FEMFALLDMG -2560
		seta[].zvel FEMFALLDMG
		geta[].z z
		sub z 512
		seta[].z z
	}
}

ifaction AROLLGO
{
	state projectilehitscan
	ifcount 60 action AROLLHATCH
	ifnotmoving action AROLLHATCH
	sub dodgetime 1
	ifl dodgetime 0 action AROLLHATCH
	
	ifaction AROLLHATCH
	{
		sound ROLLHATCH
		cstat 257
		// ife team 1
		set monstatus 1
		move STOPPED
		ifl sprite[].zvel 0 seta[].zvel 0
	}
}

ifaction AROLLHATCH
ifactioncount 3
	action AROLLREADY
	
// ifn monstatus 2 ife mysignpost -1 state spawnmysignpost
	
ifaction AROLLREADY
{
	state reclaimcheck
	ife team 0 // badguy turret
	{
		state monsterai
		ife bottarget -1 ifcansee getplayer[].i bottarget
	}
	else
		state targetsearch


	ife team 1
	ife bottarget -1
	{
		set target -1
		
		set xydist2 99999
		headspritestat spriteid 12
		whilevarn spriteid -1
		{
			dist xydist THISACTOR spriteid
			ifl xydist 8192
			ifl xydist xydist2
			{
				set target spriteid
				set xydist2 xydist
			}
			nextspritestat spriteid spriteid
		}
		
				
		ife target -1
		{
			set xydist2 8192
			headspritestat spriteid 6
			whilevarn spriteid -1
			{
				switch sprite[spriteid].picnum
				case CRACK1
				case CRACK2
				case CRACK3
				case CRACK4
					ifn sprite[spriteid].hitag 0
					{
						ldist xydist THISACTOR spriteid
						ifl xydist xydist2
						{
							set xydist2 xydist
							set target spriteid
						}
					}
				break
				endswitch

				nextspritestat spriteid spriteid
			}
		}
		
		
		ifn target -1
		{
		
			dist xydist THISACTOR target
			ifl xydist 2560
			{
				set bottarget target
				setav[bottarget].monstatus 1
			}
			else
			{
				geta[].z z
				sub z 6144
				seta[].z z
				canseespr THISACTOR target temp
				add z 6144
				seta[].z z
				ifn temp 0 
				{
					set bottarget target
					setav[bottarget].monstatus 1
				}
			}
		}
	}

	ifn bottarget -1
	{
		state turntotarget
		
		ifcount 30
		ifl temp 48
		{
			// start shooting
			action AROLLSHOOT
			set botclip 6
			state rollyshoot
		}
	}
}

ifaction AROLLSHOOT
{
	state reclaimcheck
	ife team 0 // badguy turret
	{
		state monsterai
		ife bottarget -1 ifcansee getplayer[].i bottarget
	} else
	ifn actorvar[bottarget].monstatus 1 set bottarget -1 
	
	
	ifn bottarget -1
	state turntotarget
	else 
	{
		set botclip 6
		action AROLLREADY
		resetcount
		break
	}
	
	ifcount 3
	state rollyshoot
	
	ifl botclip 0
	{
		set botclip 6
		action AROLLREADY
		resetcount
	}
}
ifsquished	
{ geta[].htextra temp add temp 10 seta[].htextra temp seta[].htpicnum RPG }
ifstrength 30 ifrnd 8
{
	espawn BIGSMOKE
	seta[RETURN].htpicnum TANKWRECK
}

ife team 1
ifg sprite[].htextra 1 // damage reduction based on weapon prof
{
	geta[].htextra temp
	mul temp 100
	
	set tempb bweaplevel[HANDBOMB_WEAPON]
	add tempb 1
	mul tempb 10
	ifg tempb 85 set tempb 85
	add tempb 100
	
	div temp tempb
	seta[].htextra temp
}

ife team 1 state predamage
ifg sprite[].htextra 0
ife sprite[].htowner THISACTOR seta[].htextra -1

set temp NO
ife actorvar[myspawner].monstatus 2 set temp YES
ife sprite[myspawner].statnum 1024 set temp YES

ife temp YES
{
	seta[].htextra 1000
	seta[].htowner -1
	seta[].htpicnum RPG
}
ifhitweapon
{
	ifdead state rollyexplode
}
ifstrength 0 state rollyexplode

fall

enda

state sidegundeath

	ife team 0 addkills 1
	set monxp 0
	state enemy_death
	ife leftsidegun THISACTOR 
	{
		ife gametype DM set leftsidegun -3 else
		set leftsidegun -30
	}
	ife rightsidegun THISACTOR 
	{
		ife gametype DM set rightsidegun -3 else
		set rightsidegun -30
	}
	state rollyexplode
	
ends

action ASIDEGUNIDLE  0  1  5  1  16
action ASIDEGUNSHOOT 5  1  5  1  12

move SIDEGUNSHOOT

useractor enemy SIDEGUN 80 ASIDEGUNIDLE

ifmove 0
{
	move STOPPED geth
	ife myspawner -1 
	{
		set myspawner player[].i
		findnearactor SIDEGUN 3072 spriteid
		ifn spriteid -1 ife actorvar[spriteid].myspawner player[].i
		set botclip 384 else set botclip -384
		rand mtype 5
	}
	ife team 1
	{
		getp[].max_actors_killed temp
		sub temp 1
		setp[].max_actors_killed temp
	}
	else spritepal 21
	set monstflags actorvar[myspawner].monstflags
	ifvarand monstflags 2 xorvar monstflags 2
	ifvarand monstflags 4 xorvar monstflags 4
	ifvarand monstflags 16 xorvar monstflags 16
	ifvarand monstflags 32 xorvar monstflags 32
	ifvarand monstflags 512 xorvar monstflags 512 // lets not have recursive sideguns
	ifvarand monstflags 1024 xorvar monstflags 1024
	ifvarand monstflags 4096 xorvar monstflags 4096
	set temp actorvar[myspawner].inithp
	div temp 4
	add temp 30
	ife team 1 add temp 20
	seta[].extra temp
	cstat 256
	ife myspawner player[].i clipdist 8
	set lastang sprite[myspawner].ang
	set countvar 100
	set teamspawned 99999
	geta[].mdflags temp
	orvar temp 16
	seta[].mdflags temp
	
	set countvarb 2000
}
set team actorvar[myspawner].team
seta[].ang lastang
state monsterai
seta[].alpha sprite[myspawner].alpha
ife bottarget -1 seta[].ang sprite[myspawner].ang

ife sprite[myspawner].picnum NURGLE
{
	ifg actorvar[myspawner].countvar 30 { cstat 32768 break }
	else cstat 256
}

ife team 1 set burning 0
ife sprite[].htowner myspawner seta[].htextra -1
ifhitweapon
{
	ifdead state sidegundeath
}
ifn myspawner player[].i
ifn myspawner myshelly
{
	ifn actorvar[myspawner].monstatus 1 state sidegundeath else
	ife sprite[myspawner].statnum 1024 state sidegundeath
}
else
{
	ifl countvarb 0 state sidegundeath
}

ife myspawner player[].i
ife pdown YES state sidegundeath

set x2 tiledata[sprite[myspawner].picnum].xsize
mul x2 sprite[myspawner].xrepeat
// shiftr x2 2 
div x2 3 // distance from center
ifg x2 2048 set x2 2048

set x x2
shiftr x 6, add x 8, ifl x 4 set x 4
seta[].xrepeat x
mul x 3 div x 4
seta[].yrepeat x

ifg x 80 set x 80
// seta[].clipdist x

set y2 tiledata[sprite[myspawner].picnum].ysize
mul y2 sprite[myspawner].yrepeat
shiftl y2 1 // distance from base of owner

// put it in z position now
geta[myspawner].z z
sub z y2
ife myspawner player[].i sub z 1024
seta[].z z

// calculate position gun is supposed to be in

geta[myspawner].ang angvar
add angvar botclip

geta[myspawner].x newx
add newx x2

rotatepoint sprite[myspawner].x sprite[myspawner].y newx sprite[myspawner].y angvar x y

// setsprite THISACTOR x y z
set savx x
set savy y

// now calculate angle to make gun move towards that position

sub x sprite[].x
sub y sprite[].y
getangle angvel x y

// now calculate how far gun is from that position currently

set xydist sprite[].x
sub xydist savx
mul xydist xydist
set starty sprite[].y
sub starty savy
mul starty starty
add xydist starty
sqrt xydist xydist

// now move towards the correct position with no clipping based on distance

ifg xydist 3072 setsprite THISACTOR savx savy z
else
ifg xydist 256
{
	cos xvel angvel
	sin tempb angvel
	
	// div by 128 for 1024 distance
	set TMP_A 3072 // maximum division
	sub TMP_A xydist
	shiftr TMP_A 5
	ifl TMP_A 4 set TMP_A 4
	
	div xvel TMP_A
	div tempb TMP_A

	movesprite THISACTOR xvel tempb 0 0 RETURN
	
	ife myspawner player[].i
	ifn RETURN 0
	ifpdistl 1024
	{
		setsprite THISACTOR savx savy sprite[].z
	}
}
geta[].ang lastang

ifn bottarget -1
ifl targetdist 16384
ife targetalive YES
ife shootmytarget YES
ifmove STOPPED
ifg countvar 100
	move SIDEGUNSHOOT geth

ifmove STOPPED
{
	ifaction ASIDEGUNSHOOT action ASIDEGUNIDLE
	ifle countvar 120 add countvar 1
}

ifmove SIDEGUNSHOOT
{
	ifaction ASIDEGUNIDLE
	{
		ifn bottarget -1
		ifl targetdist 16384
		ife targetalive YES
		ife shootmytarget YES
		ifg countvar 0
		nullop else
		{
			move STOPPED geth
			break
		}
	
		ifactioncount 1
		{
			geta[].x savx
			geta[].y savy
			set x savx
			add x 384
			
			rotatepoint sprite[].x sprite[].y x sprite[].y sprite[].ang x2 y2
			setsprite THISACTOR x2 y2 sprite[].z
	
			ife mtype 0
			{
				action ASIDEGUNSHOOT
				sound TERMLASER
				shoot GREENLASER
				sub countvar 20
				sub countvarb 20
			} else
			ife mtype 1
			{
				ifactioncount 2
				{
					action ASIDEGUNSHOOT
					sound RIFLEFIRE
					shoot RANGERPROJ
					sub countvar 40
					sub countvarb 40
				}
			} else
			ife mtype 2
			{
				action ASIDEGUNSHOOT
				sound LASERSHOOT
				shoot BIGPLASMA
				sub countvar 25
				sub countvarb 25
			} else
			ife mtype 3
			{
				ifactioncount 3
				{
					action ASIDEGUNSHOOT
					sound FLAKSHOT
					set xvel 844
					state rpg_targetprep
					zshoot zdist FLAKPROJ
					set xvel 844			
					state rpg_targetprep
					zshoot zdist FLAKPROJ
					set xvel 844
					state rpg_targetprep
					zshoot zdist FLAKPROJ 
					set xvel 844
					state rpg_targetprep
					zshoot zdist FLAKPROJ
					set xvel 844
					state rpg_targetprep
					zshoot zdist FLAKPROJ
					sub countvar 80
					sub countvarb 80
				}
			} else
			ife mtype 4
			{
				ifactioncount 2
				{
					action ASIDEGUNSHOOT
					sound RPG_SHOOT
					set xvel 644
					state rpg_targetprep
					ezshoot zdist RPG
					seta[RETURN].extra 35
					seta[RETURN].xrepeat 14
					seta[RETURN].yrepeat 14
					sub countvar 60
					sub countvarb 60
				}
			} else
			ife mtype 5
			{
				ifvarand monstflags 16384 ifcount 1 count 2
				ifcount 2
				{
					resetcount
					sound M_GUN_SHOOT
					state hitscan_targetprep
					zshoot zdist SHOTSPARK1
					sub countvar 8
					sub countvarb 8
					action ASIDEGUNSHOOT
				}
			}
			seta[].x savx
			seta[].y savy
		}
	}
	ifaction ASIDEGUNSHOOT
	{
		ife mtype 5 
		{ 
			ifvarand monstflags 16384 ifcount 1 count 2
			ifcount 2 { action ASIDEGUNIDLE resetcount }
		}
		ifactioncount 1 action ASIDEGUNIDLE
	}
}

enda

defstate icebombdamage

	sub temp xydist
	shiftr temp 5
	set tempb sprite[spriteid].htextra
	add tempb temp
	ifl tempb 1 set tempb 1
	seta[spriteid].htextra tempb
	seta[spriteid].htowner player[].i
	ife actorvar[spriteid].monstatus 1
	seta[spriteid].htpicnum FREEZEBLAST

ends

defstate wesbombblow
	
	ife countvarc 1
	{
		ifrnd 128 sound SMALLEXP1 else sound SMALLEXP2
		spawn MINEEXP
		hitradius 1560 10 20 30 40
		
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ifn spriteid THISACTOR
			{
				dist xydist THISACTOR spriteid
				ifle xydist 1560 
				{
					set temp 1560
					state icebombdamage
					
					ife sprite[spriteid].picnum WESBOMB
					ife actorvar[spriteid].countvar 0
						setav[spriteid].countvar 2
				}
			}
			nextspritestat spriteid spriteid
		}

		ifpdistl 1560 
		{
			seta[player[].i].htpicnum FREEZEBLAST
			seta[player[].i].htowner player[].i
		}
	}
	else
	{
		sound PIPEBOMB_EXPLODE
		debris SCRAP1 4
		debris SCRAP2 4
		debris SCRAP3 4
		espawn EXPLOSION2
		seta[RETURN].cstat 32768
		hitradius 2048 20 36 52 64
		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ifn spriteid THISACTOR
			{
				dist xydist THISACTOR spriteid
				ifle xydist 2048 
				{
					set temp 2048
					state icebombdamage
					
					ife sprite[spriteid].picnum WESBOMB
					ife actorvar[spriteid].countvar 0
						setav[spriteid].countvar 2
				}
			}
			nextspritestat spriteid spriteid
		}
		ifpdistl 2049 
		{
			seta[player[].i].htpicnum FREEZEBLAST
			seta[player[].i].htowner player[].i
		}
	}
	ife countvarc 0 ifvarand wesupgrades[HANDBOMB_WEAPON] 1
	{
		sub mtype -1024
		
		rand angvar 2048
		seta[].ang angvar
		espawn WESBOMB
		setav[RETURN].countvarc 1
		setav[RETURN].dodgetime dodgetime
		setav[RETURN].mtype mtype
		
		rand angvar 2048
		seta[].ang angvar
		espawn WESBOMB
		setav[RETURN].countvarc 1
		setav[RETURN].dodgetime dodgetime
		setav[RETURN].mtype mtype
		
		rand angvar 2048
		seta[].ang angvar
		espawn WESBOMB
		setav[RETURN].countvarc 1
		setav[RETURN].dodgetime dodgetime
		setav[RETURN].mtype mtype
		
		rand angvar 2048
		seta[].ang angvar
		espawn WESBOMB
		setav[RETURN].countvarc 1
		setav[RETURN].dodgetime dodgetime
		setav[RETURN].mtype mtype
		
		rand angvar 2048
		seta[].ang angvar
		espawn WESBOMB
		setav[RETURN].countvarc 1
		setav[RETURN].dodgetime dodgetime
		setav[RETURN].mtype mtype
	}
	
	killit

ends

action WESBOMBFRAMES  0  4  1  1  5
useractor notenemy WESBOMB 0

ifaction 0
{
	set team 1
	action WESBOMBFRAMES
	ife countvarc 1 
	{
		sizeat 4 4 
		geta[].z z, sub z 1024, seta[].z z
		rand mtype 4096, mul mtype -1
	}
	else
	sizeat 8 8
	clipdist 8
	cstat 256
	move ROLLYMOV geth
	seta[].zvel mtype
	shiftr dodgetime 3
	add dodgetime 20
	spriteflags 2105344 // smooth, nowaterdip
	set FEMKILLCOUNT 0
	set teamspawned 99999
	
}
fall
ifrnd 8 ife sprite[].zvel 0
ifge countvarb 3
{
	rand z 1280, sub z 4096
	seta[].zvel z
	geta[].z z, sub z 512, seta[].z z
}

ifg sprite[].zvel 0 { add FEMKILLCOUNT 1 geta[].zvel FEMFALLDMG }
else set FEMKILLCOUNT 0

ife countvarc 1
ifvarand wesupgrades[HANDBOMB_WEAPON] 2
{
	state targetsearch
	state turntotarget
}
ifmove ROLLYMOV
ifg FEMKILLCOUNT 0
iffloordistl 2
{
	sound GRENADE_BOUNCE
	ifl countvarb 3
	{
		add countvarb 1
		set FEMKILLCOUNT 0
		mul FEMFALLDMG -1
		ifl FEMFALLDMG -2560 set FEMFALLDMG -2560
		seta[].zvel FEMFALLDMG
		geta[].z z
		sub z 768
		seta[].z z
	}
}

ifaction WESBOMBFRAMES
{
	ifg countvar 0 sub countvar 1
	state projectilehitscan
	state blowupcrack
	ife TMP_B 1 state wesbombblow else
	ifcount 90 ifrnd 96 state wesbombblow else
	{
		set TMP_B NO
		headspritestat spriteid 12
		whilevarn spriteid -1
		{
			dist xydist THISACTOR spriteid
			ifl xydist 512
				set TMP_B YES
			nextspritestat spriteid spriteid
			ife TMP_B YES set spriteid -1
		}
		ife TMP_B NO
		ife countvar 0
		{
			headspritestat spriteid 1
			whilevarn spriteid -1
			{
				ifn team actorvar[spriteid].team
				ifg actorvar[spriteid].monxp 0
				ifvarand sprite[spriteid].cstat 256
				ife actorvar[spriteid].monstatus 1
				{
					dist xydist THISACTOR spriteid
					ifl xydist 384
						set TMP_B YES
				}
				nextspritestat spriteid spriteid
				ife TMP_B YES set spriteid -1
			}
		}
		ife TMP_B YES state wesbombblow
	}
	ifnotmoving ifcount 6 
	{
		getactor[].htmovflag temp
		andvar temp 49152
		ifvare temp 32768
		{
			// hit a wall
			set TMP_A sprite[].htmovflag
			andvar TMP_A 16383
			getwall[TMP_A].point2 B
			getwall[TMP_A].x x2
			getwall[TMP_A].y y2
			getwall[B].x x
			getwall[B].y y
			sub x2 x
			sub y2 y
			getangle angvar x2 y2
			getactor[].ang tempb
			getincangle tempc angvar tempb
			sub angvar tempc
			ifvarg angvar 2047 subvar angvar 2048
			ifvarl angvar 0 addvar angvar 2048
			setactor[].ang angvar
		}
		else
		{
			getactor[].htmovflag temp
			add temp 16384
			ifl temp 16384 ifg temp -1 
			{
				ifn actorvar[temp].team 1
				state wesbombblow
				else
				{
					geta[].ang angvar
					add angvar 768
					rand tempb 512
					add angvar tempb
					seta[].ang angvar
				}
			}
		}
	}
	
	sub dodgetime 1
	ifg dodgetime 0
	{
		geta[].xvel xvel
		set B dodgetime
		mul B 24
		add xvel B
		seta[].xvel xvel
	}
}

enda
