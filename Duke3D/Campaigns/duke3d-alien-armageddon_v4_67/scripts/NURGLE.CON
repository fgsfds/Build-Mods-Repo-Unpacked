// NURGLE

action ANURGLEWALK        0  4  5  1  18
action ANURGLEFROZEN        0  1  5
action ANURGLERUN         0  4  5  1  10
action ANURGLELOB        20 1  5  1  30
action ANURGLELOBBING      25 1  5  1  8
action ANURGLEDYING        50 5  1  1  20
action NURGLEFLINTCH       30 1  5  1  1
action ANURGLEDEAD         54

action ANURGLEJUMP1		 35  1  5  1  20
action ANURGLEJUMP2		 40  1  5  1  20
action ANURGLELAND		 45  1  5  1  20
action ANURGLEWAIT		 45  1  5  1  20

action ANURGLEDIG		 4447  2  1  1  24
action ANURGLEDIG2		 4435  5  1  1  8
action ANURGLECLIMB 	 4440  7  1  1  30


move NURGLEWALKVELS 180
move NURGLERUNVELS 300
move NURGLEJUMPVEL 316 -96

ai AINUGLESHRUNK ANURGLERUN SHRUNKVELS fleeenemy
ai AINURGLESEEKENEMY ANURGLEWALK NURGLEWALKVELS seekplayer
ai AINURGLERUNENEMY ANURGLERUN NURGLERUNVELS faceplayerslow
ai AINURGLELOBENEMY ANURGLELOB STOPPED geth
ai AINURGLEDYING ANURGLEDYING STOPPED geth
ai AINURGLEJUMP ANURGLEJUMP1 STOPPED geth
ai AINURGLEWAIT ANURGLEWAIT STOPPEDFORPLAYER geth
ai AINURGLEGROW ANURGLEWAIT STOPPED geth

ai AINURGLEDIG ANURGLEDIG STOPPEDFORPLAYER faceplayer

defstate smokendirt

	debris SCRAP5 2
	geta[].z z
	add z 384
	seta[].z z
	espawn SMALLSMOKE
	seta[RETURN].z starty

	rand x 1024, sub x 512
	add x sprite[].x
	seta[RETURN].x x
	seta[RETURN].htbposx x

	rand y 1024, sub y 512
	add y sprite[].y
	seta[RETURN].y y
	seta[RETURN].htbposy y
ends

state nurglewaitstate

ifcount 20 ifrnd 8 
{
	ifrnd 128 
	iffloordistl 4 ifn bottarget -1
	ifl targetdist 10240
	ifactornotstayput
	{
		ai AINURGLEDIG 
		set myspawner bottarget
	}
	else
	ai AINURGLESEEKENEMY
}
else
ifg sprite[].htextra 0 ai AINURGLELOBENEMY

ends

state nurgledigstate

	ifaction ANURGLEDIG
	{
		ifactioncount 2 { set countvar 0 geta[].z starty action ANURGLEDIG2 }
		break
	}
	
	ifaction ANURGLEDIG2
	{
		seta[].htextra -1
		
		state smokendirt
		
		add countvar 1
		ifge countvar 50
		{
			action ANURGLEWAIT
			cstat 32768
			ifg mtype 0
			{
				set temp inithp
				ife initsprite 0 div temp 2 else
				div temp 4
				set tempb sprite[].extra
				add tempb temp
				sub mtype temp
				ifg tempb inithp set tempb inithp
				seta[].extra tempb
				seta[].z starty
				add initsprite 1
			}
		}
	}
	ifaction ANURGLEWAIT
	{
		seta[].htextra -1
		fall
		geta[].z starty
		add countvar 1
		ifge countvar 70
		{
			ifmove STOPPEDFORPLAYER
			{
				ife myspawner -1
				move NURGLERUNVELS randomangle
				else
				move NURGLERUNVELS faceplayer
			}
			
			spawn SCRAPFALL
			
			ifge countvar 120
			{
				ife myspawner player[].i
				ifpdistg 6144
				ifpdistl 16384
				ifp palive
				ife pdown NO
				ife gametype 0
				ifn sprite[].sectnum -1
				{
					set B -1
					headspritestat spriteid 999
					whilevarn spriteid -1
					{
						ldist tempc player[].i spriteid
						ifg tempc 2560 
						{
							canseespr spriteid player[].i temp
							ife temp YES
							set B spriteid
						}
						
						nextspritestat spriteid spriteid
						ifn B -1 set spriteid -1
					}
					ifn B -1
					ifn sprite[B].sectnum -1
					ife sector[sprite[B].sectnum].lotag sector[].lotag
					{
						set mysector sprite[B].sectnum
						getflorzofslope mysector sprite[B].x sprite[B].y temp
						setsprite THISACTOR sprite[B].x sprite[B].y temp
					}

				}
				cstat 257
				move STOPPEDFORPLAYER geth
				action ANURGLECLIMB 
				ifpdistl 2048 quake 30
				set myspawner -1
			}
		}
	}
	ifaction ANURGLECLIMB
	{
		
		fall 
		ifactioncount 2
		state smokendirt
		hitradius 1560 1 2 2 3
		// seta[].htextra -1
		geta[].z starty
		ifactioncount 7
		{
			set countvar 0
			ifn bottarget -1
			ai AINURGLELOBENEMY else
			ai AINURGLESEEKENEMY
		}
	}

ends


state nurglejumpcheck

	ifceilingdistl 128 break
	ifn shrunken 0 break
	
	ifn bottarget -1
	ifg targetdist 2048 ifl targetdist 8192
	ifrnd 1
	{
		ai AINURGLEJUMP
		break
	}
	
	
	geta[].z z
	sub z 4096
	
	cos mycos sprite[].ang
	sin mysin sprite[].ang
	hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz 16777281
	ifn hitsprite -1 ifvarand sprite[hitsprite].cstat 16 set hitsprite -1
	
	ife hitsprite -1
	{
		set startx sprite[].x
		sub startx hitx
		mul startx startx
		set y2 sprite[].y
		sub y2 hity
		mul y2 y2
		add startx y2
		sqrt startx startx
		ifl startx 512
		{
			sub z 10240
			hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz 16777281
			
			set startx sprite[].x
			sub startx hitx
			mul startx startx
			set y2 sprite[].y
			sub y2 hity
			mul y2 y2
			add startx y2
			sqrt startx startx
			
			ifg startx 2048 { set  dodgetime 15 ai AINURGLEJUMP }
		}
	}
	ifai AINURGLEJUMP nullop else ifnotmoving ifrnd 8 { set dodgetime 15 ai AINURGLEJUMP }

ends

state nurglejumpstate

	ifaction ANURGLEJUMP1
	{
		ifactioncount 1
		{
			move NURGLEJUMPVEL geth getv
			action ANURGLEJUMP2
		}
		else break
	}
	ifaction ANURGLEJUMP2
	{
		ife dodgetime 0 state turntotarget
		ifmove NURGLEJUMPVEL
		{
			ifcount 12 move NURGLEWALKVELS geth
		}
		else
		ifmove NURGLEWALKVELS
		{
			iffloordistl 4
			{
				action ANURGLELAND
				soundonce LBM_JUMPSLAM
				state meleedamage
				spawn EXPLOSION2BOT
			}
			
		}
	}
	ifaction ANURGLELAND ifcount 14 ai AINURGLESEEKENEMY

ends

state nurgleshrunkstate
  ifcount SHRUNKDONECOUNT
    ai AINURGLESEEKENEMY
  else
    ifcount SHRUNKCOUNT
      sizeto 32 30
  else
    state genericshrunkcode
ends

state nurglerunenemystate

  ife seemytarget YES
  {
    ifactioncount 3
    {
      ife shootmytarget YES
      {
        resetactioncount
		ife shrunken 0
        sound BOS1_WALK
      }
      else
        ai AINURGLESEEKENEMY

    }
  }
  else
    ai AINURGLESEEKENEMY
	
  state nurglejumpcheck
  
ends

state nurgleseekenemystate

  ifrnd 2
  {
    ifg shrunken 10 ifl shrunken SHRUNKCOUNT
	{
		sound BOS3_ROAM
		setactorsoundpitch THISACTOR BOS3_ROAM 1560
	}
	else
	{
		ifrnd 96 soundonce MOLERT else
		soundonce MOLROAM
	}
	
  }
  else
    ifactioncount 3
    {
      resetactioncount
	  ife shrunken 0
      sound BOS1_WALK
    }

  ife seemytarget YES
    ifcount 60
      ifrnd 36
        ife shootmytarget YES
  {
    ifrnd 64
      ifg targetdist 4096
      {
        ai AINURGLERUNENEMY
        break
      }

    ife targetalive YES
      ai AINURGLELOBENEMY
	else
	ife seeplayer YES
	ifpdistl 8192
	ife sprite[player[].i].pal 1 { set botclip 2 ai AINURGLELOBENEMY }
  }
  state nurglejumpcheck
ends

state nurgledyingstate
  ifaction ANURGLEDEAD
  {
      strength 0
      ifhitweapon
        ifwasweapon RADIUSEXPLOSION
      {
        sound SQUISHED
        state standard_jibs
        killit
      }
      break
  }
  ifactioncount 4
  {
    iffloordistl 8
      sound THUD
    action ANURGLEDEAD
    cstat 0
  }
ends

state nurglelobbedstate
	
	ifl botclip 0 set botclip 0
	ifg botclip 3 set botclip 3
	
	ifcount 2 nullop else
	ifcount 1 sound MOLATTK

	// pal 24 gray and beige alternate
	state turntotarget
	
    ifaction ANURGLELOBBING
      ifactioncount 1
    {
	  ifn shrunken 0 { ai AINURGLESEEKENEMY break }
	  
	  ife botclip 3 { set botclip 0 ai AINURGLESEEKENEMY break }
	  ife botclip 2
	  {
		sound CBFIRE
		eshoot CBPROJ
		ifspritepal 24 seta[RETURN].pal 1
		eshoot CBPROJ
		ifspritepal 24 seta[RETURN].pal 1
		geta[RETURN].ang angvar
		sub angvar 64
		seta[RETURN].ang angvar
		eshoot CBPROJ
		ifspritepal 24 seta[RETURN].pal 1
		geta[RETURN].ang angvar
		add angvar 64
		seta[RETURN].ang angvar
		add botclip 1
		resetactioncount
	  }
	  
	  ife botclip 0
	  {
		  soundonce MOLBRETH
		  ifspritepal 24 setprojectile[FLAMEPROJ].pal 1
		  
		  set xvel 644
		  state rpg_targetprep
		  rand z 1024
		  sub zdist z
		  ezshoot zdist FLAMEPROJ
		  
		  set xvel 644
		  state rpg_targetprep
		  rand z 1024
		  sub zdist z
		  ezshoot zdist FLAMEPROJ
		  
		  setprojectile[FLAMEPROJ].pal 0
	  }
	  ife botclip 1
	  {
	    soundonce MOLBRETH
	    set B 0
		geta[].z savz, sub savz 2048, seta[].z savz
		ifspritepal 24
		{
			setprojectile[FREEZEBOLT].workslike 36870
			whilevarn B 4
			{
				set xvel 844
				state rpg_targetprep
				ezshoot zdist FREEZEBOLT
				seta[RETURN].blend 1
				seta[RETURN].cstat 642
				rand angvar 192
				sub angvar 96
				add angvar sprite[RETURN].ang
				seta[RETURN].ang angvar
				rand zdist 5120
				sub zdist 2560
				add zdist sprite[RETURN].zvel
				seta[RETURN].zvel zdist
				add B 1
			}
			setprojectile[FREEZEBOLT].workslike 32774
		}
		else
		{
			whilevarn B 8
			{
				set xvel 768
				state rpg_targetprep
				ezshoot zdist SPIKEPROJ
				seta[RETURN].blend 1
				seta[RETURN].cstat 642
				seta[RETURN].pal 2
				rand angvar 192
				sub angvar 96
				add angvar sprite[RETURN].ang
				seta[RETURN].ang angvar
				rand zdist 5120
				sub zdist 2560
				add zdist sprite[RETURN].zvel
				seta[RETURN].zvel zdist
				add B 1
			}
		}
		add savz 2048, seta[].z savz
	  }
      resetactioncount
      ifrnd 10
	  ifcount 50
	  {
	    add botclip 1
		ife botclip 3 set botclip 0
        ai AINURGLESEEKENEMY
	  }
		
    }

	ifaction ANURGLELOB
	{
		ife botclip 2 ifactioncount 1
		{
			action ANURGLELOBBING
			resetcount
		}
		ifactioncount 2
		{
		  action ANURGLELOBBING
		  ifn bottarget -1 ife sprite[bottarget].pal 1 set botclip 2
		  resetcount
		}
	}
  
  ife seemytarget NO
  {
	add botclip 1 ife botclip 3 set botclip 0
    ai AINURGLESEEKENEMY
  }
	
ends

state checknurglehitstate

  ifdead
  {

	ifwasweapon FREEZEBLAST
	{
		sound NEWFREEZE
		spritepal 1
		move STOPPED geth
		action ANURGLEFROZEN
		strength 0
		state freezeme
		break
	}
	ifwasweapon GROWSPARK
	{
	  cstat 0
	  sound ACTOR_GROWING
	  ai AINURGLEGROW
	  break
	}
    

    addkills 1 state enemy_death
    ai AINURGLEDYING
    ifg shrunken 10 ifl shrunken SHRUNKCOUNT
	{
		sound MOLDEATH
		setactorsoundpitch THISACTOR MOLDEATH 1560
	}
	else
    sound MOLDEATH
	state jib_sounds

  }
  else
  {
    ifaction NURGLEFLINTCH nullop else
    {
	  // TMP_A is amount of damage taken
	  ifg TMP_A 200 set TMP_A 200
	  rand temp 300
	  ifg stun 0 div temp 2
	  ifai AINURGLELOBENEMY mul temp 2
	  ifle temp TMP_A // some kind of reaction
	  {
	    set temp YES
		ifn shrunken 0 set temp NO
		ifcount 30 nullop else set temp NO
		ife temp YES
		{
			ifactornotstayput
			{
				ifrnd 96
				iffloordistl 4 ifn bottarget -1
				ifl targetdist 10240
				{
					ai AINURGLEDIG 
					set myspawner bottarget
				}
				else
				{
					action NURGLEFLINTCH
					move STOPPED geth
					add botclip 1 ife botclip 3 set botclip 0
				}
			}
		}
	  }
	  else ifai AINURGLESEEKENEMY
	  ifrnd 48
		ai AINURGLELOBENEMY
	  else ifai AINURGLERUNENEMY
	  ifrnd 24
	    ai AINURGLELOBENEMY
	  
    }

    
    ifwasweapon SHRINKSPARK
    {
      sound ACTOR_SHRINKING
      // ai AINURGLEPALSHRINK
	  set shrunken 1
      break
    }
	ifg shrunken 10 ifl shrunken SHRUNKCOUNT
	{
		sound MOLPAIN
		setactorsoundpitch THISACTOR MOLPAIN 1560
	}
	else
    soundonce MOLPAIN
	
	ifai AINURGLEDIG nullop else
	ife shrunken 0
	{
		set temp inithp
		div temp 2
		ifl sprite[].extra temp
		ife initsprite 0
		{
			ai AINURGLEDIG 
			set myspawner bottarget
		}
	}
	
  }
ends

state nurglecode
 
  ifg shrunken 10 ifl shrunken SHRUNKCOUNT
  ife player[].actorsqu THISACTOR
  ife player[].knee_incs 14
  { state standard_jibs state standard_jibs }

  ifai AINURGLEGROW { state genericgrowcode break }
  ifaction ANURGLEFROZEN
  {
    ifcount THAWTIME
    {
      ai AINURGLESEEKENEMY
      getlastpal
	  strength 1
	  break
    }
    else
      ifcount FROZENDRIPTIME
    {
      ifactioncount 26
      {
        spawn WATERDRIP
        resetactioncount
      }
    }
    ifhitweapon
    {
      ifwasweapon FREEZEBLAST
      {
	    resetcount resetactioncount
        strength 0
        break
      }

      addkills 1 state enemy_death
	  state standard_jibs
	  state standard_jibs
	  lotsofglass 10
      ifrnd 84
        spawn BLOODPOOL
      sound GLASS_BREAKING
      killit
    }
    ifp pfacing
      ifpdistl FROZENQUICKKICKDIST
        state pkick_check
    break
  }
  ifai 0
  {
	  sound MOLERT
      ai AINURGLEWAIT
	  sizeat 32 28
	  cstator 257
  }
  
  ifai AINURGLEDIG nullop else fall
  
  ifaction NURGLEFLINTCH
    {
	  ifg stun 0 nullop else
      ifactioncount 3
		ai AINURGLESEEKENEMY
    }
  else
    ifai AINURGLEWAIT	
	  state nurglewaitstate
  else
    ifai AINURGLEDIG
	  state nurgledigstate
  else
    ifai AINURGLESEEKENEMY
      state nurgleseekenemystate
  else
    ifai AINURGLERUNENEMY
      state nurglerunenemystate
  else
    ifai AINURGLEJUMP
	  state nurglejumpstate
  else
    ifai AINURGLELOBENEMY
      state nurglelobbedstate
  // else
    // ifai AINURGLEPALSHRINK
      // state nurglepalshrunkstate

  state monsterai
  ife mtype 0 set mtype inithp
  
  ifai AINURGLEDYING
    state nurgledyingstate
  else
  {
    ife monstatus -1 break
	geta[].htextra TMP_A
	
    ifhitweapon
      state checknurglehitstate
	  
  }
ends

useractor enemy NURGLE NURGLESTRENGTH state nurglecode enda

useractor enemystayput NURGLESTAYPUT NURGLESTRENGTH 

sizeat 32 28
cstator 257
cactor NURGLE
action ANURGLEWAIT

enda

eventloadactor NURGLE sizeat 32 28 cstator 257 action ANURGLEWAIT enda
eventloadactor NURGLESTAYPUT sizeat 32 28 cstator 257 enda