gamevar hud_tilenum 0 1
gamevar hud_x 0 1
gamevar hud_y 0 1
gamevar hud_scale 65536 1
gamevar hud_angle 0 1
gamevar hud_shade 0 1
gamevar hud_pal 0 1
gamevar hud_orientation 0 1

gamevar doubletop NO 1

gamevar hud_fistsign 0 1
gamevar hud_totaltime 0 1

gamevar hud_shadef 0 1
gamevar hud_palf 0 1

// It is unfortunate that we need so many temporary gamevars.
gamevar hud_temp 0 1
gamevar hud_temp2 0 1
gamevar hud_temp3 0 1
gamevar hud_temp4 0 1

// The following temporary gamevars are internal to the G_Draw subroutines.
gamevar hud_int_temp 0 1
gamevar hud_int_temp2 0 1
gamevar hud_int_x 0 1
gamevar hud_int_y 0 1
gamevar hud_int_scale 0 1
gamevar hud_int_angle 0 1
gamevar hud_int_orientation 0 1

gamevar weapon_pos 0 1
gamevar weaponscale 0 1
gamevar playerid 0 1

defstate calc_gun_pos

	// ifn weaponcount 0 set old_gun_pos -999
	// ife player[].weapon_pos 0 set old_gun_pos -999
	ife old_gun_pos -999
	{
		set old_gun_pos gun_pos
		set new_gun_pos gun_pos
		break
	}
// old_gun_pos
// new_gun_pos
// gun_pos

	ifn gun_pos old_gun_pos
	{
		set temp gun_pos
		sub temp old_gun_pos
		
		set tempb framerate
		div tempb 30, ifl tempb 1 set tempb 1
		
		ifg temp 0 set tempc 1 else ifl temp 0 set tempc -1 else set tempc 0
		
		div temp tempb
		ife temp 0 set temp tempc
		
		set gun_increment temp
		
		set old_gun_pos gun_pos
	}
	ifn old_gun_pos new_gun_pos
	{
		add new_gun_pos gun_increment
		ifg gun_increment 0 ifg new_gun_pos gun_pos
		{
			set old_gun_pos gun_pos
			set new_gun_pos gun_pos
		}
		else
		ifl gun_increment 0 ifl new_gun_pos gun_pos
		{
			set old_gun_pos gun_pos
			set new_gun_pos gun_pos
		}
		
	}


ends

// preliminary functions

state G_DrawTilePal
    setvarvar hud_int_angle hud_angle
    setvarvar hud_int_orientation hud_orientation

    ifvarand hud_orientation 4
        addvar hud_int_angle 1024

    orvar hud_int_orientation 2
	orvar hud_int_orientation 4096

    rotatesprite hud_x hud_y hud_scale hud_int_angle hud_tilenum hud_shade hud_pal hud_int_orientation windowx1 windowy1 windowx2 windowy2
ends

state G_DrawTileScaled

	switch hud_tilenum // scale correction for 2X scale sprites
	case 2510 case 2511
	case 2524 case 2525 case 2526 case 2528 case 2529
	case 2536 case 2537 case 2538 case 2539 case 2540
	case 2570 case 2571 case 2572 case 2573 case 2574 case 2575
	case 10384 case 10385 case 10386 case 10387 case 10388
	
	// shiftr hud_scale 1
	set hud_scale 32768
	break
	
	case 2512 case 2513 case 2514 case 2515
	set hud_scale 36864
	break
	
	case 19909 case 19910
	set hud_scale 36864
	ife hud_pal 0 set hud_pal 21
	break
	
	default
	set hud_scale 65536
	break
	endswitch

    setvarvar hud_int_x hud_x
    setvarvar hud_int_y hud_y
    setvarvar hud_int_scale hud_scale
    setvarvar hud_int_angle hud_angle
    setvarvar hud_int_orientation hud_orientation

    shiftvarl hud_int_x 16
    shiftvarl hud_int_y 16

    setvar hud_int_temp 12582912 // 192<<16

    switch currentweapon
        case DEVISTATOR_WEAPON
        case TRIPBOMB_WEAPON
            setvar hud_int_temp 10485760 // 160<<16
            break
        default
            ifvarand hud_orientation 262144
            {
                setvar hud_int_temp 10485760 // 160<<16
                xorvar hud_int_orientation 262144
            }
            break
    endswitch

    ifvarand hud_orientation 4
        addvar hud_int_angle 1024

    /*
    ifvarg rendermode 2
        ifvarn usemodels 0
            ifhasmodel hud_tilenum hud_pal
            {
                setvar hud_int_temp2 14680064 // 224<<16
                mulvarvar hud_int_temp2 weaponscale
                divvar hud_int_temp2 100

                addvar hud_int_y 14680064 // 224<<16
                subvarvar hud_int_y hud_int_temp2
            }
    */

    mulvarvar hud_int_x weaponscale
    divvar hud_int_x 100
    setvarvar hud_int_temp2 hud_int_temp
    mulvarvar hud_int_temp2 weaponscale
    divvar hud_int_temp2 100
    subvarvar hud_int_temp hud_int_temp2
    addvarvar hud_int_x hud_int_temp

    mulvarvar hud_int_y weaponscale
    divvar hud_int_y 100
    setvar hud_int_temp 13107200 // 200<<16
    setvarvar hud_int_temp2 hud_int_temp
    mulvarvar hud_int_temp2 weaponscale
    divvar hud_int_temp2 100
    subvarvar hud_int_temp hud_int_temp2
    addvarvar hud_int_y hud_int_temp

    mulvarvar hud_int_scale weaponscale
    divvar hud_int_scale 100

    orvar hud_int_orientation 2050 // 2|2048
	
	orvar hud_int_orientation 4096

    rotatesprite hud_int_x hud_int_y hud_int_scale hud_int_angle hud_tilenum hud_shade hud_pal hud_int_orientation windowx1 windowy1 windowx2 windowy2
	
	ife doubletop YES
	{

		setvarvar y hud_y
		sub y 290
		add y gun_pos // new_gun_pos
		add y gun_pos // new_gun_pos
		shiftvarl y 16
		mulvarvar y weaponscale
		divvar y 100
		setvar hud_int_temp 13107200 // 200<<16
		setvarvar hud_int_temp2 hud_int_temp
		mulvarvar hud_int_temp2 weaponscale
		divvar hud_int_temp2 100
		subvarvar hud_int_temp hud_int_temp2
		addvarvar y hud_int_temp
		
		
		set angvar hud_int_angle
		set orientation hud_int_orientation
		ifvarand orientation 4 // right side
		{
			xorvar orientation 4
			set angvar 1024
		}
		else
		{
			orvar orientation 4
		}
		
		rotatesprite hud_int_x y hud_int_scale angvar hud_tilenum hud_shade hud_pal orientation windowx1 windowy1 windowx2 windowy2
	}
ends

state G_DrawWeaponTile
    // basic fading between player weapon shades
    ifvarvarn hud_shade hud_shadef
    {
        setvar hud_int_temp 0
        ifvare hud_pal 0 setvar hud_int_temp 1
        ifvarvare hud_pal hud_palf setvar hud_int_temp 1
        ifvare hud_int_temp 1
        {
            setvarvar hud_int_temp hud_shade
            subvarvar hud_int_temp hud_shadef
            setvarvar hud_int_temp2 hud_int_temp
            shiftvarr hud_int_temp 2
            addvarvar hud_shadef hud_int_temp

            ifvare hud_int_temp 0
            {
                shiftvarr hud_int_temp2 1
                addvarvar hud_shadef hud_int_temp2
                ifvare hud_int_temp2 0
                    setvarvar hud_shadef hud_shade
            }
        }
    }
    else
        setvarvar hud_shadef hud_shade

    setvarvar hud_palf hud_pal
    setvarvar hud_shade hud_shadef

    state G_DrawTileScaled
ends

// helper states

state reset_hud_weapon_x_coordinate
    setvarvar hud_x weapon_xoffset
    subvarvar hud_x looking_angSR1
ends
state reset_hud_weapon_y_coordinate
    setvarvar hud_y looking_arc
    subvarvar hud_y gun_pos // new_gun_pos
ends
state reset_hud_weapon_coordinates
    state reset_hud_weapon_x_coordinate
    state reset_hud_weapon_y_coordinate
ends

state determine_animation
    getuserdef[THISACTOR].pause_on hud_temp
    ifvarn hud_temp 0
        setvar hud_temp 1

    ifvarand player[THISACTOR].gm 1 // MODE_MENU
        orvar hud_temp 1

    getactor[playerid].pal hud_int_temp
    ifvare hud_int_temp 1
        orvar hud_temp 1
ends

// other EVENT_DISPLAYWEAPON code

state draw_shrunk_fists // Shrunk Running Fists
    // common calculations
    state reset_hud_weapon_x_coordinate

    setvarvar hud_temp3 looking_arc
    ifvare player[THISACTOR].jetpack_on 0
    {
        getactor[playerid].xvel hud_temp2
        shiftvarr hud_temp2 3
        addvar hud_temp3 32
        subvarvar hud_temp3 hud_temp2
        addvarvar hud_fistsign hud_temp2
    }
    // common calculations continued
    setvarvar hud_temp2 hud_fistsign
    sin hud_temp2 hud_temp2
    setvarvar hud_temp4 hud_temp2
    shiftvarr hud_temp2 10
    shiftvarr hud_temp4 8
    ifvarl hud_temp4 0
        mulvar hud_temp4 -1

    // right fist
    guniqhudid 101

    addvarvar hud_x hud_temp2
    addvar hud_x 250

    setvarvar hud_y hud_temp3
    addvar hud_y 258
    subvarvar hud_y hud_temp4

    setvar hud_tilenum FIST

    state G_DrawTilePal

    // cleanup
    subvar hud_x 250

    // left fist
    guniqhudid 102

    subvarvar hud_x hud_temp2
    addvar hud_x 40

    setvarvar hud_y hud_temp3
    addvar hud_y 200
    addvarvar hud_y hud_temp4

    orvar hud_orientation 4

    state G_DrawTilePal

    // cleanup
    setvar hud_orientation 0
    setvar hud_angle 0
    guniqhudid 0
ends

state draw_quick_kick // Quick Kick
    setvar hud_temp 14
    subvarvar hud_temp player[THISACTOR].quick_kick

    setvar hud_temp2 0
    ifvarn hud_temp 14 setvar hud_temp2 1
    ifvarn player[THISACTOR].last_quick_kick 0 setvar hud_temp2 1
    ifvare hud_temp2 1
    {
        getplayer[THISACTOR].hudpal hud_pal
        ifvare hud_pal 0
            getplayer[THISACTOR].palookup hud_pal

        guniqhudid 100

        // common calculations
        state reset_hud_weapon_coordinates

        setvar hud_tilenum KNEE

        setvar hud_orientation 262148 // o|4|262144

        setvar hud_temp3 0

        ifvarg hud_temp 5
            ifvarl hud_temp 13
            {
                addvar hud_x 144 // 160-16

                addvar hud_y 214

                addvar hud_tilenum 1

                state G_DrawTileScaled

                setvar hud_temp3 1
            }

        ifvare hud_temp3 0
        {
            addvar hud_x 80

            addvar hud_y 250

            state G_DrawTileScaled
        }
    }
ends

// weapon code

state draw_kick // KNEE_WEAPON:
    ifvarg weaponcount 0
    {
        guniqhudid currentweapon

        state reset_hud_weapon_coordinates

        ifvare hud_pal 0
            getplayer[THISACTOR].palookup hud_pal

        setvar hud_tilenum KNEE

        setvar hud_temp3 0

        ifvarg weaponcount 4
            ifvarl weaponcount 10
            {
                addvar hud_x 160

                addvar hud_y 214

                addvar hud_tilenum 1

                state G_DrawTileScaled

                setvar hud_temp3 1
            }

        ifvare hud_temp3 0
        {
            addvar hud_x 220

            addvar hud_y 250

            state G_DrawTileScaled
        }
    }
ends

state draw_pistol // PISTOL_WEAPON:
    // hud_temp4 = FIREDELAY
    // hud_temp3 = RELOAD

    state reset_hud_weapon_y_coordinate

    setvar hud_tilenum FIRSTGUN

    addvar hud_totaltime 1
    ifvarvarl weaponcount hud_totaltime
    {
        setvar hud_x 194 // 183
        addvarvar hud_x weapon_xoffset
        subvarvar hud_x looking_angSR1

        addvar hud_y 244

        ifvarvare weaponcount hud_temp4
            subvar hud_x 3

        ifvarl weaponcount 3
            addvarvar hud_tilenum weaponcount

        setvar hud_orientation 2

        guniqhudid currentweapon

        state G_DrawWeaponTile

        guniqhudid 0
    }
    else
    {
        orvar hud_orientation 512

        subvarvar hud_temp3 weaponcount

        ifvarg hud_temp3 17
        {
            guniqhudid currentweapon

            setvar hud_x 194
            subvarvar hud_x looking_angSR1

            addvar hud_y 230

            addvar hud_tilenum 4

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 12
        {
            addvar hud_tilenum 6

            setvarvar hud_temp weaponcount
            shiftvarl hud_temp 3

            setvar hud_x 244
            subvarvar hud_x hud_temp
            subvarvar hud_x looking_angSR1

            setvarvar hud_temp2 weaponcount
            shiftvarl hud_temp2 4

            addvar hud_y 130
            addvarvar hud_y hud_temp2

            state G_DrawWeaponTile

            subvar hud_y 130
            subvarvar hud_y hud_temp2
            subvar hud_tilenum 6

            guniqhudid currentweapon

            setvar hud_x 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 7
        {
            addvar hud_tilenum 6

            setvarvar hud_temp weaponcount
            shiftvarl hud_temp 1

            setvar hud_x 124
            addvarvar hud_x hud_temp
            subvarvar hud_x looking_angSR1

            setvarvar hud_temp2 weaponcount
            shiftvarl hud_temp2 3

            addvar hud_y 430
            subvarvar hud_y hud_temp2

            state G_DrawWeaponTile

            subvar hud_y 430
            addvarvar hud_y hud_temp2
            subvar hud_tilenum 6

            guniqhudid currentweapon

            setvar hud_x 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 4
        {
            setvar hud_x 184
            subvarvar hud_x looking_angSR1

            addvar hud_y 235

            addvar hud_tilenum 8

            state G_DrawWeaponTile

            subvar hud_y 235
            subvar hud_tilenum 8

            guniqhudid currentweapon

            setvar hud_x 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 210

            addvar hud_tilenum 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 2
        {
            setvar hud_x 164
            subvarvar hud_x looking_angSR1

            addvar hud_y 245

            addvar hud_tilenum 8

            state G_DrawWeaponTile

            subvar hud_y 245
            subvar hud_tilenum 8

            guniqhudid currentweapon

            setvar hud_x 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 0
        {
            guniqhudid currentweapon

            setvar hud_x 194
            subvarvar hud_x looking_angSR1

            addvar hud_y 235

            addvar hud_tilenum 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
    }
ends

state draw_left_pistol

 state reset_hud_weapon_y_coordinate

	ifvarand dukeupgrades[PISTOL_WEAPON] 1
    setvar hud_tilenum 10384
	else setvar hud_tilenum FIRSTGUN
    
    addvar hud_totaltime 1
    ifvarvarl weaponcount hud_totaltime
    {
        setvar hud_x 70 // 230
        addvarvar hud_x weapon_xoffset
        subvarvar hud_x looking_angSR1

        addvar hud_y 240

        ifvarvare weaponcount hud_temp4
            addvar hud_x 3
		
		set temp weaponcount
		sub temp 2
		ifl temp 0 set temp 0
		
        ifvarl temp 3
            addvarvar hud_tilenum temp

        setvar hud_orientation 6
		set hud_int_angle 1024

        guniqhudid currentweapon

        state G_DrawWeaponTile

        guniqhudid 0
    }
	else ifg weaponcount 27
    {
		
        ifvarand hud_orientation 512 xorvar hud_orientation 512
		orvar hud_orientation 256
		orvar hud_orientation 4
		ifvarand dukeupgrades[PISTOL_WEAPON] 1 nullop else add hud_tilenum 1
		
        subvarvar hud_temp3 weaponcount

        ifvarg hud_temp3 17
        {
			
            guniqhudid currentweapon

            setvar hud_x 204 // 204
            subvarvar hud_x looking_angSR1

            addvar hud_y 230

            addvar hud_tilenum 3
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 12
        {
		
            addvar hud_tilenum 5

            setvarvar hud_temp weaponcount
			sub hud_temp 27
            shiftvarl hud_temp 3

            setvar hud_x 254
            subvarvar hud_x hud_temp
            subvarvar hud_x looking_angSR1

            setvarvar hud_temp2 weaponcount
			sub hud_temp2 27
            shiftvarl hud_temp2 4

            addvar hud_y 200 // 130
            addvarvar hud_y hud_temp2
			sub hud_x 40
            state G_DrawWeaponTile

            subvar hud_y 200 // 130
            subvarvar hud_y hud_temp2
            subvar hud_tilenum 5

            guniqhudid currentweapon

            setvar hud_x 234
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 4
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 7
        {
			
            addvar hud_tilenum 5

            setvarvar hud_temp weaponcount
			sub hud_temp 27
            shiftvarl hud_temp 1

            setvar hud_x 134
            addvarvar hud_x hud_temp
            subvarvar hud_x looking_angSR1

            setvarvar hud_temp2 weaponcount
			sub hud_temp2 27
            shiftvarl hud_temp2 3

            addvar hud_y 370 // 430
            subvarvar hud_y hud_temp2
			ifvarand dukeupgrades[PISTOL_WEAPON] 1 sub hud_x 15
            state G_DrawWeaponTile

            subvar hud_y 370 // 430
            addvarvar hud_y hud_temp2
            subvar hud_tilenum 5

            guniqhudid currentweapon

            setvar hud_x 234
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 4
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 4
        {
			
            setvar hud_x 194
            subvarvar hud_x looking_angSR1

            addvar hud_y 235

            addvar hud_tilenum 7
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            subvar hud_y 235
            subvar hud_tilenum 7 // 8

            guniqhudid currentweapon

            setvar hud_x 234 // 234
            subvarvar hud_x looking_angSR1

            addvar hud_y 210

            addvar hud_tilenum 4 // 5
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 2
        {
			
            setvar hud_x 174 // 174
            subvarvar hud_x looking_angSR1

            addvar hud_y 245

            addvar hud_tilenum 7 // 8
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            subvar hud_y 245
            subvar hud_tilenum 7 // 8

            guniqhudid currentweapon

            setvar hud_x 234 // 234
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 4 // 5
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 0
        {
			
            guniqhudid currentweapon

            setvar hud_x 204 // 204
            subvarvar hud_x looking_angSR1

            addvar hud_y 235

            addvar hud_tilenum 4 // 5
			
			ifvarand dukeupgrades[PISTOL_WEAPON] 1
			{
				ifl hud_tilenum 10390 sub hud_x 100 ife hud_tilenum 10388 sub hud_x 30
			}
			else
			{
				ifl hud_tilenum 2530 sub hud_x 100
			}
            state G_DrawWeaponTile

            guniqhudid 0
        }
    }
ends

state draw_upgraded_pistol // PISTOL_WEAPON:
    // hud_temp4 = FIREDELAY
    // hud_temp3 = RELOAD
	
    state reset_hud_weapon_y_coordinate
	ifg hud_temp3 27 set hud_temp3 27 // hack for dual wielding reload animation

	ifvarand dukeupgrades[PISTOL_WEAPON] 1
    setvar hud_tilenum 10384
	else setvar hud_tilenum FIRSTGUN
    
    addvar hud_totaltime 1
    ifvarvarl weaponcount hud_totaltime
    {
        setvar hud_x 230
		// ifvarand dukeupgrades[PISTOL_WEAPON] 4 add hud_x 5
        addvarvar hud_x weapon_xoffset
        subvarvar hud_x looking_angSR1

        addvar hud_y 240

        ifvarvare weaponcount hud_temp4
            subvar hud_x 3

        ifvarl weaponcount 3
            addvarvar hud_tilenum weaponcount

        setvar hud_orientation 2

        guniqhudid currentweapon

        state G_DrawWeaponTile

        guniqhudid 0
    }
    else
    {
		ifvarand dukeupgrades[PISTOL_WEAPON] 1 nullop else
		add hud_tilenum 1
		
        orvar hud_orientation 512

        subvarvar hud_temp3 weaponcount

        ifvarg hud_temp3 17
        {
            guniqhudid currentweapon

            setvar hud_x 204 // 194
            subvarvar hud_x looking_angSR1

            addvar hud_y 230

            addvar hud_tilenum 3 // 4

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 12
        {
            addvar hud_tilenum 5 // 6

            setvarvar hud_temp weaponcount
            shiftvarl hud_temp 3

            setvar hud_x 254 // 244
            subvarvar hud_x hud_temp
            subvarvar hud_x looking_angSR1

            setvarvar hud_temp2 weaponcount
            shiftvarl hud_temp2 4

            addvar hud_y 130
            addvarvar hud_y hud_temp2

            state G_DrawWeaponTile

            subvar hud_y 130
            subvarvar hud_y hud_temp2
            subvar hud_tilenum 5 // 6

            guniqhudid currentweapon

            setvar hud_x 234 // 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 4 // 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 7
        {
            addvar hud_tilenum 5 // 6

            setvarvar hud_temp weaponcount
            shiftvarl hud_temp 1

            setvar hud_x 134 // 124
            addvarvar hud_x hud_temp
            subvarvar hud_x looking_angSR1

            setvarvar hud_temp2 weaponcount
            shiftvarl hud_temp2 3

            addvar hud_y 430
            subvarvar hud_y hud_temp2

            state G_DrawWeaponTile

            subvar hud_y 430
            addvarvar hud_y hud_temp2
            subvar hud_tilenum 5 // 6

            guniqhudid currentweapon

            setvar hud_x 234 // 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 4 // 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 4
        {
            setvar hud_x 194 // 184
            subvarvar hud_x looking_angSR1

            addvar hud_y 235

            addvar hud_tilenum 7 // 8

            state G_DrawWeaponTile

            subvar hud_y 235
            subvar hud_tilenum 7 // 8

            guniqhudid currentweapon

            setvar hud_x 234 // 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 210

            addvar hud_tilenum 4 // 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 2
        {
            setvar hud_x 174 // 164
            subvarvar hud_x looking_angSR1

            addvar hud_y 245

            addvar hud_tilenum 7 // 8

            state G_DrawWeaponTile

            subvar hud_y 245
            subvar hud_tilenum 7 // 8

            guniqhudid currentweapon

            setvar hud_x 234 // 224
            subvarvar hud_x looking_angSR1

            addvar hud_y 220

            addvar hud_tilenum 4 // 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
        else ifvarg hud_temp3 0
        {
            guniqhudid currentweapon

            setvar hud_x 204 // 194
            subvarvar hud_x looking_angSR1

            addvar hud_y 235

            addvar hud_tilenum 4 // 5

            state G_DrawWeaponTile

            guniqhudid 0
        }
    }
ends


state draw_tripbomb // TRIPBOMB_WEAPON:
    state reset_hud_weapon_coordinates

    addvar hud_x 8
    addvar hud_y 10

    ifvarg weaponcount 6
    {
        setvarvar hud_temp weaponcount
        shiftvarl hud_temp 3
        addvarvar hud_y hud_temp
    }
    else ifvarl weaponcount 4
    {
        setvarvar hud_temp currentweapon
        shiftvarl hud_temp 2
        guniqhudid hud_temp

        addvar hud_x 142
        addvar hud_y 234

        setvar hud_tilenum HANDHOLDINGLASER
        addvar hud_tilenum 3

        state G_DrawWeaponTile

        // undo
        subvar hud_x 142
        subvar hud_y 234
    }

    // common to both hands

    addvar hud_y 249

    setvarvar hud_tilenum weaponcount
    shiftvarr hud_tilenum 2
    addvar hud_tilenum HANDHOLDINGLASER

    // left hand
    guniqhudid currentweapon

    addvar hud_x 130

    state G_DrawWeaponTile

    // right hand
    setvarvar hud_temp3 currentweapon
    shiftvarl hud_temp3 1
    guniqhudid hud_temp3

    // relative method
    addvar hud_x 22

    orvar hud_orientation 4

    state G_DrawWeaponTile

    ifvarand hud_orientation 4
        xorvar hud_orientation 4
    guniqhudid 0
ends
/*
state draw_rpg // RPG_WEAPON:

    setvarvar hud_x weapon_xoffset
    setvarvar hud_y looking_arc
    shiftvarl hud_y 1
    subvarvar hud_y gun_pos

    setvarvar hud_temp weaponcount
    shiftvarl hud_temp 7
    addvar hud_temp 768
    sin hud_temp hud_temp
    shiftvarr hud_temp 11

    subvarvar hud_x hud_temp
    subvarvar hud_y hud_temp

    orvar hud_orientation 512

    addvar hud_x 164

    addvar hud_y 176

    ifvarg weaponcount 0
        ifvarl weaponcount 8
        {
            setvarvar hud_tilenum weaponcount
            shiftvarr hud_tilenum 1
            addvar hud_tilenum RPGGUN

            state G_DrawWeaponTile
        }

    setvar hud_tilenum RPGGUN

    state G_DrawWeaponTile

    ifvarand hud_orientation 512
        xorvar hud_orientation 512
ends

*/
state draw_shotgun // SHOTGUN_WEAPON:
    state reset_hud_weapon_coordinates

    subvar hud_x 8

    switch weaponcount
        case 1
        case 2
            setvarvar hud_temp4 currentweapon
            shiftvarl hud_temp4 1
            guniqhudid hud_temp4

            addvar hud_x 168
            addvar hud_y 201

            setvar hud_shade -128

            setvar hud_tilenum SHOTGUN
            addvar hud_tilenum 2

            state G_DrawWeaponTile

            subvar hud_x 168
            subvar hud_y 201
            setvarvar hud_shade gs
        case 0
        case 6
        case 7
        case 8
            guniqhudid currentweapon

            addvar hud_x 146
            addvar hud_y 202

            setvar hud_tilenum SHOTGUN

            state G_DrawWeaponTile

            guniqhudid 0
            break
        case 3
        case 4
        case 5
        case 9
        case 10
        case 11
        case 12
            ifvarg weaponcount 1
                ifvarl weaponcount 5
                {
                    addvar hud_y 40
                    addvar hud_x 20

                    setvarvar hud_temp4 currentweapon
                    shiftvarl hud_temp4 1
                    guniqhudid hud_temp4

                    addvar hud_x 178
                    addvar hud_y 194

                    setvar hud_shade -128

                    setvarvar hud_tilenum weaponcount
                    subvar hud_tilenum 1
                    shiftvarr hud_tilenum 1
                    addvar hud_tilenum SHOTGUN
                    addvar hud_tilenum 1

                    state G_DrawWeaponTile

                    subvar hud_x 178
                    subvar hud_y 194
                    setvarvar hud_shade gs
                }

            guniqhudid currentweapon

            addvar hud_x 158

            addvar hud_y 220

            setvar hud_tilenum SHOTGUN
            addvar hud_tilenum 3

            state G_DrawWeaponTile

            guniqhudid 0
            break
        case 13
        case 14
        case 15
        case 28
        case 29
        case 30
            guniqhudid currentweapon

            addvar hud_x 198 // 32 + 166
            addvar hud_y 210

            setvar hud_tilenum SHOTGUN
            addvar hud_tilenum 4

            state G_DrawWeaponTile

            guniqhudid 0
            break
        case 16
        case 17
        case 18
        case 19
        case 24
        case 25
        case 26
        case 27
            guniqhudid currentweapon

            addvar hud_x 234 // 64 + 170
            addvar hud_y 196

            setvar hud_tilenum SHOTGUN
            addvar hud_tilenum 5

            state G_DrawWeaponTile
            break
        case 20
        case 21
        case 22
        case 23
            guniqhudid currentweapon

            addvar hud_x 240 // 64 + 176
            addvar hud_y 196

            setvar hud_tilenum SHOTGUN
            addvar hud_tilenum 6

            state G_DrawWeaponTile
            break
    endswitch
ends

state draw_chaingun // CHAINGUN_WEAPON:
    // hud_temp4 = FIREDELAY
    state reset_hud_weapon_coordinates

    ifvarg weaponcount 0
    {
        setvarvar hud_temp weaponcount
        shiftvarl hud_temp 7
        sin hud_temp hud_temp
        shiftvarr hud_temp 12
        addvarvar hud_y hud_temp

        state determine_animation
        ifvarn hud_temp 1
        {
            displayrand hud_temp
            andvar hud_temp 3
            mulvar hud_temp -1
            addvar hud_temp 1
            addvarvar hud_x hud_temp
        }
    }

    // base
    addvar hud_x 168
    addvar hud_y 260

    setvar hud_tilenum CHAINGUN

    state G_DrawWeaponTile

    subvar hud_x 168
    subvar hud_y 260

    switch weaponcount
        case 0
            addvar hud_x 178
            addvar hud_y 233
            addvar hud_tilenum 1 // relative

            state G_DrawWeaponTile
            break
        default
            state determine_animation

            ifvarvarg weaponcount hud_temp4
                ifvarvarl weaponcount hud_totaltime
                {
                    // muzzleflash 1
                    ifvarn hud_temp 1
                    {
                        displayrand hud_temp3
                        andvar hud_temp3 7
                    }
                    else
                        setvar hud_temp3 0

                    addvar hud_x 136 // -4+140
                    addvarvar hud_x hud_temp3

                    setvarvar hud_temp2 weaponcount
                    shiftvarr hud_temp2 1

                    addvarvar hud_y hud_temp3
                    subvarvar hud_y hud_temp2
                    addvar hud_y 208

                    setvarvar hud_tilenum weaponcount
                    subvar hud_tilenum 4
                    divvar hud_tilenum 5
                    addvar hud_tilenum CHAINGUN
                    addvar hud_tilenum 5

                    state G_DrawWeaponTile

                    // cleanup
                    subvarvar hud_x hud_temp3
                    subvarvar hud_y hud_temp3

                    // muzzleflash 3
                    ifvarn hud_temp 1
                    {
                        displayrand hud_temp3
                        andvar hud_temp3 7
                    }

                    addvar hud_x 44 // relative
                    addvarvar hud_x hud_temp3
                    addvarvar hud_y hud_temp3

                    state G_DrawWeaponTile

                    // cleanup
                    subvar hud_x 180 // -4+140 + 44
                    subvar hud_y 208
                    subvarvar hud_x hud_temp3
                    subvarvar hud_y hud_temp3
                    addvarvar hud_y hud_temp2
                }

            subvar hud_totaltime 4
            ifvarvarl weaponcount hud_totaltime
            {
                // muzzleflash 2
                ifvarn hud_temp 1
                {
                    displayrand hud_temp3
                    andvar hud_temp3 7
                }
                else
                    setvar hud_temp3 0

                setvarvar hud_temp2 weaponcount
                shiftvarr hud_temp2 1

                addvarvar hud_x hud_temp3
                addvar hud_x 158 // -4+162

                addvarvar hud_y hud_temp3
                subvarvar hud_y hud_temp2
                addvar hud_y 208

                setvarvar hud_tilenum weaponcount
                subvar hud_tilenum 2
                divvar hud_tilenum 5
                addvar hud_tilenum CHAINGUN
                addvar hud_tilenum 5

                state G_DrawWeaponTile

                // cleanup
                subvarvar hud_x hud_temp3
                subvar hud_x 158
                subvarvar hud_y hud_temp3
                addvarvar hud_y hud_temp2
                subvar hud_y 208

                // barrels (hot)
                addvar hud_x 178

                addvar hud_y 233

                setvar hud_tilenum CHAINGUN
                addvar hud_tilenum 1
                addvarvar hud_tilenum hud_temp2

                state G_DrawWeaponTile
            }
            else
            {
                // barrels
                addvar hud_x 178

                addvar hud_y 233

                setvar hud_tilenum CHAINGUN
                addvar hud_tilenum 1

                state G_DrawWeaponTile
            }
            break
    endswitch
ends

state draw_pipebomb // HANDBOMB_WEAPON:
    state reset_hud_weapon_coordinates

    guniqhudid currentweapon

    setvar hud_tilenum HANDTHROW

    ifvarn weaponcount 0
    {
        ifvarvarl weaponcount hud_totaltime
        {
            ifvarl weaponcount 7
            {
                setvarvar hud_temp weaponcount
                mulvar hud_temp 10
                addvarvar hud_y hud_temp // D
            }
            else ifvarl weaponcount 12
            {
                setvarvar hud_temp weaponcount
                subvar hud_temp 10
                mulvar hud_temp 20
                subvarvar hud_y hud_temp // U
            }
            else ifvarl weaponcount 20
            {
                setvarvar hud_temp weaponcount
                subvar hud_temp 14
                mulvar hud_temp 9
                addvarvar hud_y hud_temp // D
            }

            addvar hud_x 190

            addvar hud_y 250

            switch weaponcount

                case 5
                case 6
                case 7
                case 8
                case 9
                case 10
                case 11
                    addvar hud_tilenum 1
                    break
                case 12
                case 13
                case 14
                case 15
                case 16
                case 17
                case 18
                case 19
                case 20
                    addvar hud_tilenum 2
                    break
            endswitch

            state G_DrawWeaponTile
        }
    }
    else
    {
        addvar hud_x 190

        addvar hud_y 260

        state G_DrawWeaponTile
    }

    guniqhudid 0
ends

state draw_detonator // HANDREMOTE_WEAPON:
    state reset_hud_weapon_coordinates

    guniqhudid currentweapon

    addvar hud_x 102 // -48+150

    addvar hud_y 258

    setvar hud_tilenum HANDREMOTE

    switch weaponcount

        case 1
        case 2
        case 4
        case 5
            addvar hud_tilenum 1
            break
        case 3
            addvar hud_tilenum 2
            break
    endswitch

    state G_DrawWeaponTile

    guniqhudid 0
ends

state draw_devastator // DEVISTATOR_WEAPON:
    state reset_hud_weapon_coordinates
	

    // for guniqhudid
    setvarvar hud_temp4 currentweapon
    shiftvarl hud_temp4 1

    setvar hud_tilenum DEVISTATOR
	ifvarand dukeupgrades[DEVISTATOR_WEAPON] 1 set hud_tilenum 2514
	ife pchar 2 set hud_tilenum 19909

    setvar hud_temp -1 // flag

    ifvarg weaponcount 0
    {
        addvar hud_totaltime 1
        ifvarvarl weaponcount hud_totaltime
        {
            setvar hud_temp 0

            switch weaponcount
                default
                    // addlogvar weaponcount // debug
                    break

                case 1
                case 5
                    setvar hud_temp 4
                    break
                case 2
                case 4
                    setvar hud_temp 12
                    break
                case 3
                    setvar hud_temp 24
                    break
            endswitch

            setvarvar hud_temp2 weaponcount
            shiftvarr hud_temp2 2
            // sign function:
            ifvare hud_temp2 0
                setvar hud_temp3 0
            else ifvarg hud_temp2 0
                setvar hud_temp3 1
            else ifvarl hud_temp2 0
                setvar hud_temp3 -1

            ifvarn player[THISACTOR].hbomb_hold_delay 0
            {
                guniqhudid currentweapon

                setvarvar hud_temp2 hud_temp
                shiftvarr hud_temp2 1
                addvarvar hud_x hud_temp2
                addvar hud_x 268

                addvarvar hud_y hud_temp
                addvar hud_y 238

                addvarvar hud_tilenum hud_temp3

                setvar hud_shade -32

                state G_DrawWeaponTile

                // cleanup

                state reset_hud_weapon_coordinates
                subvarvar hud_tilenum hud_temp3
                setvarvar hud_shade gs

                guniqhudid hud_temp4

                addvar hud_x 30

                addvar hud_y 240

                orvar hud_orientation 4

                state G_DrawWeaponTile

                ifvarand hud_orientation 4
                    xorvar hud_orientation 4

                guniqhudid 0
            }
            else
            {
                guniqhudid hud_temp4

                addvar hud_x 30
                setvarvar hud_temp2 hud_temp
                shiftvarr hud_temp2 1
                subvarvar hud_x hud_temp2

                addvar hud_y 240
                addvarvar hud_y hud_temp

                addvarvar hud_tilenum hud_temp3

                setvar hud_shade -32

                orvar hud_orientation 4

                state G_DrawWeaponTile

                // cleanup

                state reset_hud_weapon_coordinates
                subvarvar hud_tilenum hud_temp3
                setvarvar hud_shade gs
                ifvarand hud_orientation 4
                    xorvar hud_orientation 4

                guniqhudid currentweapon

                addvar hud_x 268

                addvar hud_y 238

                state G_DrawWeaponTile

                guniqhudid 0
            }
        break
        }
    }

    ifvare hud_temp -1
    {
        guniqhudid currentweapon

        addvar hud_x 268

        addvar hud_y 238

        state G_DrawWeaponTile

        subvar hud_x 268
        subvar hud_y 238

        guniqhudid hud_temp4

        addvar hud_x 30

        addvar hud_y 240

        orvar hud_orientation 4

        state G_DrawWeaponTile

        ifvarand hud_orientation 4
            xorvar hud_orientation 4

        guniqhudid 0
    }
ends

/*

state draw_freezer // FREEZE_WEAPON:
    state reset_hud_weapon_coordinates

    setvar hud_tilenum FREEZE

    orvar hud_orientation 512

    setvar hud_temp3 0

    ifvarg weaponcount 0
    {
        addvar hud_totaltime 1
        ifvarvarl weaponcount hud_totaltime
        {
            state determine_animation
            ifvarn hud_temp 1
            {
                displayrand hud_temp
                andvar hud_temp 3

                addvarvar hud_x hud_temp

                displayrand hud_temp
                andvar hud_temp 3

                addvarvar hud_y hud_temp
            }

            guniqhudid 0

            addvar hud_x 210

            addvar hud_y 277 // 16 + 261

            addvar hud_tilenum 2

            setvar hud_shade -32

            state G_DrawWeaponTile

            guniqhudid currentweapon

            subvar hud_y 26 // relative

            setvarvar hud_temp weaponcount
            modvar hud_temp 6
            divvar hud_temp 2
            addvar hud_tilenum 1
            addvarvar hud_tilenum hud_temp

            state G_DrawWeaponTile

            guniqhudid 0

            setvar hud_temp3 1
        }
    }
    ifvare hud_temp3 0
    {
        guniqhudid currentweapon

        addvar hud_x 210

        addvar hud_y 261

        state G_DrawWeaponTile

        guniqhudid 0
    }

    ifvarand hud_orientation 512
        xorvar hud_orientation 512
ends
*/
state draw_freezer_upgrade

	set z 45056
	set orientation 0 // 512
	set x 240
	set y 240
	sub x looking_angSR1
	add y looking_arc
	sub y gun_pos // new_gun_pos
	add x weapon_xoffset
	geta[player[].i].shade shade
	add shade 2
	getsector[THISACTOR].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30
	set picnum 10395
	
	set TMP_A pchar
	mul TMP_A 10
	add TMP_A 20
	add TMP_A currentweapon
	guniqhudid TMP_A
	
	
	ifg weaponcount 1
	ifn rendmode 0
	{
		add picnum 1
		set shade -100
		// RANDOM SHAKE
		set B player[].player_par
		modvar B 5
		ife B 1 { sub x 2 sub y 1 } else
		ife B 2 { add x 2 add y 1 } else
		ife B 3 { sub x 2 add y 1 } else
		ife B 4 { add x 2 sub y 1 }
		set x2 x sub x2 65
		set y2 y sub y2 25
		set z2 z sub z2 16384
		
		
		rotatesprite x2 y2 z2 0 9975 shade pal orientation 0 0 xdim ydim
	}
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim

	guniqhudid 0
	
ends

state draw_expander // GROW_WEAPON:
    state reset_hud_weapon_coordinates

    addvar hud_x 28
    addvar hud_y 18

    setvarvar hud_temp4 hud_pal
    setvar hud_pal 2

    setvarvar hud_temp3 currentweapon
    shiftvarl hud_temp3 1

    setvar hud_temp2 0

    ifvarg weaponcount 0
    {
        ifvarvarl weaponcount hud_totaltime
        {
            state determine_animation
            ifvarn hud_temp 1
            {
                displayrand hud_temp
                andvar hud_temp 3

                addvarvar hud_x hud_temp

                displayrand hud_temp
                andvar hud_temp 3

                subvarvar hud_y hud_temp
            }

            addvar hud_x 184

            addvar hud_y 240

            setvarvar hud_tilenum weaponcount
            andvar hud_tilenum 3
            addvar hud_tilenum SHRINKER
            addvar hud_tilenum 3

            setvar hud_shade -32

            guniqhudid hud_temp3

            state G_DrawTileScaled

            guniqhudid currentweapon

            addvar hud_x 4

            setvar hud_tilenum SHRINKER
            subvar hud_tilenum 1

            setvarvar hud_shade gs

            setvarvar hud_pal hud_temp4

            state G_DrawWeaponTile

            guniqhudid 0

            setvar hud_temp2 1
        }
    }
    ifvare hud_temp2 0
    {
        addvar hud_x 184

        addvar hud_y 240

        setvar hud_tilenum SHRINKER
        addvar hud_tilenum 2

        getplayer[THISACTOR].random_club_frame hud_shade
        sin hud_shade hud_shade
        shiftvarr hud_shade 10
        mulvar hud_shade -1
        addvar hud_shade 16

        guniqhudid hud_temp3

        state G_DrawTileScaled

        guniqhudid currentweapon

        addvar hud_x 4

        setvar hud_tilenum SHRINKER
        subvar hud_tilenum 2

        setvarvar hud_shade gs

        setvarvar hud_pal hud_temp4

        state G_DrawWeaponTile

        guniqhudid 0
    }
ends

state draw_shrinker // SHRINKER_WEAPON:
    state reset_hud_weapon_coordinates

    addvar hud_x 28
    addvar hud_y 18

    setvarvar hud_temp4 hud_pal
    setvar hud_pal 0

    setvarvar hud_temp3 currentweapon
    shiftvarl hud_temp3 1

    setvar hud_temp2 0

    ifvarg weaponcount 0
    {
        ifvarvarl weaponcount hud_totaltime
        {
            state determine_animation
            ifvarn hud_temp 1
            {
                displayrand hud_temp
                andvar hud_temp 3

                addvarvar hud_x hud_temp

                displayrand hud_temp
                andvar hud_temp 3

                subvarvar hud_y hud_temp
            }

            addvar hud_x 184

            addvar hud_y 240

            setvarvar hud_tilenum weaponcount
            andvar hud_tilenum 3
            addvar hud_tilenum SHRINKER
            addvar hud_tilenum 3

            setvar hud_shade -32

            guniqhudid hud_temp3

            state G_DrawTileScaled

            guniqhudid currentweapon

            addvar hud_x 4

            setvar hud_tilenum SHRINKER
            addvar hud_tilenum 1

            setvarvar hud_shade gs

            setvarvar hud_pal hud_temp4

            state G_DrawWeaponTile

            guniqhudid 0

            setvar hud_temp2 1
        }
    }
    ifvare hud_temp2 0
    {
        addvar hud_x 184

        addvar hud_y 240

        setvar hud_tilenum SHRINKER
        addvar hud_tilenum 2

        getplayer[THISACTOR].random_club_frame hud_shade
        sin hud_shade hud_shade
        shiftvarr hud_shade 10
        mulvar hud_shade -1
        addvar hud_shade 16

        guniqhudid hud_temp3

        state G_DrawTileScaled

        guniqhudid currentweapon

        addvar hud_x 4

        setvar hud_tilenum SHRINKER

        setvarvar hud_shade gs

        setvarvar hud_pal hud_temp4

        state G_DrawWeaponTile

        guniqhudid 0
    }
ends

// framework
/*
onevent EVENT_DISPLAYWEAPON // P_DisplayWeapon

    getplayer[THISACTOR].weapon_pos weapon_pos
    getuserdef[THISACTOR].weaponscale weaponscale
    getplayer[THISACTOR].i playerid

    getuserdef[THISACTOR].drawweapon hud_temp

    ifvare hud_temp 2 // weapon icons
    {
        setvar hud_tilenum -1

        switch currentweapon
            case PISTOL_WEAPON
                setvar hud_tilenum FIRSTGUNSPRITE
                break
            case CHAINGUN_WEAPON
                setvar hud_tilenum CHAINGUNSPRITE
                break
            case RPG_WEAPON
                setvar hud_tilenum RPGSPRITE
                break
            case FREEZE_WEAPON
                setvar hud_tilenum FREEZESPRITE
                break
            case SHRINKER_WEAPON
                setvar hud_tilenum SHRINKERSPRITE
                break
            case GROW_WEAPON
                setvar hud_tilenum GROWSPRITEICON
                break
            case DEVISTATOR_WEAPON
                setvar hud_tilenum DEVISTATORSPRITE
                break
            case TRIPBOMB_WEAPON
                setvar hud_tilenum TRIPBOMBSPRITE
                break
            case HANDREMOTE_WEAPON
            case HANDBOMB_WEAPON
                setvar hud_tilenum HEAVYHBOMB
                break
            case SHOTGUN_WEAPON
                setvar hud_tilenum SHOTGUNSPRITE
                break
            case KNEE_WEAPON
                break
            default
                addlogvar currentweapon
                break
        endswitch

        ifvarn hud_tilenum -1
        {
            setvar hud_x 160
            setvarvar hud_y weapon_pos
            mulvarvar hud_y weapon_pos
            addvar hud_y 180
            setvar hud_scale 65536
            getuserdef[THISACTOR].statusbarscale hud_temp2
            mulvarvar hud_scale hud_temp2
            divvar hud_scale 100
            rotatesprite hud_x hud_y hud_scale 0 hud_tilenum 0 0 2 windowx1 windowy1 windowx2 windowy2
        }

        setvar RETURN -1
    }

    ifvarn hud_temp 1 break // If we are not displaying the actual HUD weapons, stop processing.

    // these gamevars can get changed in the states up above, so reset them now.
    setvar hud_scale 65536
    setvar hud_orientation 0
    setvar hud_angle 0
    setvarvar hud_shade gs

    state draw_quick_kick

    // cleanup
    setvar hud_orientation 0
    setvar hud_angle 0
    guniqhudid 0

    getplayer[THISACTOR].hudpal hud_pal

    getactor[playerid].xrepeat hud_temp
    ifvarl hud_temp 40
        state draw_shrunk_fists
    else
    {
        switch currentweapon
            case KNEE_WEAPON
                setvarvar hud_totaltime WEAPON0_TOTALTIME
                state draw_kick
                break
            case TRIPBOMB_WEAPON
                setvarvar hud_totaltime WEAPON8_TOTALTIME
                state draw_tripbomb
                break
            case RPG_WEAPON
                setvarvar hud_totaltime WEAPON4_TOTALTIME
                state draw_rpg
                break
            case SHOTGUN_WEAPON
                setvarvar hud_totaltime WEAPON2_TOTALTIME
                state draw_shotgun
                break
            case CHAINGUN_WEAPON
                setvarvar hud_temp4 WEAPON3_FIREDELAY
                setvarvar hud_totaltime WEAPON3_TOTALTIME
                state draw_chaingun
                break
            case PISTOL_WEAPON
                setvarvar hud_temp3 WEAPON1_RELOAD
                setvarvar hud_temp4 WEAPON1_FIREDELAY
                setvarvar hud_totaltime WEAPON1_TOTALTIME
                state draw_pistol
                break
            case HANDBOMB_WEAPON
                setvarvar hud_totaltime WEAPON5_TOTALTIME
                state draw_pipebomb
                break
            case HANDREMOTE_WEAPON
                setvarvar hud_totaltime WEAPON10_TOTALTIME
                state draw_detonator
                break
            case DEVISTATOR_WEAPON
                setvarvar hud_totaltime WEAPON7_TOTALTIME
                state draw_devastator
                break
            case FREEZE_WEAPON
                setvarvar hud_totaltime WEAPON9_TOTALTIME
                state draw_freezer
                break
            case GROW_WEAPON
                setvarvar hud_totaltime WEAPON11_TOTALTIME
                state draw_expander
                break
            case SHRINKER_WEAPON
                setvarvar hud_totaltime WEAPON6_TOTALTIME
                state draw_shrinker
                break
            default
                addlogvar currentweapon
                break
        endswitch

        // cleanup
        setvar hud_orientation 0
        setvar hud_angle 0
        guniqhudid 0
    }

    setvar RETURN -1
endevent
*/

defstate shadepulse
	set temp player[].player_par
	// shiftvarl temp 6
	mul temp 96
	sin tempb temp
	shiftr tempb 10
	add tempb 1
	set shade tempb
ends

// gamevar crawlgo 0 0
// gamevar crawlfirstline 1000 0
// gamevar crawlnumlines 6 0
// gamevar crawltopy 14388608 0 // bottom of screen 

state display_textcrawl

	ifle crawlclock YES break
	ifl crawlnumlines 1 break
	
	ifg totalclock crawlclock
	{
		sub crawltopy 10240
		ifhitspace sub crawltopy 20480
		set zdist LINESPACING
		mul zdist crawlnumlines
		set TMP_A crawltopy
		add TMP_A zdist
		
		ifl TMP_A -65536 
		{
			set crawlclock NO 
			set crawlfirstline 1000
			set crawltopy 13434880
			break 
		}
		
		set crawlclock totalclock
	}
	set TMP_A crawlfirstline
	set TMP_B crawlfirstline
	add TMP_B crawlnumlines
	set y crawltopy
	set x 10485760
	whilevarvarn TMP_A TMP_B
	{
	
//		screentext <tilenum> <x> <y> <zoom> <block angle> <character angle> <quote> <shade> <pal> <orientation> <alpha> <xspace> <yline> <xbetween> <ybetween> <text flags> <x1> <y1> <x2> <y2> 
		
		ife TMP_A crawlfirstline set z 40960 else set z 32768
		
		set x2 x
		add x2 65536
		set y2 y
		add y2 65536
		// orientation old values 3073, 3072
		screentext NEWFONTSTART x2 y2 z 0 0 TMP_A 0 4 2049 0 8 32 16 32 32930 0 0 xdim ydim
		
		screentext NEWFONTSTART x y z 0 0 TMP_A 0 0 2048 0 8 32 16 32 162 0 0 xdim ydim
		
		// gametextz NEWFONTSTART 20971520‬ y TMP_A 0 0 3072 0 0 xdim ydim 32768
		add TMP_A 1 
		add y LINESPACING
	}
ends

state crosshairsetup
	set xydist 65536
	mul xydist userdef[].crosshairscale
	div xydist 100
	
	
	set temp weapon_xoffset
	div temp 2
	set tempb gun_pos // new_gun_pos
	div tempb 2
/*
	ifp prunning
	{
		set x 10158080 //  = 155 * 65536
		set y 8781824 // = 134 * 65536
		mul temp 65536
		mul tempb 65536
		add x temp
		sub y tempb
	}
	else ifp pwalking
	{
		set x 10485760
		set y 6553600
		ifn player[].weapon_pos 0
		{
			set y 8781824
			mul tempb 65536
			sub y tempb
		}
	}
	else 
	{
		set x 10485760
		set y 6553600
		ifn player[].weapon_pos 0
		{
			set y 8781824
			mul tempb 65536
			sub y tempb
		}
	}
*/
	set x 10485760
	set y 6553600
	ifn player[].weapon_pos 0
	{
		set y 8781824
		mul tempb 65536
		sub y tempb
	}
	ifn player[].weapon_pos 0 set tempc 33 else set tempc 0
	
ends

onevent EVENT_DISPLAYCROSSHAIR
/*
ife player[].heat_on YES
{
	set RETURN -1
	set xydist 131072
	mul xydist userdef[].crosshairscale
	div xydist 100
	set temp 6
	rotatesprite 150 100 xydist 0 3162 0 temp 0 0 0 xdim ydim
	rotatesprite 160 100 xydist 0 3163 0 temp 0 0 0 xdim ydim
	rotatesprite 170 100 xydist 0 3164 0 temp 0 0 0 xdim ydim
	break
}
*/
ifn secretsfound 0 { set RETURN -1 break }
ifn PLAYERONTHEBIKE 0 { set RETURN -1 break }
ifp pshrunk break
ife zoomin YES 
{
	ife player[].curr_weapon DEVISTATOR_WEAPON { set RETURN -1 break }
	ife player[].curr_weapon SHOTGUN_WEAPON { set RETURN -1 break }
	ife player[].curr_weapon CHAINGUN_WEAPON { set RETURN -1 break }
}
ifg zoomcount 0 ifl zoomcount 7 { set RETURN -1 break }
// ifn arrowview -1 
// { 
	// set RETURN -1 
	// break 
// }
ife startmode -1 { set RETURN -1 break }
ife epselect -1 { set RETURN -1 break }
ifg drinkcola 0 { set RETURN -1 break }
ifg eatsnack 0 { set RETURN -1 break }
ifn zombieonplayer -1 { set RETURN -1 break }
ifn movecam -1 { set RETURN -1 break }
ifn thiscam -1 { set RETURN -1 break }
ifn vrmenu 0 { set RETURN -1 break }
ifn vrscreen_time 0 { set RETURN -1 break }
ifn subtitle_time 0 { set RETURN -1 break }
ifg idleanim 10 { set RETURN -1 break }
ifp palive nullop else { set RETURN -1 break }

state calc_gun_pos

ifn onturret -1
{
	set RETURN -1
	ife sprite[onturret].picnum EMPTYTURRET set picnum 5857 else set picnum 5858
	rotatesprite 160 100 65536 0 picnum 5 10 0 0 0 xdim ydim
	break
}
else
ifg handicon 0
{
	set RETURN -1
	ife pchar 2 set picnum 9983 else
	ife pchar 1 set picnum 9889 else set picnum 9888
	rotatesprite 160 100 20480 0 picnum 0 0 0 0 0 xdim ydim
	break
}
ife aimbot_on YES
{
	set RETURN -1
	
	getav[player[].i].bottarget B
	ife B -1 { set pal 0 set orientation 1 }
	else { set pal 2 set orientation 0 }
	set angvar player[].player_par
	shiftl angvar 2
	rotatesprite 160 100 16384 angvar 13562 0 pal orientation 0 0 xdim ydim
	mul angvar -1
	rotatesprite 160 100 16384 angvar 13563 0 pal orientation 0 0 xdim ydim
	set angvar player[].player_par shiftl angvar 4
	rotatesprite 160 100 16384 angvar 13564 0 pal orientation 0 0 xdim ydim
	mul angvar -1
	rotatesprite 160 100 16384 angvar 13565 0 pal orientation 0 0 xdim ydim
	break
}
else
ife currentweapon KNEE_WEAPON
{
	set RETURN -1
	break
}
else
ife currentweapon PISTOL_WEAPON
{
	ife LASERMODE YES
	{
		set RETURN -1
		state crosshairsetup
		div xydist 2
		rotatesprite16 x y xydist 0 5857 15 21 tempc 0 0 xdim ydim
		break
	}
	set RETURN -1
	set xydist 65536
	mul xydist userdef[].crosshairscale
	div xydist 100
	
	
/*
	ife pchar 0 ife PISTOLDOT YES 
	{
		set temp weapon_xoffset
		div temp 2
		set tempb gun_pos
		div tempb 2

		ifp prunning
		{
			set x 10158080 //  = 155 * 65536
			set y 8781824 // = 134 * 65536
			mul temp 65536
			mul tempb 65536
			add x temp
			sub y tempb
		}
		else ifp pwalking
		{
			set x 10485760
			set y 6553600
			ifn player[].weapon_pos 0
			{
				set y 8781824
				mul tempb 65536
				sub y tempb
			}
		}
		else 
		{
			set x 10485760
			set y 6553600
			ifn player[].weapon_pos 0
			{
				set y 8781824
				mul tempb 65536
				sub y tempb
			}
		}
		ifl scandist 0 set picnum 0
		else
		set picnum LASERDOT
		set xydist 65536
		set shade 0
		set pal 0
		orvar tempc 1
		set tempb scandist
		shiftl tempb 3
		sub xydist tempb
		ifl xydist 16384 set xydist 16384
	}
*/
	// else 
	// {
		state crosshairsetup
		set picnum CROSSHAIR
		set shade 10
		set pal 7
	// }
	ifn picnum 0
	rotatesprite16 x y xydist 0 picnum shade pal tempc 0 0 xdim ydim
}
else
ife currentweapon SHOTGUN_WEAPON
{
	set RETURN -1
	state crosshairsetup
	ife pchar 1 ifvarand shellyupgrades[SHOTGUN_WEAPON] 4 ifvarand gotbow 2
	{
		shiftr xydist 2
		rotatesprite16 x y xydist 0 8947 0 0 tempc 0 0 xdim ydim
	}
	else
	{
		set temp 8
		mul temp 65536
		sub x temp
		rotatesprite16 x y xydist 0 3130 0 23 tempc 0 0 xdim ydim
		add x temp
		add x temp
		rotatesprite16 x y xydist 0 3132 0 23 tempc 0 0 xdim ydim
	}
}
else
ife currentweapon RPG_WEAPON
{
	set RETURN -1
	ife nukeselect YES
	{
		state crosshairsetup
		shiftr xydist 2
		rotatesprite16 x y xydist 0 10358 0 23 tempc 0 0 xdim ydim	
	}
	else
	{
		state crosshairsetup
		div xydist 2
		ife pchar 1 ife rpgtype 1 set pal 1 else
		set pal 21
		rotatesprite16 x y xydist 0 5858 15 pal tempc 0 0 xdim ydim
		// rotatesprite16 x y xydist 0 2527 0 2 tempc 0 0 xdim ydim
	}
}
else
ife currentweapon DEVISTATOR_WEAPON
{
	ifvarand gotrailgun 2 
	{
		set RETURN -1
		state crosshairsetup
		rotatesprite16 x y xydist 0 CROSSHAIR 14 2 tempc 0 0 xdim ydim	
	}
	else
	{
		set RETURN -1
		state crosshairsetup
		set temp 8
		mul temp 65536
		sub x temp
		rotatesprite16 x y xydist 0 3162 0 23 tempc 0 0 xdim ydim
		add x temp
		add x temp
		rotatesprite16 x y xydist 0 3164 0 23 tempc 0 0 xdim ydim
	}
}
else
ife currentweapon TRIPBOMB_WEAPON
set RETURN -1
else
ife currentweapon SHRINKER_WEAPON
{
	set RETURN -1
	state crosshairsetup
	
	set temp 4
	mul temp 65536
	sub x temp
	rotatesprite16 x y xydist 0 3079 0 23 tempc 0 0 xdim ydim
	sub x temp
	rotatesprite16 x y xydist 0 3079 0 23 tempc 0 0 xdim ydim
	add x temp
	add x temp
	add x temp
	rotatesprite16 x y xydist 0 3080 0 23 tempc 0 0 xdim ydim
	add x temp
	rotatesprite16 x y xydist 0 3080 0 23 tempc 0 0 xdim ydim
}
else
ife currentweapon GROW_WEAPON
{
	set RETURN -1
	state crosshairsetup
	
	
	ife pchar 2
	{
		// shiftr xydist 1
		div xydist 3
		rotatesprite16 x y xydist 0 18828 10 0 tempc 0 0 xdim ydim	
	}
	else
	{
		set temp 4
		mul temp 65536
		sub x temp
		rotatesprite16 x y xydist 0 3101 0 23 tempc 0 0 xdim ydim
		sub x temp
		rotatesprite16 x y xydist 0 3101 0 23 tempc 0 0 xdim ydim
		add x temp
		add x temp
		add x temp
		rotatesprite16 x y xydist 0 3099 0 23 tempc 0 0 xdim ydim
		add x temp
		rotatesprite16 x y xydist 0 3099 0 23 tempc 0 0 xdim ydim
	}
}
else
ife currentweapon FREEZE_WEAPON
{
	ifvarand gotplasma 2
	{
		set RETURN -1
		state crosshairsetup
		rotatesprite16 x y xydist 0 10430 0 30 tempc 0 0 xdim ydim	
	}
	else
	ife pchar 1
	{
		set RETURN -1
		state crosshairsetup
		mul xydist 6
		div xydist 14
		rotatesprite16 x y xydist 0 8101 8 21 tempc 0 0 xdim ydim
	}
	else
	{
	set RETURN -1
	set xydist 65536
	mul xydist userdef[].crosshairscale
	div xydist 100

	set temp weapon_xoffset
	div temp 2
	set tempb gun_pos // new_gun_pos
	div tempb 2
/*
	set x 155
	set y 131
	
	add x temp
	sub y tempb
	
	ifp prunning
	{
		set x 155 
		set y 131
		add x temp
		sub y tempb
	}
	else ifp pwalking
	{
		set x 155
		set y 131
		ifn player[].weapon_pos 0
		{
			set y 8781824
			mul tempb 65536
			sub y tempb
			div y 65536
		}
	}
	else 
	{
		set x 160
		set y 100
		ifn player[].weapon_pos 0
		{
			set y 8781824
			mul tempb 65536
			sub y tempb
			div y 65536
		}
	}
*/
		set x 160
		set y 100
		ifn player[].weapon_pos 0
		{
			set y 8781824
			mul tempb 65536
			sub y tempb
			div y 65536
		}

	set tempc 0
	ifn player[].weapon_pos 0 orvar tempc 33
	sub x 4
	ife pchar 0 set pal 0 else set pal 21
	rotatesprite x y xydist 0 3086 0 pal tempc 0 0 xdim ydim
	add x 8
	rotatesprite x y xydist 0 3131 0 pal tempc 0 0 xdim ydim
	add y 4
	orvar tempc 4
	rotatesprite x y xydist 0 3131 0 pal tempc 0 0 xdim ydim
	sub x 8
	rotatesprite x y xydist 0 3086 0 pal tempc 0 0 xdim ydim
	}
}
else 
ife currentweapon CHAINGUN_WEAPON
{
	set RETURN -1
	state crosshairsetup
	div xydist 3
	rotatesprite16 x y xydist 0 8102 15 21 tempc 0 0 xdim ydim // 5857
}
else
{
	set RETURN -1
	ife currentweapon HANDBOMB_WEAPON ifg pipehold 0 break
	ife currentweapon KNEE_WEAPON ifg gotsaber 0 break
	state crosshairsetup
	rotatesprite16 x y xydist 0 CROSSHAIR 10 7 tempc 0 0 xdim ydim
}

endevent

defstate monhud


	setvar pal 2
	ife actorvar[monid].team 1 set pal 1 else
	ife actorvar[monid].team 3 set pal 11
	getactorvar[monid].inithp tempb
	ifge tempb 10000 set pal 49 else ifge tempb 5000 set pal 10 else ifge tempb 2000 set pal 23
	getactor[monid].extra tempc // actual hit point amount
	mulvar tempc 80 // 100
	ifvare tempb 0 break
	divvarvar tempc tempb

	setvar z 20480 // 16384
	setvar x 120 // 111
	setvar x2 199 // 210
	addvarvar tempc x
// ifvarvarg tempc x setvar orientation 0 else setvar orientation 33
	setvar tempd 0
	set orientation 1024
	// ifvarvarg tempc x setvar orientation 1024 else setvar orientation 1057
	rotatesprite 118 162 z 0 16501 0 pal orientation 0 0 xdim ydim
	
	whilevarn tempd 1
	{
		ifvarvarg x tempc set pal 12
		// { setvar orientation 1057 setvar pal 12 }
		ifvarvarg x x2 setvar tempd 1
		else
		rotatesprite x 162 z 0 16502 0 pal orientation 0 0 xdim ydim
		
		addvar x 2
		
		break
	}
	subvar x 3
	rotatesprite x 162 z 0 16503 0 pal orientation 0 0 xdim ydim
	
	switch sprite[monid].picnum
	case LIZTROOP case LIZTROOPDUCKING case NEWTROOP case NEWTROOPDUCKING set temp 1040 
	ife sprite[monid].pal 21 set temp 1075 break
	case PIGCOP case PIGCOPDIVE case NEWPIG case NEWPIGDIVE 
	case NEWPIGDOWN set temp 1041 break
	case RECON case NEWRECON set temp 1079 break
	case LIZMAN case LIZMANDUCKING set temp 1042 break
	case COMMANDER case NEWCOMM set temp 1043 break
	case DRONE set temp 1044 break
	case ROTATEGUN set temp 1045 break
	case NEWBEAST set temp 1046 break
	case BOSS1 case NEWBATLORD set temp 1047 break
	case BOSS3 set temp 1048 break
	case BOSS2 case BOSS2FLY set temp 1049 break
	case BOSS4 set temp 1050 break
	case LIZELITE case LIZELITECROUCH set temp 1051 break
	case CYBERBEAST case CYBERBALL set temp 1052 break
	case LIZRANGER case LIZRANGERDUCKING set temp 1053 break
	case OCTABRAIN set temp 1054 break
	case PIGSUV set temp 1055 break
	case SCUBATROOP set temp 1056 break
	case MECHBRAIN set temp 1057 break
	case DEANOVA ife actorvar[monid].team 0 set temp 1058 else set temp 1071 break
	case MEGABRAIN set temp 1059 break
	case PSPIDER case DRPROTON case PSPIDERJUMPING set temp 1060 break
	case SYTH case SITH set temp 1061 break
	case SPACEBULL case SPACEBULLDUCKING set temp 1062 break
	case MANDOFETT case MANDOCROUCH ife VOLUME 6 set temp 1063 else set temp 1167 break
	case TANK set temp 1064 break
	case PIGBOSS set temp 1065 break
	case LIZBOSS set temp 1066 break
	case SHARK set temp 1067 break
	case ARMYANT case ARMYANTCRAWL set temp 1068 break
	case ARMPIG case EDFPIG set temp 1069 break
	case TERMINATOR case TERMINATORDUCKING case TERMINATORCRAWLING set temp 1070 break
	case EGG case EGGYOUNG set temp 1076 break
	case SIDEGUN set temp 1077 break
	case LIZTURRET case EMPTYTURRET case EDFTURRET case EMPTYEDFTURRET set temp 1078 break
	case ROLLYTURRET set temp 1093 break
	case NEWSENTRY case PATROLSENTRY set temp 1094 break
	case CANHEAD case CANHEADNOARMS set temp 1085 break
	case QUEEN set temp 1088 break
	case EDFTROOP case EDFTROOPCROUCH case EDFSNIPER case EDFSNIPERCROUCH
	case ARMEDF set temp 1089 break
	case EDFDRONE set temp 1090 break
	case ZOMBIE case ZOMBIEGIDUP set temp 1091 break
	case CORRUPT set temp 1092 break
	case NEWTROOPTARGET case NEWPIGTARGET set temp 1095 break
	case COMBINEDMEN set temp 1096 break
	case SMALLMAN set temp 1097 break
	case LARGEMAN set temp 1098 break
	case NEWBOSS1 set temp 1099 break
	case CYCLOIDMAX set temp 1163 break
	case GUARD set temp 1164 break
	case NURGLE set temp 1181 break
	case CRONEN set temp 1182 break
	case EDFTANK case EDFTANKTURRET set temp 1183 break
	case DUKEBOT case DUKEBOTCROUCH set temp 1190 break
	case SHELLY case SHELLYCROUCH set temp 1191 break
	case LIZDOG set temp 1192 break
	case NAAMAH set temp 1199 break
	case CRAZYLADY set temp 1248 break
	case DEVOURER set temp 1256 break
	case BATBOSS case BATBOSSSWOOPING ife sprite[monid].pal 21 set temp 1257 else set temp 1275 break
	case DOPEFISH set temp 1261 break
	case SCHOOLGIRL set temp 1274 break
	case CHEERBOT set temp 1276 break
	default ife actorvar[monid].team 3 set temp 1262 else set temp -1 break
	endswitch
	ifn temp -1
	{
		ifvarand actorvar[monid].monstflags 131072 set temp 1185

		qsprintf 1080 temp actorvar[monid].mlevel sprite[monid].extra
		
		set pal 12
		ifg actorvar[monid].mlevel plevel 
		{
			set TMP_A plevel
			sub TMP_A actorvar[monid].mlevel
			ifl TMP_A -4 set pal 49 else
			ifl TMP_A -2 set pal 21
		}
		gametextz NEWFONTSTART 320 170 1080 0 pal 1024 0 0 xdim ydim 20480 // 24576
	}
	
ends

state xpbardisplay

	ife pchar 2 ifg idleanim 10 break

	set tempH xdim
	mul tempH 4
	div tempH ydim

	set tempb nextplevel // xp range
	
	set tempc playerxp // distance from start xp
	mulvar tempc 50
	divvarvar tempc tempb // percentage of range completed divided by two

	setvar z 16384
	// bar is 50 pixels across
	
	ifl tempH 6
	{
		set x 175
		setvar x2 225
		set y 185
	}
	else
	{
		setvar x 160
		setvar x2 210
		set y 191
	}
	addvarvar tempc x

	setvar tempd 0
	ifvarvarg tempc x setvar orientation 0 else setvar orientation 33
	setvar pal 1
	set tempe x, sub tempe 1
	rotatesprite tempe y z 0 16617 0 pal orientation 0 0 xdim ydim
	whilevarn tempd 1
	{
		ifvarvarg x tempc setvar orientation 33
		ifvarvarg x x2 setvar tempd 1
		else
		rotatesprite x y z 0 16618 0 pal orientation 0 0 xdim ydim
		addvar x 1
		break
	}
	subvar x 1
	rotatesprite x y z 0 16619 0 pal orientation 0 0 xdim ydim
	
	
	set TMP_A player[].curr_weapon
	ife TMP_A 2 
	{
		ife pchar 0 ifvarand gotDB 2 set TMP_A 12
		ife pchar 1 ifvarand gotbow 2 set TMP_A 12
		ife pchar 2 ifvarand gotbow 2 set TMP_A 12
	}
	ife TMP_A 10 set TMP_A 5
	
	// ife TMP_A 0
	// {
		// ife sidekick 0
		// ife player[].quick_kick 0
		// ife qk_proxy 0
		// {
			// ifg gotsaber 0 set TMP_A 10 else
			// ife WEAPON0_SHOOTS SAWPROJ set TMP_A 10
		// }
	// }
	// else
	ife weaponcount 0 ifn qk_proxy 0 set TMP_A 0
	
	ifn sidekick 0 set TMP_A 0
	
	ife pchar 0 set tempb dweaplevel[TMP_A] else 
	ife pchar 2 set tempb wweaplevel[TMP_A] else
	set tempb bweaplevel[TMP_A]
	add tempb 1
	ifg tempb 2 mul tempb 2500 else
	mul tempb 2000 // xp range
	sub tempb 1000
	
	ife pchar 0 set tempc dweapxp[TMP_A] else 
	ife pchar 2 set tempc wweapxp[TMP_A] else
	set tempc bweapxp[TMP_A]
	mulvar tempc 50
	divvarvar tempc tempb // percentage of range completed divided by two
	
	setvar z 16384
	// bar is 50 pixels across
	
	
	ifl tempH 6
	{
		set x 175
		setvar x2 225
		set y 191
	}
	else
	{
		setvar x 230
		setvar x2 280
		set y 191
	}

	addvarvar tempc x

	setvar tempd 0
	ifvarvarg tempc x setvar orientation 0 else setvar orientation 33
	setvar pal 22
	set tempe x, sub tempe 1
	rotatesprite tempe y z 0 16617 0 pal orientation 0 0 xdim ydim
	whilevarn tempd 1
	{
		ifvarvarg x tempc setvar orientation 33
		ifvarvarg x x2 setvar tempd 1
		else
		rotatesprite x y z 0 16618 0 pal orientation 0 0 xdim ydim
		addvar x 1
		break
	}
	subvar x 1
	rotatesprite x y z 0 16619 0 pal orientation 0 0 xdim ydim
	
	set orientation 16

	// player level display
	qsprintf 1083 1081 plevel
	// gametextz NEWFONTSTART 245 190 1083 0 0 orientation 0 0 xdim ydim 10240
	
	ifl tempH 6 { set newx 350 set newy 184 }
	else { set newx 325 set newy 190 }
	
	gametextz NEWFONTSTART newx newy 1083 0 0 orientation 0 0 xdim ydim 10240
	ife pchar 0 set tempb dweaplevel[TMP_A] else 
	ife pchar 2 set tempb wweaplevel[TMP_A] else
	set tempb bweaplevel[TMP_A]
	add tempb 1
	// weapon level display
	qsprintf 1083 1082 tempb
	
	ifl tempH 6 { set newx 350 set newy 190 }
	else { set newx 465 set newy 190 }
	
	
	// gametextz NEWFONTSTART 385 190 1083 0 0 orientation 0 0 xdim ydim 10240
	gametextz NEWFONTSTART newx newy 1083 0 0 orientation 0 0 xdim ydim 10240

ends

defstate old_weapon_setup

   getplayer[THISACTOR].weapon_pos weapon_pos
    getuserdef[THISACTOR].weaponscale weaponscale
    getplayer[THISACTOR].i playerid

    getuserdef[THISACTOR].drawweapon hud_temp

    ifvare hud_temp 2 // weapon icons
    {
        setvar hud_tilenum -1

        switch currentweapon
            case PISTOL_WEAPON
                setvar hud_tilenum FIRSTGUNSPRITE
                break
            case CHAINGUN_WEAPON
                setvar hud_tilenum CHAINGUNSPRITE
                break
            case RPG_WEAPON
                setvar hud_tilenum RPGSPRITE
                break
            case FREEZE_WEAPON
                setvar hud_tilenum FREEZESPRITE
                break
            case SHRINKER_WEAPON
                setvar hud_tilenum SHRINKERSPRITE
                break
            case GROW_WEAPON
                setvar hud_tilenum GROWSPRITEICON
                break
            case DEVISTATOR_WEAPON
                setvar hud_tilenum DEVISTATORSPRITE
                break
            case TRIPBOMB_WEAPON
                setvar hud_tilenum TRIPBOMBSPRITE
                break
            case HANDREMOTE_WEAPON
            case HANDBOMB_WEAPON
                setvar hud_tilenum HEAVYHBOMB
                break
            case SHOTGUN_WEAPON
                setvar hud_tilenum SHOTGUNSPRITE
                break
            case KNEE_WEAPON
                break
            default
                addlogvar currentweapon
                break
        endswitch

        ifvarn hud_tilenum -1
        {
            setvar hud_x 160
            setvarvar hud_y weapon_pos
            mulvarvar hud_y weapon_pos
            addvar hud_y 180
            setvar hud_scale 65536
            getuserdef[THISACTOR].statusbarscale hud_temp2
            mulvarvar hud_scale hud_temp2
            divvar hud_scale 100
            rotatesprite hud_x hud_y hud_scale 0 hud_tilenum 0 0 2 windowx1 windowy1 windowx2 windowy2
        }

        setvar RETURN -1
    }

    ifvarn hud_temp 1 break // If we are not displaying the actual HUD weapons, stop processing.

    // these gamevars can get changed in the states up above, so reset them now.
    setvar hud_scale 65536
    setvar hud_orientation 0
    setvar hud_angle 0
    setvarvar hud_shade gs

    state draw_quick_kick

    // cleanup
    setvar hud_orientation 0
    setvar hud_angle 0
    guniqhudid 0

    getplayer[THISACTOR].hudpal hud_pal
	
    getactor[playerid].xrepeat hud_temp
    ifvarl hud_temp 40
	{
        state draw_shrunk_fists
		break
	}
    else
    {
        switch currentweapon
            case KNEE_WEAPON
                setvarvar hud_totaltime WEAPON0_TOTALTIME
                state draw_kick
                break
            case TRIPBOMB_WEAPON
                setvarvar hud_totaltime WEAPON8_TOTALTIME
                // state draw_tripbomb
                break
            case RPG_WEAPON
                setvarvar hud_totaltime WEAPON4_TOTALTIME
                // state draw_rpg
                break
            case SHOTGUN_WEAPON
                setvarvar hud_totaltime WEAPON2_TOTALTIME
                // state draw_shotgun
                break
            case CHAINGUN_WEAPON
                setvarvar hud_temp4 WEAPON3_FIREDELAY
                setvarvar hud_totaltime WEAPON3_TOTALTIME
                // state draw_chaingun
                break
            case PISTOL_WEAPON
                setvarvar hud_temp3 WEAPON1_RELOAD
                setvarvar hud_temp4 WEAPON1_FIREDELAY
                setvarvar hud_totaltime WEAPON1_TOTALTIME
                // state draw_pistol
                break
            case HANDBOMB_WEAPON
                setvarvar hud_totaltime WEAPON5_TOTALTIME
                // state draw_pipebomb
                break
            case HANDREMOTE_WEAPON
                setvarvar hud_totaltime WEAPON10_TOTALTIME
                // state draw_detonator
                break
            case DEVISTATOR_WEAPON
                setvarvar hud_totaltime WEAPON7_TOTALTIME
                // state draw_devastator
                break
            case FREEZE_WEAPON
                setvarvar hud_totaltime WEAPON9_TOTALTIME
                // state draw_freezer
                break
            case GROW_WEAPON
                setvarvar hud_totaltime WEAPON11_TOTALTIME
                // state draw_expander
                break
            case SHRINKER_WEAPON
                setvarvar hud_totaltime WEAPON6_TOTALTIME
                // state draw_shrinker
                break
            default
                addlogvar currentweapon
                break
        endswitch

        // cleanup
        setvar hud_orientation 0
        setvar hud_angle 0
        guniqhudid 0
    }

    setvar RETURN -1

ends

state initweapondisplay

ife currentweapon SHOTGUN_WEAPON
{
	set x 230
	set y 186
}
ife currentweapon CHAINGUN_WEAPON
{
	set x 172
	set y 234
}
ife currentweapon RPG_WEAPON
{
	 set x 160
	 set y 171
}
ife currentweapon DEVISTATOR_WEAPON
{
	ifvarand gotrailgun 2
	{
		set x 245
		set y 230
	}
}
ife currentweapon FREEZE_WEAPON
{
	set x 200
	set y 260
}

 set angvar 0
 set orientation 4096

sub x looking_angSR1
add y looking_arc
ife currentweapon SHOTGUN_WEAPON ifg weaponcount 17 sub y 64
else
sub y gun_pos // new_gun_pos
add x weapon_xoffset

geta[player[].i].shade shade
getsector[THISACTOR].floorpal pal
ifvare pal 4 { addvar shade 10 set pal 0 }
ifvarg shade 30 set shade 30
// ifvarg pal 13 set pal 0
ends

defstate initshellydisplay

	ife currentweapon KNEE_WEAPON
	{
		set x 180
		set y 200
	}
	ife currentweapon PISTOL_WEAPON
	{
		set x 210
		set y 211
	}
	ife currentweapon SHOTGUN_WEAPON
	{
		set x 235
		set y 242
		ifvarand gotbow 2
		{
			set temp NO
			ife pchar 1
			ifvarand shellyupgrades[SHOTGUN_WEAPON] 4
			set temp YES
			
			ife pchar 2
			ifvarand wesupgrades[SHOTGUN_WEAPON] 4
			set temp YES
			
			ife temp YES
			{
				setvar x 150
				setvar y 204
			}
		}
	}
	ife currentweapon CHAINGUN_WEAPON
	{
		set x 215
		set y 240
	}
	ife currentweapon RPG_WEAPON
	{
		set x 227
		set y 215
	}
	ife currentweapon HANDBOMB_WEAPON
	{
		set x 200
		set y 225
	}
	ife currentweapon HANDREMOTE_WEAPON
	{
		set x 200
		set y 225
	}
	ife currentweapon DEVISTATOR_WEAPON
	{
		ifvarand gotrailgun 2
		{
			set x 245
			set y 230
		}
		else
		{
			set x 255
			set y 233
		}
	}
	ife currentweapon FREEZE_WEAPON
	{
		set x 215
		set y 244
		set picnum 7792
	}
	ife pchar 2
	ife currentweapon SHRINKER_WEAPON
	{
		set x 215
		set y 233
	}
	ife currentweapon GROW_WEAPON
	{
		set x 215
		set y 233
	}
	set angvar 0
	set orientation 4096
	sub x looking_angSR1
	
	add y looking_arc
	sub y gun_pos // new_gun_pos
	add x weapon_xoffset
	
	set z 65536
	geta[player[].i].shade shade
	getsector[THISACTOR].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30
	// ifvarg pal 13 set pal 0

ends

state draw_dual_glock

	set TMP_A pchar
	mul TMP_A 10
	add TMP_A 20
	add TMP_A currentweapon
	guniqhudid TMP_A

	add x 10
	// FIRST DRAW RIGHT PISTOL
	switch weaponcount
		case 0 case 1 case 3 case 5 case 6 case 30 
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		break
		
		case 2 case 4 add picnum 1 set shade -100 
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		break
		
		case 7 case 8 case 9 case 10
		case 11 case 12 case 13 case 14
			set x 220
			set x2 weaponcount
			shiftl x2 2
			add x x2
			set y 180
			set y2 weaponcount
			shiftl y2 1
			sub y y2
			ifl y 148 set y 148
			add picnum 2
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		break
		case 15 case 16 case 17 case 18 case 19 
		case 20 case 21 case 22 case 23 case 24
			set x 276
			set y 148
			add picnum 3
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			break
		case 25 case 26
			set x 276
			set y 148
			add picnum 2
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			break
			
		case 27
			set x 266
			set y 156
			add picnum 2
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			break
			
		case 28
			set x 256
			set y 164
			add picnum 2
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			break
		case 29
			set x 246
			set y 172
			add picnum 2
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			break
		default break
		endswitch
		
		// NEXT DRAW LEFT PISTOL
	orvar orientation 4
	sub x 190
	ife pchar 0 set picnum 8177 else set picnum 8182
	switch weaponcount
		case 0 case 1 case 2 case 4 case 6 case 56
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
		break
		
		case 3 case 5 add picnum 1 set shade -100 
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
		break
		
		case 7 
			add y 15
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
		break
		
		case 8
			add y 30
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
		break
		
		case 9
			add y 45
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
		break
		
		case 31 case 32 case 33 case 34 case 35 case 36
		case 37 case 38 case 39 
			set x 85
			set x2 weaponcount
			sub x2 26
			shiftl x2 2
			sub x x2
			ifl x 40 set x 40
			set y 180
			set y2 weaponcount
			sub y2 26
			shiftl y2 1
			sub y y2
			ifl y 148 set y 148
			add picnum 2
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
		break
		case 40 case 41 case 42 case 43 case 44 case 45 
		case 46 case 47 case 48 case 49 case 50
			set x 40
			set y 148
			add picnum 3
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
			break
		case 51 case 52
			set x 40
			set y 148
			add picnum 2
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
			break
			
		case 53
			set x 40
			set y 156
			add picnum 2
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
			break
			
		case 54
			set x 50
			set y 164
			add picnum 2
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
			break
		case 55
			set x 60
			set y 172
			add picnum 2
			rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
			break
			
		default break
		endswitch
		
	guniqhudid 0

ends

state draw_glock18

	set x 235
	set y 237
	set angvar 0
	set orientation 4096
	sub x looking_angSR1
	add y looking_arc
	sub y gun_pos // new_gun_pos
	add x weapon_xoffset
	set z 32768
	geta[player[].i].shade shade
	getsector[THISACTOR].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30
	ife pchar 0 set picnum 8177 else set picnum 8182
	ife pchar 0 ifvarand dukeupgrades[PISTOL_WEAPON] 4 state draw_dual_glock else
	ife pchar 1 ifvarand shellyupgrades[PISTOL_WEAPON] 4 state draw_dual_glock else
	{
		switch weaponcount
		case 0 case 1 case 3 case 30 break
		case 2 case 4 add picnum 1 set shade -100 break
		
		case 5 case 6 case 7 case 8 case 9 case 10
		case 11 case 12 case 13 case 14
			set x 220
			set x2 weaponcount
			shiftl x2 2
			add x x2
			set y 180
			set y2 weaponcount
			shiftl y2 1
			sub y y2
			ifl y 148 set y 148
			add picnum 2
		break
		case 15 case 16 case 17 case 18 case 19 
		case 20 case 21 case 22 case 23 case 24
			set x 276
			set y 148
			add picnum 3
			break
		case 25 case 26
			set x 276
			set y 148
			add picnum 2
			break
			
		case 27
			set x 266
			set y 156
			add picnum 2
			break
			
		case 28
			set x 256
			set y 164
			add picnum 2
			break
		case 29
			set x 246
			set y 172
			add picnum 2
			break
		endswitch
		
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		
		guniqhudid 0
	}
ends

state displayrailgun

	guniqhudid 250

	set temp NO
	ife pchar 0 ifvarand dukeupgrades[DEVISTATOR_WEAPON] 4 set temp YES
	ife pchar 1 ifvarand shellyupgrades[DEVISTATOR_WEAPON] 4 set temp YES
	ife pchar 2 ifvarand wesupgrades[DEVISTATOR_WEAPON] 4 set temp YES
	ife temp YES
	{
		ife zoomin YES
		{
			ifge weaponcount WEAPON7_FIREDELAY
			ifl weaponcount 5 // draw muzzleflash
			rotatesprite 160 180 131072 0 8181 0 0 orientation 0 0 xdim ydim
			
			set z 32768
			set temp horizfall
			shiftl temp 9
			add z temp
			rotatesprite 160 100 z 0 8191 10 0 1024 0 0 xdim ydim
			guniqhudid 0
			break
		}
		set z 40960
		set angvar 0
		ife pchar 2 set picnum 19907 else
		ife pchar 0 set picnum 8187 else set picnum 8189
		ifge weaponcount WEAPON7_FIREDELAY
		ifl weaponcount 26
		{
			set z2 z
			ifl weaponcount 6
			{
				add picnum 1
				set shade -100
				set temp horizfall
				shiftl temp 1
				add y temp
				add x temp
				shiftl temp 8
				add z temp
				
				ifl weaponcount 5 // draw muzzleflash
				{
					set x2 x set y2 y
					sub x2 75 sub y2 40
					rotatesprite x2 y2 81920 0 8181 shade pal orientation 0 0 xdim ydim
				}
			}
			else
			ifge weaponcount 10
			{
				set temp YES
				ife pchar 0 ifvarand dukeupgrades[DEVISTATOR_WEAPON] 8 set temp NO
				ife pchar 1 ifvarand shellyupgrades[DEVISTATOR_WEAPON] 8 set temp NO // sem-auto upgrade
				ife pchar 2 ifvarand wesupgrades[DEVISTATOR_WEAPON] 8 set temp NO // sem-auto upgrade
				ife temp YES
				{
					switch weaponcount
					case 10 case 25
						add y 4
						add angvar 6
					break
					case 11 case 24
						add y 10
						add angvar 20
					break
					case 12 case 23
						add y 16
						add angvar 32
					break
					case 13 case 22
						add y 24
						add angvar 48
					break
					case 14 case 21
						add y 32
						add angvar 64
					break
					case 15 case 20
						add y 42
						add angvar 84
					break
					case 16 case 19
						add y 52
						add angvar 108
					break
					case 17 case 18
						add y 60
						add angvar 120
					break
					endswitch
				}
			}
		}
		rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
		ifge weaponcount WEAPON7_FIREDELAY
		ifl weaponcount 5 // draw muzzleflash
		{
			orvar orientation 33
			rotatesprite x2 y2 81920 0 8181 shade pal orientation 0 0 xdim ydim
		}
		guniqhudid 0
		break
	}
	
	
	ife zoomin YES 
	{
		set z 32768
		set temp horizfall
		shiftl temp 9
		add z temp
		rotatesprite 160 100 z 0 10232 10 1 1024 0 0 xdim ydim
		guniqhudid 0
		break
	}
	set picnum RAILGUNIDLE
	ifn weaponcount 0
	{
		set temp weaponcount
		div temp 2
		add picnum temp
		// add picnum 1
		ifl picnum 5343
		set shade -100
		else set picnum RAILGUNIDLE
		
	}
	rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0
ends

defstate displayplasmagun // aka terminator gun

	set z 32768
	set orientation 4096 // 512
	set x 240
	set y 240
	sub x looking_angSR1
	add y looking_arc
	sub y gun_pos // new_gun_pos
	add x weapon_xoffset
	geta[player[].i].shade shade
	add shade 2
	getsector[THISACTOR].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30
	set picnum PLASMAHUD
	ifg weaponcount 1
	{
		set x 250 // 189
		// set y 182
		ifl weaponcount 5
		{
			add picnum 2
			set shade -100
			switch weaponcount
			case 2 add x 5 add y 3 break
			case 3 add x 3 add y 2 break
			case 4 add x 1 add y 1 break
			endswitch
		}
		ife WEAPON9_SHOOTS SHOCKBALL2
		ifg weaponcount 1
		{
			switch weaponcount
			case 2 add z 2048 add x 5
			case 3 sub y 20 add z 6144 add x 15 break
			case 4 case 5 sub y 28 add z 8192 add x 24 break
			case 6 sub y 24 add z 6144 add x 20 break
			case 7 sub y 20 add z 5120 add x 16 break
			case 8 sub y 16 add z 4096 add x 12 break
			case 9 sub y 12 add z 3072 add x 8 break
			case 10 sub y 8 add z 2048 add x 4 break
			case 11 sub y 4 add z 1024 add x 2 break
			endswitch
		}
	}

	guniqhudid 249
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0

ends

state displayshockrifle

	guniqhudid 248

	set z 49152
	set orientation 4096 // 512
	set x 260
	set y 240
	sub x looking_angSR1
	add y looking_arc
	sub y gun_pos // new_gun_pos
	add x weapon_xoffset
	geta[player[].i].shade shade
	// getsector[THISACTOR].floorpal pal
	set pal 0
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30
	
	set picnum SHOCKHUD
	set temp player[].player_par
	ife weaponcount 0 div temp 3
	// else div temp 2
	modvar temp 12
	add picnum temp
	ifn weaponcount 0 
	{
		set x 272 // 189
		// set y 182
		ifge weaponcount WEAPON11_FIREDELAY
		{
			add picnum 12
			ifl weaponcount 7
			{
				set shade -100
				switch weaponcount
				case 3 add x 20 add y 12 break
				case 4 add x 16 add y 8 break
				case 5 add x 8 add y 4 break
				case 6 add x 4 add y 2 break
				endswitch
				
				// draw flash
				set x2 x set y2 y
				sub x2 80 sub y2 40
				displayrandvar temp 2047
				set z2 49152
				set tempb weaponcount
				
				shiftl tempb 12
				sub z2 tempb
				set B orientation
				ife rendmode 0 orvar B 1
				rotatesprite x2 y2 z2 temp 13047 0 pal B 0 0 xdim ydim
				
			}
			else
			{
				ifvarand extbits 64 set shade -100
				
				switch weaponcount
				case 7 add x 2 add y 1 break
				case 8 add x 1 break
				endswitch
				
				// draw flash
				set x2 x set y2 y
				sub x2 80 sub y2 40
				displayrandvar temp 2047
				set z2 49152
				set tempb weaponcount
				ifvarand extbits 64 set tempb 24576 else
				shiftl tempb 12
				sub z2 tempb
				set B orientation
				ife rendmode 0 orvar B 1
				rotatesprite x2 y2 z2 temp 13047 0 pal B 0 0 xdim ydim
			}
		}
	}
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0
ends

state draw_bmfg

	set z 57344
	set orientation 4608 // 512
	set x 200
	set y 235
	sub x looking_angSR1
	add y looking_arc
	sub y gun_pos // new_gun_pos
	add x weapon_xoffset
	geta[player[].i].shade shade
	add shade 2
	getsector[THISACTOR].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifn bmfgaltfire 0 set pal 22
	ifvarg shade 30 set shade 30
	ife pchar 0 set picnum 13011 else
	set picnum 13017
	ifg weaponcount 0
	{
		switch weaponcount
		case 1 case 2 case 3
		case 4 case 5 case 6
			ifvarand player[].player_par 1
			{
				add x 2
				add y 2
			}
			add picnum 1
		break
		case 7 case 8 case 9
		case 10 case 11 case 12
			ifvarand player[].player_par 1
			{
				add x 2
				add y 2
			}
			add picnum 2
		break
		case 13 case 14 case 15
		case 16 case 17 case 18
			ifvarand player[].player_par 1
			{
				add x 2
				add y 2
			}
			add picnum 3
		break
		case 19 case 20 case 21 case 22 case 23
		case 24 case 25 case 26 case 27 case 28 case 29
			ifvarand player[].player_par 1
			{
				add x 2
				add y 2
			}
			add picnum 4
		break
		case 30
			add picnum 5
			add x 10
			add y 6
			
		break
		case 31
			add picnum 5
			add x 8
			add y 5
		break
		case 32
			add picnum 5
			add x 6
			add y 4
		break
		case 33
			add x 4
			add y 3
		break
		case 34
			add x 3
			add y 2
		break
		case 35
			add x 2
			add y 1
		break
		case 36 add x 1
		break
		
		default break
		endswitch
	}

	guniqhudid 247
	ifg weaponcount 29 ifl weaponcount 36
	{
		// draw flash
		set x2 x set y2 y
		sub x2 70 sub y2 30
		displayrandvar temp 2047
		set z2 65536
		set tempb weaponcount
		sub tempb 16
		shiftl tempb 11
		sub z2 tempb
		set B orientation
		ife rendmode 0 orvar B 1
		rotatesprite x2 y2 z2 temp 13034 0 pal B 0 0 xdim ydim
	}
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0

ends

defstate glidehud

ifl glidetime GLIDEMAX ifg glidetime 0
{
	set x 4
	set z 16384
	set orientation 256
	set pal 33
	set tempb glidetime
	shiftr tempb 1
	set tempc x
	add tempc tempb
	set temp 0
	whilevarn temp 1
	{
		  ifg x tempc set temp 1
		  else
		  rotatesprite x 180 z 0 199 0 pal orientation 0 0 xdim ydim
		  add x 1
		  break
	}
	gametextz 2822 9 177 1260 0 15 256 0 0 xdim ydim 24576
	
}

ends

defstate laserhud

ifvarg LASERCHARGE 0
{
	set x 4
	set z 16384
	set orientation 256
	ifge LASERCHARGE 32 
	{
		set temp player[].player_par
		ifvarand temp 1 set pal 54 else set pal 2
	}
	else set pal 2
	set tempb LASERCHARGE
	ifg tempb 32 set tempb 32
	set tempc x
	add tempc tempb
	set temp 0
	whilevarn temp 1
	{
		  ifg x tempc set temp 1
		  else
		  rotatesprite x 180 z 0 199 0 pal orientation 0 0 xdim ydim
		  add x 1
		  break
	}
	gametextz 2822 9 177 719 0 7 256 0 0 xdim ydim 24576
	
}

ends

defstate draw_newrpg

	set TMP_A pchar
	mul TMP_A 10
	add TMP_A 20
	add TMP_A currentweapon
	guniqhudid TMP_A
	
	orvar orientation 512
	set z 45056
	add x 65
	add y 30
	
	set tempb zoomcount abs tempb
	ifg tempb 0 ifl tempb 7
	{
		set x 240
		ifl tempb 4
		{
			sub x 5
			add z 10240
			set picnum 9968
		}
		else
		{
			sub x 25
			sub y 15
			add z 12288
			set picnum 9969
		}
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		guniqhudid 0
		break
	}
	else
	ife zoomin YES
	{
		xorvar orientation 512
		set picnum 9970
		set z 81920
		ife player[].kickback_pic 4 add z 8192 else
		ife player[].kickback_pic 5 add z 6144 else
		ife player[].kickback_pic 6 add z 4096 else
		ife player[].kickback_pic 7 add z 2048
		set x 160
		set y 140
		
		// sub x looking_angSR1
		// add x weapon_xoffset
		
		set y2 looking_arc
		div y2 2
		add y y2
		set y2 gun_pos // new_gun_pos
		div y2 2
		sub y y2
		
		rotatesprite x y z 0 9971 shade pal 33 0 0 xdim ydim
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		guniqhudid 0
		break
	}
	else
	{
		ifl weaponcount WEAPON4_FIREDELAY 
		{
			ife pchar 0 set picnum 9973 else
			set picnum 9966 
			switch holdfire
			case 20 case 40 case 60 add x 2 add y 2 break
			case 21 case 41 case 61 add x 4 add y 4 break
			case 22 case 42 case 62 add x 6 add y 6 break
			case 23 case 43 case 63 add x 8 add y 8 break
			case 24 case 44 case 64 add x 10 add y 10 break
			case 25 case 45 case 65 add x 6 add y 6 break
			case 26 case 46 case 66 add x 2 add y 2 break
			endswitch
		}
		else 
		{
			ifl weaponcount 8
			{
				ife pchar 0 set picnum 9974 else
				set picnum 9967
				set shade -100
				set x2 x set y2 y set B orientation
				sub x2 10
				sub y2 15
				ife weaponcount 6 orvar B 1
				ife weaponcount 7 orvar B 33
				rotatesprite x2 y2 z 0 9972 shade 0 B 0 0 xdim ydim
			}
			else 
			{
				ife pchar 0 set picnum 9973 else
				set picnum 9966
			}
		}

		switch weaponcount
		
		case 4 addvar x 12 addvar y 12 break
		case 5 addvar x 15 addvar y 15 break
		case 6 addvar x 17 addvar y 17 break
		case 7 addvar x 18 addvar y 18 break
		case 8 addvar x 17 addvar y 17 break
		case 9 addvar x 15 addvar y 15 break
		case 10 addvar x 13 addvar y 13 break
		case 11 addvar x 11 addvar y 11 break
		case 12 addvar x 9 addvar y 9 break
		case 13 addvar x 7 addvar y 7 break
		case 14 addvar x 5 addvar y 5 break
		case 15 addvar x 4 addvar y 4 break
		case 16 addvar x 3 addvar y 3 break
		case 17 addvar x 2 addvar y 2 break
		case 18 addvar x 1 addvar y 1 break
		default break
		endswitch
		
		 
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		
		ifge weaponcount WEAPON4_FIREDELAY ifl weaponcount 8
		{
			orvar B 33
			rotatesprite x2 y2 z 0 9972 shade 0 B 0 0 xdim ydim
		}
		guniqhudid 0
	}

ends

state displayminigun

	set TMP_A pchar
	mul TMP_A 10
	add TMP_A 20
	add TMP_A currentweapon
	guniqhudid TMP_A
	set picnum 10367
	set z 32768 // 65536
	add x 7
	add y 4
	ifn weaponcount 0
	{	
		// spinframe handled in player actor
		set picnum spinframe
		set x 192
		set y 172
	}
	else ifn spinup 0 set picnum spinframe
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0

ends

state displaycommgun

	set RETURN -1
	set x 230
	set y 260
	set z 49152
	set angvar 0
	set orientation 4096
	ifvare LASERFIRE 0
	{
		sub x looking_angSR1
		add y looking_arc
		sub y gun_pos // new_gun_pos
		add x weapon_xoffset
	}
	else 
	{
		
		subvar y 85
		addvar x 15
		
		switch LASERFIRE
		case 10
			add z 8192
			add x 24
			add y 20
		break
		
		case 11
			add z 6144
			add x 20
			add y 16
		break
		case 12
			add z 4096
			add x 16
			add y 12
		break
		case 13
			add z 4096
			add x 16
			add y 12
		break
		case 14
			add z 2048
			add x 12
			add y 8
		break
		case 15
			add x 8
			add y 4
		break
		default
		break
		endswitch
	}
	geta[player[].i].shade shade
	getsector[THISACTOR].floorpal pal
	ife pal 4 { add shade 10 set pal 0 }
	set picnum 17495
	ifn LASERFIRE 0
	{
		switch LASERFIRE
		case 2 case 3 case 4
		set shade 0
		add picnum 1
		break
		case 5 case 6 case 7
		set shade 0
		add picnum 2
		break
		case 8 case 9 case 10 case 11
		set shade 0
		add picnum 3
		break
		case 12 case 13
		set shade 0
		add picnum 2
		break
		case 14 case 15
		set shade 0
		add picnum 1
		break
		default
		break
		endswitch
	}

	guniqhudid 246
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0
ends

defstate displaylaserpistol

	set RETURN -1
	ife glidetime GLIDEMAX
	state laserhud

	 set x 200
	 set y 240
	 set z 32768
	 set angvar 0
	 set orientation 4096

	ifvare LASERFIRE 0
	{
		sub x looking_angSR1
		add y looking_arc
		sub y gun_pos // new_gun_pos
		add x weapon_xoffset
	}
	else 
	{
		subvar y 65
		addvar x 25
	}

	// ifoutside getsector[THISACTOR].ceilingshade shade else
	// getsector[THISACTOR].floorshade shade
	geta[player[].i].shade shade
	getsector[THISACTOR].floorpal pal
	ife pal 4 { add shade 10 set pal 0 }
	ife pchar 2 set picnum 19955 else
	ife pchar 1 set picnum 5863 else
	set picnum LASERPISTOLIDLE

	ifg LASERFIRE 1 //shooting
	ifl LASERFIRE 8
	{
		
		switch LASERFIRE
		
		case 2
			add picnum 1
			sub y 4
			sub x 2
			add z 4096
		break
		case 3
			add picnum 1
			sub y 8
			sub x 4
			add z 6144
		break
		case 4
			add picnum 1
			sub y 12
			add z 6144
			sub x 4
		break
		case 5
			sub y 10
			add z 4096
			sub x 2
		break
		case 6
			sub y 6
			add z 2048
			sub x 1
		break
		case 7
			sub y 2
			add z 1024
		break
		endswitch
			
		
		
	} 
	else ifg LASERCHARGE 0
	{
		add z 1024
		displayrandvar temp 4
		sub x 2
		add x temp
		displayrandvar temp 3
		add y 1
		sub y temp
	}

	guniqhudid 245
	
	rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
	
	ifg LASERFIRE 1 ifl LASERFIRE 4
	{
		set shade -100
		set x2 x set y2 y set B orientation
		orvar B 1
		sub x2 30
		sub y2 30
		ife LASERFIRE 3 orvar B 33
		
		set picnum 9972
		set pal 0
		set z 32768
		
		set temp NO
		ife pchar 0 ifvarand dukeupgrades[PISTOL_WEAPON] 16 set picnum 9980
		ife pchar 1 ifvarand shellyupgrades[PISTOL_WEAPON] 16 set picnum 9980
		ife pchar 2 ifvarand wesupgrades[PISTOL_WEAPON] 16 set picnum 9980
		
		ife picnum 9980 { set pal 23 set z 20480 }
		rotatesprite x2 y2 z 0 picnum shade pal B 0 0 xdim ydim
	}
	guniqhudid 0

ends

state slidekickcoords

// ifoutside gets[].ceilingshade shade else
// gets[].floorshade shade

geta[player[].i].shade shade

	ifg sidekick 0
	{
		set tempc sidekick 
		ifge sidekick 100 sub tempc 100
		else
		{
			ifl sidekick 30
			{
				add tempc 2 ifg sidekick 15 add tempc 4
			}
		}
	}
	else
	ifn slidekick 0 set tempc slidekick else
	ifg jumpkick 0 { set tempc jumpkick add tempc 2 ifg jumpkick 15 add tempc 4 }

	ife pchar 0
	{
		set z 34816 // 32768
		ifvarand altcostume 16 set picnum 16854 else
		ifvarand altcostume 8 { set picnum 15291 set z 25600 } else
		ifvarand altcostume 2 set picnum 16857 else
		set picnum 16854
		//set picnum 6048
		
		switch tempc
		case 1 case 2 case 3 
		case 4 case 5 case 6
		
			set x 80
			set y 202
			set angvar 12
		
		break
		
		
		case 7 case 8 case 9
		// intermediate kicking out
			add picnum 1
			set x 80
			set y 202
			set angvar 12
		
		break
		
		case 10 case 11 case 12
		case 13 case 14 case 15 case 16 case 17 case 18
		case 19 case 20 
		
		case 40 case 41 case 42 // roundhouse kick hit
		case 43
		
			add picnum 2
			set x 180
			set y 190
			set angvar 0
		
		break
		
		case 58 case 59 case 60 // LEFT roundhouse kick hit
		case 61
			orvar orientation 4
			set angvar 1024
			add picnum 2
			set x 140
			set y 175
			
		break
		
		case 21 case 22 case 23 case 24 
		
			add picnum 1
			set x 90
			set y 202
			set angvar 84
			
			ifg sidekick 120 // end of spinning kick
			{
				set x2 sidekick
				sub x2 120
				mul x2 32
				add x2 100
				add x x2
			}

		break
		
		case 25 case 26 case 27
		
			set x 80
			set y 202
			set angvar 12
			
			ifg sidekick 120 // end of spinning kick
			{
				set x2 sidekick
				sub x2 120
				mul x2 32
				add x2 100
				add x x2
				
				set y2 sidekick
				sub y2 120
				mul y2 4
				add y y2
				
				set angle2 sidekick
				sub angle2 120
				mul angle2 8
				add angvar angle2
			}
		
		break
		
		case 30 case 31 case 32
		case 37 case 38 case 39
		case 44 case 45 case 46
		// roundhouse kick intermediate frame
		
			setvar angvar 12
			add picnum 1
			set x 250
			set y 202
			
			
		break
		
		case 54 case 55 case 56 case 57
		case 62 case 63 case 64 case 65
		// LEFT roundhouse kick intermediate frame
			orvar orientation 4
			set angvar 996 // 1012
			// setvar angvar 12
			add picnum 1
			set x 100
			set y 202
				
		break
		
		case 33 case 34 case 35 case 36
		case 47 case 48 case 49
		// roundhouse kick chambered frame
			
			set x 270
			set y 202
			set angvar 32
			sub z 4096
			
		break
		
		case 51 case 52 case 53
		case 66 case 67 case 68 case 69
		// LEFT roundhouse kick chambered frame
			orvar orientation 4
			set angvar 992
			// set angvar 32
			set x 70
			set y 202
			
			sub z 4096
			
		break
		
		default
		
			set x 80
			set y 202
			set angvar 12
			
		break
		endswitch
		
		
	}
	else ife pchar 2
	{
		set z 32768 // 34816
		
		set picnum 19468
		
		switch tempc
		case 1 case 2 case 3 
		case 4 case 5 case 6
		
			set x 40 // 80
			set y 202
			set angvar -16 // 12
		
		break
		
		
		case 7 case 8 case 9
		// intermediate kicking out
			add picnum 1
			set x 60 // 80
			set y 202
			set angvar -16 // 12
		
		break
		
		case 10 case 11 case 12
		case 13 case 14 case 15 case 16 case 17 case 18
		case 19 case 20 
		
			add picnum 2
			set x 180
			set y 190
			set angvar 16
		
		break
		
		case 40 case 41 case 42 // roundhouse kick hit
		case 43
		
			add picnum 2
			set x 180
			set y 190
			set angvar 0
		
		break
		
		case 58 case 59 case 60 // LEFT roundhouse kick hit
		case 61
			orvar orientation 4
			set angvar 1024
			add picnum 2
			set x 140
			set y 175
			
		break
		
		case 21 case 22 case 23 case 24 
		
			add picnum 1
			set x 90
			set y 202
			set angvar 84
			
			ifg sidekick 120 // end of spinning kick
			{
				set x2 sidekick
				sub x2 120
				mul x2 32
				add x2 100
				add x x2
			}

		break
		
		case 25 case 26 case 27
		
			set x 80
			set y 202
			set angvar 12
			
			ifg sidekick 120 // end of spinning kick
			{
				set x2 sidekick
				sub x2 120
				mul x2 32
				add x2 100
				add x x2
				
				set y2 sidekick
				sub y2 120
				mul y2 4
				add y y2
				
				set angle2 sidekick
				sub angle2 120
				mul angle2 8
				add angvar angle2
			}
		
		break
		
		case 30 case 31 case 32
		case 37 case 38 case 39
		case 44 case 45 case 46
		// roundhouse kick intermediate frame
		
			setvar angvar 12
			add picnum 1
			set x 250
			set y 202
			
			
		break
		
		case 54 case 55 case 56 case 57
		case 62 case 63 case 64 case 65
		// LEFT roundhouse kick intermediate frame
			orvar orientation 4
			set angvar 996 // 1012
			// setvar angvar 12
			add picnum 1
			set x 100
			set y 202
				
		break
		
		case 33 case 34 case 35 case 36
		case 47 case 48 case 49
		// roundhouse kick chambered frame
			
			set x 270
			set y 202
			set angvar 32
			sub z 4096
			
		break
		
		case 51 case 52 case 53
		case 66 case 67 case 68 case 69
		// LEFT roundhouse kick chambered frame
			orvar orientation 4
			set angvar 992
			// set angvar 32
			set x 70
			set y 202
			
			sub z 4096
			
		break
		
		default
		
			set x 80
			set y 202
			set angvar 12
			
		break
		endswitch
		
		sub y 5
	}
	else
	{
		set z 40960
		
		ifvarand altcostume 32 set picnum 16767 else
		ifvarand altcostume 4 set picnum 16776 else
		ifvarand altcostume 1 set picnum 16773 else
		set picnum 16770
		
		switch tempc
		case 1 case 2 case 3 case 4 case 5 case 6

			set x 60
			set y 190
			sub z 4096
			set angvar 32

		break
		
		case 9 case 10 case 11 case 12
		case 13 case 14 case 15 case 16 case 17 case 18
		case 19 case 20
		
		case 40 case 41 case 42 // roundhouse kick hit
		case 43

			setvar angvar 0	
			add picnum 2
			set x 220
			set y 185
			add z 4096

		break
		
		case 58 case 59 case 60 // LEFT roundhouse kick hit
		case 61
			orvar orientation 4
			set angvar 1024
			add picnum 2
			set x 140
			set y 185
			
		break
		
		case 7 case 8
		case 21 case 22
		// intermediate kicking frame
		
			setvar angvar 0
			add picnum 1
			set x 115
			set y 190
			
			ifg sidekick 120 // end of spinning kick
			{
				set x2 sidekick
				sub x2 120
				mul x2 32
				add x2 100
				add x x2
			}
		
		break
		
		case 23 case 24 case 25 case 26 case 27

			set x 60
			set y 200
			set angvar 32
			sub z 4096
			
			ifg sidekick 120 // end of spinning kick
			{
				set x2 sidekick
				sub x2 120
				mul x2 32
				add x2 100
				add x x2
				
				set y2 sidekick
				sub y2 120
				mul y2 4
				add y y2
				
				set angle2 sidekick
				sub angle2 120
				mul angle2 8
				add angvar angle2
			}

		break
		
		case 30 case 31 case 32
		case 37 case 38 case 39
		case 44 case 45 case 46
		// roundhouse kick intermediate frame
		
			setvar angvar 0
			add picnum 1
			set x 250
			set y 190
			
			
		break
		
		case 54 case 55 case 56 case 57
		case 62 case 63 case 64 case 65
		// LEFT roundhouse kick intermediate frame
			orvar orientation 4
			set angvar 1024 // 996
			add picnum 1
			set x 100
			set y 190
				
		break
		
		case 33 case 34 case 35 case 36
		case 47 case 48 case 49
		// roundhouse kick chambered frame
		
			set x 200
			set y 200
			set angvar 32
			sub z 4096
			
		break
		
		case 51 case 52 case 53
		case 66 case 67 case 68 case 69
		// LEFT roundhouse kick chambered frame
			orvar orientation 4
			set angvar 992
			// set angvar 32
			set x 70
			set y 200
			
			sub z 4096
			
		break
		
		default

			set x 60
			set y 200
			set angvar 32
			sub z 4096
			
			ifg sidekick 120 // end of spinning kick
			{
				set x2 sidekick
				sub x2 120
				mul x2 32
				add x2 100
				add x x2
				
				set y2 sidekick
				sub y2 120
				mul y2 4
				add y y2
				
				set angle2 sidekick
				sub angle2 120
				mul angle2 8
				add angvar angle2
			}

		break
		endswitch
		
		ifn slidekick 0 add y 10
	}


ends

defstate displaykicks
// sliding kick display

	set orientation 4096
	set angvar 0
	
	state slidekickcoords
	
	getuserdef[].screen_size B
	ifvarg B 4 sub y 16
	
	ife pchar 0 set pal dukepal else
	ife pchar 1 set pal shellypal else
	ife pchar 2 set pal wespal
	
	set shade sprite[player[].i].shade
	ifn pchar 0 add shade 3
	// ife pchar 1 add shade 3
	rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim

ends

state drawsaber

	// initialize vars
	set x 180
	set y 312 // set y 235
	set z 65536
	set orientation 4096
	sub x looking_angSR1
	add y looking_arc
	sub y gun_pos // new_gun_pos
	sub y gun_pos // new_gun_pos
	add x weapon_xoffset
	set pal 0
	
	ifg slidekick 0 ifl slidekick 20 add y 60
	
	set shade sprite[player[].i].shade
	getsector[].floorpal pal
	ifg pal 13 set pal 0
	
	set picnum sab_idle // dukesaber2.png
	//rand temp 5 add picnum temp
	set angvar -128
	set shade 0
	add x 20
	sub y 40
	ifn saberpos 0 
	{ 
		add y new_gun_pos 
		sub x weapon_xoffset 
	}
	set z 57344
	set RETURN -1
	
	switch saberpos
		case -7 break
		case 0 
			ifn holdinteract 0
			{
				set picnum 10923 set z 65536 set angvar 224
				set x 110 set y 145
			}
			break 
		case 1 break
		// move from idle to start of first swing
		
		case 2 set picnum 10923 add angvar 24 add x 40 sub y 20 break
		case 3 set picnum 10923 add angvar 60 add x 100 sub y 40 break
		case 4 set picnum 10923 add angvar 96 add x 140 sub y 60 break
		case 5 set picnum 10923 add angvar 128 add x 180 sub y 80 break
		
		// diagonal down sweep to left
		// negatives are return from sweep
		case 6 add angvar 128 add x 100 sub y 100 break
		case 7 add angvar 128 add x 60 sub y 80 break
		case 8 add angvar 128 add x 20 sub y 60 break
		case -8 add angvar 32 add x 20 sub y 60 break
		case 9 add angvar 96 sub x 40 sub y 40 break
		case -9 add angvar 64 sub x 40 sub y 40 break
		case 10 add angvar 64 sub x 100 sub y 20 break
		case -10 add angvar 96 sub x 100 sub y 20 break
		case 11 add angvar 32 sub x 170 add y 20 break
		case -11 add angvar 60 sub x 170 add y 20 break
		case 12 case -12 sub x 200 add y 60 break
		case 13 case 14 sub x 220 sub angvar 24 add y 80 break
		case -13 sub x 220 sub angvar 24 add y 80 break
		
		// move from idle to start of second swing	
		case 15 sub angvar 48 sub x 50 sub y 30 break
		case 16 sub angvar 96 sub x 100 sub y 45 break
		case 17 orvar orientation 4 set picnum 10923 set angvar 1056 sub x 200 sub y 60 break
		case 18 orvar orientation 4 set picnum 10923 set angvar 1024 sub x 240 sub y 80 break
		
		// move from end of first swing 13 to start of second swing 18	
		case 19 orvar orientation 4 set picnum 10923 set angvar 1024 sub x 340 sub y 100 break
		case 20 orvar orientation 4 set picnum 10923 set angvar 1024 sub x 300 sub y 90 break
		case 21 orvar orientation 4 set picnum 10923 set angvar 1024 sub x 260 sub y 80 break
		
		// diagonal down sweep to right
		// negatives are return from sweep
		case 22 orvar orientation 4 set angvar 1024 sub x 160 sub y 100 break
		case 23 orvar orientation 4 set angvar 1024 sub x 120 sub y 80 break
		case 24 orvar orientation 4 set angvar 1024 sub x 80 sub y 60 break
		case -24 break
		case 25 orvar orientation 4 set angvar 1056 sub x 20 sub y 40 break
		case -25 add angvar 32 add x 30 add y 20 break
		case 26 orvar orientation 4 set angvar 1088 add x 40 sub y 20 break
		case -26 add angvar 64 add x 60 add y 40 break
		case 27 orvar orientation 4 set angvar 1120 add x 110 add y 20 break
		case -27 add angvar 96 add x 100 add y 60 break
		case 28 orvar orientation 4 set angvar 1152 add x 140 add y 60 break
		case -28 add angvar 128 add x 140 add y 80 break
		case 29 case -29 case 30 orvar orientation 4 set angvar 1176 add x 160 add y 80 break
		
		// move from end of second swing 29 to start of first swing 6
		case 31 set picnum 10923 add angvar 128 add x 260 sub y 100 break
		case 32 set picnum 10923 add angvar 128 add x 220 sub y 90 break
		case 33 set picnum 10923 add angvar 128 add x 180 sub y 80 break
		
		// move from idle position to start of downward swing
		case 35 set picnum 10923 sub angvar 24 add x 40 sub y 60 break
		case 36 set picnum 10923 sub angvar 60 add x 80 sub y 70 break
		case 37 set picnum 10923 sub angvar 96 add x 120 sub y 90 break
		case 38 set picnum 10923 sub angvar 128 add x 160 sub y 120 break
		
		// downward swing, negative values return to idle
		case 39 set picnum 10923 sub angvar 128 add x 140 sub y 100 break
		case 40 set picnum 10923 sub angvar 128 add x 100 sub y 50 break
		case 41 set picnum 10926 set angvar 72 sub y 130 add x 40 break
		case -41 add y 20 sub angvar 64 break
		case 42 set picnum 10926 set angvar 46 sub y 90 break
		case -42 add y 40 sub x 20 sub angvar 128 break
		case 43 case -43 set picnum 10926 set angvar 28 sub x 30 sub y 30 break
		case 44 case -44 set picnum 10926 set angvar 12 sub x 60 break
		// two blank frames for moving to one side or the other
		case 45 case 46 case -45 set picnum 10926 set angvar 0 sub x 70 add y 40 break
		
		// move from idle to angle 3 strike from right to left
		case 47 set picnum 10923 add angvar 64 add x 10 add y 5 break
		case 48 set picnum 10923 add angvar 192 sub x 10 add y 5 break
		case 49 set picnum 10923 add angvar 320 sub x 50 add y 5 break
		case 50 set picnum 10923 add angvar 448 sub x 90 add y 15 break
		
		// angle 3 strike from right to left
		case 51 set picnum 10923 add angvar 352 sub x 100 sub y 15 break
		case 52 set picnum 10923 add angvar 256 sub x 150 sub y 50 break
		case 53 set z 65536 set picnum 10927 sub x 130 add angvar 320 sub y 180 break
		case 54 set z 65536 set picnum 10927 sub x 180 add angvar 272 sub y 200 break
		case 55 set z 65536 set picnum 10927 sub x 200 add angvar 264 sub y 225 break
		case 56 case 57 case 58
		set z 65536 set picnum 10927 sub x 220 add angvar 264 sub y 240 
		break
		
		// move from idle to angle 3 strike from left to right
		case 60 set picnum 10923 orvar orientation 4 set angvar 1024 
		add angvar 64 sub x 10 add y 5 break
		case 61 set picnum 10923 orvar orientation 4 set angvar 1024 
		add angvar -64 add x 10 add y 5 break
		case 62 set picnum 10923 orvar orientation 4 set angvar 1024 
		add angvar -192 add x 15 add y 5 break
		case 63 set picnum 10923 orvar orientation 4 set angvar 1024 
		add angvar -320 add x 20 add y 10 break
		
		// angle 3 strike from left to right
		case 64 set picnum 10923 orvar orientation 4 set angvar 1024
		sub angvar 224 add x 30 sub y 15 break
		case 65 set picnum 10923 orvar orientation 4 set angvar 1024
		sub angvar 128 add x 80 sub y 50 break
		case 66 set z 65536 set picnum 10926
		add x 60 set angvar -192 sub y 160 break
		case 67 set z 65536 set picnum 10926 
		add x 110 set angvar -144 sub y 180 break
		case 68 set z 65536 set picnum 10926 
		add x 150 set angvar -136 sub y 185 break
		case 69 case 70
		set z 65536 set picnum 10926 add x 190 set angvar -136 sub y 200 break
		// return with -29
		
		// move from right side to start of angle 3 from right to left
		case 71 set picnum 10923 add angvar 64 add x 90 add y 5 break
		case 72 set picnum 10923 add angvar 192 add x 30 add y 5 break
		case 73 set picnum 10923 add angvar 320 sub x 30 add y 5 break
		case 74 set picnum 10923 add angvar 448 sub x 90 add y 15 break
		// 75 goes to 51
		
		// move from left side to start of angle 3 from left to right
		case 76 set picnum 10923 orvar orientation 4 set angvar 1024
		sub angvar 224 sub x 150 add y 25 break
		case 77 set picnum 10923 orvar orientation 4 set angvar 1024
		sub angvar 224 sub x 90 add y 15 break
		case 78 set picnum 10923 orvar orientation 4 set angvar 1024
		sub angvar 224 sub x 30 add y 5 break
		case 79	set picnum 10923 orvar orientation 4 set angvar 1024
		sub angvar 224 add x 30 sub y 5 break
		// 80 goes to 64
		
		// blocking positions 85 right, 86 left
			
		case 85 set picnum 10923 set z 65536 set angvar 224
		set x 110 set y 145 
		break
		case 86 set picnum 10923 set z 65536 orvar orientation 4 set angvar 1024
		sub angvar 224
		set x 210 set y 145 
		break
		default break
	
	endswitch
	
	guniqhudid 244
	set pal 0
	ife pchar 2
	{
		set pal saberpal
		ife picnum 10923 set picnum 19456 else
		ife picnum 10926 set picnum 19462 else
		ife picnum 10927 set picnum 19464
		// 19460-61 unused but would be cool to use
		ifg saberblood 0 add picnum 1
	}
	else
	ife pchar 1 ifl picnum 10935 add picnum 12
	
	ifn justblocked 0 { set pal 117 set shade -100 }
	
	ifn lastsab 0
	ifn saberpos lastsab
	ife sabor orientation
	ife sabpic picnum
	{
		// draw interpolated frame
		add sabx x div sabx 2
		add saby y div saby 2
		add sabang angvar div sabang 2
		rotatesprite sabx saby z sabang picnum shade pal orientation 0 0 xdim ydim
	}
	else
	rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
	set sabx x
	set saby y
	set sabz z
	set sabang angvar
	set sabpic picnum
	set sabor orientation
	set lastsab saberpos
	
	guniqhudid 0
ends

state displaysaw
	ife pchar 0 set x 250 else set x 157
	ife pchar 0 set y 221 else set y 205
	ife pchar 0 set z 32768 else set z 65536
	set angvar 0
	ife pchar 1
	set orientation 4608 // 512
	else set orientation 4096

	sub x looking_angSR1
	add y looking_arc
	sub y new_gun_pos
	add x weapon_xoffset
	set shade sprite[player[].i].shade
	gets[player[].cursectnum].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30
	ifvarg pal 13 set pal 0
	
	ifn weaponcount 0 
	{
		ifn totalclock prevsawtime
		{
			set prevsawtime totalclock
			add sawpic 1
			ife pchar 1 ifg sawpic 8861 set sawpic SAWSTART
			ife pchar 0 ifg sawpic 7644 set sawpic DUKESAWSTART

		}
		ife pchar 0 set x 245 else set x 150
		ife pchar 0 set y 140 else set y 125
	}
	
	guniqhudid 243
	rotatesprite x y z 0 sawpic shade pal orientation 0 0 xdim ydim
	guniqhudid 0
ends

defstate draw_wes_kicks

	set B 0
	ifn player[].quick_kick 0 set B player[].quick_kick
	else ifn qk_proxy 0 set B qk_proxy
	ifn jumpkick 0 set B 0
	ifn B 0
	{
		set x 135
		set y 170
		set orientation 4100 // 4
		
		set z 57344 // 65536
		geta[player[].i].shade shade
		ifg shade 30 set shade 30
		set pal wespal

		switch B
		case 15 case 14 case 13 case 12
		case 11 case 1 case 2 case 3 case 4
			sub x 20
			add y 20
			set picnum 19466
			break
			
		case 5 case 6 case 7 case 8 case 9 case 10
			set picnum 19467
			add x 30
			break
		endswitch
		
		rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
	}
	ifn slidekick 0 state displaykicks
	else
	ifg sidekick 0 state displaykicks
	else
	ifg jumpkick 0 state displaykicks

ends

defstate draw_shelly_kicks

	set B 0
	ifn player[].quick_kick 0 set B player[].quick_kick
	else ifn qk_proxy 0 set B qk_proxy
	ifn jumpkick 0 set B 0
	ifn B 0
	{
		set x 180
		set y 200
		set orientation 4100 // 4
		sub x looking_angSR1
		add y looking_arc
		sub y new_gun_pos
		add x weapon_xoffset
		set z 65536
		geta[player[].i].shade shade
		set pal shellypal

		switch B
		case 15 case 14 case 13 case 12
		case 11 case 1 case 2 case 3 case 4
			sub x 90
			add y 20
			ifvarand altcostume 1 { set picnum 16846 add y 40 } else
			ifvarand altcostume 4 { set picnum 16848 add y 40 } else
			ifvarand altcostume 32 { set picnum 16844 add y 40 } else
			set picnum 7690
			break
			
		case 5 case 6 case 7 case 8 case 9 case 10
			sub x 40
			add y 20
			ifvarand altcostume 1 set picnum 16847 else
			ifvarand altcostume 4 set picnum 16849 else
			ifvarand altcostume 32 set picnum 16845 else
			set picnum 7691
			break
		endswitch
		
		rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
	}
	ifn slidekick 0 state displaykicks
	else
	ifg sidekick 0 state displaykicks
	else
	ifg jumpkick 0 state displaykicks
	
ends

defstate draw_shieldhit
	ifn es_pic -1
	{
		// use negative alpha for blend mode 1 in hud
		ife novatype 0 set pal 12 else
		ife novatype 1 set pal 7 else
		ife novatype 2 set pal 1 else
		ife novatype 3 set pal 21
		
		rotatespritea 160 100 32768 0 es_pic 0 pal 1024 es_alpha 0 0 xdim ydim
	}
ends

defstate draw_shockframe

	rotatespritea 160 100 32768 0 shockframe 0 0 1024 -1 0 0 xdim ydim 

ends

defstate draw_duke_quickkick

	geta[player[].i].shade shade
	ifvarg shade 30 set shade 30
	set pal dukepal
	set x 135
	set y 170
	set orientation 4100 // 4
	
	set B 0
	ifn player[].quick_kick 0 set B player[].quick_kick
	ifn qk_proxy 0 set B qk_proxy
	ifn B 0
	{
		ifvarand altcostume 8
		{		
			set z 57344

			switch B
			
			case 15 case 14 case 13 case 12
			case 11 case 1 case 2 case 3 case 4
				sub x 20
				set picnum 15287
				break
				
			case 5 case 6 case 7 case 8 case 9 case 10
				// sub y 10
				set picnum 15288
				break
			endswitch
		}
		else
		{
			set z 65536

			switch B
			case 15 case 14 case 13 case 12
			case 11 case 1 case 2 case 3 case 4
				add y 10
				ifvarand altcostume 16 { set picnum 16850  sub x 40 } else
				ifvarand altcostume 2 { set picnum 16852  sub x 40 } else
				{ set picnum 16850  sub x 40 }
				break
				
			case 5 case 6 case 7 case 8 case 9 case 10
				add x 50
				add y 20 // 10
				ifvarand altcostume 16 set picnum 16851 else
				ifvarand altcostume 2 set picnum 16853 else
				set picnum 16851
				break
			endswitch
		}
		
		rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
	}
ends

state draw_nuke

	set x 250
	set y 216

	sub x looking_angSR1
	add y looking_arc

	sub y new_gun_pos
	add x weapon_xoffset

	geta[player[].i].shade shade
	getsector[THISACTOR].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30

	ifg weaponcount 0 ifl weaponcount 25
	{
		set x 250
		set y 140
		ifl weaponcount 2 set picnum 10353 else
		ifl weaponcount 5 set picnum 10354 else
		ifl weaponcount 9 set picnum 10355 else
		ifl weaponcount 12 set picnum 10356 else
		set picnum 10353
		ifg weaponcount 1 ifl weaponcount 12 set shade 0
	}
	else set picnum 10353
	
	set z 40960
	set orientation 4608 // 512

	guniqhudid 242
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0

ends

defstate draw_spidermine

	set TMP_A pchar
	mul TMP_A 10
	add TMP_A 20
	add TMP_A currentweapon
	guniqhudid TMP_A
	ife player[].ammo_amount TRIPBOMB_WEAPON 0
	{
		set x 62
		set y 247
		state initshellydisplay
		
		ife pchar 2 
		{
			add x 50
			set picnum 19680
			orvar orientation 4
			rotatesprite x y 49152 1024 picnum shade pal orientation 0 0 xdim ydim
			xorvar orientation 4
			add x 80
			rotatesprite x y 49152 0 picnum shade pal orientation 0 0 xdim ydim
		}
		else
		{
			ife pchar 1 set picnum 7779 else set picnum 8907
			rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
			orvar orientation 4
			add x 170
			rotatesprite x y 65536 1024 picnum shade pal orientation 0 0 xdim ydim
		}
	}
	else
	ifl weaponcount 2 
	{
		set x 150
		set y 244
		state initshellydisplay
		ife pchar 2 set picnum 19913 else
		ife pchar 1 set picnum 10705 else set picnum 10704
		rotatesprite x y 32768 0 picnum shade pal orientation 0 0 xdim ydim
	}
	else
	ifl weaponcount 5
	{
		set x 57
		set y 257
		state initshellydisplay
		ife pchar 2 
		{
			set picnum 19679
			orvar orientation 4
			rotatesprite x y 49152 1024 picnum shade pal orientation 0 0 xdim ydim
			xorvar orientation 4
			add x 182
			rotatesprite x y 49152 0 picnum shade pal orientation 0 0 xdim ydim
		}
		else
		{
			ife pchar 1 set picnum 7778 else set picnum 8906
			rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
			orvar orientation 4
			add x 182
			rotatesprite x y 65536 1024 picnum shade pal orientation 0 0 xdim ydim
		}
	}
	else
	// ifl weaponcount 7
	{
		set x 62
		set y 247
		state initshellydisplay
		
		ife pchar 2 
		{
			add x 50
			set picnum 19680
			orvar orientation 4
			rotatesprite x y 49152 1024 picnum shade pal orientation 0 0 xdim ydim
			xorvar orientation 4
			add x 80
			rotatesprite x y 49152 0 picnum shade pal orientation 0 0 xdim ydim
		}
		else
		{
			ife pchar 1 set picnum 7779 else set picnum 8907
			rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
			orvar orientation 4
			add x 170
			rotatesprite x y 65536 1024 picnum shade pal orientation 0 0 xdim ydim
		}
	}
	guniqhudid 0
	ifvarand gametips 2048
	{
		gametextz NEWFONTSTART 310 176 1126 0 2 528 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 310 182 1127 0 2 528 0 0 xdim ydim 16384
	}

ends

/*
defstate draw_bladetrap

	set TMP_A pchar
	mul TMP_A 10
	add TMP_A 20
	add TMP_A currentweapon
	guniqhudid TMP_A
	ife player[].ammo_amount TRIPBOMB_WEAPON 0
	{
		set x 232
		set y 247
		state initshellydisplay

		set picnum 19678
		rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
		
	}
	else
	ifl weaponcount 2 
	{
		set x 170
		set y 255
		state initshellydisplay
		set picnum 19945
		rotatesprite x y 36864 0 picnum shade pal orientation 0 0 xdim ydim
	}
	else
	ifl weaponcount 5
	{
		set x 157
		set y 257
		state initshellydisplay
		set picnum 19679
		rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
	}
	else
	// ifl weaponcount 7
	{
		set x 162
		set y 247
		state initshellydisplay
		
		set picnum 19680
		rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
	}
	guniqhudid 0

ends
*/

defstate draw_bow

	setvar z 40960
	set y2 10
	mul y2 weaponcount
	ifg y2 40 set y2 40
	set B last_fired
	sub B player[].player_par
	abs B
	ifl B 30 set y2 40 else
	ife weaponcount 0
	{
		set y2 40
		sub B 30
		shiftl B 1
		sub y2 B
		ifl y2 0 set y2 0
	}
	sub y y2
	ife pchar 1 set picnum 8930 else
	ife pchar 2 set picnum 19280
	switch weaponcount
	case 0
	case 1
	case 2
		break
	case 3
	case 4
		add picnum 1 break
	case 5
	case 6
		add picnum 2 break
	case 7
	case 8
		add picnum 3 break
	case 9
	case 10
		add picnum 4 break
	case 11
	case 12
		add picnum 5 break
	case 13
	case 14
	case 15
		add picnum 6 break
	case 16
	case 17
	case 18
	case 19
	case 20
		add picnum 7 break
	endswitch
	
	guniqhudid 241
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	guniqhudid 0

ends


defstate draw_doubletop

	setvarvar hud_y y
	
	sub hud_y 290
	add hud_y new_gun_pos
	add hud_y new_gun_pos

	set  hud_int_angle angvar
	set  hud_int_orientation orientation
	ifvarand orientation 4 // right side
	{
		xorvar hud_int_orientation 4
		set hud_int_angle 1024
	}
	else
	{
		orvar hud_int_orientation 4
	}
	
	rotatesprite x hud_y z hud_int_angle picnum shade pal hud_int_orientation 0 0 xdim ydim
	

ends

defstate draw_wes_weapons

	set RETURN -1
	
	state initshellydisplay
	ife currentweapon KNEE_WEAPON
	{
		ifn saberpos 0
		{
			set RETURN -1
			state drawsaber
		}
		else
		ifn gotsaber NO
		{
			set RETURN -1
			state drawsaber
		}
		// else
		// ife gotsaw YES
		// ifg sawammo 0
		// ifn pchar 2
		// {
			// setvar RETURN -1
			// state displaysaw
		// }
		else
		ifn weaponcount 0
		{
			switch weaponcount
			case 1 case 2 case 3 case 4 
			case 11 case 12 case 13 case 14
				add x 30
				add y 60
				set picnum 19466
				break
			
			case 5 case 6 case 7 case 8 case 9 case 10
				sub x 35
				add y 40
				set picnum 19467
				break
			endswitch
			set z 57344
			rotatesprite x y z 0 picnum shade wespal orientation 0 0 xdim ydim
		}
		
	} else
	ife currentweapon PISTOL_WEAPON
	{
		ife LASERMODE -4 state displaylaserpistol else
		ife LASERMODE -3 state displaycommgun else
		ifg LASERMODE 2 state displaycommgun else
		ifg LASERMODE 0 state displaylaserpistol
		else
		{
			add y 15
			ifn weaponcount 0 
			{ 
				// set x 230 
				set y 155 
			}
			ifvarand wesupgrades[PISTOL_WEAPON] 4 add x 10
			else sub x 15
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
			
			set picnum 19684
			
			switch weaponcount
			case 0 case 1 case 8 case 9 add y 8 break
			case 2 case 3 add picnum 1 add y 14 add x 16 set shade -100 add z 14336 break
			
			
			case 4 case 5 case 32 case 31 add y 12 add z 8192 add x 12 break
			
			
			case 6 case 7 case 34 case 33 add y 10 add z 4096 add x 8 break
			// > 9 is reloading
				
			case 10 case 11 case 12 case 13 case 14 case 26 case 27 case 28 case 29 case 30 add picnum 2 break
			
			case 15 case 16 case 17 case 18 case 19 case 20 
			case 21 case 22 case 23 case 24 case 25
			add picnum 3 break
			
			endswitch
			
			shiftr z 1
			ifvarand wesupgrades[PISTOL_WEAPON] 1 ife pal 0 set pal 67
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			
			add TMP_A 1
			guniqhudid TMP_A
			
			ifvarand wesupgrades[PISTOL_WEAPON] 4
			{
				state initshellydisplay
				sub x 130
				add y 15
				ifn weaponcount 0 
				{ 
					// set x 90 
					set y 155 
				}
				
				orvar orientation 4

				set picnum 19684
				switch weaponcount
				case 0 case 1 case 2 case 3 case 4 case 5 add y 8 break
				case 6 case 7 add picnum 1 add y 14 sub x 16 set shade -100 add z 14336 break
				case 8 case 32 case 31 add y 12 add z 8192 sub x 12 break
				case 9 case 34 case 33 add y 10 add z 4096 sub x 8 break
				// > 9 is reloading
					
				case 10 case 11 case 12 case 13 case 14 case 26 case 27 case 28 case 29 case 30 add picnum 2 break
				
				case 15 case 16 case 17 case 18 case 19 case 20 
				case 21 case 22 case 23 case 24 case 25
				add picnum 3 break
				
				endswitch
				shiftr z 1
				
				rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
			}
			guniqhudid 0
			ifvarand wesupgrades[PISTOL_WEAPON] 4 nullop else
			ife weap_owned[203] YES
			ifvarand gametips 16384
			{
				gametextz NEWFONTSTART 310 176 1244 0 2 528 0 0 xdim ydim 16384
				gametextz NEWFONTSTART 310 182 1245 0 2 528 0 0 xdim ydim 16384
			}
		}
	}
	else
	ife currentweapon SHOTGUN_WEAPON
	{
		ifvarand wesupgrades[SHOTGUN_WEAPON] 4 ifvarand gotbow 2 state draw_bow
		else
		{
			set z 40960 // 32768
			sub x 30

			ife player[].reloading YES
			{
				// goes from 11 to 39
				switch weaponcount
				
				case 11 case 12
				case 37 case 38 case 39
					add x 10
					set picnum 19691
				break
				case 13 case 14
				case 35 case 36
					add x 30
					sub y 10
					set picnum 19693
				break
				case 15 case 16 case 17
				case 32 case 33 case 34
					add x 50
					sub y 20
					set picnum 19694
				break
				default
					add x 70
					sub y 10
					set picnum 19695
				break
				endswitch
			}
			else
			ifle WEAPON2_TOTALTIME 12 // semi-auto mode
			{
				switch weaponcount // totaltime is 11
				case 0 case 1 case 2
					set picnum 19691 // idle
				break
				case 3 // case 4 
				set shade -100
				add x 5
				add y 3
					ife stakefire YES set picnum 19455 else
					set picnum 19692
				break
				case 4 case 5
				set shade -100
				add x 10
				add y 6
					ife stakefire YES set picnum 19455 else
					set picnum 19692
				break
				case 6 case 7
				
					add x 8
					add y 4
					set picnum 19691
				break
				case 8 case 9
				
					add x 4
					sub y 2
					set picnum 19691
				break
				case 10 case 11
					add x 2
					set picnum 19691
				break
				
				endswitch
			}
			else // normal mode
			{
				switch weaponcount // totaltime is 26
				case 0 case 1 case 2
				case 25 case 26
					ifg stakes 0 set picnum 19690 else
					set picnum 19691 // idle
				break
				case 3 // case 4 
				set shade -100
				add x 5
				add y 3
					ife stakefire YES set picnum 19455 else
					set picnum 19692
					
				break
				case 4 case 5
				set shade -100
				add x 10
				add y 6
					ife stakefire YES set picnum 19455 else
					set picnum 19692
				break
				case 6 case 7
				case 22 case 23 case 24
					add x 10
					ife stakefire NO ifg stakes 0 set picnum 19690 else
					set picnum 19691
				break
				case 8 case 9
				case 20 case 21
					add x 30
					sub y 10
					ife stakefire NO ifg stakes 0 set picnum 19693 else
					set picnum 19452
				break
				case 10 case 11 case 12
				case 17 case 18 case 19
					set x 208 set y 170
					add x 50
					sub y 20
					ife stakefire NO ifg stakes 0 set picnum 19694 else
					set picnum 19453
				break
				case 13 case 14 case 15
				case 16
					set x 208 set y 170
					add x 70
					sub y 10 // 30
					ife stakefire NO ifg stakes 0 set picnum 19695 else
					set picnum 19454
				break
				endswitch
			}
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			guniqhudid 0
		}
	}
	else
	ife currentweapon CHAINGUN_WEAPON
	{
		ifvarand wesupgrades[CHAINGUN_WEAPON] 8 ifvarand gotshock 2
		{
			set RETURN -1
			state displayshockrifle
			break
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		set z 28672 // 32768
		add x 20
		set picnum 19709
		set angvar 0
		set angle2 1024
		ifn uzireload 0
		{
			set picnum 19711
			set x 255
			set y 145
		}
		else
		ifn weaponcount 0
		{
			ife fastfire 0
			{
				ifvarand weaponcount 1
				{
					add x 6
					add y 4
					set picnum 19710
				}
				else
				{
					add x 3
					add y 2
				}
			}
			else
			{
				ifvarand player[].player_par 1
				{
					add x 6
					add y 4
					set picnum 19710
				}
				else
				ife weaponcount 2
				{
					add x 6
					add y 4
					set picnum 19710
				}
				else
				{
					add x 3
					add y 2
				}
			}
			
		}

		rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
		guniqhudid 0
		ifvarand wesupgrades[CHAINGUN_WEAPON] 1
		{
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			add TMP_A 1
			guniqhudid TMP_A
			set z 28672 // 32768
			sub x 175
			set picnum 19709
			ifn uzireload 0
			{
				set picnum 19711
			}
			else
			ifn weaponcount 0
			{
				ife fastfire 0
				{
					ifvarand weaponcount 1
					{
						sub x 6
						add y 4
						set picnum 19710
					}
					else
					{
						sub x 3
						add y 2
					}
				}
				else
				{
					ifvarand player[].player_par 1
					{
						sub x 3
						add y 2
					}
					else
					{
						sub x 6
						add y 4
						set picnum 19710
					}
					
				}
				
			}
			
			orvar orientation 4
			rotatesprite x y z angle2 picnum shade pal orientation 0 0 xdim ydim
			guniqhudid 0
		}
		ifvarand wesupgrades[CHAINGUN_WEAPON] 1 nullop else
		ife weap_owned[221] YES
		ifvarand gametips 16384
		{
			gametextz NEWFONTSTART 310 176 1244 0 2 528 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 310 182 1245 0 2 528 0 0 xdim ydim 16384
		}
	}
	else
	ife currentweapon RPG_WEAPON
	{
		ife nukeselect YES { state initweapondisplay state draw_nuke break }
		ife nukeselect -2 { state initweapondisplay state draw_nuke break }
		orvar orientation 512
		set z 49152 // 40960
		add x 10
		
		
		set tempb zoomcount abs tempb
		ifg tempb 0 ifl tempb 7
		{
			set x 240
			ifl tempb 4
			{
				sub x 5
				add z 10240
				set picnum 19707
			}
			else
			{
				sub x 25
				sub y 15
				add z 12288
				set picnum 19708
			}
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			guniqhudid 0
			break
		}
		else
		ife zoomin YES
		{
			xorvar orientation 512
			set picnum 9970
			set z 81920
			ife player[].kickback_pic 4 add z 8192 else
			ife player[].kickback_pic 5 add z 6144 else
			ife player[].kickback_pic 6 add z 4096 else
			ife player[].kickback_pic 7 add z 2048
			set x 160
			set y 140
			
			// sub x looking_angSR1
			// add x weapon_xoffset
			
			set y2 looking_arc
			div y2 2
			add y y2
			set y2 gun_pos // new_gun_pos
			div y2 2
			sub y y2
			set pal 26
			rotatesprite x y z 0 9971 shade pal 33 0 0 xdim ydim
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			guniqhudid 0
			break
		}

		ifle weaponcount WEAPON4_FIREDELAY
		{
			ife player[].ammo_amount RPG_WEAPON 0 set picnum 19699 else
			set picnum 19697
		}
		else
		{
			set picnum 19698
			ifg weaponcount WEAPON4_FIREDELAY ifl weaponcount 8
			{
				// draw muzzleflash
				set shade -100
			}
		}
		
		
			switch weaponcount
			case 5
				add x 10 add y 6	
			break
			case 6
				add x 15 add y 9
			break
			case 7
				add x 18 add y 11
			break
			case 8
				set picnum 19699
				add x 17 add y 10
			break
			case 9
				set picnum 19699
				add x 14 add y 8
			break
			case 10
				set picnum 19699
				add x 10 add y 5
			break
			case 11 
				set picnum 19699 
				add x 5 add y 3 
			break
			
			
			case 12 case 13 case 14 case 15 set picnum 19700 
			set y 160
			set y2 weaponcount
			sub y2 12
			mul y2 4
			add y y2
			
			break
			
			case 16 case 17 case 18 case 19 set picnum 19701 
			set y 170
			set y2 weaponcount
			sub y2 16
			mul y2 6
			add y y2
			break
			
			case 20 case 21 case 22 case 23
			case 24 case 25 case 26 case 27 
			set y 185
			set y2 weaponcount
			sub y2 20
			mul y2 5
			add y y2
			set picnum 19702 
			break
			
			case 28 case 29 case 30 case 31 set picnum 19703 
			set y 205
			set y2 weaponcount
			sub y2 28
			mul y2 5
			sub y y2
			break
			
			
			case 32 case 33 case 34 case 35 case 36 set picnum 19704 
			set y 200
			break
			
			case 37 case 38 case 39 case 40 case 41 set picnum 19705 break
			case 42 case 43 case 44 case 45 case 46 set picnum 19706 break
			case 47 case 48 case 49 case 50 set picnum 19697
			break
			
			default set picnum 19697 break
			
			endswitch
		
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		ifg weaponcount WEAPON4_FIREDELAY ifl weaponcount 7
		{
			set bossx x
			set bossy y
			sub bossx 45
			sub bossy 30
			set temp 7721 set tempb -100
			rotatesprite bossx bossy 98304 0 temp tempb 0 orientation 0 0 xdim ydim
		}

		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		
		guniqhudid 0
	
	}
	else
	ife currentweapon HANDBOMB_WEAPON
	{
		state initshellydisplay
		
		ifl weaponcount 7
		{
			set z 32768
			ife player[].ammo_amount HANDBOMB_WEAPON 0 
			{
				set picnum 19947 
				add x 20
				add y 24
			}
			else
			set picnum 19914
			set y2 weaponcount
			mul y2 12
			add y y2
		}
		else
		{
			// weaponcount 7 to 19 is the hand
			set z 40960
			add x 10
			add y 20
			ifl weaponcount 12 { set z 32768 set picnum 19914 } else
			{ set picnum 19948 set z 40960 }
			switch weaponcount
			case 7 case 20 add y 40 break
			case 8 case 19 add y 32 break
			case 9 case 18 add y 24 break
			case 10 case 17 add y 18 break
			case 11 case 16 add y 10 break
			case 12 case 15 add y 2 break
			case 13 case 14 break
			endswitch
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		guniqhudid 0
	}
	else
	ife currentweapon SHRINKER_WEAPON
	{
		set picnum 19901
		ifg weaponcount 0 
		{
			add picnum 1
			ife WEAPON6_SHOOTS WESGRENADE add picnum 1
			switch weaponcount 
			case 2
				add x 9 add y 6
				ife WEAPON6_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 3
				add x 6 add y 4
				ife WEAPON6_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 4
				add x 3 add y 2
				ife WEAPON6_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 5
				set picnum 19901
				ife WEAPON6_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 8 case 9 case 10 case 11
			case 36 case 37 case 38 case 39
			ife player[].reloading NO set picnum 19901
			else
			{
				set x 240
				set y 135
					set picnum 19904
			}
			break
			case 12 case 13 case 14 case 15 case 16
			case 31 case 32 case 33 case 34 case 35
			ife player[].reloading NO set picnum 19901
			else
			{
				set x 240
				set y 130
					set picnum 19905
			}
			break
			case 17 case 18 case 19 case 20 case 21 case 22 case 23 case 24
			case 25 case 26 case 27 case 28 case 29 case 30
			set x 240
			set y 130
				set picnum 19906
			break
			default
				set picnum 19901
			break
			endswitch
			
			
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			add TMP_A 1
			guniqhudid TMP_A
			
			ifge weaponcount WEAPON6_FIREDELAY
			ifle weaponcount WEAPON6_TOTALTIME
			ifn WEAPON6_SHOOTS WESGRENADE
			ifn WEAPON6_SHOOTS BLOODBOMB
			{
				set x2 x sub x2 30
				set y2 y sub y2 35
				set angvar 0
				displayrandvar angvar 2048
				// rotatesprite x2 y2 98304 angvar 16820 -100 pal orientation 0 0 xdim ydim

				rotatespritea x2 y2 81920 angvar 16820 -100 21 orientation -1 0 0 xdim ydim
			}
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		set z 38912
		add shade 2
		set pal 21
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		ife weaponcount 0
		{
			rotatesprite x y z 0 19900 -100 pal orientation 0 0 xdim ydim
		}
		guniqhudid 0
	}
	else
	ife currentweapon GROW_WEAPON
	{
		set picnum 19901
		ifg weaponcount 0 
		{
			add picnum 1
			ife WEAPON11_SHOOTS WESGRENADE add picnum 1
			switch weaponcount 
			case 2
				add x 9 add y 6
				ife WEAPON11_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 3
				add x 6 add y 4
				ife WEAPON11_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 4
				add x 3 add y 2
				ife WEAPON11_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 5
				set picnum 19901
				ife WEAPON11_SHOOTS WESGRENADE { add x 3 add y 2 }
			break
			case 8 case 9 case 10 case 11
			case 36 case 37 case 38 case 39
			ife player[].reloading NO set picnum 19901
			else
			{
				set x 240
				set y 135
					set picnum 19904
			}
			break
			case 12 case 13 case 14 case 15 case 16
			case 31 case 32 case 33 case 34 case 35
			ife player[].reloading NO set picnum 19901
			else
			{
				set x 240
				set y 130
					set picnum 19905
			}
			break
			case 17 case 18 case 19 case 20 case 21 case 22 case 23 case 24
			case 25 case 26 case 27 case 28 case 29 case 30
			set x 240
			set y 130
				set picnum 19906
			break
			default
				set picnum 19901
			break
			endswitch
			
			
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			add TMP_A 1
			guniqhudid TMP_A
			
			ifge weaponcount WEAPON11_FIREDELAY
			ifle weaponcount WEAPON11_TOTALTIME
			ifn WEAPON11_SHOOTS GRENADEPROJ // WESGRENADE
			{
				set x2 x sub x2 30
				set y2 y sub y2 35
				set angvar 0
				// displayrandvar angvar 2048
				rotatesprite x2 y2 98304 angvar 8181 -100 1 orientation 0 0 xdim ydim
			}
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		set z 38912
		add shade 2
		set pal 0
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		ife weaponcount 0
		{
			rotatesprite x y z 0 19900 -100 pal orientation 0 0 xdim ydim
		}
		guniqhudid 0
	}
	else
	ife currentweapon DEVISTATOR_WEAPON
	{
		ifvarand gotrailgun 2 
			state displayrailgun
		else
		{
			set RETURN -1
			state old_weapon_setup
			ifvarand wesupgrades[DEVISTATOR_WEAPON] 2 set doubletop YES
			state draw_devastator
			set doubletop NO
		}
	} else
	ife currentweapon TRIPBOMB_WEAPON
	{
		ifvarand wesupgrades[TRIPBOMB_WEAPON] 1 { state draw_spidermine break }
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		ife weaponcount 0 
		{
			set x 150
			set y 244
			state initshellydisplay
			
			rotatesprite x y 65536 0 2566 shade pal orientation 0 0 xdim ydim
			
			set x 97
			set y 257
			state initshellydisplay
			orvar orientation 4
			rotatesprite x y 40960 1024 19678 shade pal orientation 0 0 xdim ydim
			xorvar orientation 4
			add x 102
			rotatesprite x y 40960 0 19678 shade pal orientation 0 0 xdim ydim
		}
		else
		ifl weaponcount 4
		{
			set x 97
			set y 257
			state initshellydisplay
			orvar orientation 4
			rotatesprite x y 40960 1024 19679 shade pal orientation 0 0 xdim ydim
			xorvar orientation 4
			add x 102
			rotatesprite x y 40960 0 19679 shade pal orientation 0 0 xdim ydim
		}
		else
		ifl weaponcount 7
		{
			set x 102
			set y 247
			state initshellydisplay
			orvar orientation 4
			rotatesprite x y 40960 1024 19680 shade pal orientation 0 0 xdim ydim
			xorvar orientation 4
			add x 90
			rotatesprite x y 40960 0 19680 shade pal orientation 0 0 xdim ydim
		}
		ifvarand gametips 2048
		{
			gametextz NEWFONTSTART 310 176 1126 0 2 528 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 310 182 1127 0 2 528 0 0 xdim ydim 16384
		}
		guniqhudid 0
	}
	else
	ife currentweapon FREEZE_WEAPON
	{
		ifvarand gotplasma 2 { state displayplasmagun break }
		set z 40960
		sub x 20
		set orientation 4096
		ifl sawpic 19920 set sawpic 19920
		
		
		ifn totalclock prevsawtime
		{
			set prevsawtime totalclock
			add sawpic_count sawspeed
			ifge sawpic_count 10
			{
				ifge sawpic_count 20 add sawpic 3 else
				ifge sawpic_count 10 add sawpic 2 else
				add sawpic 1
				ifg sawpic 19924 sub sawpic 5
				set sawpic_count 0
			}
			
			ifg sawpic 19924 set sawpic 19920
		}

		set picnum sawpic
		
		ifge weaponcount WEAPON9_FIREDELAY
		{
			ifvarand wesupgrades[FREEZE_WEAPON] 1
			{
				switch weaponcount
				case 5 set picnum 19926 break
				case 6 set picnum 19927 break
				case 7 case 8 set picnum 19928 break
				case 9 case 10 set picnum 19929 break
				default set picnum 19925 break
				endswitch
			}
			else
			{
				switch weaponcount
				case 6 case 7 set picnum 19926 break
				case 8 case 9 set picnum 19927 break
				case 10 case 11 set picnum 19928 break
				case 12 case 13 case 14 set picnum 19929 break
				default set picnum 19925 break
				endswitch
			}
			
			
		}

		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		guniqhudid 0
	}

ends

defstate wesidle

	set picnum 20424
	
	ifg idleanim 30 ifl idleanim 320
	{
		add picnum westhumbs
	}
	set orientation 1024
	set x 160
	set y 218
	set z 24576
	switch idleanim
		case 11 case 12 case 13
		case 14 case 15 case 16
		case 17 case 18 case 19
		case 20
			set y2 idleanim
			sub y2 11
			mul y2 7
			sub y y2
			
		break
		
		case 320 case 321 case 322
		case 323 case 324 case 325
		case 326 case 327 case 328
		case 329 case 330
			set y 156
			set y2 idleanim
			sub y2 319
			mul y2 12
			add y y2
		break
		
		default 
			set y 156
		break
	endswitch
	
	ifl idleanim 11 set picnum -1
	
	
	ifn picnum -1
	{
		set hud_tilenum 20429 // game screen
		ifge idleanim 50 ifle idleanim 150
		{
			add hud_tilenum 1
			ifg idleanim 65 add hud_tilenum 1
			ifg idleanim 80 add hud_tilenum 1
			ifg idleanim 95 add hud_tilenum 1
			ifg idleanim 110 add hud_tilenum 1
		}
		ifg idleanim 150
		{
			set hud_tilenum 20435
			ifg idleanim 180
			{
				set temp idleanim
				sub temp 180
				div temp 5
				add hud_tilenum temp
				ifg hud_tilenum 20454 sub hud_tilenum 19
			}
			
		}
		set shade 0
		rotatesprite x y z 0 hud_tilenum shade 0 orientation 0 0 xdim ydim
		set shade sprite[player[].i].shade
		add shade 3
		rotatesprite x y z 0 picnum shade wespal orientation 0 0 xdim ydim
		

		orvar orientation 1
		rotatespritea x y z 0 20428 0 0 orientation -1 0 0 xdim ydim
		// rotatespritea 160 100 32768 0 es_pic 0 pal 1024 -1 0 0 xdim ydim
	}
ends

defstate draw_shelly_weapons

	state initshellydisplay
	ife currentweapon KNEE_WEAPON
	{
		ifn saberpos 0
		{
			set RETURN -1
			state drawsaber
		}
		else
		ifn gotsaber NO
		{
			set RETURN -1
			state drawsaber
		}
		else
		ife gotsaw YES
		ifg sawammo 0
		{
			setvar RETURN -1
			state displaysaw
		}
		else
		ifn weaponcount 0
		{
			switch weaponcount
			case 1 case 2 case 3 case 4 
			case 11 case 12 case 13 case 14
				add x 40
				add y 20
				ifvarand altcostume 1 { set picnum 16846 add y 40 } else // EDF
				ifvarand altcostume 4 { set picnum 16848 add y 40 } else // Gladiator
				ifvarand altcostume 32 { set picnum 16844 add y 40 } else // bikini
				set picnum 7690
				break
			
			case 5 case 6 case 7 case 8 case 9 case 10
				sub x 10
				ifvarand altcostume 1 { set picnum 16847 add y 20 } else // EDF
				ifvarand altcostume 4 { set picnum 16849 add y 20 } else // Gladiator
				ifvarand altcostume 32 { set picnum 16845 add y 20 } else // bikini
				set picnum 7691
				break
			endswitch
			
			rotatesprite x y z 0 picnum shade shellypal orientation 0 0 xdim ydim
		}
		
	}
	else
	ife currentweapon PISTOL_WEAPON
	{
		ife LASERMODE -4 state displaylaserpistol else
		ife LASERMODE -3 state displaycommgun else
		ifg LASERMODE 2 state displaycommgun else
		ifg LASERMODE 0 state displaylaserpistol else
		{
			ifvarand shellyupgrades[PISTOL_WEAPON] 8
			{
				state draw_glock18
				break
			}
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
			
			ifl y 139 ifg weaponcount 9 set y 139 // prevents clipping
			
			ifvarand shellyupgrades[PISTOL_WEAPON] 1 set picnum 10378
			else
			set picnum 7680
			
			switch weaponcount
			case 0 case 1 case 7 case 8 case 9 sub x 10 add y 8 break
			case 2 add x 5 add picnum 1 add y 8 set shade -100 break
			case 3 add x 10 add picnum 1 add y 8 set shade -100 break
			case 4 sub x 10 add picnum 2 add y 8 break
			case 5 add picnum 3 add y 16 break
			case 6 sub x 10 add y 16 add picnum 4 break
			// > 9 is reloading
				
			// starts move
			// clip is dropping
			case 10 add picnum 5 add x 10 add y 20 break
			case 11 add picnum 5 add x 24 add y 10 break
			case 12 add picnum 5 add x 38 break
			case 13 add picnum 5 add x 52 sub y 10 break
			case 14 add picnum 5 add x 66 sub y 20 break
			// finishes move
			case 15 case 16 case 17 add picnum 5 add x 80 sub y 40 break
			
			// hand holding clip appears
			case 18 add picnum 5 add x 80 sub y 40 
			rotatesprite 235 204 z 0 7688 shade pal orientation 0 0 xdim ydim
			break
			case 19 add picnum 5 add x 80 sub y 40 
			rotatesprite 235 200 z 0 7688 shade pal orientation 0 0 xdim ydim
			break
			case 20 add picnum 5 add x 80 sub y 40 
			rotatesprite 235 196 z 0 7688 shade pal orientation 0 0 xdim ydim
			break
			case 21 add picnum 5 add x 80 sub y 40 
			rotatesprite 235 192 z 0 7688 shade pal orientation 0 0 xdim ydim
			break
			case 22 add picnum 5 add x 80 sub y 40 
			rotatesprite 235 188 z 0 7688 shade pal orientation 0 0 xdim ydim
			break
			
			// becomes open hand pushing up
			
			case 23 add picnum 5 add x 80 sub y 40 
			rotatesprite 225 194 z 0 7689 shade pal orientation 0 0 xdim ydim
			break
			case 24 add picnum 5 add x 80 sub y 40 
			rotatesprite 225 188 z 0 7689 shade pal orientation 0 0 xdim ydim
			break
			case 25 add picnum 5 add x 80 sub y 40 
			rotatesprite 225 182 z 0 7689 shade pal orientation 0 0 xdim ydim
			break
			case 26 add picnum 5 add x 80 sub y 40 
			rotatesprite 225 176 z 0 7689 shade pal orientation 0 0 xdim ydim
			break
			// clip goes in
			case 27 add picnum 5 add x 80 sub y 40 break
			// hand starts to move back
			// gun moves to idle position
			case 28 add picnum 5 add x 80 sub y 40 break
			case 29 add picnum 5 add x 66 sub y 20 break
			case 30 add picnum 5 add x 52 sub y 10 break
			
			case 31 add picnum 5 add x 38 break
			case 32 add picnum 5 add x 24 add y 10 break
			
			case 33 add picnum 5 add x 10 add y 20 break
			case 34 add picnum 5 add x 10 add y 20 break
				
			endswitch
			ifvarand shellyupgrades[PISTOL_WEAPON] 4 ifl weaponcount 10 
			{
				add x 15
				// if dual wielding, sub in different data for right pistol during firing
				state initshellydisplay
				ifvarand shellyupgrades[PISTOL_WEAPON] 1 set picnum 10378
				else
				set picnum 7680
				switch weaponcount
				case 0 case 1 case 6 case 7 case 8 case 9 sub x 10 add y 8 break
				case 2 add x 5 add picnum 1 add y 8 set shade -100 break
				case 3 sub x 10 add picnum 2 add y 8 break
				case 4 add picnum 3 add y 16 break
				case 5 sub x 10 add y 16 add picnum 4 break		
					
				endswitch
				
			}
			// shiftr z 1
			set z 32768
			ifl weaponcount 36
			{
				set TMP_A pchar
				mul TMP_A 10
				add TMP_A 20
				add TMP_A currentweapon
				add TMP_A 1
				guniqhudid TMP_A
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			}
			
			ifvarand shellyupgrades[PISTOL_WEAPON] 4
			{
				state initshellydisplay
				orvar orientation 4
				ifl y 139 ifg weaponcount 9 set y 139 // prevents clipping

				ifvarand shellyupgrades[PISTOL_WEAPON] 1 set picnum 10378
				else
				set picnum 7680
				switch weaponcount
				case 0 case 1 case 2 case 3 case 4 case 5 add x 20 add y 8 break
				
				case 6 add x 20 add picnum 1 set shade -100 add y 8 break
				case 7 add x 20 add picnum 2 add y 8 break
				case 8 add x 10 add picnum 3 add y 16 break
				case 9 add x 20 add y 16  add picnum 4 break
				
				
				// > 9 is reloading
					
				// starts move
				// clip is dropping
				case 35 add picnum 5 sub x 10 add y 20 break
				case 36 add picnum 5 sub x 24 add y 10 break
				case 37 add picnum 5 sub x 38 break
				case 38 add picnum 5 sub x 52 sub y 10 break
				case 39 add picnum 5 sub x 66 sub y 20 break
				// finishes move
				case 40 case 16 case 17 add picnum 5 sub x 80 sub y 40 break
				
				// hand holding clip appears
				case 41 add picnum 5 sub x 80 sub y 40 
				rotatesprite 80 204 z 1024 7688 shade pal orientation 0 0 xdim ydim
				break
				case 42 add picnum 5 sub x 80 sub y 40 
				rotatesprite 80 200 z 1024 7688 shade pal orientation 0 0 xdim ydim
				break
				case 43 add picnum 5 sub x 80 sub y 40 
				rotatesprite 80 196 z 1024 7688 shade pal orientation 0 0 xdim ydim
				break
				case 44 add picnum 5 sub x 80 sub y 40 
				rotatesprite 80 192 z 1024 7688 shade pal orientation 0 0 xdim ydim
				break
				case 45 add picnum 5 sub x 80 sub y 40 
				rotatesprite 80 188 z 1024 7688 shade pal orientation 0 0 xdim ydim
				break
				
				// becomes open hand pushing up
				
				case 46 add picnum 5 sub x 80 sub y 40 
				rotatesprite 95 194 z 1024 7689 shade pal orientation 0 0 xdim ydim
				break
				case 47 add picnum 5 sub x 80 sub y 40 
				rotatesprite 95 188 z 1024 7689 shade pal orientation 0 0 xdim ydim
				break
				case 48 add picnum 5 sub x 80 sub y 40 
				rotatesprite 95 182 z 1024 7689 shade pal orientation 0 0 xdim ydim
				break
				case 49 add picnum 5 sub x 80 sub y 40 
				rotatesprite 95 176 z 1024 7689 shade pal orientation 0 0 xdim ydim
				break
				// clip goes in
				case 50 add picnum 5 sub x 80 sub y 40 break
				// hand starts to move back
				// gun moves to idle position
				case 51 add picnum 5 sub x 80 sub y 40 break
				case 52 add picnum 5 sub x 66 sub y 20 break
				case 53 add picnum 5 sub x 52 sub y 10 break
				
				case 54 add picnum 5 sub x 38 break
				case 55 add picnum 5 sub x 24 add y 10 break
				
				case 56 add picnum 5 sub x 10 add y 20 break
				case 57 add picnum 5 sub x 10 add y 20 break
					
				endswitch
				shiftr z 1
				ifvarand shellyupgrades[PISTOL_WEAPON] 4 sub x 135
				ifg weaponcount 10 ifl weaponcount 36 nullop else
				rotatesprite x y z 1024 picnum shade pal orientation 0 0 xdim ydim
			}
			guniqhudid 0
		}
	}
	else
	ife currentweapon SHOTGUN_WEAPON
	{
		ifvarand shellyupgrades[SHOTGUN_WEAPON] 4 ifvarand gotbow 2 state draw_bow
		else
		{
			set z 32768
			// ifvarand shellyupgrades[SHOTGUN_WEAPON] 128
			ife player[].reloading YES
			{
				// goes from 11 to 39
				switch weaponcount
				
				case 11 case 12
				case 37 case 38 case 39
					add x 10
					set picnum 7701
				break
				case 13 case 14
				case 35 case 36
					add x 30
					sub y 10
					set picnum 7702
				break
				case 15 case 16 case 17
				case 32 case 33 case 34
					add x 50
					sub y 20
					set picnum 7703
				break
				default
					add x 70
					sub y 30
					set picnum 7704
				break
				endswitch
			}
			else
			ifle WEAPON2_TOTALTIME 12
			{
			switch weaponcount // totaltime is 11
			case 0 case 1 case 2
				set picnum 7700 // idle
			break
			case 3 // case 4 
			set shade -100
			add x 5
			add y 3
				set picnum 7705
			break
			case 4 case 5
			set shade -100
			add x 10
			add y 6
				set picnum 7706
			break
			case 6 case 7
			
				add x 8
				add y 4
				set picnum 7700
			break
			case 8 case 9
			
				add x 4
				sub y 2
				set picnum 7700
			break
			case 10 case 11
				add x 2
				set picnum 7700
			break
			
			endswitch
			}
			else
			{
			switch weaponcount // totaltime is 24
			case 0 case 1 case 2
				set picnum 7700 // idle
			break
			case 3 // case 4 
			set shade -100
			add x 5
			add y 3
				set picnum 7705
			break
			case 4 case 5
			set shade -100
			add x 10
			add y 6
				set picnum 7706
			break
			case 6 case 7
			case 22 case 23 case 24
				add x 10
				set picnum 7701
			break
			case 8 case 9
			case 20 case 21
				add x 30
				sub y 10
				set picnum 7702
			break
			case 10 case 11 case 12
			case 17 case 18 case 19
				add x 50
				sub y 20
				set picnum 7703
			break
			case 13 case 14 case 15
			case 16
				add x 70
				sub y 30
				set picnum 7704
			break
			endswitch
			}
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			guniqhudid 0
		}
	}
	else
	ife currentweapon CHAINGUN_WEAPON
	{
		ifvarand shellyupgrades[CHAINGUN_WEAPON] 8 ifvarand gotshock 2
		{
			set RETURN -1
			state displayshockrifle
			break
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		set z 32768
		ifvarand shellyupgrades[CHAINGUN_WEAPON] 1
		{
			set tempb zoomcount abs tempb
			ifg tempb 0 ifl tempb 7
			{
				ifl tempb 4
				{
					sub x 20
					add z 4096
					set picnum 10328
				}
				else
				{
					sub x 40
					add z 8192
					set picnum 10329
				}
				
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			}
			else
			ife zoomin YES
			{
				set picnum 10361
				set z 81920
				set x 165 // 160
				set y 180
				ifvarand weaponcount 1 
				{
					add picnum 1
					add x 2 add y 3
				}
				// sub x looking_angSR1
				// add x weapon_xoffset
				
				set y2 looking_arc
				div y2 2
				add y y2
				set y2 new_gun_pos
				div y2 2
				sub y y2
				
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
				// orvar orientation 1
				// rotatesprite x y z 0 7797 shade pal orientation 0 0 xdim ydim
			}
			else
			{
				set picnum 10359
				ifn weaponcount 0
				{	
					ife fastfire 0
					{
						ifvarand weaponcount 1
						{
							add x 6
							add y 4
							set picnum 10360
						}
						else
						{
							add x 3
							add y 2
						}
					}
					else
					{
						ifvarand player[].player_par 1
						{
							add x 6
							add y 4
							set picnum 10360
						}
						else
						{
							add x 3
							add y 2
						}
						
					}
					
				}
				ifn m4reload 0
				{
					set picnum 10363
					set x 255
					set y 140
					switch m4reload
						case 1 case 2 case 3 case 4
						case 37 case 38 case 39 case 40
						set picnum 10363
					break
						case 5 case 6 case 7 case 8 case 9 case 10
						case 31 case 32 case 33 case 34 case 35 case 36
						set picnum 10364
					break
						case 11 case 12
						case 29 case 30
						set picnum 10365
					break
						case 13 case 14 case 15 case 16
						case 27 case 28
						set picnum 10366
					break
					
					default
						set picnum 10366
					break
					endswitch
				}
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			}
		}
		else
		{
			set tempb zoomcount abs tempb
			ifg tempb 0 ifl tempb 7
			{
				ifl tempb 4
				{
					sub x 25
					add z 4096
					set picnum 7698
				}
				else
				{
					sub x 50
					add z 8192
					set picnum 7699
				}
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			}
			else
			ife zoomin YES
			{
				set picnum 7686
				set z 81920
				set x 155 // 160
				set y 180
				ifvarand weaponcount 1 
				{
					add picnum 1
					add x 2 add y 3
				}
				// sub x looking_angSR1
				// add x weapon_xoffset
				
				set y2 looking_arc
				div y2 2
				add y y2
				set y2 new_gun_pos
				div y2 2
				sub y y2
				
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
				// orvar orientation 1
				// rotatesprite x y z 0 7797 shade pal orientation 0 0 xdim ydim
			}
			else
			{
				set picnum 7692
				ifn weaponcount 0
				{
					ife fastfire 0
					{
						ifvarand weaponcount 1
						{
							add x 6
							add y 4
							set picnum 7693
						}
						else
						{
							add x 3
							add y 2
						}
					}
					else
					{
						ifvarand player[].player_par 1
						{
							add x 6
							add y 4
							set picnum 7693
						}
						else
						{
							add x 3
							add y 2
						}
					}
					
				}
				ifn m4reload 0
				{
					set picnum 7694
					set x 255
					set y 140
					switch m4reload
						case 1 case 2 case 3 case 4
						case 37 case 38 case 39 case 40
						set picnum 7694
					break
						case 5 case 6 case 7 case 8 case 9 case 10
						case 31 case 32 case 33 case 34 case 35 case 36
						set picnum 7695
					break
						case 11 case 12
						case 29 case 30
						set picnum 7696
					break
						case 13 case 14 case 15 case 16
						case 27 case 28
						set picnum 7697
					break
					
					default
						set picnum 7697
					break
					endswitch
				}
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			}
		}
		guniqhudid 0
	}
	else
	ife currentweapon RPG_WEAPON
	{
		ife nukeselect YES { state initweapondisplay state draw_nuke break }
		ife nukeselect -2 { state initweapondisplay state draw_nuke break }
		ifvarand shellyupgrades[RPG_WEAPON] 1 { state initweapondisplay state draw_newrpg break }
		orvar orientation 512
		shiftr z 1
		add z 1
		ife weaponcount 0
		{
			ife player[].ammo_amount RPG_WEAPON 0 set picnum 7717 else
			ife rpgtype 0 set picnum 7715 else
			ife rpgtype 1 set picnum 7716
		}
		else
		{
			set picnum 7717
			ifg weaponcount 3 ifl weaponcount 7
			{
				// draw muzzleflash
				set shade -100
			}
		}
		
		ife rpgchange NO // no recoil if switching ammo type
		{
			switch weaponcount
			case 5 case 14
				add x 10 add y 6
				
			break
			case 6 case 13
				add x 15 add y 9
			break
			case 7 case 12
				add x 18 add y 11
			break
			case 8 case 11
				add x 19 add y 13
			break
			case 9 case 10
				add x 20 add y 14
			break
			
			endswitch
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		ifg weaponcount 3 ifl weaponcount 7
		{
			set bossx x
			set bossy y
			sub bossx 40
			sub bossy 20
			ife rpgtype 0 { set temp 7721 set tempb -100 } else { set temp 7722 set tempb 10 }
			rotatesprite bossx bossy 65536 0 temp tempb pal orientation 0 0 xdim ydim
		}
		
		rotatesprite x y z 0 7718 shade pal orientation 0 0 xdim ydim
		
		ifg weaponcount 10 // rocket loading
		{
			set x2 x
			set y2 y
			ife rpgtype 0 set B 7719
			ife rpgtype 1 set B 7720
			add x2 110
			sub y2 45
			
			switch weaponcount
			case 11 break
			case 12 sub x2 1 break
			case 13 sub x2 4 break
			case 14 sub x2 7 break
			case 15 sub x2 10 break
			case 16 sub x2 13 break
			case 17 sub x2 16 break
			case 18 sub x2 19 break
			case 19 sub x2 22 break
			case 20 sub x2 25 break
			case 21 sub x2 28 break
			
			case 22 sub x2 28 add y2 2 break
			case 23 sub x2 28 add y2 6 break
			case 24 sub x2 28 add y2 10 break
			case 25 sub x2 28 add y2 14 break
			case 26 sub x2 28 add y2 18 break
			case 27 sub x2 28 add y2 22 break
			case 28 sub x2 28 add y2 26 break
			case 29 sub x2 28 add y2 30 break
			case 30 sub x2 28 add y2 34 break
				
			endswitch
			rotatesprite x2 y2 z 0 B shade pal orientation 0 0 xdim ydim
		}
		
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		
		ifg weaponcount 3 ifl weaponcount 7
		{
			orvar orientation 33
			ife rpgtype 0 { set temp 7721 set tempb -100 } else { set temp 7722 set tempb 10 }
			rotatesprite bossx bossy 65536 0 temp tempb pal orientation 0 0 xdim ydim
		}
		guniqhudid 0
	
	}
	else
	ife currentweapon HANDBOMB_WEAPON
	{
		state initshellydisplay
		ifl weaponcount 7
		{
			set z 28672 // 57344
			set picnum 7725
			set y2 weaponcount
			mul y2 12
			add y y2
		}
		else
		{
			// weaponcount 7 to 19 is the hand
			add x 10
			add y 20
			set picnum 7726
			switch weaponcount
			case 7 case 20 add y 40 break
			case 8 case 19 add y 32 break
			case 9 case 18 add y 24 break
			case 10 case 17 add y 18 break
			case 11 case 16 add y 10 break
			case 12 case 15 add y 2 break
			case 13 case 14 break
			endswitch
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		guniqhudid 0
	}
	else
	ife currentweapon SHRINKER_WEAPON
	{
		ifvarand shellyupgrades[SHRINKER_WEAPON] 1
		{
			state draw_bmfg
		}
		else
		{
			set RETURN -1
			state old_weapon_setup
			state draw_shrinker
		}
	}
	else
	ife currentweapon DEVISTATOR_WEAPON
	{
		ifvarand gotrailgun 2 
			state displayrailgun
		else
		{
			state initshellydisplay
			set z 32768
			set picnum 7780
			// devside 0 = right firing, 1 = left firing
			// draw right side first
			
			ifvarand extbits 64
			ifvarand player[].player_par 1
			ifvarand shellyupgrades[DEVISTATOR_WEAPON] 1
				set pal 121
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
			orvar orientation 512
			ife devside 1
			{
				set angvar 0
				rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
			}
			else
			{
				ifl weaponcount 3
				{
					set angvar 0
					rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
					ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
				}
				else
				{
					set angvar 0
					switch weaponcount
					case 3
						
						add x 5 add y 3
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					case 4	add x 5 add y 3
						ifg fastfire 0 set picnum 7781
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					case 5 case 6
						set picnum 7781
						add x 5
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					case 7 case 8
						set picnum 7782
						add x 5
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					case 9 case 10
						set picnum 7783
						add x 5
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					default
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					endswitch
				}
				
			}
			
			// now draw left side
			set picnum 7780
			state initshellydisplay
			
			ifvarand player[].player_par 1 nullop else
			ifvarand extbits 64
			ifvarand shellyupgrades[DEVISTATOR_WEAPON] 1
				set pal 121
			
			set orientation 4356 // 260
			set z 32768
			sub x 215
			ife devside 0
			{
				set angvar 1024
				rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
			}
			else
			{
				ifl weaponcount 3 
				{
					set angvar 1024
					rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
					ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
				}
				else
				{
					set angvar 1024
					switch weaponcount
					case 3
						sub x 5 add y 3
						
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
					break
					case 4	sub x 5 add y 3
						ifg fastfire 0 set picnum 7781
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					case 5 case 6
						set picnum 7781
						sub x 5
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					case 7 case 8
						set picnum 7782
						sub x 5
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					case 9 case 10
						set picnum 7783
						sub x 5
						rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
						break
					default
					 	rotatesprite x y z angvar picnum shade pal orientation 0 0 xdim ydim
						ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 state draw_doubletop
					break
					endswitch
				}
			}
			guniqhudid 0
		}
	}
	else
	ife currentweapon TRIPBOMB_WEAPON
	{
		ifvarand shellyupgrades[TRIPBOMB_WEAPON] 1 { state draw_spidermine break }
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		ife weaponcount 0 
		{
			set x 150
			set y 244
			state initshellydisplay
			
			rotatesprite x y 65536 0 2566 shade pal orientation 0 0 xdim ydim
			
			set x 57
			set y 257
			state initshellydisplay
			
			rotatesprite x y 65536 0 7777 shade pal orientation 0 0 xdim ydim
			orvar orientation 4
			add x 182
			rotatesprite x y 65536 1024 7777 shade pal orientation 0 0 xdim ydim
		}
		else
		ifl weaponcount 4
		{
			set x 57
			set y 257
			state initshellydisplay
			
			rotatesprite x y 65536 0 7778 shade pal orientation 0 0 xdim ydim
			orvar orientation 4
			add x 182
			rotatesprite x y 65536 1024 7778 shade pal orientation 0 0 xdim ydim
		}
		else
		ifl weaponcount 7
		{
			set x 62
			set y 247
			state initshellydisplay
			
			rotatesprite x y 65536 0 7779 shade pal orientation 0 0 xdim ydim
			orvar orientation 4
			add x 170
			rotatesprite x y 65536 1024 7779 shade pal orientation 0 0 xdim ydim
		}
		ifvarand gametips 2048
		{
			gametextz NEWFONTSTART 310 176 1126 0 2 528 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 310 182 1127 0 2 528 0 0 xdim ydim 16384
		}
		guniqhudid 0
	}
	else
	ifvare currentweapon FREEZE_WEAPON
	{
		
		ifvarand shellyupgrades[FREEZE_WEAPON] 1 set picnum 7792 else
		{ set picnum 10399 add x 6 }
		ifvarand gotplasma 2 { state displayplasmagun break }
		
		ifg weaponcount 0 
		{
			ifvarand shellyupgrades[FREEZE_WEAPON] 1
			{
				ifvarand player[].player_par 1
				{
					add x 2
					add y 1
				}
			}
			else
			ifge weaponcount WEAPON9_FIREDELAY
			ifvarand player[].player_par 1
			{
				add x 8 add y 5
			}
			set x2 x sub x2 18
			set y2 y sub y2 30
			displayrandvar angvar 2048
			
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			add TMP_A 1
			guniqhudid TMP_A
			
			ifvarand shellyupgrades[FREEZE_WEAPON] 1 
				rotatesprite x2 y2 98304 angvar 10419 -100 pal orientation 0 0 xdim ydim
			else
			ifge weaponcount WEAPON9_FIREDELAY
			rotatesprite x2 y2 98304 angvar 7794 -100 pal orientation 0 0 xdim ydim
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		shiftr z 1
		rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		ife weaponcount 0
		{
			state shadepulse
			rotatesprite x y z 0 7793 shade pal orientation 0 0 xdim ydim
		}
		guniqhudid 0
	}
	else
	ife currentweapon GROW_WEAPON
	{
		set RETURN -1
		state old_weapon_setup
		state draw_expander
	}

ends

defstate displayshellyknuckles
	ifg player[].knuckle_incs 5
	{
		switch player[].knuckle_incs
		case 6 case 7 case 20 case 21 case 22 set picnum 5370 break
		case 8 case 9 case 18 case 19 set picnum 5371 break
		case 10 case 11 case 16 case 17 set picnum 5372 break
		case 12 case 13 case 14 case 15 set picnum 5373 break
		endswitch
		set x 160 set y 175
		geta[player[].i].shade shade
		getsector[THISACTOR].floorpal pal
		rotatesprite x y 65536 0 picnum shade pal 0 0 0 xdim ydim
	}
ends

defstate displaywesknuckles
	ifg player[].knuckle_incs 5
	{
		switch player[].knuckle_incs
		case 6 case 7 case 20 case 21 case 22 set picnum 19957 break
		case 8 case 9 case 10 case 17 case 18 case 19 set picnum 19958 break
		case 11 case 16
		case 12 case 13 case 14 case 15 set picnum 19959 break
		endswitch
		set x 160 set y 175
		geta[player[].i].shade shade
		getsector[THISACTOR].floorpal pal
		rotatesprite x y 36864 0 picnum shade pal 0 0 0 xdim ydim
	}
ends

defstate displayjuicer

	set z 40960
	set x 220
	set y 210
	geta[player[].i].shade shade
	getsector[THISACTOR].floorpal pal
	ifvare pal 4 { addvar shade 10 set pal 0 }
	ifvarg shade 30 set shade 30
	ife pchar 2 set picnum 19675 else
	ife pchar 0 set picnum 17656 else set picnum 17658
	ifge juice_pos 25 { set shade 0 add picnum 1 }
	
	set y2 juice_pos
	ifg y2 20 set y2 20
	sub y2 10
	mul y2 5
	sub y y2
	
	rotatesprite x y z 0 picnum shade pal 0 0 0 xdim ydim

ends


onevent EVENT_DISPLAYACCESS

ifn pchar 0
ifn player[].access_incs 0
{
	set RETURN -1
	ife pchar 2
	{
		set x 200 set y 160
		getp[].access_incs temp
		ifg temp 12 
		{
			set picnum 19678 
			ifg temp 16 add picnum 1 
			ifg temp 20 add picnum 1
			set y2 temp
			sub y2 12
			mul y2 6
			add y y2
		}
		else 
		{
			set picnum WESHOLDCARD
			set y2 9 // 12
			sub y2 temp
			ifl y2 0 set y2 0
			mul y2 6
			add y y2	
		}
		geta[player[].i].shade shade
		getp[].access_spritenum spriteid
		ife spriteid -1 set pal 0 else
		geta[spriteid].pal pal
		rotatesprite x y 40960 0 picnum shade pal 0 0 0 xdim ydim
	}
	else
	ife pchar 1
	{
		set x 120 set y 160
		getp[].access_incs temp
		ifg temp 12 
		{
			set x 90
			set picnum 7778 
			set y2 temp
			sub y2 12
			mul y2 6
			add y y2
		}
		else 
		{
			set picnum SHELLYHOLDCARD
			set y2 9 // 12
			sub y2 temp
			ifl y2 0 set y2 0
			mul y2 6
			add y y2	
		}
		geta[player[].i].shade shade
		getp[].access_spritenum spriteid
		ife spriteid -1 set pal 0 else
		geta[spriteid].pal pal
		rotatesprite x y 73728 0 picnum shade pal 0 0 0 xdim ydim
	}
}

endevent

appendevent EVENT_DISPLAYKNUCKLES

ife pchar 1
	set RETURN -1
	
ife pchar 2
	set RETURN -1

endevent

appendevent EVENT_DISPLAYFIST

ifn pchar 0
{
	set RETURN -1
	// thanks to Mblackwell for fist CON code, adapted from Duke source
	set y player[].look_ang
	div y 9
	abs y
	
	set z 65536
	set z2 player[].fist_incs
	ifg z2 32 set z2 32 
	shiftl z2 6
	add z2 512
	and z2 2047
	sin z2 z2
	sub z z2
	clamp z 40920 90612

	set y2 player[].fist_incs
	ifg y2 32 set y2 32
	add y2 6
	shiftl y2 7
	and y2 2047
	sin y2 y2
	shiftr y2 9
	add y2 194

	set x player[].fist_incs
	ifg x 32 set x 32
	inv x
	add x 222
	shiftl x 16
	add y y2
	shiftl y 16
	
	ife pchar 1 set picnum SHELLYFIST else
	ife pchar 2 set picnum WESFIST
	rotatesprite x y z 0 picnum gs sprite[player[].i].pal 2050 0 0 xdim ydim
}
endevent

appendevent EVENT_DISPLAYKNEE

	ife pchar 2
	{
		getp[].knee_incs temp
		ifn temp 0
		{
			set RETURN -1
			set x 100
			set y 170
			ifl temp 7
			{
				set tempb 7
				sub tempb temp
				mul tempb 10
				add y tempb
			}
			else ifg temp 7
			{
				sub temp 7
				mul temp 12
				add y temp
			}
			
			rotatesprite x y 49152 1024 19466 sprite[player[].i].shade sprite[player[].i].pal 4 0 0 xdim ydim
		}
	}
	else
	ife pchar 1
	{
		getp[].knee_incs temp
		ifn temp 0
		{
			set RETURN -1
			set x 100
			set y 170
			ifl temp 7
			{
				set tempb 7
				sub tempb temp
				mul tempb 10
				add y tempb
			}
			else ifg temp 7
			{
				sub temp 7
				mul temp 12
				add y temp
			}
			ifvarand altcostume 32 set picnum 16844 // bikini foot
			else
			ifvarand altcostume 4 set picnum 16848 // gladiator foot
			else
			ifvarand altcostume 1 set picnum 16846 // edf foot
			else set picnum 7690
			rotatesprite x y 49152 1024 picnum sprite[player[].i].shade sprite[player[].i].pal 4 0 0 xdim ydim
		}
	}
	else
	ife pchar 0
	// ifvarand altcostume 8
	{
		// 16 is DNF, 8 is gladiator, 2 is caribbean
		ifvarand altcostume 16 set picnum 16850 else
		ifvarand altcostume 8 set picnum 15287 else
		ifvarand altcostume 2 set picnum 16852 else
		break
		getp[].knee_incs temp
		ifn temp 0
		{
			set RETURN -1
			set x 100
			set y 170
			ifl temp 7
			{
				set tempb 7
				sub tempb temp
				mul tempb 10
				add y tempb
			}
			else ifg temp 7
			{
				sub temp 7
				mul temp 12
				add y temp
			}
			
			rotatesprite x y 49152 1024 picnum sprite[player[].i].shade sprite[player[].i].pal 4 0 0 xdim ydim
		}
	}
endevent

onevent EVENT_DISPLAYTIP

ifn pchar 0
ifn player[].tipincs 0
{
	// this is a countdown timer so higher numbers are the hand moving UP
	set RETURN -1
	set x 170 
	ife pchar 2 set y 154 else set y 134
	getp[].tipincs temp
	ifg temp 11 
	{
		ife pchar 2 set picnum 19474 else
		set picnum 7921 
		set y2 temp
		sub y2 11
		mul y2 9
		add y y2
		ife pchar 2 ifl y 193 set y 193 else
		ifl y 175 set y 175
	}
	else 
	{
		ife pchar 2 set picnum 19473 else
		set picnum 7922
		set y2 9
		sub y2 temp
		mul y2 11
		add y y2
		add y 40
		ife pchar 1 add y 15
		
	}
	geta[player[].i].shade shade
	getsector[THISACTOR].floorpal pal
	ife pchar 2 set z 49152 else set z 65536
	rotatesprite x y z 0 picnum shade pal 0 0 0 xdim ydim
}

endevent

onevent EVENT_DISPLAYWEAPON

// ifn arrowview -1 { set RETURN -1 break }
// ifn arrowview -1 
// { 
	// set RETURN -1 
	// rotatesprite 160 100 131072 0 13804 0 15 0 0 0 xdim ydim
	// break 
// }
ifn movecam -1 { set RETURN -1 break }
ifn thiscam -1 { set RETURN -1 break }

ifn zombieonplayer -1
ife player[].over_shoulder_on NO
{
	set orientation 1024
	set angvar 0
	ife zombieflip YES
	{
		set angvar 1024
		orvar orientation 4
	}
	ife zombietile TERMGRABTILE set z 32768 else
	set z 65536
	set pal sprite[zombieonplayer].pal
	ifl actorvar[zombieonplayer].burning 0 set pal 1
	ife sprite[zombieonplayer].picnum NEWBEAST ife pal 0 set pal 15
	rotatesprite 160 110 z angvar zombietile sprite[player[].i].shade pal orientation 0 0 xdim ydim
}

ifvarg PLAYERONTHEBIKE 0 
{ 
	state theebikehudstate 
	break 
}

state calc_gun_pos

set temp NO
ife pchar 2 ifvarand wesupgrades[TRIPBOMB_WEAPON] YES set temp YES
ife pchar 1 ifvarand shellyupgrades[TRIPBOMB_WEAPON] YES set temp YES
ife pchar 0 ifvarand dukeupgrades[TRIPBOMB_WEAPON] YES set temp YES
ife temp YES
ife player[].weapon_pos 0
{
	ife WEAPON 8 
	ife player[].curr_weapon 8
	set currentweapon 8
}

ifl sprite[player[].i].xrepeat 40 ifn pchar 0
{
	set RETURN -1
	set x 240
	set y 215
	geta[player[].i].shade shade
	gets[player[].cursectnum].floorpal pal
	set orientation 0
	
	setvarvar temp player[].weapon_sway
	sub temp 1024
	shiftl temp 2
	sin tempb temp
	shiftvarr tempb 10
	set tempc tempb
	mul tempc -1
	add y tempb
	
	ife pchar 2 { set picnum WESFIST set z 57344 } else { set picnum SHELLYFIST set z 65536 }
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	
	set y 215
	set x 80
	add y tempc
	orvar orientation 4
	ife pchar 2 set picnum WESFIST else set picnum SHELLYFIST
	rotatesprite x y 65536 1024 picnum shade pal orientation 0 0 xdim ydim
	break 
}

ife startmode -1 { set RETURN -1 break }

ifn pchar 0 state draw_shieldhit

ifn onturret -1
{
	ife sprite[onturret].picnum EMPTYEDFTURRET
	{
		set shade sprite[player[].i].shade
		ifge actorvar[onturret].countvarb 20	
		set shade -100	
		rotatesprite 160 165 65536 0 turretpic shade sprite[onturret].pal 1024 0 0 xdim ydim
	}
	else
	{
		getav[onturret].countvarb temp
		switch temp
		case 12 case 11 case 8 case 7 case 4 case 3 set picnum 8887 set shade -100 break
		default set picnum 8886 set shade sprite[player[].i].shade break
		endswitch
		rotatesprite 160 165 65536 0 picnum shade sprite[onturret].pal 1024 0 0 xdim ydim
	}
	break
}

ifn player[].access_incs 0 { set RETURN -1 break }

// ifn zombieonplayer -1 ife player[].quick_kick 0 { set RETURN -1 break }

ifg juice_pos 0
{
	ifn babesaved -1
	{
		ifge juice_pos 10 
		{
			set RETURN -1 
			state displayjuicer 
			break
		}
	}
	else
	{
		set RETURN -1 
		state displayjuicer 
		break
	}
}

ifn idleanim 0
{
	ife pchar 2 state wesidle else
	{
		ife pchar 0 set picnum CIGARHAND else set picnum BSHELL_CIGAR
		set orientation 0
		set x 175
		set y 220
		set z 32768
		switch idleanim
			case 11 case 12 case 13
			case 14 case 15 case 16
			case 17 case 18 case 19
			case 20
				set y2 idleanim
				sub y2 11
				mul y2 8
				sub y y2
				
			break
			
			case 21 case 22 case 23
				set y 148
			break
			
			case 24 case 25 case 26
			case 27 case 28 case 29
			case 30 case 31 case 32
				set y 148
				set y2 idleanim
				sub y2 23
				mul y2 5
				add y y2
			break
			
			case 60 case 61 case 62
			case 63 case 64 case 65
			case 66 case 67 case 68
			case 69 case 70
				set y 188
				set y2 idleanim
				sub y2 59
				mul y2 8
				add y y2
			break
			
			default 
				set y 188
			break
		endswitch
		
		ifl idleanim 11 set picnum -1
		
		
		ife pchar 1 set pal shellypal else ife pchar 0 set pal dukepal
		ifn picnum -1
		rotatesprite x y 32768 0 picnum sprite[player[].i].shade pal orientation 0 0 xdim ydim
	}
}

ife pchar 2 // WES
{
	ifn player[].knuckle_incs 0
	{
		set RETURN -1
		state displaywesknuckles
		break
	}
	ifn player[].tipincs 0
	{
		set RETURN -1
		break
	}
	ifn player[].fist_incs 0
	{
		set RETURN -1
		break
	}
	set RETURN -1
	state glidehud
	state draw_wes_kicks
	state draw_wes_weapons
	break
}
else
ife pchar 1 // BOMBSHELL
{
	ifn player[].knuckle_incs 0
	{
		set RETURN -1
		state displayshellyknuckles
		break
	}
	ifn player[].tipincs 0
	{
		set RETURN -1
		break
	}
	ifn player[].fist_incs 0
	{
		set RETURN -1
		break
	}
	ife currentweapon SHRINKER_WEAPON 
	{
		ifvarand shellyupgrades[SHRINKER_WEAPON] 1 nullop else
		{
			state draw_shelly_kicks
			break
		}
	}
	ife currentweapon GROW_WEAPON
	{
		ifvarand shellyupgrades[GROW_WEAPON] 1 nullop else
		{
			state draw_shelly_kicks
			break
		}
	}
	set RETURN -1
	state draw_shelly_kicks
	state draw_shelly_weapons
	break
}

ifn slidekick 0 state displaykicks
else
ifg sidekick 0 state displaykicks
else
ifg jumpkick 0 state displaykicks


ifvare currentweapon SHOTGUN_WEAPON
{
	ifvarand dukeupgrades[SHOTGUN_WEAPON] 4
	nullop else
	ifvarand gotDB 2 nullop else
	{
		
		guniqhudid currentweapon
		switch weaponcount
			
			case 1
			case 2
				set RETURN -1
				// shotgun with big muzzle flash
				state initweapondisplay
				sub x 90
				rotatesprite x y 65536 0 10231 -127 pal 0 0 0 xdim ydim
				
			break
			
			case 18
			case 19
			case 24
			case 25
				set RETURN -1
				// tile 2620 new intermediate cocking frame
				state initweapondisplay
				set picnum 2620
				rotatesprite x y 65536 0 picnum shade pal orientation 0 0 xdim ydim
			break
			
				
		endswitch
		guniqhudid 0
	}
}


ife pchar 0 
{
	ifn player[].quick_kick 0 state draw_duke_quickkick else
	ifn qk_proxy 0 state draw_duke_quickkick
}
// ife pchar 2
// {
	// ifn player[].quick_kick 0 state draw_wes_quickkick else
	// ifn qk_proxy 0 state draw_wes_quickkick
// }

endevent

onevent EVENT_DRAWWEAPON

// ifn arrowview -1 { set RETURN -1 break }

ife startmode -1 { set RETURN -1 break }

ifn movecam -1 { set RETURN -1 break }
ifn thiscam -1 { set RETURN -1 break }


ifn player[].access_incs 0 { set RETURN -1 break }
// ifn zombieonplayer -1 { set RETURN -1 break }
ifvarg PLAYERONTHEBIKE 0 { set RETURN -1 break }
ifn onturret -1 { set RETURN -1 break }

state calc_gun_pos

ife pchar 0
{
	state draw_shieldhit
	
	ifn zombieonplayer -1
	ife player[].over_shoulder_on NO
	{
		set orientation 1024
		set angvar 0
		ife zombieflip YES
		{
			set angvar 1024
			orvar orientation 4
		}
		ife zombietile TERMGRABTILE set z 32768 else
		set z 65536
		set pal sprite[zombieonplayer].pal
		ife sprite[zombieonplayer].picnum NEWBEAST ife pal 0 set pal 15
		rotatesprite 160 110 z angvar zombietile sprite[player[].i].shade pal orientation 0 0 xdim ydim
	}
	
	ife currentweapon KNEE_WEAPON
	{
		ifn saberpos 0
		{
			set RETURN -1
			state drawsaber
		}
		else
		ifn gotsaber NO
		{
			set RETURN -1
			state drawsaber
		}
		else
		ife gotsaw YES
		ife WEAPON0_SHOOTS SAWPROJ
		{
			setvar RETURN -1
			state displaysaw
		}
		else
		ifn weaponcount 0
		{
			set RETURN -1
			set orientation 4096
			geta[player[].i].shade shade
			set pal dukepal
			ifvarg shade 30 set shade 30
			set x 200
			set y 160
			
			ifvarand altcostume 8 set z 57344 else set z 65536
			switch weaponcount
			case 1 case 2 case 3 case 4 
			case 11 case 12 case 13 case 14
				add x 40
				add y 20
				ifvarand altcostume 8 set picnum 15287 else
				ifvarand altcostume 16 set picnum 16850 else
				ifvarand altcostume 2 set picnum 16852 else
				set picnum 16850
				break
			
			case 5 case 6 case 7 case 8 case 9 case 10
				sub x 10
				
				ifvarand altcostume 8 set picnum 15288 else
				ifvarand altcostume 16 { set picnum 16851 sub x 40 add y 40 } else
				ifvarand altcostume 2 { set picnum 16853 sub x 40 add y 40 } else
				{ set picnum 16851 sub x 40 add y 40 } 
				break
			endswitch
			
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
		
		}
	}
	ife currentweapon PISTOL_WEAPON
	{
		ife LASERMODE -4 state displaylaserpistol else
		ife LASERMODE -3 state displaycommgun else
		ifg LASERMODE 2 state displaycommgun else
		ifg LASERMODE 0 state displaylaserpistol
		else 
		ifvarand dukeupgrades[PISTOL_WEAPON] 8
		{
			set RETURN -1
			state draw_glock18
			// ifvarand dukeupgrades[PISTOL_WEAPON] 4 state draw_left_glock18
		}
		else
		ifvarand dukeupgrades[PISTOL_WEAPON] 1
		{
			set RETURN -1
			state old_weapon_setup
			ifle weaponcount 27
			state draw_upgraded_pistol 
			state old_weapon_setup
			ifvarand dukeupgrades[PISTOL_WEAPON] 4
				state draw_left_pistol
		}
		else
		{
			set RETURN -1
			state old_weapon_setup
			// state draw_pistol
			ifle weaponcount 27
			state draw_upgraded_pistol
			state old_weapon_setup
			ifvarand dukeupgrades[PISTOL_WEAPON] 4
				state draw_left_pistol
		}
	}
	ife currentweapon SHOTGUN_WEAPON
	{
		ifvarand dukeupgrades[SHOTGUN_WEAPON] 16
		ifvarand gotDB 2
		{
			set RETURN -1	
			setvar z 40960
			setvar angvar 0
			setvar orientation 0 
			setvar x 165
			setvar y 227
			sub x looking_angSR1
			add y looking_arc
			sub y gun_pos
			add x weapon_xoffset
			geta[player[].i].shade shade
			getsector[THISACTOR].floorpal pal
			ifg pal 0 ifl pal 9 nullop else
			ife shotexpduke 1 set pal 23
			ifvare pal 4 { addvar shade 10 set pal 0 }
			add shade 2
			ifvarg shade 30 set shade 30
			
			ifn weaponcount 0
			{
				set x 180
				set y 162
			}
			ifvarand dukeupgrades[SHOTGUN_WEAPON] 32
			{
				switch weaponcount
				case 0
				set picnum 18671
				break
				case 1 case 2
				case 9 case 10
				set picnum 18671
				set x 180
				set y 162
				break
				case 3 case 4
				set picnum 18672
				add z 14336
				break
				
				case 5 case 6
				set picnum 18671
				add z 8192
				sub y 6
				break
				
				case 7 case 8
				set picnum 18671
				add z 4096
				sub y 3 
				break
				
				case 11 case 12 
				case 39 case 40
				setvar y 142
				subvar x 30
				subvar y 6
				setvar picnum 18673
				break
				
				case 13 case 14
				setvar picnum 18674
				break
				case 15 case 16
				setvar picnum 18675
				break
				case 17 case 18
				setvar picnum 18676
				break
				case 19 case 20
				setvar picnum 18677
				break
				case 21 case 22
				setvar picnum 18678
				break
				case 23 case 24
				setvar picnum 18679
				break
				case 25 case 26
				setvar picnum 18680
				break
				
				case 27 case 28
				setvar picnum 18681
				break
				case 29 case 30
				setvar picnum 18682
				break
				case 31 case 32
				setvar picnum 18683
				break
				case 33 case 34
				setvar picnum 18684
				break
				case 35 case 36
				setvar picnum 18685
				break
				case 37 case 38
				setvar picnum 18686
				break
				
				
				default
				set picnum 18671
				set x 180
				set y 162
				break
				endswitch

			}
			else
			{
				switch weaponcount
				case 0
				set picnum 18671
				break
				case 1 case 2 case 3
				case 10 case 11 case 12
				set picnum 18671
				set x 180
				set y 162
				break
				case 4 case 5
				set picnum 18672
				add z 14336
				break
				
				case 6 case 7
				set picnum 18671
				add z 8192
				sub y 6
				break
				
				case 8 case 9
				set picnum 18671
				add z 4096
				sub y 3 
				break
				
				case 13 case 14 case 15 case 16
				case 56 case 57 case 58 case 59
				setvar y 142
				subvar x 30
				subvar y 6
				setvar picnum 18673
				break
				
				case 17 case 18 case 19
				setvar picnum 18674
				break
				case 20 case 21 case 22
				setvar picnum 18675
				break
				case 23 case 24 case 25
				setvar picnum 18676
				break
				case 26 case 27 case 28
				setvar picnum 18677
				break
				case 29 case 30 case 31
				setvar picnum 18678
				break
				case 32 case 33 case 34
				setvar picnum 18679
				break
				case 35 case 36 case 37
				setvar picnum 18680
				break
				
				case 38 case 39 case 40
				setvar picnum 18681
				break
				case 41 case 42 case 43
				setvar picnum 18682
				break
				case 44 case 45 case 46
				setvar picnum 18683
				break
				case 47 case 48 case 49
				setvar picnum 18684
				break
				case 50 case 51 case 52
				setvar picnum 18685
				break
				case 53 case 54 case 55
				setvar picnum 18686
				break
				
				
				default
				set picnum 18671
				set x 180
				set y 162
				break
				endswitch
			}
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
			
			ifg weaponcount 3
			ifl weaponcount 7
				rotatesprite 170 112 40960 -128 18174 -100 0 1 0 0 xdim ydim
			
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			
			ifg weaponcount 3
			ifl weaponcount 6
				rotatesprite 170 112 40960 -128 18174 -100 0 33 0 0 xdim ydim
				
			guniqhudid 0
			break
		}
		else
		ifvarand dukeupgrades[SHOTGUN_WEAPON] 4
		{	
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
				
			set RETURN -1
			set x 235
			set y 242
			set angvar 0
			set orientation 4096
			sub x looking_angSR1
			add y looking_arc
			sub y gun_pos
			add x weapon_xoffset
			geta[player[].i].shade shade
			getsector[THISACTOR].floorpal pal
			ifvare pal 4 { addvar shade 10 set pal 0 }
			ifvarg shade 30 set shade 30
			set z 40960
			
			set tempb zoomcount abs tempb
			ifg tempb 0 ifl tempb 7
			{
				ifl tempb 4
				{
					sub x 30
					add z 6144
					set picnum 8916
				}
				else
				{
					sub x 60
					add z 10240
					set picnum 8917
				}
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
				guniqhudid 0
				break
			}
			else
			ife zoomin YES
			{
				set picnum 8918
				set z 65536
				set x 160
				set y 204
				ifge weaponcount 3 ifle weaponcount 4
				{
					add picnum 1
					set shade -100
					add z 6144
				}
				else ifge weaponcount 5 ifle weaponcount 6
				{
					add z 3072
				}
				// sub x looking_angSR1
				// add x weapon_xoffset
				
				set y2 looking_arc
				div y2 2
				add y y2
				set y2 gun_pos
				div y2 2
				sub y y2
				
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
				guniqhudid 0
				break
			}
			else
			{
				sub y 10 sub x 15

				switch weaponcount
				case 0 case 1 case 2
					set picnum 8910 // idle
				break
				case 3 case 4 // shooting
				set shade -100
				set x 230
				set y 158
				add x 10
				add y 4
					set picnum 8912
				break
				
				case 5 case 6 case 7
				case 28 case 29 case 30
				set x 230
				set y 158
				add x 5
				add y 2
				
					set picnum 8910
				break
				
				case 8 case 9 case 10
				case 25 case 26 case 27
				set x 230
				set y 158
					add x 12
					sub y 6
					set picnum 8913
				break
				case 11 case 12 case 13
				case 14 case 15
				case 20 case 21 case 22
				case 23 case 24
				set x 230
				set y 158
					add x 18
					sub y 9
					set picnum 8914
				break
				case 16 case 17 case 18
				case 19
				set x 230
				set y 158
					add x 18
					sub y 9
					set picnum 8915
				break
				
				endswitch
				rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
				add picnum 10
				rotatesprite x y z 0 picnum -100 0 orientation 0 0 xdim ydim
				guniqhudid 0
				break
			}
		}
		else
		{
			set RETURN -1
			state old_weapon_setup
			state draw_shotgun
		}
	}
	
	ife currentweapon CHAINGUN_WEAPON
	{
		ifvarand dukeupgrades[CHAINGUN_WEAPON] 8 ifvarand gotshock 2
		{
			set RETURN -1
			state displayshockrifle
			
		}
		else
		ifvarand dukeupgrades[CHAINGUN_WEAPON] 1
		{
			set RETURN -1
			state initweapondisplay
			state displayminigun
		}
		else
		{
			set RETURN -1
			state old_weapon_setup
			state draw_chaingun
		}
	}
	ifvare currentweapon RPG_WEAPON
	{
		set RETURN -1
		state initweapondisplay
		ife nukeselect YES { state draw_nuke break }
		ife nukeselect -2 { state draw_nuke break }
		ifvarand dukeupgrades[RPG_WEAPON] 1 { state draw_newrpg break }
		add x 30
		add y 22
		ifvarl weaponcount 4
		set picnum 10228 
		else 
		{
			ifvarl weaponcount 6
			set picnum 10229
			else ifvarl weaponcount 8
			{
				set picnum 10230
				set shade -100
			}
			else 
			{
				set picnum 10228
				set shade -100
			}
		}

		switch weaponcount
		// case 1 addvar x 3 addvar y 3 break
		// case 2 addvar x 6 addvar y 6 break
		// case 3 addvar x 9 addvar y 9 break
		case 4 addvar x 9 addvar y 9 break
		case 5 addvar x 15 addvar y 15 break
		case 6 addvar x 17 addvar y 17 break
		case 7 addvar x 18 addvar y 18 break
		case 8 addvar x 17 addvar y 17 break
		case 9 addvar x 15 addvar y 15 break
		case 10 addvar x 13 addvar y 13 break
		case 11 addvar x 11 addvar y 11 break
		case 12 addvar x 9 addvar y 9 break
		case 13 addvar x 7 addvar y 7 break
		case 14 addvar x 5 addvar y 5 break
		case 15 addvar x 4 addvar y 4 break
		case 16 addvar x 3 addvar y 3 break
		case 17 addvar x 2 addvar y 2 break
		case 18 addvar x 1 addvar y 1 break
		default break
		endswitch
		
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		rotatesprite x y 32768 0 picnum shade pal orientation 0 0 xdim ydim
		guniqhudid 0

	}
	ife currentweapon HANDBOMB_WEAPON
	{
		ifvarand dukeupgrades[HANDBOMB_WEAPON] 1
		{
			set RETURN -1
			state initshellydisplay
			
			ife weaponcount 0
			{
				set z 65536
				set picnum 13006
				add y 2
			}
			else
			ifl weaponcount 7
			{
				set z 65536
				set picnum 13007
				set y2 weaponcount
				mul y2 12
				add y y2
			}
			else
			{
				// weaponcount 7 to 19 is the hand
				
				add y 20
				set picnum 13005
				switch weaponcount
				case 7 set picnum 13007 add y 50 break
				case 8 set picnum 13007 add y 40 break
				case 9 set picnum 13007 add y 30 break
				case 10 set picnum 13007 add y 20 break
				
				case 11 case 16 sub x 10 add y 10 break
				case 12 case 15 sub x 10 add y 5 break
				case 13 case 14 sub x 10 break
				case 17 add y 20 break
				case 18 add y 30 break
				case 19 add y 40 break
				case 20 add y 50 break
				endswitch
			}
			set TMP_A pchar
			mul TMP_A 10
			add TMP_A 20
			add TMP_A currentweapon
			guniqhudid TMP_A
			rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
			guniqhudid 0
			
			ifvarand gametips 4096
			{
				gametextz NEWFONTSTART 310 176 1161 0 2 528 0 0 xdim ydim 16384
				gametextz NEWFONTSTART 310 182 1162 0 2 528 0 0 xdim ydim 16384
			}
		}
		else
		{
			set RETURN -1
			state old_weapon_setup
			state draw_pipebomb
			
			ifvarand gametips 4096
			{
				gametextz NEWFONTSTART 310 176 1161 0 2 528 0 0 xdim ydim 16384
				gametextz NEWFONTSTART 310 182 1162 0 2 528 0 0 xdim ydim 16384
			}
		}
	}
	ife currentweapon SHRINKER_WEAPON
	{
		ifvarand dukeupgrades[SHRINKER_WEAPON] 1
		{
			set RETURN -1
			state draw_bmfg
		}
		else
		{
			set RETURN -1
			state old_weapon_setup
			state draw_shrinker
		}
	}
	ife currentweapon GROW_WEAPON
	{
		set RETURN -1
		state old_weapon_setup
		state draw_expander
	}
	ife currentweapon DEVISTATOR_WEAPON
	{
		ifvarand gotrailgun 2 
		{
			set RETURN -1
			state initweapondisplay
			state displayrailgun
		}
		else
		// ifvarand dukeupgrades[DEVISTATOR_WEAPON] 1
		{
			set RETURN -1
			state old_weapon_setup
			ifvarand dukeupgrades[DEVISTATOR_WEAPON] 2 set doubletop YES
			state draw_devastator
			set doubletop NO
		}
	}
	ife currentweapon TRIPBOMB_WEAPON
	{
		ifvarand dukeupgrades[TRIPBOMB_WEAPON] 1 { set RETURN -1 state draw_spidermine break }
		// ifn player[].weapon_pos 0
		// {
			set RETURN -1
			state old_weapon_setup
			state draw_tripbomb
		// }
		ifvarand gametips 2048
		{
			gametextz NEWFONTSTART 310 176 1126 0 2 528 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 310 182 1127 0 2 528 0 0 xdim ydim 16384
		}
	}
	ife currentweapon FREEZE_WEAPON
	{
		set RETURN -1
		
		state initweapondisplay
		ifvarand gotplasma 2 { state displayplasmagun break }
		ifvarand dukeupgrades[FREEZE_WEAPON] 1
		{
			state old_weapon_setup
			state draw_freezer_upgrade
			break
		}
		set TMP_A pchar
		mul TMP_A 10
		add TMP_A 20
		add TMP_A currentweapon
		guniqhudid TMP_A
		ifvare weaponcount 0
		{
			set picnum 2548 
			add x 50
			rotatesprite x y 32768 0 picnum shade pal orientation 0 0 xdim ydim
		}
		else 
		{
			set picnum 2550 
			add y 15
			// add x 40
			set shade -100
			ifl weaponcount WEAPON9_TOTALTIME
			{
				getactor[player[].i].pal tempc
				ifvarn tempc 1
				{
					displayrand temp
					andvar temp 3
					add x temp
					add y temp
				}
			}
			set y2 y
			set tempb picnum
			
			subvar y 52 // relative

			set temp weaponcount
			modvar temp 6
			divvar temp 2
			addvar picnum 1
			add picnum temp

			rotatesprite x y 32768 0 picnum shade pal orientation 0 0 xdim ydim
			add x 24
			rotatesprite x y2 32768 0 tempb shade pal orientation 0 0 xdim ydim
		}
		guniqhudid 0
	}
	
	ife currentweapon HANDREMOTE_WEAPON
	{
		set RETURN -1
		state old_weapon_setup
		state draw_detonator // HANDREMOTE_WEAPON:
	}
}

endevent

onevent EVENT_DISPLAYBONUSSCREEN

	
	ifn vrtrip 0
	{
		setuserdef[].level_number 32
		setuserdef[].last_level 32
	}
	else
	ife attmode YES
	ife ATTLEVEL -1
	{
		state next_att_map
		setuserdef[].level_number ATTLEVEL
		setuserdef[].volume_number ATTVOLUME
	}
	ifn FAKEVOLUME 0 setuserdef[].volume_number 0
endevent

onevent EVENT_GETBONUSTILE

ife charsel 4
{
	set RETURN 20470
	setuserdef[].return 1 20471
	setuserdef[].return 2 20472
	setuserdef[].return 3 20473
	setuserdef[].return 4 20474
}
else
ife VOLUME 5 ifle LEVEL 10 
{
	set RETURN 3235
	setuserdef[].return 1 3236
	setuserdef[].return 2 3237
	setuserdef[].return 3 3238
	setuserdef[].return 4 3239
}
else
ife VOLUME 6 ifle LEVEL 8 
{
	set RETURN 3230
	setuserdef[].return 1 3231
	setuserdef[].return 2 3232
	setuserdef[].return 3 3233
	setuserdef[].return 4 3234
}

endevent

// onevent EVENT_ENDLEVELSCREEN


	// ife VOLUME 0 ifge LEVEL 8 ifle LEVEL 18
	// ife FAKEVOLUME 0
	// {
		// setuserdef[].volume_number 1
		// set FAKEVOLUME 1
	// }

// endevent

onevent EVENT_DISPLAYSBAR

set RETURN -1
ife startmode -1 { set RETURN -1 break }
ifn movecam -1 { set RETURN -1 break }


endevent

defstate rescuehud

	ifvarand perks 64
	ifge rescuecharge 50
	ifn gametype -1
	{
		
		getuserdef[].statusbarscale y2
		mul y2 10000
		div y2 65536
		set y 196 // bottom of the screen
		sub y y2
		
		getuserdef[].statusbarscale z
		mul z 20480
		div z 100
		
		set x2 40
		mul x2 z
		div x2 16384
		set x 289
		sub x x2
		set orientation 528
		set pal 0
		ifl rescuecharge RESCUEAMOUNT { orvar orientation 1 set pal 26 }
		ifl rescuecharge 75 orvar orientation 32
		rotatesprite x y z 0 15479 0 pal orientation 0 0 xdim ydim
	}
ends

defstate ammo_icons
	set pal 0
	ifge juice_pos 10
	{
		set picnum 17660
		set B babejuice
		set z2 32768
		break
	}
	switch TMP_A
	case 0 
		ife pchar 2 set picnum -1 else
		ife gotsaw YES ifg sawammo 0 { set picnum SAWAMMO set B sawammo set z2 32768 } else
		ifg gotsaber 0 { set picnum SABERSPRITE set B gotsaber set z2 20480 } else
		set picnum -1
		
	break
	
	case 1 
	    ife LASERMODE 3 { set picnum COMMGUN set B COMMAMMO set z2 20480 } else
		ife LASERMODE -2 { set picnum COMMGUN set B COMMAMMO set z2 20480 } else
		ife LASERMODE YES { set picnum LASERPISTOL set B LASERAMMO set z2 32768 } else
		{
			// ife pchar 0 set picnum AMMO else set picnum 7672
			set picnum AMMO
			set B player[].ammo_amount PISTOL_WEAPON
			set z2 16384
		}
	break
	
	case 2 
	    set picnum SHOTGUNAMMO 
		set B player[].ammo_amount SHOTGUN_WEAPON
		sub B 1
		set z2 32000
		ife pchar 0 ifvarand gotDB 2
		{
			set B dbammo
			set picnum DBAMMO
		}
		else
		ife pchar 1 ifvarand shellyupgrades[SHOTGUN_WEAPON] 4 ifvarand gotbow 2
		{
			set B arrows
			set picnum 13547
			set z2 24576
			// 0 = regular; 1 = burning; 2 = explosive; 3 = multi; 4 = freeze; 5 = spy; 6 = electric
			// 7 = blood; 8 = radioactive
			ife arrowtype 1 set picnum 19273 else
			ife arrowtype 2 set picnum 13549 else
			ife arrowtype 3 set picnum 13548 else
			ife arrowtype 4 set picnum 19274 else
			ife arrowtype 5 set picnum 13550 else
			ife arrowtype 6 set picnum 13551 else
			ife arrowtype 7 set picnum 19272 else
			ife arrowtype 8 set picnum 19275
		}
		else
		ife pchar 2 ifvarand wesupgrades[SHOTGUN_WEAPON] 4 ifvarand gotbow 2
		{
			set B arrows
			div B 2, ife arrows 1 set B 1
			set picnum 13547
			set z2 24576
			// 0 = regular; 1 = burning; 2 = explosive; 3 = multi; 4 = freeze; 5 = spy; 6 = electric
			// 7 = blood; 8 = radioactive
			ife arrowtype 1 set picnum 19273 else
			ife arrowtype 2 set picnum 13549 else
			ife arrowtype 3 set picnum 13548 else
			ife arrowtype 4 set picnum 19274 else
			ife arrowtype 5 set picnum 13550 else
			ife arrowtype 6 set picnum 13551 else
			ife arrowtype 7 set picnum 19272 else
			ife arrowtype 8 set picnum 19275
		}
		else
		{
			set temp NO
			ife pchar 0 ife shotexpduke YES set temp YES
			ife pchar 1 ife shotexpshelly YES set temp YES
			ife temp YES
			{
				set picnum 10393
			}
		}
	break
	
	case 3 
	    set z2 40960
	    ife pchar 0 ifvarand dukeupgrades[CHAINGUN_WEAPON] 8 ifvarand gotshock 2 set picnum 15481 else
		ife pchar 1 
		{
			ifvarand shellyupgrades[CHAINGUN_WEAPON] 8 ifvarand gotshock 2 set picnum 15481 
			else { set picnum 8685 set z2 18432 }
		}
		else
		ife pchar 2
		{ 
			ifvarand wesupgrades[CHAINGUN_WEAPON] 8 ifvarand gotshock 2 set picnum 15481 
			else { set picnum 8685 set z2 18432 }
		} 
		else
	    { set picnum BATTERYAMMO set z2 28000 }
		set B player[].ammo_amount CHAINGUN_WEAPON
		
	break
	
	case 4 ife nukeselect YES set B nukeamount else
		{
		   set B player[].ammo_amount RPG_WEAPON
		   ife pchar 2 ife zoomin NO div B 5
		   ifg player[].ammo_amount RPG_WEAPON 0 ife B 0 set B 1 
		}
		   set picnum RPGAMMO
		   set z2 24000
	break
	
	case 5 case 10 
		ife pchar 2
		{
			set picnum 19919
			set z2 20480
		}
		else
	    ife pchar 0 
		{
			ifvarand dukeupgrades[HANDBOMB_WEAPON] 1 
			{
				set picnum 8103
				set z2 20480
			}
			else
			{
				set picnum HBOMBAMMO
				set z2 28000
			}
			
		}
		else 
		{
			ifvarand shellyupgrades[HANDBOMB_WEAPON] 1 
			{
				set picnum 8104
				set z2 20480
			}
			else
			{
				set picnum 7776
				set z2 28000
			}
		}
		   set B player[].ammo_amount HANDBOMB_WEAPON
		   
	break
	
	case 6 
	    set z2 32000
		ife pchar 2 { set picnum 8685 set z2 18432 } else
		set picnum CRYSTALAMMO
		set B player[].ammo_amount SHRINKER_WEAPON
		ife pchar 1 ifvarand shellyupgrades[SHRINKER_WEAPON] 1 
		{ 
			set picnum 9979 div B 5 
			set temp player[].ammo_amount SHRINKER_WEAPON
			modvar temp 5 ifn temp 0 add B 1
		} 
		else
		ife pchar 0 ifvarand dukeupgrades[SHRINKER_WEAPON] 1 
		{ 
			set picnum 9979 div B 5 
			set temp player[].ammo_amount SHRINKER_WEAPON
			modvar temp 5 ifn temp 0 add B 1
		} 
		
	break
	
	case 7
		ifvarand gotrailgun 2 
		{
			ife WEAPON7_SHOOTS BARRETPROJ { set picnum 8119 set z2 32768 }
			else
			{ set picnum RAILGUNAMMO set z2 41000 }
			
		}
		else { set picnum DEVISTATORAMMO set z2 41000 }
		set B player[].ammo_amount DEVISTATOR_WEAPON
		
	break
	
	case 8
		set B player[].ammo_amount TRIPBOMB_WEAPON
		ife pchar 2 ifvarand wesupgrades[TRIPBOMB_WEAPON] 1
		{
			set picnum SPIDERMINESPRITE
			set z2 32768
		}
		else
		ife pchar 0 ifvarand dukeupgrades[TRIPBOMB_WEAPON] 1
		{
			set picnum SPIDERMINESPRITE
			set z2 32768
		}
		else
		ife pchar 1 ifvarand shellyupgrades[TRIPBOMB_WEAPON] 1
		{
			set picnum SPIDERMINESPRITE
			set z2 32768
		}
		else
		{
			set picnum TRIPBOMBSPRITE
			set z2 49152 
		}
		
	break
	
	case 9 
		ifvarand gotplasma 2 { set picnum PLASMAAMMO set z2 32000 }
		else
		{
			ife pchar 0 { set picnum FREEZEAMMO set z2 40000 }  else
			ife pchar 2 { set picnum 19930 set z2 9216 } else
			{ set picnum 7676 set z2 30000 }
			
		}
		set B player[].ammo_amount FREEZE_WEAPON
	break
	
	case 11 
		ife pchar 2 { set picnum 8685 set z2 18432 } else
		{ set picnum GROWAMMO set z2 32768 }
		set B player[].ammo_amount GROW_WEAPON
	break 
		
	endswitch
ends

defstate inven_icons

	switch TMP_A
	case 1	
		set picnum FIRSTAID_ICON
		ifvarand inven_upgrades 1 set picnum 8003
		break	
	case 2
		set picnum 18829 // STEROIDS_ICON
		break
	case 3
	    ife pchar 2 set picnum 19896 else
		set picnum HOLODUKE_ICON
		break
	case 4
		set picnum JETPACK_ICON
		break
	case 5
		set picnum HEAT_ICON
		ifvarand inven_upgrades 2 set picnum 8001
		break
	case 6
		set temp selfshrink
			ifg player[].scuba_amount 1
			ifg player[].cursectnum -1
			ife sector[player[].cursectnum].lotag 2
				set temp NO	
		ife temp NO
		set picnum AIRTANK_ICON
		else
		set picnum 18830
		break
	case 7
		set picnum BOOT_ICON
		ifvarand inven_upgrades 8 set picnum 8002
		break
	case 8
		set picnum 16639
	break
	default set picnum -1
	break
	endswitch

ends

defstate wes_icons
	switch TMP_A
	case 0 
		
		ifg gotsaber 0 { set picnum 19912 set z 12288 set tempe 12288 ife gun_name SABERSPRITE { add z 4096 set shade 0 } }
	break
	
	case 1 ife player[].gotweapon PISTOL_WEAPON YES ifg player[].ammo_amount PISTOL_WEAPON 0 
	{ 
		set picnum 19681 
		set z 20480 set tempe 20480 
	} 
	
	ife gun_name FIRSTGUNSPRITE { add z 10240 set shade 0 } 
	break
	
	case 2 ifg LASERAMMO 0 set picnum LASERPISTOL ife gun_name LASERPISTOL { add z 10240 set shade 0 } break
	
	case 3 
		ife player[].gotweapon SHOTGUN_WEAPON YES ifg player[].ammo_amount SHOTGUN_WEAPON 1 
		{
			set picnum 19689 
			set z 14336 set tempe 14336
			ife gun_name SHOTGUNSPRITE 
			{ add z 8192 set shade 0 } 
		}
	break
	
	case 4 ife player[].gotweapon CHAINGUN_WEAPON YES ifg player[].ammo_amount CHAINGUN_WEAPON 0 
		{
			set picnum 19673 
			
			set z 18432 set tempe 18432 
			ifvarand gotshock 2
			{
				set picnum SHOCKRIFLESPRITE set z 10240 set tempe 10240 
			}
			ife gun_name CHAINGUNSPRITE { add z 6144 set shade 0 }
		}
	break
	
	case 5 
		ife player[].gotweapon RPG_WEAPON YES ifg player[].ammo_amount RPG_WEAPON 0 
		{
			set picnum 19696
			set z 10240 set tempe 10240
			ife gun_name RPGSPRITE { add z 3072 set shade 0 } 
		}
	break
	
	case 6 ifg player[].ammo_amount HANDBOMB_WEAPON 0 set picnum 19919
	set z 10240 set tempe 10240 
	ife gun_name HEAVYHBOMB { add z 3072 set shade 0 } 
	break
	
	case 7 
	
		ife player[].gotweapon SHRINKER_WEAPON YES ifg player[].ammo_amount SHRINKER_WEAPON 0 
		{
			set picnum 19899 set z 12288 set tempe 12288 
			set pal 21
		}
		
		ife gun_name SHRINKERSPRITE { add z 3072 set shade 0 }
		
	break
	
	case 8 

		ife player[].gotweapon GROW_WEAPON YES ifg player[].ammo_amount GROW_WEAPON 0
		{
			set picnum 19899
			set z 12288 set tempe 12288
			set pal 22
		}
	
		ife gun_name GROWSPRITEICON { add z 3072 set shade 0 }
	 
	break
	
	case 9 // devastator
		ifvarand gotrailgun 2 set temp railgunammo
		else set temp player[].ammo_amount DEVISTATOR_WEAPON
		
		ife player[].gotweapon DEVISTATOR_WEAPON YES ifg temp 0 
		{
			set picnum DEVISTATORSPRITE set z 16384 set tempe 16384 ife gun_name DEVISTATORSPRITE { add z 10240 set shade 0 } 
		}
			
		break
	
	case 10 // railgun
		set temp NO 
		ifvarand gotrailgun 2 { ifg player[].ammo_amount DEVISTATOR_WEAPON 0 set temp YES }
		else
		ifvarand gotrailgun 1 { ifg railgunammo 0 set temp YES }
		ife temp YES 
		{ 
			set picnum RAILGUNSPRITE set z 16384 set tempe 16384 
			ifvarand wesupgrades[DEVISTATOR_WEAPON] 4 { set picnum 8186 set z 12288 set tempe 12288  }
			ife gun_name RAILGUNSPRITE { add z 6144 set shade 0 } 
		}
	break
	
	case 11
		ifg player[].ammo_amount TRIPBOMB_WEAPON 0 
		{
			set picnum TRIPBOMBSPRITE { set z 20480 set tempe 20480 }
			ifvarand wesupgrades[TRIPBOMB_WEAPON] 1 { set picnum SPIDERMINESPRITE set z 16384 set tempe 16384 }
			ife gun_name TRIPBOMBSPRITE { add z 10240 set shade 0 } 
		}
		
	break
	
	case 12
		ifvarand gotplasma 2 set temp plasmammo
		else set temp player[].ammo_amount FREEZE_WEAPON
		ife player[].gotweapon FREEZE_WEAPON YES ifg temp 0 
		{
			set picnum 19931 
			set z 10240 set tempe 10240
			ife gun_name FREEZESPRITE { add z 4096 set shade 0 } 
		}
	break 
	
	case 13
		set temp NO 
		ifvarand gotplasma 2 { ifg player[].ammo_amount 9 0 set temp YES }
		else
		ifvarand gotplasma 1 { ifg plasmammo 0 set temp YES }
		ife temp YES { set picnum PLASMASPRITE set z 16384 set tempe 16384 ife gun_name PLASMASPRITE { add z 8192 set shade 0 } } 
	break
		
	endswitch
ends

defstate duke_icons
	switch TMP_A
	case 0 
		ife gotsaw YES ifg sawammo 0 { set picnum 7641 set z 16384 set tempe 16384 ife gun_name SAWSPRITE { add z 8192 set shade 0 } }
		ifg gotsaber 0 { set picnum SABERSPRITE set z 12288 set tempe 12288 ife gun_name SABERSPRITE { add z 4096 set shade 0 } }
	break
	
	case 1 ife player[].gotweapon PISTOL_WEAPON YES ifg player[].ammo_amount PISTOL_WEAPON 0 
	{ 
		set picnum FIRSTGUNSPRITE 
		ife WEAPON1_FIRESOUND GLOCKFIRE
			set picnum GLOCKSPRITE
		set z 20480 set tempe 20480 
	} 
	
	ife gun_name FIRSTGUNSPRITE { add z 10240 set shade 0 } 
	break
	
	case 2 ifg LASERAMMO 0 set picnum LASERPISTOL ife gun_name LASERPISTOL { add z 10240 set shade 0 } break
	
	case 3 
		ife player[].gotweapon SHOTGUN_WEAPON YES ifg player[].ammo_amount SHOTGUN_WEAPON 1 
		{
			set picnum SHOTGUNSPRITE 
			ifvarand gotDB 2 { set picnum DBSPRITE set z 14336 set tempe 14336 } else
			ifvarand dukeupgrades[SHOTGUN_WEAPON] 4 { set picnum ATOMICSHOTTY set z 16384 set tempe 16384 }
			else
			{ set z 14336 set tempe 14336 }
			ife gun_name SHOTGUNSPRITE 
			{ add z 8192 set shade 0 } 
		}
	break
	
	case 4 ife player[].gotweapon CHAINGUN_WEAPON YES ifg player[].ammo_amount CHAINGUN_WEAPON 0 
		{
			set picnum CHAINGUNSPRITE 
			ifvarand dukeupgrades[CHAINGUN_WEAPON] 1 set picnum 8958
			set z 16384 set tempe 16384 
			ifvarand gotshock 2
			{
				set picnum SHOCKRIFLESPRITE set z 10240 set tempe 10240 
			}
			ife gun_name CHAINGUNSPRITE { add z 6144 set shade 0 }
		}
	break
	
	case 5 
		ife player[].gotweapon RPG_WEAPON YES ifg player[].ammo_amount RPG_WEAPON 0 
		{
			set picnum RPGSPRITE 
			ifvarand dukeupgrades[RPG_WEAPON] 1 set picnum 9965
			ife gun_name RPGSPRITE { add z 5120 set shade 0 } 
		}
	break
	
	case 6 ifg player[].ammo_amount HANDBOMB_WEAPON 0 set picnum HBOMBAMMO 
	set z 15360 set tempe 15360 
	ife gun_name HEAVYHBOMB { add z 5120 set shade 0 } 
	break
	
	case 7 
	
		ife player[].gotweapon SHRINKER_WEAPON YES ifg player[].ammo_amount SHRINKER_WEAPON 0 
		{
			set picnum SHRINKERSPRITE set z 12288 set tempe 12288 
			ifvarand dukeupgrades[SHRINKER_WEAPON] 1 set picnum BMFGSPRITE
		}
		
		ife gun_name SHRINKERSPRITE { add z 4096 set shade 0 }
		
	break
	
	case 8 

		ife player[].gotweapon GROW_WEAPON YES ifg player[].ammo_amount GROW_WEAPON 0
		{
			set picnum GROWSPRITEICON
			set z 12288 set tempe 12288
		}
	
		ife gun_name GROWSPRITEICON { add z 4096 set shade 0 }
	 
	break
	
	case 9 // devastator
		ifvarand gotrailgun 2 set temp railgunammo
		else set temp player[].ammo_amount DEVISTATOR_WEAPON
		
		ife player[].gotweapon DEVISTATOR_WEAPON YES ifg temp 0 
		{
			set picnum DEVISTATORSPRITE set z 16384 set tempe 16384 ife gun_name DEVISTATORSPRITE { add z 10240 set shade 0 } 
		}
			
		break
	
	case 10 // railgun
		set temp NO 
		ifvarand gotrailgun 2 { ifg player[].ammo_amount DEVISTATOR_WEAPON 0 set temp YES }
		else
		ifvarand gotrailgun 1 { ifg railgunammo 0 set temp YES }
		ife temp YES 
		{ 
			set picnum RAILGUNSPRITE set z 16384 set tempe 16384 
			ifvarand dukeupgrades[DEVISTATOR_WEAPON] 4 { set picnum 8186 set z 12288 set tempe 12288  }
			ife gun_name RAILGUNSPRITE { add z 6144 set shade 0 } 
		}
	break
	
	case 11
		ifg player[].ammo_amount TRIPBOMB_WEAPON 0 
		{
			set picnum TRIPBOMBSPRITE { set z 20480 set tempe 20480 }
			ifvarand dukeupgrades[TRIPBOMB_WEAPON] 1 { set picnum SPIDERMINESPRITE set z 16384 set tempe 16384 }
			ife gun_name TRIPBOMBSPRITE { add z 10240 set shade 0 } 
		}
		
	break
	
	case 12
		ifvarand gotplasma 2 set temp plasmammo
		else set temp player[].ammo_amount FREEZE_WEAPON
		ife player[].gotweapon FREEZE_WEAPON YES ifg temp 0 
		{
			set picnum FREEZESPRITE 
			ifvarand dukeupgrades[FREEZE_WEAPON] 1 set picnum 8956
			set z 16384 set tempe 16384
			ife gun_name FREEZESPRITE { add z 6144 set shade 0 } 
		}
	break 
	
	case 13
		set temp NO 
		ifvarand gotplasma 2 { ifg player[].ammo_amount 9 0 set temp YES }
		else
		ifvarand gotplasma 1 { ifg plasmammo 0 set temp YES }
		ife temp YES { set picnum PLASMASPRITE set z 16384 set tempe 16384 ife gun_name PLASMASPRITE { add z 8192 set shade 0 } } 
	break
		
	endswitch
ends

state shelly_icons
	switch TMP_A
	case 0 
		ife gotsaw YES ifg sawammo 0 { set picnum SAWSPRITE set z 16384 set tempe 16384 ife gun_name SAWSPRITE { add z 8192 set shade 0 } }
		ifg gotsaber 0 { set picnum SABERSPRITE set z 12288 set tempe 12288 ife gun_name SABERSPRITE { add z 4096 set shade 0 } }
		break
	
	case 1 
		ife player[].gotweapon PISTOL_WEAPON YES ifg player[].ammo_amount PISTOL_WEAPON 0 
		{ 
			set picnum SHELLYPISTOL set z 20480 set tempe 20480 
			ife WEAPON1_FIRESOUND GLOCKFIRE
				set picnum GLOCKSPRITE
		} 
		ife gun_name FIRSTGUNSPRITE { add z 10240 set shade 0 } 
	break
	
	case 2 ifg LASERAMMO 0 set picnum LASERPISTOL ife gun_name LASERPISTOL { add z 10240 set shade 0 } break
	
	case 3 
		ife player[].gotweapon SHOTGUN_WEAPON YES ifg player[].ammo_amount SHOTGUN_WEAPON 1 
		{
			set picnum 7707 
			ifvarand shellyupgrades[SHOTGUN_WEAPON] 4 ifvarand gotbow 2 { set picnum BOWSPRITE set z 14336 set tempe 14336 }
			else
			{ set z 16384 set tempe 16384 }
			ife gun_name SHOTGUNSPRITE { add z 8192 set shade 0 } 
		}
		
	break
	
	case 4 
		ife player[].gotweapon CHAINGUN_WEAPON YES ifg player[].ammo_amount CHAINGUN_WEAPON 0 
		{
			set picnum 7709 
			ifvarand shellyupgrades[CHAINGUN_WEAPON] 1 set picnum 8957
			set z 16384 set tempe 16384 
			ifvarand gotshock 2
			{
				set picnum SHOCKRIFLESPRITE set z 10240 set tempe 10240 
			}
			ife gun_name CHAINGUNSPRITE { add z 6144 set shade 0 } 
		}
	break
	
	case 5 
		ife player[].gotweapon RPG_WEAPON YES ifg player[].ammo_amount RPG_WEAPON 0 
		{
			set picnum 7714 
			ifvarand shellyupgrades[RPG_WEAPON] 1 set picnum 9965
			set z 16384 set tempe 16384 ife gun_name RPGSPRITE { add z 5120 set shade 0 } 
		}
	break
	
	case 6 ifg player[].ammo_amount HANDBOMB_WEAPON 0 set picnum 7776 set z 12288 set tempe 12288 ife gun_name HEAVYHBOMB { add z 5120 set shade 0 } break
	
	case 7 
	
		ife player[].gotweapon SHRINKER_WEAPON YES ifg player[].ammo_amount SHRINKER_WEAPON 0 
		{
			set picnum SHRINKERSPRITE set z 12288 set tempe 12288 
			ifvarand shellyupgrades[SHRINKER_WEAPON] 1 set picnum BMFGSPRITE
		}
	
		ife gun_name SHRINKERSPRITE { add z 4096 set shade 0 }
	 
	 break
	 
	 case 8
	
		ife player[].gotweapon GROW_WEAPON YES ifg player[].ammo_amount GROW_WEAPON 0
		{
			set picnum GROWSPRITEICON
			set z 12288 set tempe 12288
		}
	
		ife gun_name GROWSPRITEICON { add z 4096 set shade 0 }
	 
	 break
	
	case 9 // devistator
		ifvarand gotrailgun 2 set temp railgunammo
		else set temp player[].ammo_amount DEVISTATOR_WEAPON
		ife player[].gotweapon DEVISTATOR_WEAPON YES ifg temp 0
		{
			set picnum 7790 set z 16384 set tempe 16384 ife gun_name DEVISTATORSPRITE { add z 2048 set shade 0 } 
		}
		break
	
	case 10 // railgun
		set temp NO 
		ifvarand gotrailgun 2 { ifg player[].ammo_amount DEVISTATOR_WEAPON 0 set temp YES }
		else
		ifvarand gotrailgun 1 { ifg railgunammo 0 set temp YES }
		ife temp YES 
		{ 
			set picnum RAILGUNSPRITE set z 16384 set tempe 16384 
			ifvarand shellyupgrades[DEVISTATOR_WEAPON] 4 { set picnum 8186 set z 12288 set tempe 12288  }
			ife gun_name RAILGUNSPRITE { add z 6144 set shade 0 } 
		}
		
	break
	
	case 11 
		ifg player[].ammo_amount TRIPBOMB_WEAPON 0 
		{
			set picnum TRIPBOMBSPRITE { set z 20480 set tempe 20480 }
			ifvarand shellyupgrades[TRIPBOMB_WEAPON] 1 { set picnum SPIDERMINESPRITE set z 16384 set tempe 16384 }
			ife gun_name TRIPBOMBSPRITE { add z 10240 set shade 0 } 
		}
		
	break
	
	case 12 ife player[].gotweapon FREEZE_WEAPON YES ifg player[].ammo_amount FREEZE_WEAPON 0
		{
			set picnum 7791 
			set z 16384 set tempe 16384
			ife gun_name FREEZESPRITE { add z 8192 set shade 0 } 
		}
	break 
	
	case 13
		set temp NO 
		ifvarand gotplasma 2 { ifg player[].ammo_amount 9 0 set temp YES }
		else
		ifvarand gotplasma 1 { ifg plasmammo 0 set temp YES }
		ife temp YES { set picnum PLASMASPRITE set z 16384 set tempe 16384 ife gun_name PLASMASPRITE { add z 8192 set shade 0 } } break
		
	endswitch
ends

state displayweapchange

ifg gun_nametime 0 // max 70
{
	set TMP_A 0
	
	ifl gun_nametime 15 { set x2 gun_nametime mul x2 2 }
	else
	{
	set x2 70 sub x2 gun_nametime
	mul x2 2 
	ifg x2 30 set x2 30
	}
	set x -27
	add x x2
	set B x
	sub B 37
	
	set y 5
	

	whilevarn TMP_A 14
	{
		set picnum 0
		set angvar 0
		// set shade 12
		set pal 0
		set z 20480
		set tempe 20480
		
		ife pchar 2 state wes_icons else
		ife pchar 0 state duke_icons else
		state shelly_icons
		
		ifn picnum 0
		{
			// rotatesprite B y 65536 0 10838 0 0 256 0 0 xdim ydim
			rotatesprite B y 65536 0 10838 0 0 272 0 0 xdim ydim
			set z2 z  
			div z2 8
			add z2 z
			set x2 x add x2 2 set y2 y add y2 1 
			// rotatesprite x2 y2 z2 angvar picnum shade 4 256 0 0 xdim ydim
			rotatesprite x2 y2 z2 angvar picnum shade 4 272 0 0 xdim ydim
			ifg z tempe ifvarand player[].player_par 4 { set pal 121 set shade 0 }
			// rotatesprite x y z angvar picnum shade pal 256 0 0 xdim ydim
			rotatesprite x y z angvar picnum shade pal 272 0 0 xdim ydim
			add y 10
		}
		add TMP_A 1
		
	}
}
ends

defstate wesreplacedisplay

	set orientation 1024
	
	rotatesprite 160 100 32768 0 19298 0 0 orientation 0 0 xdim ydim
	
	set y 150
	set orientation 0
	set temp 10
	whilevarn temp 0
	{
		rotatesprite 160 y 81920 0 BLACKBAR 0 0 0 0 0 xdim ydim
		sub y 12
		sub temp 1
	}
	set temp 10
	set y 150
	set B 1264
	add B 9
	set TMP_A 10
	
	whilevarn TMP_A 0
	{
		set z 32768
		ifge B 1269
		set shade 5 else set shade 0
		ife B 1269 ifge cursory 98 ifle cursory 107 // replace duke
		{
			add z 8192
			state shadepulse
		}
		ife B 1271 ifge cursory 122 ifle cursory 131 // replace bombshell
		{
			add z 8192
			state shadepulse
		}
		ife B 1273 ifge cursory 146 ifle cursory 155  // keep both
		{
			add z 8192
			state shadepulse
		}
		gametextz NEWFONTSTART 320 y B shade 0 orientation 0 0 xdim ydim z
		sub y 12
		sub B 1
		sub TMP_A 1
	}
	
	rotatesprite cursorx cursory 65536 0 ATOMICHEALTH 0 0 orientation 0 0 xdim ydim
	set RETURN -1

ends

defstate charchoicedisplay
	set orientation 1024
	
	rotatesprite 160 100 32768 0 19298 0 0 orientation 0 0 xdim ydim
	
	set orientation 0
	
	// gametext 2908 320 70 157 0 0 orientation 0 0 xdim ydim
	
	// rotatesprite 0 100 32768 0 19293 0 0 orientation 0 0 xdim ydim
	// rotatesprite 80 100 32768 0 19294 0 0 orientation 0 0 xdim ydim
	// rotatesprite 160 100 32768 0 19295 0 0 orientation 0 0 xdim ydim
	// rotatesprite 240 100 32768 0 19296 0 0 orientation 0 0 xdim ydim
	// rotatesprite 320 100 32768 0 19297 0 0 orientation 0 0 xdim ydim
	
	ifvarand charsel 16 rotatesprite 40 110 24576 0 19288 0 0 orientation 0 0 xdim ydim 
	else
	rotatesprite 40 110 24576 0 19293 0 0 33 0 0 xdim ydim // deanova
	
	ifg player[].fta 0
	ife player[].ftq 1212
	screentext NEWFONTSTART 0 10485760 10240 0 0 1212 0 12 2064 0 8 32 16 32 160 0 0 xdim ydim
	
	ifvarand charsel 4 rotatesprite 100 110 24576 0 19289 0 0 orientation 0 0 xdim ydim 
	else
	rotatesprite 100 110 24576 0 19294 0 0 orientation 0 0 xdim ydim // wes
	
	ifvarand charlocked 4 nullop else
		rotatesprite 100 110 24576 0 20476 0 0 orientation 0 0 xdim ydim // wes locked
	
	ifvarand charsel 1 rotatesprite 160 110 24576 0 19290 0 0 orientation 0 0 xdim ydim
	else
	rotatesprite 160 110 24576 0 19295 0 0 orientation 0 0 xdim ydim // duke
	
	ifvarand charsel 2 rotatesprite 220 110 24576 0 19291 0 0 orientation 0 0 xdim ydim
	else
	rotatesprite 220 110 24576 0 19296 0 0 orientation 0 0 xdim ydim // bombshell
	
	ifvarand charsel 8 rotatesprite 280 110 24576 0 19292 0 0 orientation 0 0 xdim ydim
	else
	rotatesprite 280 110 24576 0 19297 0 0 33 0 0 xdim ydim // mando
	
	ifg player[].fta 0
	ife player[].ftq 1213
	screentext NEWFONTSTART 15728640 10485760 10240 0 0 1213 0 12 2064 0 8 32 16 32 160 0 0 xdim ydim
	
	ifg player[].fta 0
	ife player[].ftq 1214
	screentext NEWFONTSTART 7864320 6553600 16384 0 0 1214 0 12 2064 0 8 32 16 32 160 0 0 xdim ydim
	
	// ifg cursorx 99 ifl cursorx 225
	// ifg cursory 140 ifl cursory 202
	// {
		// set shade 0
		// rotatesprite 160 165 25600 0 7920 shade 33 orientation 0 0 xdim ydim
	// }
	// else set shade 7
	
	// rotatesprite 160 165 24576 0 7920 shade 0 orientation 0 0 xdim ydim
	
	// ifg cursorx 18 ifl cursorx 143
	// ifg cursory 80 ifl cursory 135
	// {
		// set shade 0
		// rotatesprite 80 105 25600 0 7918 shade 33 orientation 0 0 xdim ydim
	// }
	// else set shade 7
	
	// rotatesprite 80 105 24576 0 7918 shade 0 orientation 0 0 xdim ydim
	
	// ifg cursorx 179 ifl cursorx 304
	// ifg cursory 80 ifl cursory 135
	// {
		// set shade 0
		// rotatesprite 240 105 25600 0 7919 shade 33 orientation 0 0 xdim ydim
	// }
	// else set shade 7
	
	// rotatesprite 240 105 24576 0 7919 shade 0 orientation 0 0 xdim ydim
	
	ife PROGRESSION YES set picnum 8080 else set picnum 8081
	
	set TMP_A -1
	
	ifg cursorx 0 ifl cursorx 45
	ifg cursory 20 ifl cursory 50
	{
		// old y value 184
		// old x value 29
		rotatesprite 19 39 16384 0 picnum 0 33 orientation 0 0 xdim ydim
		set TMP_A 2860
	}
	
	rotatesprite 19 39 15360 0 picnum 0 0 orientation 0 0 xdim ydim
	
	
	ifg cursorx 240
	ifg cursory 20 ifl cursory 50
		rotatesprite 280 39 16384 0 8082 0 33 orientation 0 0 xdim ydim
	
	rotatesprite 280 39 15360 0 8082 0 0 orientation 0 0 xdim ydim
	
	// cursor on Deanova
	ifge cursorx 15 ifle cursorx 54
		ifge cursory 60 ifle cursory 160
	{
		screentext NEWFONTSTART 2949120 12058624 24576 0 0 1216 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
	}
	// cursor on Wes
	ifge cursorx 80 ifle cursorx 118
		ifge cursory 60 ifle cursory 160
	{
		screentext NEWFONTSTART 2949120 12058624 24576 0 0 1215 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		set y 10878976
		set TMP_B 1227
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
	}
	
	// cursor on Duke Nukem
	ifge cursorx 145 ifle cursorx 185
		ifge cursory 60 ifle cursory 160
	{
		screentext NEWFONTSTART 2949120 12058624 24576 0 0 281 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		set y 10878976
		set TMP_B 1222
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
	}
	// cursor on Bombshell
	ifge cursorx 202 ifle cursorx 238
		ifge cursory 60 ifle cursory 160
	{
	
		screentext NEWFONTSTART 2949120 12058624 24576 0 0 282 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		set y 10878976
		set TMP_B 1217
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
		add y 458752
		add TMP_B 1
		screentext NEWFONTSTART 10485760 y 16384 0 0 TMP_B 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
	}
	
	// cursor on Mando
	ifge cursorx 255 ifle cursorx 311
		ifge cursory 60 ifle cursory 160
	{
		screentext NEWFONTSTART 2949120 12058624 24576 0 0 717 0 12 3072 0 8 32 16 32 162 0 0 xdim ydim
	}
	
	ifn TMP_A -1
	{
		set helpx cursorx
		set helpy cursory
		add helpx 20
		ifg helpx 300 sub helpx 120
		sub helpy 10
		ifg helpy 160 set helpy 160
		rotatesprite helpx helpy 32768 0 INFOBACK 0 0 16 0 0 xdim ydim
		
		add helpy 5
		add helpx 5
		mul helpx 65536
		mul helpy 65536
		set z 10240
	
		set TMP_B 0
		
		whilevarn TMP_B 8
		{
			screentext NEWFONTSTART helpx helpy z 0 0 TMP_A 0 12 2064 0 8 32 16 32 160 0 0 xdim ydim
			add TMP_A 1
			add TMP_B 1
			add helpy 327680
			qstrlen temp TMP_A
			ifl temp 3 set TMP_B 8
		}
	}
	
	rotatesprite cursorx cursory 65536 0 ATOMICHEALTH 0 0 orientation 0 0 xdim ydim
	set RETURN -1
ends

gamevar newhud YES 0

state shownewhud

	set RETURN -1
	setuserdef[].screen_size 4 // 0
	setuserdef[].althud YES 
	getuserdef[].statusbarscale z
	mul z 65536
	div z 125
	set x 2
	mul x z
	shiftr x 15
	// div x 32768
	
	getuserdef[].statusbarscale y2
	mul y2 10000
	div y2 65536
	set y 196 // bottom of the screen
	sub y y2

	set orientation 305
	set x2 x add x2 1
	rotatesprite x2 y z 0 COLA 0 4 orientation 0 0 xdim ydim
	set orientation 272
	rotatesprite x y z 0 COLA 0 0 orientation 0 0 xdim ydim
	
	ifg iframes 0
	{
		set z2 z
		div z2 3
		ifg iframehit 0 set pal 6 else set pal 0
		rotatesprite x y z2 0 ESHIELDICON 5 pal 273 0 0 xdim ydim
	}
	
	getuserdef[].statusbarscale z
	mul z 65536
	div z 175
	
	set x 28
	mul x z
	div x 14336
	ife es_type 0 
	{ 
		set picnum SHIELD 
		set shade 0 
		set pal 0 
	} 
	else
	{
		set picnum ESHIELDICON
		ife novareset YES
		{
			ife novatype 1 set picnum 8955 else
			ife novatype 2 set picnum 8954 else
			ife novatype 3 set picnum 8952
		}
		ifl es_hp 1 set shade 18 else
		set shade 8
		set pal 0
		ife player[].player_par es_chargepal set shade 0 
		mul z 3 div z 8
	}
	rotatesprite x y z 0 picnum shade pal orientation 0 0 xdim ydim
	
	ife gametype 0
	ifn es_type 0
	{
		set pal 1
		set tempb es_batterymax
		
		set tempc es_battery
		mulvar tempc 25 // 100
		mulvar tempc 65536
		ifvare tempb 0 break
		divvarvar tempc tempb

		setvar z 9216 // 16384
		setvar x 983040 //   15 
		setvar x2 2555904 // 39
		addvarvar tempc x

		setvar tempd 0
		ifvarvarg tempc x setvar orientation 0 else setvar orientation 33
		rotatesprite16 950272 12976128 z 0 16501 0 pal orientation 0 0 xdim ydim
		whilevarn tempd 1
		{
			ifvarvarg x tempc { setvar orientation 33 setvar pal 12 }
			ifvarvarg x x2 setvar tempd 1
			else
			rotatesprite16 x 12976128 z 0 16502 0 pal orientation 0 0 xdim ydim
			addvar x 32768
			break
		}
		subvar x 32768
		rotatesprite16 x 12976128 z 0 16503 0 pal orientation 0 0 xdim ydim
	}
	
	getuserdef[].statusbarscale z
	mul z 65536
	div z 100
	
	getp[].inven_icon TMP_A
	ifn TMP_A 0
	{
		state inven_icons
		set x 46
		mul x z
		div x 22500
		set orientation 272
		ifge picnum 8000 shiftr z 1
		
		ifn invswitch 0
		{
			set temp invswitch
			mul temp 10
			add temp 100
			mul z temp
			div z 100
		}
		
		rotatesprite x y z 0 picnum 0 0 orientation 0 0 xdim ydim
		
		getuserdef[].statusbarscale z
		mul z 65536
		div z 100
		
		getuserdef[].statusbarscale y2
		mul y2 5120
		div y2 65536
		set y 198
		sub y y2
		
		ife player[].inven_icon 1 // firstaid
		{
			set B player[].firstaid_amount
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			ifl B 100 set x 56 else set x 57
			mul x z
			div x 22500
			rotatesprite x y z 0 3076 0 pal orientation 0 0 xdim ydim
		}
		else
		ife player[].inven_icon 2 // steroids
		{
			set B player[].steroids_amount
			shiftr B 2
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			ifl B 100 set x 56 else set x 57
			mul x z
			div x 22500
			rotatesprite x y z 0 3076 0 pal orientation 0 0 xdim ydim
		}
		else
		ife player[].inven_icon 3 // holoduke
		{
			set B player[].holoduke_amount
			div B 24
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			
			ifl B 100 set x 56 else set x 57
			mul x z
			div x 22500
			rotatesprite x y z 0 3076 0 pal orientation 0 0 xdim ydim
			
			getuserdef[].statusbarscale y2
			mul y2 7168
			div y2 65536
			set y 194
			sub y y2
			set x 106
			mul x z
			div x 22500
			ife pchar 2
			{
				ife mynaamah -1 { set B 237 set pal 21 } else { set B 238 set pal 1 }
			}
			else
			{
				ife player[].holoduke_on -1 { set B 237 set pal 21 } else { set B 238 set pal 1 }
			}
			gametextz MINIFONT x y B 0 pal orientation 0 0 xdim ydim z
		}
		else
		ife player[].inven_icon 4 // jetpack
		{
			set B player[].jetpack_amount
			add B 1
			shiftr B 4
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			ifl B 100 set x 56 else set x 57
			mul x z
			div x 22500
			rotatesprite x y z 0 3076 0 pal orientation 0 0 xdim ydim
			
			getuserdef[].statusbarscale y2
			mul y2 7168
			div y2 65536
			set y 194
			sub y y2
			set x 106
			mul x z
			div x 22500
			ife player[].jetpack_on 0 { set B 237 set pal 21 } else { set B 238 set pal 1 }
			gametextz MINIFONT x y B 0 pal orientation 0 0 xdim ydim z
		}
		else
		ife player[].inven_icon 5 // goggles
		{
			set B player[].heat_amount
			div B 12
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			ifl B 100 set x 56 else set x 57
			mul x z
			div x 22500
			rotatesprite x y z 0 3076 0 pal orientation 0 0 xdim ydim
			
			getuserdef[].statusbarscale y2
			mul y2 7168
			div y2 65536
			set y 194
			sub y y2
			set x 106
			mul x z
			div x 22500
			ife aimbot_on YES { set B 238 set pal 1 } else
			ife player[].heat_on YES { set B 238 set pal 1 } else
			{ set B 237 set pal 21 }
			
			
			gametextz MINIFONT x y B 0 pal orientation 0 0 xdim ydim z
		}
		else
		ife player[].inven_icon 6 // airtank or self-shrink
		{
			set temp selfshrink
			ifg player[].scuba_amount 1
			ifg player[].cursectnum -1
			ife sector[player[].cursectnum].lotag 2
				set temp NO
			
			ife temp NO
			{
			set B player[].scuba_amount
			shiftr B 6
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			ifl B 100 set x 56 else set x 57
			mul x z
			div x 22500
			rotatesprite x y z 0 3076 0 pal orientation 0 0 xdim ydim
			}
			getuserdef[].statusbarscale y2
			mul y2 7168
			div y2 65536
			set y 194
			sub y y2
			set x 106
			mul x z
			div x 22500
			ife temp YES set B 1200
			else set B 239
			set pal 23
			gametextz MINIFONT x y B 0 pal orientation 0 0 xdim ydim z
			
			ife temp YES
			ifn shrinkcooldown 0
			ife PSHRINKING 0
			{
				set z2 z, div z2 2
				set tempb shrinkcooldown
				div tempb 30
				set x 52
				mul x z
				div x 22500
				digitalnumberz 8166 x y tempb 0 8 orientation 0 0 xdim ydim z
			}
		}
		else
		ife player[].inven_icon 7 // boots
		{
			set B player[].boot_amount
			shiftr B 1
			// ifvarand inven_upgrades 8 shiftr B 1
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			
			// ifvarand inven_upgrades 8 nullop else
			// {
				ifl B 100 set x 56 else set x 57
				mul x z
				div x 22500
				rotatesprite x y z 0 3076 0 pal orientation 0 0 xdim ydim
			
				getuserdef[].statusbarscale y2
				mul y2 7168
				div y2 65536
				set y 194
				sub y y2
				set x 106
				mul x z
				div x 22500
				set B 239 set pal 23
				gametextz MINIFONT x y B 0 pal orientation 0 0 xdim ydim z
			// }
		}
		else
		ife player[].inven_icon 8 // cover blocks
		{
			getuserdef[].statusbarscale z
			mul z 65536
			div z 100
			
			getuserdef[].statusbarscale y2
			mul y2 5120
			div y2 65536
			set y 198
			sub y y2
			
			set B cover_amount
			div B 300
			set x 54
			mul x z
			div x 22500
			set pal 23
			digitalnumberz 3087 x y B 0 pal orientation 0 0 xdim ydim z
			
		}
	}
	
	getuserdef[].statusbarscale y2
	mul y2 10000
	div y2 65536
	set y 196 // bottom of the screen
	sub y y2
	
	set x 14
	mul x z
	div x 22500
	set orientation 272
	geta[player[].i].extra temp
	ifl temp 0 set temp 0
	ife pdown YES orvar orientation 33
	ifg temp 150 set pal 99 else
	ifg temp 100 set pal 8 else
	set pal 96
	
	set x2 x add x2 1
	set y2 y add y2 1
	digitalnumberz 8166 x2 y2 temp 5 4 orientation 0 0 xdim ydim z
	
	digitalnumberz 8166 x y temp 5 pal orientation 0 0 xdim ydim z
	
	
	
	ifg leach_hudtime 0
	{
		set z2 z
		div z2 2
		rotatesprite 25 176 z2 0 12816 5 10 orientation 0 0 xdim ydim
		digitalnumberz 8166 35 176 leach_hud 5 21 orientation 0 0 xdim ydim z2
	}
	
	set z2 z, div z2 3
	set x 22
	mul x z2
	div x 7500
	
	getuserdef[].statusbarscale y2
	mul y2 10000
	div y2 55296 // 57344
	set y 208 // bottom of the screen
	ifl y2 12 set y2 12
	sub y y2
	
	// set temp 206
	// sub temp y2
	
	digitalnumberz 8166 x y player[].max_player_health 3 12 orientation 0 0 xdim ydim z2
/*	
	ife PLAYERONTHEBIKE 1
	ifn BIKEID -1
	{
		getuserdef[].statusbarscale y2
		mul y2 10000
		div y2 65536
		set y 190
		sub y y2
		
		set x 14
		mul x z2
		div x 22500
		set orientation 272
		geta[BIKEID].extra temp
		ifl temp 0 set temp 0
		ife pdown YES orvar orientation 33
		ifg temp 150 set pal 99 else
		ifg temp 100 set pal 8 else
		set pal 96
		
		set x2 x add x2 1
		set y2 y add y2 1
		digitalnumberz 12821 x2 y2 temp 5 4 orientation 0 0 xdim ydim z2
		
		digitalnumberz 12821 x y temp 5 pal orientation 0 0 xdim ydim z2
	}
*/
	set orientation 272
	
	getuserdef[].statusbarscale y2
	mul y2 10000
	div y2 65536
	set y 196 // bottom of the screen
	sub y y2
	
	set x 37
	mul x z
	div x 22500
	ife es_type 0 { set B player[].shield_amount set pal 13  } else
	{ set B es_hp set pal 89  }
	set shade 5
	
	set x2 x add x2 1
	set y2 y add y2 1
	digitalnumberz 8166 x2 y2 B shade 4 orientation 0 0 xdim ydim z
	
	digitalnumberz 8166 x y B shade pal orientation 0 0 xdim ydim z
	
	//getp[].curr_weapon TMP_A
	set TMP_A currentweapon
	state ammo_icons
	ifn picnum -1
	{
		// picnum is ammo pic, B is ammo amount
		// z2 is size multiplier
		set x2 7
		mul x2 z
		div x2 22500
		set x 320
		sub x x2
		set orientation 528
		
		set temp NO
		// ifg combotime 0 set temp YES
		ifg switchboost 0 set temp YES
		ife temp YES { ifvarand player[].player_par 1 set pal 121 else set pal 2 }
		else
		set pal 2
		
		ifvarand gotplasma 2 nullop else ife pchar 2 ife currentweapon FREEZE_WEAPON div B 2
		
		set x2 x add x2 1
		set y2 y add y2 1
		digitalnumberz 8166 x2 y2 B 3 4 orientation 0 0 xdim ydim z
		
		digitalnumberz 8166 x y B 5 pal orientation 0 0 xdim ydim z
		set pal 0
		// clip counter
		ife picnum AMMO
		{
			set tempc z
			shiftr tempc 1
			
			set x2 44
			mul x2 tempc
			div x2 22500
			set x 320
			sub x x2
			set tempd THISCLIP ifl tempd 0 set tempd 0
			set B NO
			ife pchar 0 ifvarand dukeupgrades[PISTOL_WEAPON] 4 set B YES else
			ife pchar 1 ifvarand shellyupgrades[PISTOL_WEAPON] 4 set B YES else
			ife pchar 2 ifvarand wesupgrades[PISTOL_WEAPON] 4 set B YES
			ife B YES
			{
				shiftl tempd 1
				ife WEAPON1_FIRESOUND GLOCKFIRE
				{
					mul tempd 825
					div tempd 1000
				}
			}
			ifg tempd player[].ammo_amount PISTOL_WEAPON set tempd player[].ammo_amount PISTOL_WEAPON
			digitalnumberz 8166 x y tempd 3 12 orientation 0 0 xdim ydim tempc
		}
		ifvarand gotbow 2 nullop else
		ifn pchar 0
		ife player[].reloading NO
		ife player[].curr_weapon SHOTGUN_WEAPON
		{
			set TMP_A NO
			ifvarand shellyupgrades[SHOTGUN_WEAPON] 128 set TMP_A YES
			ifvarand wesupgrades[SHOTGUN_WEAPON] 128 set TMP_A YES
			
			ife TMP_A YES
			{
				set tempc z
				shiftr tempc 1
				
				set x2 26
				mul x2 tempc
				div x2 22500
				set x 320
				sub x x2
				set tempd spasclip ifl tempd 0 set tempd 0
				digitalnumberz 8166 x y tempd 3 12 orientation 0 0 xdim ydim tempc
			}
		}
		
		ifvarand gotbow 2 nullop else
		ife pchar 2
		ife player[].curr_weapon SHOTGUN_WEAPON
		{
			set tempc z
			// shiftr tempc 1
			div tempc 3
			
			set x2 40
			mul x2 tempc
			div x2 22500
			set x 320
			sub x x2
			
			getuserdef[].statusbarscale TMP_A
			mul TMP_A 10000
			div TMP_A 65536
			set TMP_B 205 // bottom of the screen
			sub TMP_B TMP_A
			ifg TMP_B 198 set TMP_B 198
			
			set tempd stakes ifl tempd 0 set tempd 0
			digitalnumberz 8166 x TMP_B tempd 3 0 orientation 0 0 xdim ydim tempc
		}
		
		ife picnum 8685
		{
			set tempc z
			shiftr tempc 1
			
			set x2 44
			mul x2 tempc
			div x2 22500
			set x 320
			sub x x2
			ife pchar 2 
			{
				ife player[].curr_weapon CHAINGUN_WEAPON
				set tempd uziclip 
				else ife player[].curr_weapon GROW_WEAPON set tempd skarclip
				else set tempd skarclipB
			}
			else
			set tempd m4clip 
			ifl tempd 0 set tempd 0
			set B NO
			ife pchar 1 ifvarand shellyupgrades[CHAINGUN_WEAPON] 1 set B YES
			ife pchar 2 ife player[].curr_weapon CHAINGUN_WEAPON 
			ifvarand wesupgrades[CHAINGUN_WEAPON] 1 set B YES
			ife B YES
			{
				shiftl tempd 1
			}
			digitalnumberz 8166 x y tempd 3 12 orientation 0 0 xdim ydim tempc
		}
		ife picnum DBAMMO ife shotexpduke YES set pal 23
		
		set z z2
		getuserdef[].statusbarscale xydist
		mul z xydist
		div z 100
		
		set x2 22
		ife picnum SABERSPRITE set x2 20
		ife picnum AMMO set x2 18
		ife picnum SHOTGUNAMMO { set x2 20 ife pchar 2 add x2 2 }
		ife picnum CRYSTALAMMO set x2 20
		ife picnum GROWAMMO set x2 19
		ife picnum FREEZEAMMO set x2 20
		ife picnum PLASMAAMMO set x2 18
		ife picnum 7676 set x2 16
		ife picnum 8685 set x2 17
		getuserdef[].statusbarscale temp
		mul x2 temp
		div x2 32
		set x 320
		sub x x2
		rotatesprite x y z 0 picnum 0 pal orientation 0 0 xdim ydim
		
		state rescuehud
		
	}
	else state rescuehud
	
	ifg credits 0 // money display
	{
		set temp NO
		ife gametype -1 set temp YES
		ifn handicon 0 set temp YES
		
		ife temp YES
		{
			getuserdef[].statusbarscale y2
			
			mul y2 10000
			div y2 65536
			set y 200
			sub y y2
			
			set z 32768 // 65536
			set x2 38
			mul x2 z
			div x2 22500
			set x 320
			sub x x2
			set orientation 528
			
			set x 305
			set y 5
			digitalnumberz 2837 x y credits 0 8 orientation 0 0 xdim ydim z
			
			set x2 19 // 46
			set tempc credits
			div tempc 100
			ifg tempc 9
			{
				add x2 2
				div tempc 10
				ifg tempc 9
				{
					add x2 2
					div tempc 10
					ifg tempc 9
					{
						add x2 2
					}
				}
			}
			mul x2 z
			div x2 22500
			set x 320
			sub x x2
			shiftr z 2
			
			rotatesprite x y z 0 12249 0 23 orientation 0 0 xdim ydim
		}
	}
	ifvarand player[].got_access 1
	{
		getuserdef[].statusbarscale z
		mul z 65536
		div z 200
		set x2 10 // 8
		mul x2 z
		div x2 7424
		set x 320
		sub x x2
	
		getuserdef[].statusbarscale y2
		mul y2 10
		div y2 28
		set y 194
		sub y y2
		
		rotatesprite x y z 0 ACCESSCARD 0 0 528 0 0 xdim ydim
	}
	ifvarand player[].got_access 2
	{
		getuserdef[].statusbarscale z
		mul z 65536
		div z 200
		set x2 8 // 7
		mul x2 z
		div x2 7424
		set x 320
		sub x x2
	
		getuserdef[].statusbarscale y2
		mul y2 10
		div y2 28
		set y 196
		sub y y2
		
		rotatesprite x y z 0 ACCESSCARD 0 21 528 0 0 xdim ydim
	}
	ifvarand player[].got_access 4
	{
		getuserdef[].statusbarscale z
		mul z 65536
		div z 200
		set x2 6
		mul x2 z
		div x2 7424
		set x 320
		sub x x2
	
		getuserdef[].statusbarscale y2
		mul y2 10
		div y2 28
		set y 198
		sub y y2
		
		rotatesprite x y z 0 ACCESSCARD 0 23 528 0 0 xdim ydim
	}
	
	ife pdown NO
	ifp palive
	{
		ife player[].curr_weapon KNEE_WEAPON
		ifg gotsaber 0
		ifvarand gametips 128
		{
			gametextz NEWFONTSTART 310 176 731 0 2 528 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 310 182 732 0 2 528 0 0 xdim ydim 16384
		}
		
		ife player[].curr_weapon PISTOL_WEAPON
		ife LASERMODE YES
		ifvarand gametips 2
		{
			gametextz NEWFONTSTART 310 176 252 0 2 528 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 310 182 253 0 2 528 0 0 xdim ydim 16384
		}
		
		ife player[].curr_weapon SHOTGUN_WEAPON
		ifvarand gametips 1
		{
			// explosive shotgun reminder display
			set temp NO
			ife pchar 0
			ife shotexpduke NO
			ifvarand dukeupgrades[SHOTGUN_WEAPON] 1
			set temp YES
			
			ifvarand shellyupgrades[SHOTGUN_WEAPON] 4 ifvarand gotbow 2 nullop else
			ife pchar 1
			ifvarand shellyupgrades[SHOTGUN_WEAPON] 1
			ife shotexpshelly NO
			set temp YES
			
			ife temp YES
			{
				ife pchar 0 ifvarand dukeupgrades[SHOTGUN_WEAPON] 4
				{
					gametextz NEWFONTSTART 310 176 769 0 2 528 0 0 xdim ydim 16384
					gametextz NEWFONTSTART 310 182 770 0 2 528 0 0 xdim ydim 16384
				}
				else
				{
					gametextz NEWFONTSTART 310 176 217 0 2 528 0 0 xdim ydim 16384
					gametextz NEWFONTSTART 310 182 218 0 2 528 0 0 xdim ydim 16384
				}
				
			}
		}
		
		ife player[].curr_weapon RPG_WEAPON
		ifn nukeselect YES
		{
			ifvarand gametips 16
			{
				// lockon mode reminder
				set temp NO
				ife pchar 0 ifvarand dukeupgrades[RPG_WEAPON] 1 set temp YES
				ife pchar 1 ifvarand shellyupgrades[RPG_WEAPON] 1 set temp YES
				ife temp YES
				{
					gametextz NEWFONTSTART 310 176 725 0 2 528 0 0 xdim ydim 16384
					gametextz NEWFONTSTART 310 182 726 0 2 528 0 0 xdim ydim 16384
				}
			}
			else // must show lockon tip first
			ifvarand gametips 32
			{
				// multi rox reminder
				set temp NO
				ife pchar 0 ifvarand dukeupgrades[RPG_WEAPON] 1 ifvarand dukeupgrades[RPG_WEAPON] 4 set temp YES
				ife pchar 1 ifvarand shellyupgrades[RPG_WEAPON] 1 ifvarand shellyupgrades[RPG_WEAPON] 4 set temp YES
				ife temp YES
				ife zoomin YES set temp NO
				
				ife temp YES
				{
					gametextz NEWFONTSTART 310 176 727 0 2 528 0 0 xdim ydim 16384
					gametextz NEWFONTSTART 310 182 728 0 2 528 0 0 xdim ydim 16384
				}
			}
		}
		
		ife player[].curr_weapon DEVISTATOR_WEAPON
		ifvarand gotrailgun 2
		ifvarand gametips 256
		{
			gametextz NEWFONTSTART 310 176 733 0 2 528 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 310 182 734 0 2 528 0 0 xdim ydim 16384
		}
		
		
		ife pchar 1
		{
			ife pchar 1
			ife player[].curr_weapon SHOTGUN_WEAPON
			ifvarand shellyupgrades[SHOTGUN_WEAPON] 4
			ifvarand gotbow 2
			ifvarand gametips 512
			{
				gametextz NEWFONTSTART 310 176 735 0 2 528 0 0 xdim ydim 16384
				gametextz NEWFONTSTART 310 182 736 0 2 528 0 0 xdim ydim 16384
			}
			
			ifvarand gotshock 2 nullop else
			ife player[].curr_weapon CHAINGUN_WEAPON
			ifvarand gametips 4
			{
				gametextz NEWFONTSTART 310 176 254 0 2 528 0 0 xdim ydim 16384
				gametextz NEWFONTSTART 310 182 255 0 2 528 0 0 xdim ydim 16384
			}
			ifvarand shellyupgrades[RPG_WEAPON] 1 nullop else
			ife player[].curr_weapon RPG_WEAPON
			ifn nukeselect YES
			ifvarand gametips 8
			{
				gametextz NEWFONTSTART 310 176 723 0 2 528 0 0 xdim ydim 16384
				gametextz NEWFONTSTART 310 182 724 0 2 528 0 0 xdim ydim 16384
			}
			ifvarand gotrailgun 2 nullop else
			ife player[].curr_weapon DEVISTATOR_WEAPON
			ifvarand shellyupgrades[DEVISTATOR_WEAPON] 1
			ifvarand gametips 64
			{
				gametextz NEWFONTSTART 310 176 729 0 2 528 0 0 xdim ydim 16384
				gametextz NEWFONTSTART 310 182 730 0 2 528 0 0 xdim ydim 16384
			}

		}
	}
ends

state shieldpricequote
	set B 257

	state pricetable
	redefinequote 257 $%d
	qsprintf 257 257 tempd
ends

state shieldinfo1

	
	// TMP_A will be quote number for name of shield
	// B will be other quote number (either price, or owned/equipped)
	// tempb will be the pal for the other quote
	switch TMP_B // shield number
	case 1
		set pal 0
		set TMP_A 240
		ife es_type TMP_B { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 2
		set pal 10
		set TMP_A 241
		ife es_type TMP_B { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 3
		set pal 17
		set TMP_A 242
		ife es_type TMP_B { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 4
		set pal 21
		set TMP_A 243
		ife es_type TMP_B { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 5
		set pal 19
		set TMP_A 244
		ife es_type TMP_B { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 6
		set pal 23
		set TMP_A 245
		ife es_type TMP_B { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 7 // ELECTRIC NOVA
		set pal 98
		set TMP_A 246
		ife novatype 1 { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 8 // FROST NOVA
		set pal 49
		set TMP_A 247
		ife novatype 2 { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	case 9 // FIRE NOVA
		set pal 39
		set TMP_A 248
		ife novatype 3 { set B 261 set tempb 0 } else
		ife es_owned[TMP_B] YES { set B 260 set tempb 0 } else
		{ state shieldpricequote set tempb 8 }
	break
	endswitch
	
	ife tempselect TMP_B { add z 4096 set pal 121 }

ends

state award_display

	ife subtitle_time 0
	{
		
		set orientation 1024
		ifge award_time 16 set z 65536 else
		{
			set z 4096
			mul z award_time
		}
		rotatesprite 160 80 z 0 12800 0 0 orientation 0 0 xdim ydim
		ifge z 40960
		{
			set pal 0
			set orientation 0
			ife award_screen ACCESSCARD
			{
				ifvarand player[].got_access 2 set pal 21 else
				ifvarand player[].got_access 4 set pal 23
			}
			rotatesprite 160 80 65536 0 award_screen 0 pal orientation 0 0 xdim ydim
			gametextz NEWFONTSTART 320 44 308 0 23 orientation 0 0 xdim ydim 32768
			gametextz NEWFONTSTART 320 116 award_string 0 23 orientation 0 0 xdim ydim 32768
		}
	}
	

ends

defstate pricequote
	set B 257
	set TMP_B TMP_A add TMP_B 100
	state pricetable
	ifg tempd credits set pal 13
	redefinequote 257 $%d
	qsprintf 257 257 tempd
ends

state vendordisplay

	set RETURN -1
	
	set orientation 0 // 1024
	set z 20480
	set y 115
	ifl vendor_screen 0
	{
		set y2 vendor_screen
		ifl y2 -10 add y2 11
		mul y2 21
		sub y y2
	}
	
	ife vendor_screen 1 // shield vendor
	{
		rotatesprite 160 y 28672 0 9865 0 0 orientation 0 0 xdim ydim // backdrop
		
		// rotatesprite 160 55 10240 0 8874 0 0 orientation 0 0 xdim ydim
		set TMP_B 1 // SHIELD 1
		state shieldinfo1
		rotatesprite 60 75 z 0 8871 0 pal orientation 0 0 xdim ydim
		set z 20480
		gametextz NEWFONTSTART 142 72 TMP_A 0 12 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 145 80 B 0 tempb orientation 0 0 xdim ydim 20480
		
		set TMP_B 2 // SHIELD 2
		state shieldinfo1
		rotatesprite 134 75 z 0 8871 0 pal orientation 0 0 xdim ydim
		set z 20480
		gametextz NEWFONTSTART 290 72 TMP_A 0 12 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 293 80 B 0 tempb orientation 0 0 xdim ydim 20480
		set TMP_B 3 // SHIELD 3
		state shieldinfo1
		rotatesprite 209 75 z 0 8871 0 pal orientation 0 0 xdim ydim
		set z 20480
		gametextz NEWFONTSTART 440 72 TMP_A 0 12 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 443 80 B 0 tempb orientation 0 0 xdim ydim 20480
		set TMP_B 4 // SHIELD 4
		state shieldinfo1
		ife es_type 0 set shade 18 else set shade 0
		rotatesprite 60 95 z 0 8871 shade pal orientation 0 0 xdim ydim
		set z 20480
		gametextz NEWFONTSTART 142 92 TMP_A shade 15 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 145 100 B shade tempb orientation 0 0 xdim ydim 20480
		set TMP_B 5 // SHIELD 5
		state shieldinfo1
		ife es_type 0 set shade 18 else set shade 0
		rotatesprite 134 95 z 0 8871 shade pal orientation 0 0 xdim ydim
		set z 20480
		gametextz NEWFONTSTART 290 92 TMP_A shade 15 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 293 100 B shade tempb orientation 0 0 xdim ydim 20480
		set TMP_B 6 // SHIELD 6
		state shieldinfo1
		ife es_type 0 set shade 18 else set shade 0
		rotatesprite 209 95 z 0 8871 shade pal orientation 0 0 xdim ydim
		set z 14336
		gametextz NEWFONTSTART 440 92 TMP_A shade 15 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 443 100 B shade tempb orientation 0 0 xdim ydim 20480
		set TMP_B 7 // ELECTRIC NOVA
		state shieldinfo1
		ife es_type 0 set shade 18 else set shade 0
		rotatesprite 60 115 z 0 8955 shade 0 orientation 0 0 xdim ydim
		set z 14336
		gametextz NEWFONTSTART 142 112 TMP_A shade 23 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 145 120 B shade tempb orientation 0 0 xdim ydim 20480
		set TMP_B 8 // FROST NOVA
		state shieldinfo1
		rotatesprite 134 115 z 0 8954 shade 0 orientation 0 0 xdim ydim
		set z 14336
		gametextz NEWFONTSTART 290 112 TMP_A shade 1 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 293 120 B shade tempb orientation 0 0 xdim ydim 20480
		set TMP_B 9 // FIRE NOVA
		state shieldinfo1
		rotatesprite 209 115 z 0 8952 shade 0 orientation 0 0 xdim ydim
		set z 20480
		gametextz NEWFONTSTART 440 112 TMP_A shade 2 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 443 120 B shade tempb orientation 0 0 xdim ydim 20480
		
		// PRODUCT INFORMATION
		gametextz NEWFONTSTART 320 136 262 0 0 orientation 0 0 xdim ydim 20480
		ifg tempselect 0 ifl tempselect 7
		{
		// shield strength, recharge delay and recharge rate
		gametextz NEWFONTSTART 145 145 263 0 0 orientation 0 0 xdim ydim 16384
		digitalnumberz 12821 220 145 es_hpmax[tempselect] 0 12 orientation 0 0 xdim ydim 20480
		
		gametextz NEWFONTSTART 145 155 264 0 0 orientation 0 0 xdim ydim 16384
		digitalnumberz 12821 220 155 es_delay[tempselect] 0 12 orientation 0 0 xdim ydim 20480
		
		gametextz NEWFONTSTART 145 165 265 0 0 orientation 0 0 xdim ydim 16384
		set B 30
		div B es_speed[tempselect]
		digitalnumberz 12821 220 165 B 0 12 orientation 0 0 xdim ydim 20480
		}
		ifge tempselect 7
		ifl tempselect 10
		{
			ife tempselect 7 set temp 394 else ife tempselect 8 set temp 398 else set temp 399
			gametextz NEWFONTSTART 320 144 temp 0 8 orientation 0 0 xdim ydim 16384
			
			gametextz NEWFONTSTART 320 152 395 0 8 orientation 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 320 160 396 0 8 orientation 0 0 xdim ydim 16384
			gametextz NEWFONTSTART 320 168 397 0 8 orientation 0 0 xdim ydim 16384
		}
		
		ife vendorupgrade YES
		{
			state shadepulse
			gametextz NEWFONTSTART 320 44 737 shade 7 0 0 0 xdim ydim 20480
		}
		
	}
	else ife vendor_screen 2 // inventory vendor
	{
		rotatesprite 160 y 28672 0 9866 0 0 orientation 0 0 xdim ydim // backdrop
		// 14323 aimbot goggles
		// 14324 holobagger

		// 14328 Medkit +
		ife attmode 0
		ife es_type 0
		gametextz NEWFONTSTART 160 100 712 0 12 16 0 0 xdim ydim 16384
		else
		{
			// row1
			rotatesprite 62 85 32768 0 14327 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 14328 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 14329 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 14330 0 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 701 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 702 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 703 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 704 0 0 16 0 0 xdim ydim 10240
			// row2
			rotatesprite 62 133 32768 0 14324 0 0 16 0 0 xdim ydim
			
			ife pchar 2 set picnum 18826 else set picnum 14333
			rotatesprite 112 133 32768 0 picnum 0 0 16 0 0 xdim ydim
			rotatesprite 162 133 32768 0 14331 0 0 16 0 0 xdim ydim
			rotatesprite 212 133 32768 0 14332 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 128 705 0 0 16 0 0 xdim ydim 10240
			ife pchar 2 set TMP_A 1210 else set TMP_A 706
			gametextz NEWFONTSTART 230 128 TMP_A 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 707 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 708 0 0 16 0 0 xdim ydim 10240
		
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 500
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 ifvarand inven_upgrades 16 set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 501
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 ifvarand inven_upgrades 1 set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 502
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 ifvarand inven_upgrades 2 nullop else set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 503
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 ifvarand inven_upgrades 2 set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 504
			set pal 23
			ife weap_owned[TMP_A] YES
			{ set B 328 ifvarand inven_upgrades 32 set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 505
			set pal 23

			ife weap_owned[TMP_A] YES 
			{ set B 328 ifvarand inven_upgrades 4 set B 329 set pal 12 } 
			else state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 506
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 ifvarand inven_upgrades 8 nullop else set B 329 set pal 12 } 
			else state pricequote
			gametextz NEWFONTSTART 330 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 507
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 ifvarand inven_upgrades 8 set B 329 set pal 12 } 
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
			
			ife vendorupgrade YES
			{
				state shadepulse
				gametextz NEWFONTSTART 320 44 737 shade 7 0 0 0 xdim ydim 20480
			}
		}
	}
	else ife vendor_screen 3 // perks
	{
		rotatesprite 160 y 28672 0 9867 0 0 orientation 0 0 xdim ydim // backdrop
		// 15353 max health 125
		// 15354 max health 150
		// 15355 low health regen +
		// 14326 EDF rescue
		
		// 15358 slidekick boost
		// 15356 +25% companion damage
		// 15357 companion auto-revive
		// 9981 switchboost cooldown -3s
		ife vendorupgrade NO
		gametextz NEWFONTSTART 320 100 778 0 12 16 0 0 xdim ydim 16384
		else
		{
			// row1
			rotatesprite 62 85 32768 0 15353 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 15354 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 15355 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 14326 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 779 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 780 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 781 0 0 16 0 0 xdim ydim 10240
			// current amount of regen
				ifg regenmax 0 digitalnumberz 12821 185 95 regenmax 0 10 16 0 0 xdim ydim 32768 // 20480
			gametextz NEWFONTSTART 430 80 1087 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 15358 0 0 16 0 0 xdim ydim
			rotatesprite 112 133 32768 0 19257 0 0 16 0 0 xdim ydim // 16534 was radar
			// current amount of I-frames
				ifg iframes_max 0
				digitalnumberz 12821 145 155 iframes_max 0 16 16 0 0 xdim ydim 32768
				
			rotatesprite 162 133 32768 0 16535 0 0 16 0 0 xdim ydim
			rotatesprite 212 133 32768 0 9981 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 128 782 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 1287 0 0 16 0 0 xdim ydim 10240 // was radar 783
			gametextz NEWFONTSTART 330 128 784 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 785 0 0 16 0 0 xdim ydim 10240
		
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 510 // health 125
			set pal 23
			// ife weap_owned[TMP_A] YES 
			// { set B 328 set pal 12 }
			// else 
			state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 511 // coin magnet
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 }
			else 
			state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 512 // health regen +
			set pal 23
			// ife weap_owned[TMP_A] YES 
			// { set B 328 set pal 12 }
			// else 
			state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 513 // EDF rescue
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 514 // slidekick boost
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 515 // +I-FRAMES
			set pal 23

			// ife weap_owned[TMP_A] YES 
			// { set B 328 set pal 12 } 
			// else 
			state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 516 // companion auto-revive
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 } 
			else state pricequote
			gametextz NEWFONTSTART 330 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 517 // companion sideguns
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 } 
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
			
			ife vendorupgrade YES
			{
				state shadepulse
				gametextz NEWFONTSTART 320 44 737 shade 7 0 0 0 xdim ydim 20480
			}
		}
		
		ife VOLUME 6 ifge LEVEL 38 nullop else
		{
			gametextz NEWFONTSTART 125 70 1354 0 13 orientation 0 0 xdim ydim 20480
			ife tempselect 906 state shadepulse else set shade 0
			gametextz NEWFONTSTART 405 70 1353 shade 11 orientation 0 0 xdim ydim 20480
		}
	}
	else ife vendor_screen 4 // character sheet
	{
		rotatesprite 160 y 28672 0 9868 0 0 orientation 0 0 xdim ydim // backdrop
		
		// row1 is costumes
		gametextz NEWFONTSTART 320 65 1110 0 12 16 0 0 xdim ydim 20480
		ife pchar 0
		{
			rotatesprite 62 80 32768 0 16485 0 player[].palookup 16 0 0 xdim ydim
			rotatesprite 112 80 32768 0 16486 0 player[].palookup 16 0 0 xdim ydim
			rotatesprite 162 80 32768 0 16487 0 player[].palookup 16 0 0 xdim ydim
			rotatesprite 212 80 32768 0 16488 0 player[].palookup 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 75 1104 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 75 1105 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 75 1106 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 75 1107 0 0 16 0 0 xdim ydim 10240
		}
		else
		ife pchar 1
		{
			rotatesprite 62 80 32768 0 16481 0 player[].palookup 16 0 0 xdim ydim
			rotatesprite 112 80 32768 0 16482 0 player[].palookup 16 0 0 xdim ydim
			rotatesprite 162 80 32768 0 16483 0 player[].palookup 16 0 0 xdim ydim
			rotatesprite 212 80 32768 0 16484 0 player[].palookup 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 75 1104 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 75 1108 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 75 1106 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 75 1109 0 0 16 0 0 xdim ydim 10240
		}
		else
		ife pchar 2
		{
			rotatesprite 62 80 16384 0 16489 0 player[].palookup 16 0 0 xdim ydim
			gametextz NEWFONTSTART 130 75 1203 0 0 16 0 0 xdim ydim 10240
		}
		
		ife pchar 0 set temp dukepal else ife pchar 1 set temp shellypal
		else ife pchar 2 set temp wespal
		
		ife temp 0 rotatesprite 61 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 62 113 65536 0 199 0 0 16 0 0 xdim ydim
		ife temp 10 rotatesprite 71 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 72 113 65536 0 199 0 10 16 0 0 xdim ydim
		ife temp 11 rotatesprite 81 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 82 113 65536 0 199 0 11 16 0 0 xdim ydim
		ife temp 12 rotatesprite 91 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 92 113 65536 0 199 0 12 16 0 0 xdim ydim
		ife temp 13 rotatesprite 101 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 102 113 65536 0 199 0 13 16 0 0 xdim ydim
		ife temp 14 rotatesprite 111 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 112 113 65536 0 199 0 14 16 0 0 xdim ydim
		ife temp 15 rotatesprite 121 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 122 113 65536 0 199 0 15 16 0 0 xdim ydim
		ife temp 16 rotatesprite 131 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 132 113 65536 0 199 0 16 16 0 0 xdim ydim
		ife temp 21 rotatesprite 141 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 142 113 65536 0 199 0 21 16 0 0 xdim ydim
		ife temp 22 rotatesprite 151 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 152 113 65536 0 199 0 22 16 0 0 xdim ydim
		ife temp 23 rotatesprite 161 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 162 113 65536 0 199 0 23 16 0 0 xdim ydim
		ife temp 35 rotatesprite 171 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 172 113 65536 0 199 0 35 16 0 0 xdim ydim
		ife temp 36 rotatesprite 181 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 182 113 65536 0 199 0 36 16 0 0 xdim ydim
		ife temp 42 rotatesprite 191 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 192 113 65536 0 199 0 42 16 0 0 xdim ydim
		ife temp 43 rotatesprite 201 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 202 113 65536 0 199 0 43 16 0 0 xdim ydim
		ife temp 49 rotatesprite 211 113 73728 0 199 0 33 16 0 0 xdim ydim
		rotatesprite 212 113 65536 0 199 0 49 16 0 0 xdim ydim
		
		// let player know what key to press to change to gun vendor screens
		ife vendorupgrade YES
		{
			state shadepulse
			gametextz NEWFONTSTART 320 44 737 shade 7 0 0 0 xdim ydim 20480
		}
		
		// weapon upgrade stuff
		// two rows, numbers and then icons on each side
		ifn attmode NO
		{
			gametextz NEWFONTSTART 320 130 1140 0 12 0 0 0 xdim ydim 20480
			
			gametextz NEWFONTSTART 120 149 1141 0 12 16 0 0 xdim ydim 16384 // DMG +%
			gametextz NEWFONTSTART 120 155 1142 0 12 16 0 0 xdim ydim 16384  // SPEED
			gametextz NEWFONTSTART 120 161 1143 0 12 16 0 0 xdim ydim 16384  // SALVO
			gametextz NEWFONTSTART 120 167 1144 0 12 16 0 0 xdim ydim 16384  // LEACH
			
			rotatesprite 88 135 24576 0 16884 0 0 16 0 0 xdim ydim  // kicks
			rotatesprite 100 135 24576 0 16885 0 0 16 0 0 xdim ydim // pistols
			rotatesprite 112 135 24576 0 16886 0 0 16 0 0 xdim ydim // shotguns
			rotatesprite 124 135 24576 0 16887 0 0 16 0 0 xdim ydim // chainguns
			rotatesprite 136 135 24576 0 16888 0 0 16 0 0 xdim ydim // launchers
			rotatesprite 148 135 24576 0 16889 0 0 16 0 0 xdim ydim // throwables
			rotatesprite 160 135 24576 0 16890 0 0 16 0 0 xdim ydim // shrinker bmfg
			rotatesprite 172 135 24576 0 16891 0 0 16 0 0 xdim ydim // devastators
			rotatesprite 184 135 24576 0 16892 0 0 16 0 0 xdim ydim // mines
			rotatesprite 196 135 24576 0 16893 0 0 16 0 0 xdim ydim // freezer incinerator
			rotatesprite 208 135 24576 0 16883 0 0 16 0 0 xdim ydim // lightsaber
			rotatesprite 220 135 24576 0 16894 0 0 16 0 0 xdim ydim // expander
			ife pchar 0
			rotatesprite 232 135 24576 0 17662 0 0 16 0 0 xdim ydim // DB shotgun
			else
			rotatesprite 232 135 24576 0 17663 0 0 16 0 0 xdim ydim // Bow
			
			set TMP_A 0
			set x 93
			set x2 180
			whilevarn TMP_A 13
			{
				ife TMP_A 10 // temp fix until 10 has its own weapon slot
				{
					ife pchar 0 set temp dweaplevel[0] else ife pchar 1 set temp bweaplevel[0]
					else set temp wweaplevel[0]
				}
				else
				{
					ife pchar 0 set temp dweaplevel[TMP_A] else ife pchar 1 set temp bweaplevel[TMP_A]
					else set temp wweaplevel[TMP_A]
				}
				set tempb pdamage
				sub tempb 100
				mul temp 8
				add tempb temp
				ifg tempb 99 set z 12288 else set z 16384
				digitalnumberz 12821 x 149 tempb 0 21 16 0 0 xdim ydim z
				
				set tempc 1146 set pal 12
				
				ife TMP_A 10 // temp fix until 10 has its own weapon slot
				{
					ife pchar 0 set temp dweaplevel[0] else ife pchar 1 set temp bweaplevel[0]
					else set temp wweaplevel[0]
				}
				else
				{
					ife pchar 0 set temp dweaplevel[TMP_A] else ife pchar 1 set temp bweaplevel[TMP_A]
					else set temp wweaplevel[TMP_A]
				}

				ifge temp 1 { set tempc 1145 set pal 11 }
				
				
				ife pchar 0 ifvarand comboperk 1 set pal 23
				ife pchar 1 ifvarand comboperk 2 set pal 23
				ife pchar 2 ifvarand comboperk 4 set pal 23
				gametextz NEWFONTSTART x2 155 tempc 0 pal 16 0 0 xdim ydim 16384  // SPEED Y or N
				
				set pal 12
				ifge temp 3 { set tempc 1145 set pal 11 } else set tempc 1146
				gametextz NEWFONTSTART x2 161 tempc 0 pal 16 0 0 xdim ydim 16384  // SALVO Y or N
				
				ifge temp 5 { set tempc 1145 set pal 11 } else set tempc 1146
				gametextz NEWFONTSTART x2 167 tempc 0 pal 16 0 0 xdim ydim 16384  // LEACH Y or N
				
				add TMP_A 1
				add x 12
				add x2 24
			}

		}
		
		
	}
	else ife vendor_screen 5 // high score display
	{
		// backdrop display
		set orientation 1024
		rotatesprite 160 100 65536 0 2456 0 0 orientation 0 0 xdim ydim
		set orientation 16
		gametextz NEWFONTSTART 320 1 3097 0 23 orientation 0 0 xdim ydim 40960
		gametextz NEWFONTSTART 320 15 3106 0 12 orientation 0 0 xdim ydim 32768
		set temp 0
		set y 30
		whilevarn temp MAXSCORES
		{
			set pal 12
			ife highscores[temp] totalxp set pal 23
			digitalnumberz NEWNUMSTART 155 y highscores[temp] 0 pal orientation 0 0 xdim ydim 32768
			add temp 1
			add y 12
		}
		gametextz NEWFONTSTART 320 177 3107 0 12 orientation 0 0 xdim ydim 32768
		digitalnumberz NEWNUMSTART 155 189 totalxp 0 8 orientation 0 0 xdim ydim 32768
		break
	}
	else ife vendor_screen 6 // perks page 2
	{
		rotatesprite 160 y 28672 0 9867 0 0 orientation 0 0 xdim ydim // backdrop
		
		
		// row1
			rotatesprite 62 85 32768 0 16595 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 16596 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 16597 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 16598 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 1355 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 1356 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 1357 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 1358 0 0 16 0 0 xdim ydim 10240
			
			
		// contextual string below item; "owned", "equipped", or the price
			set TMP_A 520 // duke perk
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 }
			else 
			state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 521 // bombshell perk
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 }
			else 
			state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 522 // wes perk
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 }
			else 
			state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 523 // auto-revive
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ set B 328 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384

		ife tempselect 907 state shadepulse else set shade 0
		gametextz NEWFONTSTART 125 70 1354 shade 11 orientation 0 0 xdim ydim 20480
		gametextz NEWFONTSTART 405 70 1353 0 13 orientation 0 0 xdim ydim 20480
	}
	else ife vendor_screen 7
	{
		rotatesprite 160 y 28672 0 21173 0 0 orientation 0 0 xdim ydim // backdrop
		gametextz NEWFONTSTART 320 58 3200 0 23 orientation 0 0 xdim ydim 16384
		gametextz NEWFONTSTART 320 52 3201 0 23 orientation 0 0 xdim ydim 16384
		
		set B 0
		set y2 83
		set TMP_A optionstart
		whilevarn B 8
		{
			// gametextz NEWFONTSTART 320 y2 TMP_A 0 12 orientation 0 0 xdim ydim 20480
			ife TMP_A currentoption state shadepulse else set shade 10
			gametextz NEWFONTSTART 135 y2 TMP_A shade 12 orientation 0 0 xdim ydim 20480
			
			switch TMP_A
				case 3202 // DIFFICULTY
					digitalnumberz NEWNUMSTART 258 y2 SKILL 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3203 // RADAR DISPLAY
					ife radaron YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3204 // ENEMY HEALTH BARS
					ife MONHUD YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3205 // SHOW ENEMY POINTS
					ife SHOWPOINTS YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3206 // FOOTSTEP SOUNDS
					ife STEPSOUNDS YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3207 // DISABLE GAMETIPS
					ife disable_tips YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3208 // DISABLE MID-LEVEL AUTOSAVE
					ifn AUTOSAVE YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3209 // DISABLE MID-LEVEL AUTOSAVE
					ife disable_doubletap NO set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3210 // RANDOM ENEMY REPLACEMENTS
					ife NEWENEMIES YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3211 // KICKBABLE HEADS
					ife disable_kickheads NO set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3212 // JIBS DURATION
					set temp jibs_duration
					div temp 1800
					digitalnumberz NEWNUMSTART 258 y2 temp 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3213 // MAX AI TARGET RANGE IN METERS
					set temp MAXRANGE
					shiftr temp 9
					digitalnumberz NEWNUMSTART 258 y2 temp 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3214 // DUKE & BOMBSHELL BOTS AVOID MELEE
					ife avoid_melee YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3215 // RAIN
					ifle raining 0 set temp 0 else
					{
						set temp raining
						shiftr temp 2
					}
					digitalnumberz NEWNUMSTART 258 y2 temp 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3216 // SNOW
					ifge raining 0 set temp 0 else
					{
						set temp raining
						div temp -4
					}
					digitalnumberz NEWNUMSTART 258 y2 temp 0 12 orientation 0 0 xdim ydim 20480
				break
				case 3217 // MAP MIRRORING
					ife mirror_maps YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				
				case 3218 // DISABLE INFIGHTING
					ife disable_infighting NO set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
				
				case 3219 // RESET ALL OPTIONS TO DEFAULT VALUES
					ife reset_options YES set TMP_B 3125 else set TMP_B 3126
					gametextz NEWFONTSTART 500 y2 TMP_B 0 12 orientation 0 0 xdim ydim 20480
				break
					
			endswitch
			
			add y2 10
			add TMP_A 1
			add B 1
			
			// quote 3125 == YES
			// quote 3126 == NO
		}
		
		ifg optionstart FIRSTOPTION
		rotatesprite 160 68 24576 0 21174 0 0 0 0 0 xdim ydim // up arrow
		
		set temp optionstart
		add temp 8
		ifle temp LASTOPTION
		rotatesprite 160 168 24576 1024 21174 0 0 0 0 0 xdim ydim // down arrow
		
		ifn subtitle_time 0 
		{
			set y 35
			set orientation 0
			set temp subtitle_numlines
			whilevarn temp 0
			{
				rotatesprite 160 y 65536 0 BLACKBAR 0 0 0 0 0 xdim ydim
				sub y 6
				sub temp 1
			}
			set temp subtitle_numlines
			set y 35
			set B subtitle_start
			add B subtitle_numlines
			sub B 1
			set temp subtitle_numlines
			whilevarn temp 0
			{
				gametextz NEWFONTSTART 320 y B 0 fontpal orientation 0 0 xdim ydim 16384
				sub y 6
				sub B 1
				sub temp 1
			}
		}
	}
	else // weapon vendor
	{
		set picnum vendor_screen
		ife pchar 2 sub picnum 20
		else
		ife pchar 1 sub picnum 10
		add picnum 9880
		ifl vendor_screen 0 set picnum 8872
		rotatesprite 160 y 28672 0 picnum 0 0 orientation 0 0 xdim ydim // backdrop
		set orientation 0
		
		ife vendor_screen 10 // duke pistols
		{
			gametextz NEWFONTSTART 320 70 314 0 0 orientation 0 0 xdim ydim 32768
			// pics of items
			rotatesprite 62 85 32768 0 9912 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9933 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 9913 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 9924 0 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 324 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 325 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 326 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 327 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9907 0 0 16 0 0 xdim ydim
			rotatesprite 112 133 32768 0 9908 0 0 16 0 0 xdim ydim
			rotatesprite 162 133 32768 0 9906 0 0 16 0 0 xdim ydim
			rotatesprite 212 133 32768 0 12536 0 0 16 0 0 xdim ydim
			
			gametextz NEWFONTSTART 130 128 250 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 251 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 791 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 1352 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 0
			ife weap_owned[TMP_A] YES 
			{
				set pal 12 
				ifvarand dukeupgrades[PISTOL_WEAPON] 8 set B 328 else
				set B 329
			}
			else state pricequote

			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384

			set TMP_A 1
			set pal 23
			ife weap_owned[TMP_A] YES // owns duke glock18
			{ 
				set pal 12 
				ifvarand dukeupgrades[PISTOL_WEAPON] 8 set B 329 else
				set B 328 
			} 
			else state pricequote
			
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 2
			set pal 23
			ife weap_owned[TMP_A] YES 
			{
				set pal 12
				ifvarand dukeupgrades[PISTOL_WEAPON] 1 set B 329 else
				set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 3
			set pal 23
			ife weap_owned[TMP_A] YES // owns duke dual pistols
			{ 
				set pal 12 
				ifvarand dukeupgrades[PISTOL_WEAPON] 4 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// SECOND ROW STRINGS
			set TMP_A 4 // TMP_A == tempselect-100
			set pal 23
			ife weap_owned[TMP_A] YES // owns ALIEN PISTOL
			{ 
				set pal 12
				ifvarand dukeupgrades[PISTOL_WEAPON] 16 set B 328 
				else set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 5
			set pal 23
			ife weap_owned[TMP_A] YES // upgraded alien pistol
			{ 
				set pal 12
				ifvarand dukeupgrades[PISTOL_WEAPON] 16 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 6
			set pal 23
			ife weap_owned[TMP_A] YES // double pistol ammo
			{
				set pal 12
				ifvarand dukeupgrades[PISTOL_WEAPON] 32 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 7
			set pal 23
			ifvarand perks 2048 // faster pistol reload
				{ set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 11 // duke shotgun
		{
			gametextz NEWFONTSTART 320 70 315 0 0 orientation 0 0 xdim ydim 32768

			// row1
			rotatesprite 62 85 32768 0 9940 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9928 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 16593 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 16594 0 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 331 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 332 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 2880 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 1352 0 0 16 0 0 xdim ydim 10240
			// row2
			rotatesprite 62 133 32768 0 9935 0 0 16 0 0 xdim ydim
			ife weap_owned[14] YES set shade 0 else set shade 20
			rotatesprite 112 133 32768 0 9909 shade 0 16 0 0 xdim ydim
			rotatesprite 162 133 32768 0 9947 shade 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			
			gametextz NEWFONTSTART 130 128 336 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 392 shade 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 337 shade 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 10
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12 
				ifvarand dukeupgrades[SHOTGUN_WEAPON] 4 set B 328 else
				set B 329
			}
			else state pricequote
			
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 11
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12 
				ifvarand dukeupgrades[SHOTGUN_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 12
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12 
				ifvarand dukeupgrades[SHOTGUN_WEAPON] 16 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 13
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12 
				ifvarand dukeupgrades[SHOTGUN_WEAPON] 32 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 14 // TMP_A == tempselect-100
			set pal 23
			ife weap_owned[TMP_A] YES // ATOMIC SHOTTY
			{
				set pal 12
				ifvarand dukeupgrades[SHOTGUN_WEAPON] 4 set B 329 
				else set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set B 250 // placeholder price
			set pal 23
			ife weap_owned[TMP_A] YES set shade 0 else set shade 20
			set TMP_A 15
			ife weap_owned[TMP_A] YES // RAD SHELLS
			{ 
				set pal 12
				ifvarand dukeupgrades[SHOTGUN_WEAPON] 8 set B 329 else
				set B 328 
			}
			else state pricequote
			gametextz NEWFONTSTART 230 166 B shade pal 16 0 0 xdim ydim 16384
			
			set TMP_A 16
			set pal 23
			ife weap_owned[TMP_A] YES // BURST FIRE
			{ 
				set pal 12
				ifvarand dukeupgrades[SHOTGUN_WEAPON] 2 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 330 166 B shade pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 12 // duke chaingun
		{
			gametextz NEWFONTSTART 320 70 316 0 0 orientation 0 0 xdim ydim 32768
			// pics of items
			rotatesprite 62 85 32768 0 9922 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9934 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 9948 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 9950 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 338 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 339 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 326 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 340 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9910 0 0 16 0 0 xdim ydim // shock rifle
			gametextz NEWFONTSTART 130 128 1121 0 0 16 0 0 xdim ydim 10240
			
			ifvarand weap_owned[24] YES set shade 0 else set shade 20
			rotatesprite 112 133 32768 0 16590 shade 0 16 0 0 xdim ydim // chain gang
			gametextz NEWFONTSTART 230 128 1156 shade 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 20
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12
				ifvarand dukeupgrades[CHAINGUN_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 21
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12 
				ifvarand dukeupgrades[CHAINGUN_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 22
			set pal 23
			ife weap_owned[TMP_A] YES // AP CHAINGUN ROUNDS
			{ 
				set pal 12 
				ifvarand dukeupgrades[CHAINGUN_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 23
			set pal 23
			ife weap_owned[TMP_A] YES // DOUBLE CHAINGUN AMMO
			{ 
				set pal 12 
				ifvarand dukeupgrades[CHAINGUN_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 24
			set pal 23
			ife weap_owned[TMP_A] YES // executioner
			{
				set pal 12
				ifvarand dukeupgrades[CHAINGUN_WEAPON] 8 set B 328
				else set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 25
			set pal 23
			ife weap_owned[TMP_A] YES // chain gang
			{
				set pal 12
				ifvarand dukeupgrades[CHAINGUN_WEAPON] 16 set B 328
				else set B 329
			} 
			else state pricequote
			ifvarand weap_owned[24] YES set shade 0 else set shade 20
			gametextz NEWFONTSTART 230 166 B shade pal 16 0 0 xdim ydim 16384
			
			
		} else
		ife vendor_screen 13 // duke RPG
		{
			gametextz NEWFONTSTART 320 70 317 0 0 orientation 0 0 xdim ydim 32768
			// pics of items
			rotatesprite 62 95 32768 0 9919 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9943 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 9952 0 0 16 0 0 xdim ydim
			ife weap_owned[31] YES set shade 0 else set shade 20
			rotatesprite 212 95 32768 0 9953 shade 0 16 0 0 xdim ydim // multirockets
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 343 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 344 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 345 0 0 16 0 0 xdim ydim 10240
			ife weap_owned[31] YES set shade 0 else set shade 20
			gametextz NEWFONTSTART 430 90 346 shade 0 16 0 0 xdim ydim 10240 // multirockets
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 30 // BASIC RPG
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12
				ifvarand dukeupgrades[RPG_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 31
			set pal 23
			ife weap_owned[TMP_A] YES  // SMART RPG
			{
				set pal 12 
				ifvarand dukeupgrades[RPG_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 32
			set pal 23
			ife weap_owned[TMP_A] YES  // FAST ROCKETS
			{ 
				set pal 12 
				ifvarand dukeupgrades[RPG_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 33
			set pal 23
			ife weap_owned[TMP_A] YES  // MULTI ROCKETS
			{ 
				set pal 12 
				ifvarand dukeupgrades[RPG_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 128 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 14 // duke pipebomb
		{
			gametextz NEWFONTSTART 320 70 374 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 9954 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9955 0 0 16 0 0 xdim ydim
			ifvarand dukeupgrades[HANDBOMB_WEAPON] 1 set shade 0 else set shade 20
			rotatesprite 162 95 32768 0 16532 shade 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 370 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 371 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1119 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 40
			set pal 23
			ife weap_owned[TMP_A] YES // BASIC PIPEBOMBS
			{ 
				set pal 12
				ifvarand dukeupgrades[HANDBOMB_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 41
			set pal 23
			ife weap_owned[TMP_A] YES  
			{ 
				set pal 12
				ifvarand dukeupgrades[HANDBOMB_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 42
			set pal 23
			ife weap_owned[TMP_A] YES  
			{ 
				set pal 12
				ifvarand dukeupgrades[HANDBOMB_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			ifvarand dukeupgrades[HANDBOMB_WEAPON] 1 set shade 0 else set shade 20
			gametextz NEWFONTSTART 330 128 B shade pal 16 0 0 xdim ydim 16384
			
			
		} else
		ife vendor_screen 15 // duke energy weapons
		{
			gametextz NEWFONTSTART 320 70 319 0 0 orientation 0 0 xdim ydim 32768
			
			// row1
			rotatesprite 62 85 32768 0 9911 0 0 16 0 0 xdim ydim // shrinker
			rotatesprite 112 85 32768 0 9914 0 0 16 0 0 xdim ydim // BMFG
			ife weap_owned[51] YES set shade 0 else set shade 20
			rotatesprite 162 85 32768 0 9982 shade 22 16 0 0 xdim ydim // BMFG ALTFIRE
			// names of items, drawn above the items
			rotatesprite 212 85 32768 0 16586 0 0 16 0 0 xdim ydim // plasma ammo doubled
			
			gametextz NEWFONTSTART 130 80 385 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 386 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 1117 0 22 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 1125 0 0 16 0 0 xdim ydim 10240
			// row2
			rotatesprite 62 133 32768 0 9920 0 0 16 0 0 xdim ydim // babifier
			rotatesprite 112 133 32768 0 16536 0 0 16 0 0 xdim ydim // fan service upgrade
			rotatesprite 162 133 32768 0 18825 0 0 16 0 0 xdim ydim // BFF ray
			rotatesprite 212 133 32768 0 16587 0 0 16 0 0 xdim ydim // plasma rifle
			
			
			gametextz NEWFONTSTART 130 128 387 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 388 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 2890 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 1124 0 0 16 0 0 xdim ydim 10240
			
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 50
			set pal 23
			ife weap_owned[TMP_A] YES // SHRINKER
			{ 
				set pal 12
				ifvarand dukeupgrades[SHRINKER_WEAPON] 1 set B 328
				else set B 329
			}
			else state pricequote
			
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 51
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12
				ifvarand dukeupgrades[SHRINKER_WEAPON] 1 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 52
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12
				ifvarand dukeupgrades[SHRINKER_WEAPON] 2 set B 329
				else set B 328
			}
			else state pricequote
			ife weap_owned[51] YES set shade 0 else set shade 20
			gametextz NEWFONTSTART 330 118 B shade pal 16 0 0 xdim ydim 16384
			
			set TMP_A 53
			set pal 23
			
			ife weap_owned[TMP_A] YES // plasma rifle big mag
			{ 
				set pal 12
				ifvarand dukeupgrades[FREEZE_WEAPON] 2 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
		
			// second row of contextual strings
			set TMP_A 54
			set pal 23
			ife weap_owned[TMP_A] YES // babifier
			{
				set pal 12
				ifvarand dukeupgrades[GROW_WEAPON] 2 set B 328
				else set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 55
			set pal 23
			
			ife weap_owned[TMP_A] YES // fan service upgrade
			{ 
				set pal 12
				ifvarand dukeupgrades[GROW_WEAPON] 1 set B 329
				else set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 56
			set pal 23
			
			ife weap_owned[TMP_A] YES // fan service upgrade
			{ 
				set pal 12
				ifvarand dukeupgrades[GROW_WEAPON] 2 set B 329
				else set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 330 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 57
			set pal 23
			
			ife weap_owned[TMP_A] YES // regular plasma rifle
			{ 
				set pal 12
				ifvarand dukeupgrades[FREEZE_WEAPON] 2 set B 328 else
				set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
			
			
		
		} else
		ife vendor_screen 16 // duke devastator
		{
			gametextz NEWFONTSTART 320 70 320 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 9923 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 16537 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 16538 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 376 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 377 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1118 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 60
			set pal 23
			ife weap_owned[TMP_A] YES // NORMAL DEVASTATOR
			{ 
				set pal 12
				ifvarand dukeupgrades[DEVISTATOR_WEAPON] 1 set B 328
				else set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 61
			set pal 23
			ife weap_owned[TMP_A] YES // METEORATOR
			{ 
				set pal 12
				ifvarand dukeupgrades[DEVISTATOR_WEAPON] 1 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 62
			set pal 23
			ife weap_owned[TMP_A] YES // QUAD BARRELS
			{ 
				set pal 12
				ifvarand dukeupgrades[DEVISTATOR_WEAPON] 2 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 17 // duke railgun
		{
			gametextz NEWFONTSTART 320 70 321 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 9963 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9964 0 0 16 0 0 xdim ydim
			ifvarand dukeupgrades[DEVISTATOR_WEAPON] 4 set shade 0 else set shade 20
			rotatesprite 162 95 32768 0 16585 shade 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 383 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 384 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1123 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 70
			set pal 23
			ife weap_owned[TMP_A] YES // RAILGUN
			{ 
				set pal 12
				ifvarand dukeupgrades[DEVISTATOR_WEAPON] 4 set B 328
				else set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 71
			set pal 23
			ife weap_owned[TMP_A] YES  
			{ 
				set pal 12
				ifvarand dukeupgrades[DEVISTATOR_WEAPON] 4 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 72
			set pal 23
			ife weap_owned[TMP_A] YES  
			{
				set pal 12
				ifvarand dukeupgrades[DEVISTATOR_WEAPON] 8 set B 329
				else set B 328
			}
			else state pricequote
			ifvarand dukeupgrades[DEVISTATOR_WEAPON] 4 set shade 0 else set shade 20
			gametextz NEWFONTSTART 330 128 B shade pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 18 // duke tripbomb
		{
			gametextz NEWFONTSTART 320 70 322 0 0 orientation 0 0 xdim ydim 32768
			
			// pics of items
			rotatesprite 62 95 32768 0 9962 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9960 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 9961 0 0 16 0 0 xdim ydim
			rotatesprite 212 95 32768 0 16588 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 380 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 381 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 382 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 90 1128 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 80
			set pal 23
			ife weap_owned[80] YES // regular tripbomb
			{ 
				set pal 12
				ifvarand dukeupgrades[TRIPBOMB_WEAPON] 1 set B 328
				else set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 81
			set pal 23
			ife weap_owned[TMP_A] YES  // SPIDER BOMBS
			{ 
				set pal 12
				ifvarand dukeupgrades[TRIPBOMB_WEAPON] 1 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 82
			set pal 23
			ife weap_owned[TMP_A] YES  // SPIDER MOBILITY
			{ 
				set pal 12
				ifvarand dukeupgrades[TRIPBOMB_WEAPON] 2 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 83
			set pal 23
			ife weap_owned[TMP_A] YES  // DEATHBEAM MINE
			{ 
				set pal 12
				ifvarand dukeupgrades[TRIPBOMB_WEAPON] 4 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 128 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 19 // MISC GUNS
		{
			gametextz NEWFONTSTART 320 70 323 0 0 orientation 0 0 xdim ydim 32768
			
			// row 1
			rotatesprite 62 85 32768 0 9931 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9932 0 0 16 0 0 xdim ydim
			
			// row 2
			rotatesprite 62 133 32768 0 16531 0 0 16 0 0 xdim ydim
			
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 366 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 367 0 0 16 0 0 xdim ydim 10240
			
			// row 2 names
			gametextz NEWFONTSTART 130 128 1122 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 90
			set pal 23
			ife weap_owned[TMP_A] YES // NORMAL FREEZER
			{ 
				set pal 12
				ifvarand dukeupgrades[FREEZE_WEAPON] 1 set B 328
				else set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 91
			set pal 23
			ife weap_owned[TMP_A] YES  // FREEZE BEAM
			{ 
				set pal 12
				ifvarand dukeupgrades[FREEZE_WEAPON] 1 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 94
			set pal 23
			ife weap_owned[TMP_A] YES  // DEFLECT BULLETS
			{ 
				set pal 12
				ifvarand dukeupgrades[KNEE_WEAPON] 1 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			
		} else
		ife vendor_screen 20 // bombshell pistols
		{
			gametextz NEWFONTSTART 320 70 314 0 0 orientation 0 0 xdim ydim 32768
			
			// pics of items
			rotatesprite 62 85 32768 0 9915 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9933 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 9916 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 9925 0 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 330 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 325 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 326 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 327 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9907 0 0 16 0 0 xdim ydim
			rotatesprite 112 133 32768 0 9908 0 0 16 0 0 xdim ydim
			rotatesprite 162 133 32768 0 9906 0 0 16 0 0 xdim ydim
			rotatesprite 212 133 32768 0 12536 0 0 16 0 0 xdim ydim
			
			gametextz NEWFONTSTART 130 128 250 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 251 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 791 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 1352 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			
			set TMP_A 100
			set pal 23
			ife weap_owned[TMP_A] YES // DESERT EAGLE
			{ 
				set pal 12 
				ifvarand shellyupgrades[PISTOL_WEAPON] 8 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 101
			set pal 23
			ife weap_owned[TMP_A] YES // GLOCK 18
			{ 
				set pal 12 
				ifvarand shellyupgrades[PISTOL_WEAPON] 8 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 102
			set pal 23
			ife weap_owned[TMP_A] YES // AP PISTOL ROUNDS
			{ 
				set pal 12 
				ifvarand shellyupgrades[PISTOL_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 103
			set pal 23
			ife weap_owned[TMP_A] YES // DUAL WIELDING
			{ 
				set pal 12 
				ifvarand shellyupgrades[PISTOL_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// SECOND ROW STRINGS
			set TMP_A 104 // TMP_A == tempselect-100
			set pal 23
			ife weap_owned[TMP_A] YES // owns ALIEN PISTOL
			{ 
				set pal 12
				ifvarand shellyupgrades[PISTOL_WEAPON] 16 set B 328 
				else set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 105
			set pal 23
			ife weap_owned[TMP_A] YES // upgraded alien pistol
			{ 
				set pal 12
				ifvarand shellyupgrades[PISTOL_WEAPON] 16 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 106
			set pal 23
			ife weap_owned[TMP_A] YES // double pistol ammo
			{
				set pal 12
				ifvarand shellyupgrades[PISTOL_WEAPON] 32 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 107
			set pal 23
			ifvarand perks 2048 // faster pistol reload
				{ set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 21 // shelly shotguns and bows stuff
		{
			gametextz NEWFONTSTART 320 70 299 0 0 orientation 0 0 xdim ydim 32768
			// row1
			rotatesprite 62 85 32768 0 9941 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9928 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 16592 0 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 331 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 332 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 2870 0 0 16 0 0 xdim ydim 10240
			// row2
			rotatesprite 62 133 32768 0 9921 0 0 16 0 0 xdim ydim
			ife weap_owned[114] YES set shade 0 else set shade 20
			rotatesprite 112 133 32768 0 9946 shade 0 16 0 0 xdim ydim
			rotatesprite 162 133 32768 0 9944 shade 0 16 0 0 xdim ydim
			rotatesprite 212 133 32768 0 9945 shade 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			
			gametextz NEWFONTSTART 130 128 333 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 332 shade 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 334 shade 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 335 shade 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 110
			set pal 23
			ife weap_owned[TMP_A] YES // REGULAR SHOTGUN
			{ 
				set pal 12 
				// ifvarand shellyupgrades[SHOTGUN_WEAPON] 8 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 111
			set pal 23
			ife weap_owned[TMP_A] YES // EXPLOSIVE ROUNDS
			{ 
				set pal 12 
				ifvarand shellyupgrades[SHOTGUN_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 112
			set pal 23
			ife weap_owned[TMP_A] YES // SEMI-AUTO SHOTGUN
			{
				set pal 12 
				ifvarand shellyupgrades[SHOTGUN_WEAPON] 128 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 114
			set pal 23
			ife weap_owned[TMP_A] YES // VERSA BOW
			{ 
				set pal 12 
				ifvarand shellyupgrades[SHOTGUN_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 115
			set pal 23
			ifvarand shellyupgrades[SHOTGUN_WEAPON] 4 set shade 0 else set shade 20
			
			ife weap_owned[TMP_A] YES // explosive arrows
			{ 
				set pal 12 
				ifvarand shellyupgrades[SHOTGUN_WEAPON] 8 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 230 166 B shade pal 16 0 0 xdim ydim 16384
			
			set TMP_A 116
			set pal 23
			ife weap_owned[TMP_A] YES // MULTI ARROWS
			{ 
				set pal 12 
				ifvarand shellyupgrades[SHOTGUN_WEAPON] 16 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 166 B shade pal 16 0 0 xdim ydim 16384
			
			set TMP_A 117
			set pal 23
			ife weap_owned[TMP_A] YES // electric arrows
			{ 
				set pal 12 
				ifvarand shellyupgrades[SHOTGUN_WEAPON] 64 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 166 B shade pal 16 0 0 xdim ydim 16384
			
			
		} else
		ife vendor_screen 22 // shelly chaingun
		{
			gametextz NEWFONTSTART 320 70 316 0 0 orientation 0 0 xdim ydim 32768
			
			// pics of items
			rotatesprite 62 85 32768 0 9917 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9926 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 9948 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 9949 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 341 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 342 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 326 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 340 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9910 0 0 16 0 0 xdim ydim // shock rifle
			gametextz NEWFONTSTART 130 128 1121 0 0 16 0 0 xdim ydim 10240
			
			ifvarand weap_owned[124] YES set shade 0 else set shade 20
			rotatesprite 112 133 32768 0 16590 shade 0 16 0 0 xdim ydim // chain gang
			gametextz NEWFONTSTART 230 128 1156 shade 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			
			set TMP_A 120
			set pal 23
			ife weap_owned[TMP_A] YES // NORMAL M4
			{ 
				set pal 12 
				ifvarand shellyupgrades[CHAINGUN_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 121
			set pal 23
			ife weap_owned[TMP_A] YES // DOUBLED M4
			{ 
				set pal 12 
				ifvarand shellyupgrades[CHAINGUN_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 122
			set pal 23
			ife weap_owned[TMP_A] YES // AP ROUNDS
			{ 
				set pal 12 
				ifvarand shellyupgrades[CHAINGUN_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 123
			set pal 23
			ife weap_owned[TMP_A] YES // +MAX AMMO
			{ 
			
			set pal 12 
				ifvarand shellyupgrades[CHAINGUN_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 124
			set pal 23
			ife weap_owned[TMP_A] YES // shock rifle
			{ 
				set pal 12
				// ifvarand shellyupgrades[CHAINGUN_WEAPON] 8 set B 328
				// else 
				set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 125
			set pal 23
			ife weap_owned[TMP_A] YES // chain gang
			{ 
				set pal 12
				ifvarand shellyupgrades[CHAINGUN_WEAPON] 16 set B 328
				else set B 329
			} 
			else state pricequote
			ifvarand weap_owned[124] YES set shade 0 else set shade 20
			gametextz NEWFONTSTART 230 166 B shade pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 23 // shelly RPG
		{
			gametextz NEWFONTSTART 320 70 317 0 0 orientation 0 0 xdim ydim 32768
			// pics of items
			rotatesprite 62 95 32768 0 9951 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9943 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 9952 0 0 16 0 0 xdim ydim
			ife weap_owned[131] YES set shade 0 else set shade 20
			rotatesprite 212 95 32768 0 9953 shade 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 343 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 344 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 345 0 0 16 0 0 xdim ydim 10240
			ife weap_owned[131] YES set shade 0 else set shade 20
			gametextz NEWFONTSTART 430 90 346 shade 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 130
			set pal 23
			ife weap_owned[TMP_A] YES // ROCKET LAUNCHER
			{ 
				set pal 12 
				ifvarand shellyupgrades[RPG_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 131
			set pal 23
			ife weap_owned[TMP_A] YES // SMART RPG
			{ 
				set pal 12 
				ifvarand shellyupgrades[RPG_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 132
			set pal 23
			ife weap_owned[TMP_A] YES // FAST ROCKETS
			{ 
				set pal 12 
				ifvarand shellyupgrades[RPG_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 133
			set pal 23
			ife weap_owned[TMP_A] YES // MULTI ROCKETS
			{ 
				set pal 12 
				ifvarand shellyupgrades[RPG_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 128 B 0 pal 16 0 0 xdim ydim 16384
		} else
		ife vendor_screen 24 // shelly pipebomb
		{
			gametextz NEWFONTSTART 320 70 318 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 9956 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9957 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 16533 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 372 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 373 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1120 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 140
			set pal 23
			ife weap_owned[TMP_A] YES // BULLET TURRET
			{ 
				set pal 12 
				ifvarand shellyupgrades[HANDBOMB_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 141
			set pal 23
			ife weap_owned[TMP_A] YES  // MISSILE TURRET
			{ 
				set pal 12 
				ifvarand shellyupgrades[HANDBOMB_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 142
			set pal 23
			ife weap_owned[TMP_A] YES  // shielded turret
			{ 
				set pal 12 
				ifvarand shellyupgrades[HANDBOMB_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
			
			
		} else
		ife vendor_screen 25 // shelly energy weapons
		{
			gametextz NEWFONTSTART 320 70 319 0 0 orientation 0 0 xdim ydim 32768
			
			// row1
			rotatesprite 62 85 32768 0 9911 0 0 16 0 0 xdim ydim // shrinker
			rotatesprite 112 85 32768 0 9914 0 0 16 0 0 xdim ydim // BMFG
			ife weap_owned[151] YES set shade 0 else set shade 20
			rotatesprite 162 85 32768 0 9982 shade 22 16 0 0 xdim ydim // BMFG ALTFIRE
			rotatesprite 212 85 32768 0 16586 0 0 16 0 0 xdim ydim // plasma doubled ammo
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 385 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 386 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 1117 0 22 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 1125 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9920 0 0 16 0 0 xdim ydim // babifier
			rotatesprite 112 133 32768 0 16536 0 0 16 0 0 xdim ydim // fan service
			rotatesprite 162 133 32768 0 18825 0 0 16 0 0 xdim ydim // BFF ray
			rotatesprite 212 133 32768 0 16587 0 0 16 0 0 xdim ydim // plasma rifle
			
			
			gametextz NEWFONTSTART 130 128 387 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 388 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 2890 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 1124 0 0 16 0 0 xdim ydim 10240
			
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 150
			set pal 23
			ife weap_owned[TMP_A] YES // SHRINKER
			{ 
				set pal 12 
				ifvarand shellyupgrades[SHRINKER_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 151
			set pal 23
			ife weap_owned[TMP_A] YES // BMFG
			{ 
				set pal 12 
				ifvarand shellyupgrades[SHRINKER_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 152
			set pal 23
			ife weap_owned[TMP_A] YES 
			{ 
				set pal 12
				ifvarand shellyupgrades[SHRINKER_WEAPON] 2 set B 329
				else set B 328
			}
			else state pricequote
			ife weap_owned[151] YES set shade 0 else set shade 20
			gametextz NEWFONTSTART 330 118 B shade pal 16 0 0 xdim ydim 16384
			
			set TMP_A 153
			set pal 23
			
			ife weap_owned[TMP_A] YES // plasma rifle double ammo
			{ 
				set pal 12
				ifvarand shellyupgrades[FREEZE_WEAPON] 2 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
		
			// second row of contextual strings
			set TMP_A 154
			set pal 23
			ife weap_owned[TMP_A] YES // babifier
			{ 
				set pal 12 
				ifvarand shellyupgrades[GROW_WEAPON] 2 set B 328 else
				set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 155
			set pal 23
			
			ife weap_owned[TMP_A] YES // fan service upgrade
			{ 
				set pal 12 
				ifvarand shellyupgrades[GROW_WEAPON] 1 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 156
			set pal 23
			
			ife weap_owned[TMP_A] YES // BFF ray
			{ 
				set pal 12
				ifvarand shellyupgrades[GROW_WEAPON] 2 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 330 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 157
			set pal 23
			
			ife weap_owned[TMP_A] YES // regular plasma rifle
			{ 
				set pal 12
				ifvarand shellyupgrades[FREEZE_WEAPON] 2 set B 328 else
				set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
			
			
			
		} else
		ife vendor_screen 26 // shelly devastator
		{
			gametextz NEWFONTSTART 320 70 320 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 9927 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9959 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 16538 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 378 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 379 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1118 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 160
			set pal 23
			ife weap_owned[TMP_A] YES // DOUBLE G
			{ 
				set pal 12 
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 1 set B 328 else
				set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 161
			set pal 23
			ife weap_owned[TMP_A] YES // STICKY BOMBS
			{ 
				set pal 12 
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 162
			set pal 23
			ife weap_owned[TMP_A] YES // QUAD BARRELS
			{
				set pal 12
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 2 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 27 // shelly railgun
		{
			gametextz NEWFONTSTART 320 70 321 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 9963 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9964 0 0 16 0 0 xdim ydim
			ifvarand shellyupgrades[DEVISTATOR_WEAPON] 4 set shade 0 else set shade 20
			rotatesprite 162 95 32768 0 16585 shade 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 383 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 384 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1123 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 170
			set pal 23
			ife weap_owned[TMP_A] YES // RAILGUN
			{ 
				set pal 12
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 4 set B 328
				else set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 171
			set pal 23
			ife weap_owned[TMP_A] YES // BARRET PENETRATOR 
			{ 
				set pal 12
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 4 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 172
			set pal 23
			ife weap_owned[TMP_A] YES  
			{ 
				set pal 12
				ifvarand shellyupgrades[DEVISTATOR_WEAPON] 8 set B 329
				else set B 328
			}
			else state pricequote
			ifvarand shellyupgrades[DEVISTATOR_WEAPON] 4 set shade 0 else set shade 20
			gametextz NEWFONTSTART 330 128 B shade pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 28 // shelly tripbomb
		{
			gametextz NEWFONTSTART 320 70 322 0 0 orientation 0 0 xdim ydim 32768
			
			// pics of items
			rotatesprite 62 95 32768 0 9962 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9960 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 9961 0 0 16 0 0 xdim ydim
			rotatesprite 212 95 32768 0 16588 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 380 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 381 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 382 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 90 1128 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 180
			set pal 23
			ife weap_owned[TMP_A] YES // LASER TRIPBOMBS
			{ 
				set pal 12 
				ifvarand shellyupgrades[TRIPBOMB_WEAPON] 1 set B 328 else
				set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 181
			set pal 23
			ife weap_owned[TMP_A] YES // SPIDER MINES
			{ 
				set pal 12 
				ifvarand shellyupgrades[TRIPBOMB_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 182
			set pal 23
			ife weap_owned[TMP_A] YES // SPIDER MOBILITY
			{ 
				set B 329 set pal 12 
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 183
			set pal 23
			ife weap_owned[TMP_A] YES // DEATHBEAM MINE
			{ 
				set B 329 set pal 12 
			}
			else state pricequote
			gametextz NEWFONTSTART 430 128 B 0 pal 16 0 0 xdim ydim 16384
		} else
		ife vendor_screen 29 // shelly misc guns
		{
			gametextz NEWFONTSTART 320 70 323 0 0 orientation 0 0 xdim ydim 32768

			// pics of items
			rotatesprite 62 85 32768 0 9929 0 0 16 0 0 xdim ydim
			rotatesprite 112 85 32768 0 9930 0 0 16 0 0 xdim ydim
			
			// row 2
			rotatesprite 62 133 32768 0 16531 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 368 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 369 0 0 16 0 0 xdim ydim 10240
			
			// row 2 names
			gametextz NEWFONTSTART 130 128 1122 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 190
			set pal 23
			ife weap_owned[TMP_A] YES // INCINERATOR
			{ 
				set pal 12 
				ifvarand shellyupgrades[FREEZE_WEAPON] 1 set B 328 else
				set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 191
			set pal 23
			ife weap_owned[TMP_A] YES  
			{ 
				set pal 12 
				ifvarand shellyupgrades[FREEZE_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 194
			set pal 23
			ife weap_owned[TMP_A] YES  // DEFLECT BULLETS
			{ 
				set pal 12
				ifvarand shellyupgrades[KNEE_WEAPON] 1 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			
		}
		else
		ife vendor_screen 30 // wes pistols
		{
			gametextz NEWFONTSTART 320 70 314 0 0 orientation 0 0 xdim ydim 32768
			// pics of items
			rotatesprite 62 85 32768 0 19262 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 9948 0 0 16 0 0 xdim ydim
			// rotatesprite 212 85 32768 0 9924 0 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			
			gametextz NEWFONTSTART 130 80 1240 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 326 0 0 16 0 0 xdim ydim 10240
			// gametextz NEWFONTSTART 430 80 327 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9907 0 0 16 0 0 xdim ydim
			rotatesprite 112 133 32768 0 9908 0 0 16 0 0 xdim ydim
			rotatesprite 162 133 32768 0 9906 0 0 16 0 0 xdim ydim
			rotatesprite 212 133 32768 0 12536 0 0 16 0 0 xdim ydim
			
			gametextz NEWFONTSTART 130 128 250 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 251 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 791 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 1352 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			
			set TMP_A 200
			set pal 23
			ife weap_owned[TMP_A] YES // 8-shooter
			{ 
				set pal 12 
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384

			
			// SECOND ROW STRINGS
			set TMP_A 204 // TMP_A == tempselect-100
			set pal 23
			ife weap_owned[TMP_A] YES // owns ALIEN PISTOL
			{ 
				set pal 12
				ifvarand wesupgrades[PISTOL_WEAPON] 16 set B 328 
				else set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 202
			set pal 23
			ife weap_owned[TMP_A] YES // AP PISTOL ROUNDS
			{ 
				set pal 12 
				ifvarand wesupgrades[PISTOL_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 205
			set pal 23
			ife weap_owned[TMP_A] YES // upgraded alien pistol
			{ 
				set pal 12
				ifvarand wesupgrades[PISTOL_WEAPON] 16 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 206
			set pal 23
			ife weap_owned[TMP_A] YES // double pistol ammo
			{
				set pal 12
				ifvarand wesupgrades[PISTOL_WEAPON] 32 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 207
			set pal 23
			ifvarand perks 2048 // faster pistol reload
				{ set B 329 set pal 12 }
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
		}
		else
		ife vendor_screen 31 // wes shotguns and bows stuff
		{
			gametextz NEWFONTSTART 320 70 299 0 0 orientation 0 0 xdim ydim 32768
			// row1
			rotatesprite 62 85 32768 0 19265 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 16592 0 0 16 0 0 xdim ydim
			
			// // names of items, drawn above the items
			// gametextz NEWFONTSTART 130 80 331 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9921 0 0 16 0 0 xdim ydim
			ife weap_owned[214] YES set shade 0 else set shade 20
			rotatesprite 112 133 32768 0 19279 shade 0 16 0 0 xdim ydim
			rotatesprite 162 133 32768 0 9944 shade 0 16 0 0 xdim ydim
			rotatesprite 212 133 32768 0 19278 shade 0 16 0 0 xdim ydim
			// names of items, drawn above the items
			
			gametextz NEWFONTSTART 130 128 333 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 1232 shade 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 128 334 shade 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 2870 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 1233 shade 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 210
			set pal 23
			ife weap_owned[TMP_A] YES // REGULAR SHOTGUN
			{ 
				set pal 12 
				// ifvarand shellyupgrades[SHOTGUN_WEAPON] 8 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			
			
			set TMP_A 212
			set pal 23
			ife weap_owned[TMP_A] YES // SEMI-AUTO SHOTGUN
			{
				set pal 12 
				ifvarand wesupgrades[SHOTGUN_WEAPON] 128 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 214
			set pal 23
			ife weap_owned[TMP_A] YES // VERSA BOW
			{ 
				set pal 12 
				ifvarand wesupgrades[SHOTGUN_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 215
			set pal 23
			ifvarand wesupgrades[SHOTGUN_WEAPON] 4 set shade 0 else set shade 20
			
			ife weap_owned[TMP_A] YES // radioactive arrows
			{
				set pal 12 
				ifvarand wesupgrades[SHOTGUN_WEAPON] 8 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 230 166 B shade pal 16 0 0 xdim ydim 16384
			
			set TMP_A 216
			set pal 23
			ife weap_owned[TMP_A] YES // MULTI ARROWS
			{ 
				set pal 12 
				ifvarand wesupgrades[SHOTGUN_WEAPON] 16 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 166 B shade pal 16 0 0 xdim ydim 16384
			
			set TMP_A 217
			set pal 23
			ife weap_owned[TMP_A] YES // ELEMENTAL ARROWS
			{ 
				set pal 12 
				ifvarand wesupgrades[SHOTGUN_WEAPON] 768 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 166 B shade pal 16 0 0 xdim ydim 16384
			
			
		}
		else
		ife vendor_screen 32 // wes chaingun
		{
			gametextz NEWFONTSTART 320 70 316 0 0 orientation 0 0 xdim ydim 32768
			
			// pics of items
			rotatesprite 62 85 32768 0 19266 0 0 16 0 0 xdim ydim
			// rotatesprite 112 85 32768 0 9926 0 0 16 0 0 xdim ydim
			rotatesprite 162 85 32768 0 9948 0 0 16 0 0 xdim ydim
			rotatesprite 212 85 32768 0 9949 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 1236 0 0 16 0 0 xdim ydim 10240
			// gametextz NEWFONTSTART 230 80 342 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 80 326 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 340 0 0 16 0 0 xdim ydim 10240
			
			// row2
			rotatesprite 62 133 32768 0 9910 0 0 16 0 0 xdim ydim // shock rifle
			gametextz NEWFONTSTART 130 128 1121 0 0 16 0 0 xdim ydim 10240
			
			ifvarand weap_owned[224] YES set shade 0 else set shade 20
			rotatesprite 112 133 32768 0 16590 shade 0 16 0 0 xdim ydim // chain gang
			gametextz NEWFONTSTART 230 128 1156 shade 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			
			set TMP_A 220
			set pal 23
			ife weap_owned[TMP_A] YES // NORMAL uzi
			{ 
				set pal 12 
				ifvarand wesupgrades[CHAINGUN_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// set TMP_A 221
			// set pal 23
			// ife weap_owned[TMP_A] YES // DOUBLED uzi
			// { 
				// set pal 12 
				// ifvarand wesupgrades[CHAINGUN_WEAPON] 1 set B 329 else
				// set B 328
			// }
			// else state pricequote
			// gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 222
			set pal 23
			ife weap_owned[TMP_A] YES // AP ROUNDS
			{ 
				set pal 12 
				ifvarand wesupgrades[CHAINGUN_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 223
			set pal 23
			ife weap_owned[TMP_A] YES // +MAX AMMO
			{ 
			
			set pal 12 
				ifvarand wesupgrades[CHAINGUN_WEAPON] 4 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
			
			// second row of contextual strings
			set TMP_A 224
			set pal 23
			ife weap_owned[TMP_A] YES // executioner
			{ 
				set pal 12
				// ifvarand wesupgrades[CHAINGUN_WEAPON] 8 set B 328
				// else 
				set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 225
			set pal 23
			ife weap_owned[TMP_A] YES // chain gang
			{ 
				set pal 12
				ifvarand wesupgrades[CHAINGUN_WEAPON] 16 set B 328
				else 
				set B 329
			} 
			else state pricequote
			ifvarand weap_owned[224] YES set shade 0 else set shade 20
			gametextz NEWFONTSTART 230 166 B shade pal 16 0 0 xdim ydim 16384
			
		}
		else
		ife vendor_screen 33 // Wes RPG
		{
			gametextz NEWFONTSTART 320 70 317 0 0 orientation 0 0 xdim ydim 32768
			// pics of items
			rotatesprite 62 95 32768 0 19263 0 0 16 0 0 xdim ydim
			
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 1237 0 0 16 0 0 xdim ydim 10240
			
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 230
			set pal 23
			ife weap_owned[TMP_A] YES // ROCKET LAUNCHER
			{ 
				set pal 12 
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 34 // Wes pipebomb
		{
			gametextz NEWFONTSTART 320 70 1238 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 19261 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 19258 0 0 16 0 0 xdim ydim
			ifvarand wesupgrades[HANDBOMB_WEAPON] 1 set shade 0 else set shade 20
			rotatesprite 162 95 32768 0 19259 shade 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 1239 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 371 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1119 0 shade 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 240
			set pal 23
			ife weap_owned[TMP_A] YES // Ice bombs
			{
				set pal 12 
				ifvarand wesupgrades[HANDBOMB_WEAPON] 1 set B 328 else
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 241
			set pal 23
			ife weap_owned[TMP_A] YES  // Cluster Bombs
			{
				set pal 12 
				ifvarand wesupgrades[HANDBOMB_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 242
			set pal 23
			ife weap_owned[TMP_A] YES  // Smart Bomblets
			{ 
				set pal 12 
				ifvarand wesupgrades[HANDBOMB_WEAPON] 2 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
		} else
		ife vendor_screen 35 // Wes energy weapons
		{
			gametextz NEWFONTSTART 320 70 1241 0 0 orientation 0 0 xdim ydim 32768
			
			// row1
			rotatesprite 62 85 32768 0 19264 0 21 16 0 0 xdim ydim // Transfusion gun
			rotatesprite 112 85 32768 0 19271 0 0 16 0 0 xdim ydim // blood zombie
			rotatesprite 212 85 32768 0 16586 0 0 16 0 0 xdim ydim // plasma doubled ammo
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 1204 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 1247 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 80 1125 0 0 16 0 0 xdim ydim 10240
			
			// row2
			
			rotatesprite 62 133 32768 0 19264 0 0 16 0 0 xdim ydim // SCAR Rifle
			rotatesprite 112 133 32768 0 19270 0 0 16 0 0 xdim ydim // full auto
			rotatesprite 212 133 32768 0 16587 0 0 16 0 0 xdim ydim // plasma rifle
			
			gametextz NEWFONTSTART 130 128 1207 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 128 1246 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 128 1124 0 0 16 0 0 xdim ydim 10240
			
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 250
			set pal 23
			ife weap_owned[TMP_A] YES // Transfusion
			{ 
				set pal 12 
				set B 329
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 251
			set pal 23
			ife weap_owned[TMP_A] YES // blood zombie
			{ 
				set pal 12 
				ifvarand wesupgrades[SHRINKER_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384

			set TMP_A 253
			set pal 23
			
			ife weap_owned[TMP_A] YES // plasma rifle double ammo
			{ 
				set pal 12
				ifvarand wesupgrades[FREEZE_WEAPON] 2 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 118 B 0 pal 16 0 0 xdim ydim 16384
		
			// second row of contextual strings
			set TMP_A 254
			set pal 23
			ife weap_owned[TMP_A] YES // SCAR rifle
			{ 
				set pal 12 
				set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 255
			set pal 23
			ife weap_owned[TMP_A] YES // SCAR full auto
			{ 
				set pal 12 
				ifvarand wesupgrades[GROW_WEAPON] 1 set B 329 else
				set B 328
			} 
			else state pricequote
			gametextz NEWFONTSTART 230 166 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 257
			set pal 23
			
			ife weap_owned[TMP_A] YES // regular plasma rifle
			{ 
				set pal 12
				ifvarand wesupgrades[FREEZE_WEAPON] 2 set B 328 else
				set B 329
			} 
			else state pricequote
			gametextz NEWFONTSTART 430 166 B 0 pal 16 0 0 xdim ydim 16384
		} else
		ife vendor_screen 36 // Wes devastator
		{
			gametextz NEWFONTSTART 320 70 320 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 19268 0 0 16 0 0 xdim ydim
			
			rotatesprite 162 95 32768 0 19267 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 376 0 0 16 0 0 xdim ydim 10240
			
			gametextz NEWFONTSTART 330 90 1118 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 260
			set pal 23
			ife weap_owned[TMP_A] YES // hitscan devastator
			{ 
				set pal 12 
				ifvarand wesupgrades[DEVISTATOR_WEAPON] 1 set B 328 else
				set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			
			set TMP_A 262
			set pal 23
			ife weap_owned[TMP_A] YES // QUAD BARRELS
			{
				set pal 12
				ifvarand wesupgrades[DEVISTATOR_WEAPON] 2 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 37 // Wes railgun
		{
			gametextz NEWFONTSTART 320 70 321 0 0 orientation 0 0 xdim ydim 32768
			
			rotatesprite 62 95 32768 0 9963 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9964 0 0 16 0 0 xdim ydim
			ifvarand wesupgrades[DEVISTATOR_WEAPON] 4 set shade 0 else set shade 20
			rotatesprite 162 95 32768 0 16585 shade 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 383 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 384 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 1123 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 270
			set pal 23
			ife weap_owned[TMP_A] YES // RAILGUN
			{ 
				set pal 12
				ifvarand wesupgrades[DEVISTATOR_WEAPON] 4 set B 328
				else set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 271
			set pal 23
			ife weap_owned[TMP_A] YES // BARRET PENETRATOR 
			{ 
				set pal 12
				ifvarand wesupgrades[DEVISTATOR_WEAPON] 4 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 272
			set pal 23
			ife weap_owned[TMP_A] YES  
			{ 
				set pal 12
				ifvarand wesupgrades[DEVISTATOR_WEAPON] 8 set B 329
				else set B 328
			}
			else state pricequote
			ifvarand wesupgrades[DEVISTATOR_WEAPON] 4 set shade 0 else set shade 20
			gametextz NEWFONTSTART 330 128 B shade pal 16 0 0 xdim ydim 16384
			
		} else
		ife vendor_screen 38 // Wes tripbomb
		{
			gametextz NEWFONTSTART 320 70 322 0 0 orientation 0 0 xdim ydim 32768
			
			// pics of items
			rotatesprite 62 95 32768 0 9962 0 0 16 0 0 xdim ydim
			rotatesprite 112 95 32768 0 9960 0 0 16 0 0 xdim ydim
			rotatesprite 162 95 32768 0 9961 0 0 16 0 0 xdim ydim
			rotatesprite 212 95 32768 0 16588 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 90 380 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 90 381 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 330 90 382 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 430 90 1128 0 0 16 0 0 xdim ydim 10240
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 280
			set pal 23
			ife weap_owned[TMP_A] YES // LASER TRIPBOMBS
			{ 
				set pal 12 
				ifvarand wesupgrades[TRIPBOMB_WEAPON] 1 set B 328 else
				set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 281
			set pal 23
			ife weap_owned[TMP_A] YES // SPIDER MINES
			{ 
				set pal 12 
				ifvarand wesupgrades[TRIPBOMB_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 282
			set pal 23
			ife weap_owned[TMP_A] YES // SPIDER MOBILITY
			{ 
				set B 329 set pal 12 
			}
			else state pricequote
			gametextz NEWFONTSTART 330 128 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 283
			set pal 23
			ife weap_owned[TMP_A] YES // DEATHBEAM MINE
			{ 
				set B 329 set pal 12 
			}
			else state pricequote
			gametextz NEWFONTSTART 430 128 B 0 pal 16 0 0 xdim ydim 16384
		} else
		ife vendor_screen 39 // Wes misc guns
		{
			gametextz NEWFONTSTART 320 70 323 0 0 orientation 0 0 xdim ydim 32768

			// pics of items
			rotatesprite 62 85 32768 0 19260 0 0 16 0 0 xdim ydim // blade launcher
			rotatesprite 112 85 32768 0 19269 0 0 16 0 0 xdim ydim // BL upgrade
			
			// row 2
			rotatesprite 62 133 32768 0 16531 0 0 16 0 0 xdim ydim
			
			// names of items, drawn above the items
			gametextz NEWFONTSTART 130 80 1243 0 0 16 0 0 xdim ydim 10240
			gametextz NEWFONTSTART 230 80 1242 0 0 16 0 0 xdim ydim 10240
			
			// row 2 names
			gametextz NEWFONTSTART 130 128 1122 0 0 16 0 0 xdim ydim 10240 // deflect hitscan
			
			// contextual string below item; "owned", "equipped", or the price
			set TMP_A 290
			set pal 23
			ife weap_owned[TMP_A] YES // blade launcher
			{
				set pal 12 
				ifvarand wesupgrades[FREEZE_WEAPON] 1 set B 328 else
				set B 329 
			}
			else state pricequote
			gametextz NEWFONTSTART 130 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 291
			set pal 23
			ife weap_owned[TMP_A] YES  
			{ 
				set pal 12 
				ifvarand wesupgrades[FREEZE_WEAPON] 1 set B 329 else
				set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 230 118 B 0 pal 16 0 0 xdim ydim 16384
			
			set TMP_A 294
			set pal 23
			ife weap_owned[TMP_A] YES  // DEFLECT BULLETS
			{ 
				set pal 12
				ifvarand wesupgrades[KNEE_WEAPON] 1 set B 329
				else set B 328
			}
			else state pricequote
			gametextz NEWFONTSTART 130 166 B 0 pal 16 0 0 xdim ydim 16384
			
			
		}
		ifg vendor_screen 0
		ife vendorupgrade YES
		{
			state shadepulse
			gametextz NEWFONTSTART 320 44 738 shade 7 0 0 0 xdim ydim 20480
		}
	}
	ifg vendor_screen 0 
	{
		set orientation 0 // 1024
		ife tempselect 10 set pal 121 else set pal 10
		rotatesprite 288 38 13824 0 WINDOWCLOSE 0 pal orientation 0 0 xdim ydim
		
		set orientation 528
		digitalnumber 2837 270 15 credits 0 8 orientation 0 0 xdim ydim 
		set x 247
		set tempc credits
		div tempc 100
		ifg tempc 9
		{
			sub x 5
			div tempc 10
			ifg tempc 9
			{
				sub x 5
				div tempc 10
				ifg tempc 9
				{
					sub x 5
				}
			}
		}
		rotatesprite x 15 16384 0 12249 0 23 orientation 0 0 xdim ydim
		// rotatesprite x 15 65536 0 2825 0 8 orientation 0 0 xdim ydim
		
		ife attmode YES
		ifge vendor_screen 0
		{
			ifg leveltoken 0
			{
				ife VOLUME 0
				{
					gametextz NEWFONTSTART 320 182 1160 0 21 16 0 0 xdim ydim 20480
				}
				else
				{
					digitalnumberz 12821 107 184 leveltoken 0 12 orientation 0 0 xdim ydim 32768
					
					ife tempselect 904 state shadepulse else set shade 0
					gametextz NEWFONTSTART 47 184 1111 shade 8 orientation 0 0 xdim ydim 20480
					ife tempselect 905 state shadepulse else set shade 0
					gametextz NEWFONTSTART 250 184 1112 shade 21 orientation 0 0 xdim ydim 20480
				}
			}
			ife challenge YES
			{
				ifge cursorx 21 ifle cursorx 48
				ifge cursory 175 ifle cursory 196 state shadepulse
				else set shade 0
				rotatesprite -30 175 16384 0 14838 shade 0 orientation 0 0 xdim ydim
			}
		}
		
		set orientation 16 // 0
		ife pchar 2 set picnum 9983 else
		ife pchar 0 set picnum 9888 else set picnum 9889
		rotatesprite cursorx cursory 28672 0 picnum 0 0 orientation 0 0 xdim ydim
		
		// info box display code
		ife vendor_screen 4
		{
			// gametextz NEWFONTSTART 120 149 1141 0 12 16 0 0 xdim ydim 16384 // DMG +%
			// gametextz NEWFONTSTART 120 155 1142 0 12 16 0 0 xdim ydim 16384  // SPEED
			// gametextz NEWFONTSTART 120 161 1143 0 12 16 0 0 xdim ydim 16384  // SALVO
			// gametextz NEWFONTSTART 120 167 1144 0 12 16 0 0 xdim ydim 16384  // LEACH
			ifge cursorx 30 ifle cursorx 170
			{
				set TMP_A -1
				ifge cursory 146 ifle cursory 152 set TMP_A 2760 else
				ifge cursory 153 ifle cursory 158 set TMP_A 2770 else
				ifge cursory 159 ifle cursory 164 set TMP_A 2780 else
				ifge cursory 165 ifle cursory 170 set TMP_A 2790
				
				ifn TMP_A -1
				{
					set helpx cursorx
					set helpy cursory
					add helpx 30
					sub helpy 10
					rotatesprite helpx helpy 32768 0 INFOBACK 0 0 16 0 0 xdim ydim
					
					add helpy 5
					add helpx 5
					mul helpx 65536
					mul helpy 65536
					set z 10240
				
					set TMP_B 0
					//		screentext <tilenum> <x> <y> <zoom> <block angle> <character angle> <quote> <shade> <pal> <orientation> <alpha> <xspace> <yline> <xbetween> <ybetween> <text flags> <x1> <y1> <x2> <y2> 
					whilevarn TMP_B 8
					{
						screentext NEWFONTSTART helpx helpy z 0 0 TMP_A 0 12 2064 0 8 32 16 32 160 0 0 xdim ydim
						add TMP_A 1
						add TMP_B 1
						add helpy 327680
						qstrlen temp TMP_A
						ifl temp 3 set TMP_B 8
					}
				}
			}
			
		}
		else
		ifge vendor_screen 0
		ifg tempselect 10
		ifl tempselect 630
		{
			set helpx cursorx
			set helpy cursory
			add helpx 30
			
			rotatesprite helpx helpy 32768 0 INFOBACK 0 0 16 0 0 xdim ydim
			
			add helpy 5
			add helpx 5
			mul helpx 65536
			mul helpy 65536
			set z 10240
			
			set TMP_A -1 // starting quote number
			
			switch tempselect
			case 100 // Duke's standard pistol
				set TMP_A 2000
			break
			case 200 // Bombshell standard pistol
				set TMP_A 2010
			break
			case 300 // Wes Revolver
				set TMP_A 2960
			break
			case 101 case 201 // glock
				set TMP_A 2020
			break
			case 102 case 202 // AP ROUNDS
			case 302
				set TMP_A 2030
			break
			case 103 case 203 // DUAL WIELD
			case 303
				set TMP_A 2040
			break
			case 104 case 204 // alien blaster
			case 304
				set TMP_A 2050
			break
			case 105 case 205 // radiation upgrade
			case 305
				set TMP_A 2060
			break
			case 106 case 206 // increased ammo
			case 123 case 223
			case 306 case 323
				set TMP_A 2070
			break
			case 107 case 207 case 307 // increased pistol reload speed
				set TMP_A 3170
			break
			case 110	// defender shotgun
				set TMP_A 2080
			break
			
			case 112	// DB shotty
				set TMP_A 2880
			break
			
			case 210	// SPAS 12 shotgun
				set TMP_A 2100
			break
			
			case 310	// Wes Benelli M3 shotgun
				set TMP_A 2910
			break
			
			case 111	// explosive shells
			case 211
				set TMP_A 2090
			break
			
			case 113    // +reload speed
				set TMP_A 3120
			break
			
			case 114	// atomic shotty
				set TMP_A 2110
			break
			case 115	// rad shells
				set TMP_A 2120
			break
			case 116 	// burstfire
				set TMP_A 2130
			break
			case 212	// semi-auto shotty
			case 312
				set TMP_A 2870
			break
			case 214	// versa bow
				set TMP_A 2140
			break
			case 314	// Wes versa bow
				set TMP_A 2940
			break
			case 215   // bomb arrows
				set TMP_A 2150
			break
			case 315	// radioactive arrows
				set TMP_A 2920
			break
			case 216   // multi arrows
			case 316
				set TMP_A 2160
			break
			case 217   // shock arrows
				set TMP_A 2170
			break
			case 317   // elemental arrows
				set TMP_A 2930
			break
			case 120	// ripper chaingun
				set TMP_A 2180
			break
			case 320	// uzi
				set TMP_A 2950
			break
			
			case 121	// minigun
				set TMP_A 2200
			break
			
			case 122	// AP rounds
			case 222
			case 322
				set TMP_A 2190
			break
			
			case 220
				set TMP_A 2210 // M4 Carbine
			break
			
			case 221
				set TMP_A 2220 // double M4
			break
			
			case 124	// Executioner
			case 224
			case 324
				set TMP_A 2230
			break
			
			case 125	// chaingang upgrade
			case 225
			case 325
				set TMP_A 2240
			break
			
			case 130	// Duke RPG
				set TMP_A 2250
			break
			
			case 230	// Bombshell RPG
				set TMP_A 2290
			break
			
			case 330	// Wes RPG
				set TMP_A 2970	
			break
			
			case 131	// SMART LAUNCHER
			case 231
				set TMP_A 2260
			break
			
			case 132	// FASTER ROCKETS
			case 232
				set TMP_A 2270
			break
			
			case 133	// multi rockets
			case 233
				set TMP_A 2280
			break
			
			case 140	// pipebombs
				set TMP_A 2300
			break
			
			case 141	// cluster bombs
				set TMP_A 2310
			break
			
			case 142	// smart bomblets
				set TMP_A 2320
			break
			
			case 240	// rolly turret
				set TMP_A 2330
			break
			
			case 241	// missile turret
				set TMP_A 2340	
			break
			
			case 242	// shielded turret
				set TMP_A 2350
			break
			
			case 340	// ice bombs
				set TMP_A 2980
			break
			
			case 341	// ice bomblets
				set TMP_A 2990
			break
			
			case 342	// seeking
				set TMP_A 3000
			break
			
			case 150
			case 250	// shrinker
				set TMP_A 2360
			break
			
			case 350	// transfusion gun
				set TMP_A 3010
			break
			
			case 151
			case 251	// bmfg
				set TMP_A 2370
			break
			
			case 351	// blood zombie
				set TMP_A 3060
			break
			
			case 152
			case 252	// shrinker vortex altfire
				set TMP_A 2380
			break
			
			case 153
			case 253	// plasma big mag
			case 353
				set TMP_A 2420
			break
			
			case 154
			case 254	// babifier
				set TMP_A 2390
			break
			
			case 354	// SCAR rifle
				set TMP_A 3020
			break
			
			case 155
			case 255	// fan service
				set TMP_A 2400
			break
			
			case 355	// FULL AUTO
				set TMP_A 3070
			break
			
			case 156
			case 256	// BFF RAY
				set TMP_A 2890
			break
			
			case 157
			case 257	// plasma rifle
			case 357
				set TMP_A 2410
			break
			
			
			case 160 	// devastator
				set TMP_A 2430
			break
			
			case 260	// double D
				set TMP_A 2460
			break
			
			case 360 	// hitscan devastator
				set TMP_A 3030
			break
			
			case 261	// sticky bombs
				set TMP_A 2470
			break
			
			case 161 	// meteorator
				set TMP_A 2440
			break
			
			case 162	// quad barrels
			case 262 
			case 362
				set TMP_A 2450
			break
			
			case 170	// railgun
			case 270
			case 370
				set TMP_A 2480
			break
			
			case 171	// penetrator
			case 271
			case 371
				set TMP_A 2490
			break
			
			case 172	// penetrator semi-auto
			case 272
			case 372
				set TMP_A 2500
			break
			
			case 180	// laser tripbomb
			case 280
			case 380
				set TMP_A 2510
			break
			
			case 181	// spider mine
			case 281
			case 381
				set TMP_A 2520
			break
			
			case 182	// spider mine mobility
			case 282
			case 382
				set TMP_A 2530
			break
			
			case 183	// deathbeam mine
			case 283
			case 383
				set TMP_A 2540
			break
			
			case 190	// classic freezer	
				set TMP_A 2550
			break
			
			case 191	// freeze beam
				set TMP_A 2560
			break
			
			case 290	// incinerator
				set TMP_A 2570
			break
			
			case 291	// fire beam
				set TMP_A 2580
			break
			
			case 194	// deflect hitscan with sword
			case 294
			case 394
				set TMP_A 2590
			break
			
			case 390	// blade launcher
				set TMP_A 3040
			break
			
			case 391	// increased ROF
				set	TMP_A 3050
			break
			
			case 600	// standard medkit
				set TMP_A 2680
			break
			
			case 601	// refillable medkit
				set TMP_A 2690
			break
			
			case 602	// IR goggles
				set TMP_A 2700
			break
			
			case 603	// aimbot goggles
				set TMP_A 2710
			break
			
			case 604	// holoduke
				set TMP_A 2720
			break
			
			case 605	// holo t-bagger
				ife pchar 2 set TMP_A 2900 else
				set TMP_A 2730
			break
			
			case 606	// protective boots
				set TMP_A 2740
			break
			
			case 607	// double-jump boots
				set TMP_A 2750
			break
			
			case 610	// +10 MAX HEALTH
				set TMP_A 2600
			break
			
			case 611	// COIN MAGNET
				set TMP_A 2610
			break
			
			case 612	// HEALTH REGEN +10
				set TMP_A 2620
			break
			
			case 613	// EDF RESCUE
				set TMP_A 2630
			break
			
			case 614	// QUICKER KICKS
				set TMP_A 2640
			break
			
			case 615	// iframes; was RADAR
				set TMP_A 3110 // 2650
			break
			
			case 616	// NO SELF DAMAGE
				set TMP_A 2660
			break
			
			case 617	// SIDEGUNS
				set TMP_A 2670
			break
			
			case 620	// DUKE PERK
				set TMP_A 3130
			break
			
			case 621	// BOMBSHELL PERK
				set TMP_A 3140
			break
			
			case 622	// WES PERK
				set TMP_A 3150
			break
			
			case 623	// AUTO-REVIVE
				set TMP_A 3160
			break
			
			endswitch
			
			ifn TMP_A -1
			{
				set TMP_B 0
				//		screentext <tilenum> <x> <y> <zoom> <block angle> <character angle> <quote> <shade> <pal> <orientation> <alpha> <xspace> <yline> <xbetween> <ybetween> <text flags> <x1> <y1> <x2> <y2> 
				whilevarn TMP_B 8
				{
					screentext NEWFONTSTART helpx helpy z 0 0 TMP_A 0 12 2064 0 8 32 16 32 160 0 0 xdim ydim
					add TMP_A 1
					add TMP_B 1
					add helpy 327680
					qstrlen temp TMP_A
					ifl temp 3 set TMP_B 8
				}
			}
		}
	}
ends

state vrmenudisplay

	set RETURN -1
	set orientation 0
	
	set y 60
	set pal 12
	set shade 0
	ife tempselect 1 state shadepulse
	gametextz NEWFONTSTART 320 y 173 shade pal orientation 0 0 xdim ydim 57344
	
	set y 120
	set shade 0
	ife tempselect 2 state shadepulse
	gametextz NEWFONTSTART 320 y 174 shade pal orientation 0 0 xdim ydim 57344
	
	rotatesprite cursorx cursory 65536 0 ATOMICHEALTH 0 0 orientation 0 0 xdim ydim
	
ends

state matchmenudisplay

	set RETURN -1
	set orientation 0
	set z 32768
	set x 160
	set y 60
	set pal 12
	
	ifg matchmenu 100
	{ 
	    ife matchmenu 12184 set pal 11
		ife matchmenu 12162 set pal 2
		ife matchmenu 12163 set pal 1
		ife matchmenu 12164 set pal 2
		ife matchmenu 12165 set pal 1
		rotatesprite x y z 0 matchmenu 0 pal orientation 0 0 xdim ydim break 
	}
	else
	ifg matchmenu 1 
	{
		gametextz NEWFONTSTART 320 y 172 0 fontpal orientation 0 0 xdim ydim 57344
		
		ife matchlevel 27 
		{
			gametextz NEWFONTSTART 320 160 764 0 12 orientation 0 0 xdim ydim 40960 
			ifvarand vrfield 1 gametextz NEWFONTSTART 320 175 1166 0 11 orientation 0 0 xdim ydim 40960
			gametextz NEWFONTSTART 320 190 1363 0 0 orientation 0 0 xdim ydim 40960
		}
		else
		ife matchlevel 28 
		{
			gametextz NEWFONTSTART 320 160 765 0 12 orientation 0 0 xdim ydim 40960 
			ifvarand vrfield 2 gametextz NEWFONTSTART 320 175 1166 0 11 orientation 0 0 xdim ydim 40960
			gametextz NEWFONTSTART 320 190 1364 0 0 orientation 0 0 xdim ydim 40960
		}
		else
		ife matchlevel 33 
		{
			gametextz NEWFONTSTART 320 160 766 0 12 orientation 0 0 xdim ydim 40960 
			ifvarand vrfield 4 gametextz NEWFONTSTART 320 175 1166 0 11 orientation 0 0 xdim ydim 40960
			gametextz NEWFONTSTART 320 190 1365 0 0 orientation 0 0 xdim ydim 40960
		}
		else
		ife matchlevel 34 
		{
			gametextz NEWFONTSTART 320 160 767 0 12 orientation 0 0 xdim ydim 40960 
			ifvarand vrfield 8 gametextz NEWFONTSTART 320 175 1166 0 11 orientation 0 0 xdim ydim 40960
			gametextz NEWFONTSTART 320 190 1366 0 0 orientation 0 0 xdim ydim 40960
		}
		else
		ife matchlevel 35 
		{
			gametextz NEWFONTSTART 320 160 768 0 12 orientation 0 0 xdim ydim 40960
			ifvarand vrfield 16 gametextz NEWFONTSTART 320 175 1166 0 11 orientation 0 0 xdim ydim 40960
			gametextz NEWFONTSTART 320 190 1367 0 0 orientation 0 0 xdim ydim 40960
		}
	}
	else
	{
		rotatesprite x y z 0 12076 0 pal orientation 0 0 xdim ydim
		ifl tourgoal 8
		ifl wave 3
		gametextz NEWFONTSTART 320 130 713 0 12 orientation 0 0 xdim ydim 32768
	}
	
	set x 80
	set y 100
	set pal 2
	set shade 0
	ife tempselect NO { set z 40960 state shadepulse }
	rotatesprite x y z 0 12077 shade pal orientation 0 0 xdim ydim
	
	set x 240
	set y 100
	set pal 1
	set shade 0
	set z 32768
	ife tempselect YES { set z 40960 state shadepulse }
	rotatesprite x y z 0 12078 shade pal orientation 0 0 xdim ydim
	
	rotatesprite cursorx cursory 65536 0 ATOMICHEALTH 0 0 orientation 0 0 xdim ydim
	
ends

state startgamedisplay
	ife tempselect -1
	{
		set orientation 1024
		
		ife rendmode 4
		{
			ife player[].gm 1 set pal 4 else set pal 0
			rotatesprite 160 100 32768 0 14841 0 pal orientation 0 0 xdim ydim
			break
		}
		set TMP_A -1
		
		// VOLUME 0 ORIGINAL EPISODE SELECTION
		// VOLUME 2 IS VACA & DC EPISODE SELECTION
		ife VOLUME 0
		{
			rotatesprite 160 100 65536 0 6845 0 33 orientation 0 0 xdim ydim
			set z 32768
			ifle cursorx 160 ifle cursory 100
				sub z 512
				
			ifle cursorx 160 ifle cursory 100
			{
				ifg cursorx 101 ifl cursory 21
				state shadepulse
				else set shade 0
			}
			
			rotatesprite 80 50 z 0 7668 0 0 orientation 0 0 xdim ydim
			
			
			// classic marathon
			// 101x 21y lower L corner, 153x lower R corner
			ifle cursorx 160 ifle cursory 100
				rotatesprite 135 12 20480 0 18175 shade 0 orientation 0 0 xdim ydim
			
			
			set z 32768
			ifg cursorx 160 ifle cursory 100 sub z 512
			rotatesprite 240 50 z 0 7669 0 0 orientation 0 0 xdim ydim
			set z 32768
			ifle cursorx 160 ifg cursory 100 sub z 512
			rotatesprite 80 150 z 0 7670 0 0 orientation 0 0 xdim ydim
			set z 32768
			ifg cursorx 160 ifg cursory 100 sub z 512
			rotatesprite 240 150 z 0 7671 0 0 orientation 0 0 xdim ydim
			
			ifl cursorx 160 ifg cursorx 101 ifl cursory 21
			set TMP_A 3090 else
			set TMP_A 2850
		}
		ife VOLUME 1 // new episodes
		{
			// NEW INVASION AND SPACE GLADIATORS
			// RESISTANCE AND WAR OF ATTRITION
			ife rendmode 0
			rotatesprite 160 100 65536 0 6845 0 4 orientation 0 0 xdim ydim
			else
			rotatesprite 160 100 32768 0 BACKDROP 0 0 orientation 0 0 xdim ydim
			set z 30720
			
			ifl cursorx 160 ifl cursory 100 { add z 2048 set TMP_A 2800 }
			rotatesprite 80 50 z 0 10486 0 0 orientation 0 0 xdim ydim
			
			set z 30720
			
			ifge cursorx 160 ifl cursory 100 { add z 2048 set TMP_A 2810 }
			rotatesprite 240 50 z 0 12161 0 0 orientation 0 0 xdim ydim
			
			set z 30720
			
			ifl cursorx 160 ifg cursory 100 { add z 2048 set TMP_A 3080 }
			rotatesprite 80 150 z 0 7665 0 0 orientation 0 0 xdim ydim
			
			set z 30720
			
			ifge cursorx 160 ifg cursory 100  { add z 2048 set TMP_A 2820 }
			rotatesprite 240 150 z 0 14839 0 0 orientation 0 0 xdim ydim
			// 20477
			// challenge mode
			ifge cursorx 160 ifg cursory 100
			{
			
				ifl cursorx 212 ifg cursory 180
				{
					state shadepulse
					set TMP_A 3097
				}
				else set shade 0
			
				rotatesprite 180 190 20480 0 20477 shade 0 orientation 0 0 xdim ydim
			}
			
			// CANCEL BUTTON
			// set z 16384
			// ifle cursorx 40 ifge cursory 165 add z 1024
			// rotatesprite 40 180 z 0 18169 0 0 orientation 0 0 xdim ydim
			
			
			// gametextz NEWFONTSTART 320 180 776 0 12 orientation 0 0 xdim ydim 16384
			// gametextz NEWFONTSTART 320 190 777 0 12 orientation 0 0 xdim ydim 16384
		}
		ife VOLUME 2
		{
			// DC AND CARIBBEAN
			ife rendmode 0
			rotatesprite 160 100 65536 0 6845 0 33 orientation 0 0 xdim ydim
			else
			rotatesprite 160 100 32768 0 BACKDROP 0 0 orientation 0 0 xdim ydim
			set z 32768
			ifge cursorx 160 { sub z 2048 set TMP_A 2840 }
			rotatesprite 80 100 z 0 10488 0 0 orientation 0 0 xdim ydim
			set z 32768
			ifl cursorx 160 { sub z 2048 set TMP_A 2830 }
			rotatesprite 240 100 z 0 7664 0 0 orientation 0 0 xdim ydim
		}
		set orientation 0
		rotatesprite cursorx cursory 65536 0 ATOMICHEALTH 0 0 orientation 0 0 xdim ydim
		
	
		ifn TMP_A -1
		{
			set helpx cursorx
			set helpy cursory
			add helpx 20
			ifg helpx 300 sub helpx 120
			sub helpy 10
			ifg helpy 152 set helpy 152
			rotatesprite helpx helpy 32768 0 INFOBACK 0 0 16 0 0 xdim ydim
			
			add helpy 5
			add helpx 5
			mul helpx 65536
			mul helpy 65536
			set z 10240
		
			set TMP_B 0
			
			whilevarn TMP_B 8
			{
				screentext NEWFONTSTART helpx helpy z 0 0 TMP_A 0 12 2064 0 8 32 16 32 160 0 0 xdim ydim
				add TMP_A 1
				add TMP_B 1
				add helpy 327680
				qstrlen temp TMP_A
				ifl temp 3 set TMP_B 8
			}
		}
		
	

	}
	else
	ife startmode -1 
	{
		// set orientation 1024
		// rotatesprite 160 100 65536 0 2456 0 33 orientation 0 0 xdim ydim
		
		state charchoicedisplay
	}
ends

onevent EVENT_DISPLAYLEVELSTATS

ifl epselect 0 set RETURN -1
ifl startmode 0 set RETURN -1
ifn bonus_screen 0 set RETURN -1
ifn vendor_screen 0 set RETURN -1
ifn player[].newowner -1 set RETURN -1

endevent

onevent EVENT_DISPLAYREST

ifg userdef[].screen_size 4 
{
	setuserdef[].screen_size 4
	stopsound THUD
}

ifg crawlclock YES
{
	state display_textcrawl
	set RETURN -1
	break
}

ifn thiscam -1 
{ 
	set RETURN -1 
	setuserdef[].screen_size 0
	state shadepulse
	gametextz NEWFONTSTART 320 185 714 shade 12 0 0 0 xdim ydim 32768
	break 
}

ife epselect -1 
{ 
	ife startmode -2 { state wesreplacedisplay break }
	state startgamedisplay set RETURN -1 
	break 
}

ifn matchmenu 0 { ifg matchmenu 0 state matchmenudisplay set RETURN -1 break }

ife vrmenu YES { state vrmenudisplay set RETURN -1 break }

ifn vrscreen_time 0
{
	set orientation 1024
	set RETURN -1
	rotatesprite 160 100 32768 0 vrscreen 0 0 orientation 0 0 xdim ydim
	break
}

ifn movecam -1 { set RETURN -1 break }

ifg bonus_screen 0
{
	set RETURN -1
	set orientation 1024
	ife bonus_screen GAMEOVERSCREEN
	{
		set z player[].player_par
		sub z lastclock
		set B z
		shiftr B 1
		set shade 40 sub shade B ifl shade 0 set shade 0
		rotatesprite 160 100 32768 0 GAMEOVERSCREEN shade 0 orientation 0 0 xdim ydim
		set orientation 0
		shiftl z 9
		ifg z 131072 set z 131072
		ifl z 1024 set z 1024
		gametextz NEWFONTSTART 320 100 306 0 10 orientation 0 0 xdim ydim z
		break
	}
	rotatesprite 160 100 65536 0 12054 0 0 orientation 0 0 xdim ydim
	// when bonus_screen == 2, timebeforeexit goes from 50 down to 20
	// display the animation during this time
	// when bonus_screen == 3, stay on the final animation
	// overlay screens are 12042-12045
	
	ife bonus_screen 2
	{
		ifg player[].timebeforeexit 42
			set picnum 12042 else
		ifg player[].timebeforeexit 34
			set picnum 12043 else
		ifg player[].timebeforeexit 26
			set picnum 12044 else	
		set picnum 12045
		rotatesprite 259 107 65536 0 picnum 0 0 orientation 0 0 xdim ydim
	}
	else ifg bonus_screen 2
		rotatesprite 259 107 65536 0 12045 0 0 orientation 0 0 xdim ydim
	
	set orientation 0
	ife gametype DM
	{
		ifg bluescore redscore set tempb 286 else set tempb 294
		gametextz NEWFONTSTART 320 30 tempb 0 11 orientation 0 0 xdim ydim 32768
	}
	ife gametype CTF
	{
		ifg bluescore redscore set tempb 301 else set tempb 304
		gametextz NEWFONTSTART 320 30 tempb 0 11 orientation 0 0 xdim ydim 32768
	}
	ife gametype SURVIVAL
	{
		// ifg bluescore redscore set tempb 300 else set tempb 303
		ife survivor_winner YES set tempb 300 else set tempb 303
		gametextz NEWFONTSTART 320 30 tempb 0 11 orientation 0 0 xdim ydim 32768
	}
	ifg bonus_screen 1
	{
		ifn gametype SURVIVAL
		{
			gametextz NEWFONTSTART 40 70 287 0 11 orientation 0 0 xdim ydim 32768 // blue score
			gametextz NEWFONTSTART 40 85 288 0 11 orientation 0 0 xdim ydim 32768 // red score
		}
		
		ifg bluescore redscore
		{
			gametextz NEWFONTSTART 40 100 289 0 11 orientation 0 0 xdim ydim 32768 // win bonus
			gametextz NEWFONTSTART 40 115 291 0 11 orientation 0 0 xdim ydim 32768 // time bonus
			ife unbalanced YES
			gametextz NEWFONTSTART 40 130 748 0 21 orientation 0 0 xdim ydim 32768 // domination bonus
			gametextz NEWFONTSTART 40 145 292 0 11 orientation 0 0 xdim ydim 32768 // total credits
		}
		else
		{
			gametextz NEWFONTSTART 40 100 295 0 2 orientation 0 0 xdim ydim 32768 // execution
			gametextz NEWFONTSTART 40 115 296 0 2 orientation 0 0 xdim ydim 32768 // enslavement
		}
		
		ife bonus_screen 3
		{
			state shadepulse
			gametextz NEWFONTSTART 320 185 293 shade 11 orientation 0 0 xdim ydim 32768 // press to continue
		}
		
		ifn gametype SURVIVAL
		{
			digitalnumberz 12821 180 70 bluescore 0 11 orientation 0 0 xdim ydim 32768
			digitalnumberz 12821 180 85 redscore 0 11 orientation 0 0 xdim ydim 32768
		}
		ifg bluescore redscore
		{
			digitalnumberz 12821 180 100 winbonus 0 11 orientation 0 0 xdim ydim 32768
			digitalnumberz 12821 180 115 timebonus 0 11 orientation 0 0 xdim ydim 32768
			ife unbalanced YES
			digitalnumberz 12821 180 130 3000 0 21 orientation 0 0 xdim ydim 32768
			state shadepulse
			digitalnumberz 12821 180 145 credits shade 23 orientation 0 0 xdim ydim 32768
		}
		// ife bonus_screen 4
		// gametextz NEWFONTSTART 320 120 288 0 fontpal orientation 0 0 xdim ydim 32768
	}
	
	break
}


ife startmode -1 { state charchoicedisplay break }
else
ifn vendor_screen 0 { state vendordisplay break }

ifn cmode 0
{
	set orientation 0
	set pal 0
	ife cmode 2 set pal 2 else set pal 0
	rotatesprite 160 40 24576 0 9206 0 pal 1024 0 0 xdim ydim
	set pal 0
	rotatesprite 160 160 24576 0 9208 0 pal 1024 0 0 xdim ydim
	ife cmode 3 set pal 2 else set pal 0
	rotatesprite 80 100 24576 0 9209 0 pal 1024 0 0 xdim ydim
	ife cmode 4 set pal 2 else set pal 0
	rotatesprite 240 100 24576 0 9207 0 pal 1024 0 0 xdim ydim
}

ifn userdef[].overhead_on 2
ife newhud YES ife player[].newowner -1 state shownewhud
ife newhud -1 break

ifn award_screen 0 state award_display


ife attmode YES
ife challenge YES
{
	set orientation 528
	gametextz NEWFONTSTART 530 42 1103 0 12 orientation 0 0 xdim ydim 16384
	digitalnumberz NEWNUMSTART 305 42 totalxp 0 23 orientation 0 0 xdim ydim 16384
}

ife pdown YES
{
	ifn myshelly -1
	{
		set z sprite[myshelly].z
		sub z 8192
		showviewunbiased sprite[myshelly].x sprite[myshelly].y z sprite[myshelly].ang 90 sprite[myshelly].sectnum 235 95 315 145
	}
}
else
ifn arrowview -1
{
	getactor[arrowview].zvel z
	divvar z 96
	set temp 100
	sub temp z
	showviewunbiased sprite[arrowview].x sprite[arrowview].y sprite[arrowview].z sprite[arrowview].ang temp sprite[arrowview].sectnum 235 95 315 145
}

ifvarg bigmsgcount 0
{
	setvar orientation 0
	setvar y 60
	
	setvar temp 57344 // 65536
	ifvarg bigmsgcount 63
	{
		setvar temp 90
		subvarvar temp bigmsgcount
		ifl temp 1 setvar temp 1
		mulvar temp 2205
	}
	else ifvarl bigmsgcount 27
	{
		setvarvar temp bigmsgcount
		mulvar temp 2205
	}
	
	gametextz NEWFONTSTART 320 y bigmsg 0 0 orientation 0 0 xdim ydim temp
}

ifvarn transition 0
{
	setvarvar z transition
	ifvarg z 30 { setvar tempb 60 subvarvar tempb z setvarvar z tempb }
	shiftvarl z 14
	// getactor[myspawner].pal pal
	// ifvare pal 0 
	setvar pal 4
	rotatesprite 160 100 z 0 TRANSITION 0 pal 0 0 0 xdim ydim
}

ifn player[].newowner -1 { set RETURN -1 break }

ife radaron YES // radar display
ifg gametype -1
ifg player[].cursectnum -1
ife userdef[].overhead_on 0
{
	rotatesprite 290 69 12288 0 RADAR_BACK 0 0 513 0 0 xdim ydim
	
	// radar display

	ifn radarupdate hudupdate
	{
		set hudupdate radarupdate
		set radcount 0
		
		// detect sleeping enemies first
		ife gametype 0
		{
			headspritestat spriteid 2
			whilevarn spriteid -1
			{
				ife actorvar[spriteid].monstatus -1
				{
					set B YES
					
					geta[spriteid].sectnum temp
					ife sector[temp].lotag 2
					ifn sector[player[].cursectnum].lotag 2
					set B NO
					
					ife sector[player[].cursectnum].lotag 2
					ifn sector[temp].lotag 2
					set B NO
					
					ife B YES
					{
						geta[spriteid].z zdist
						getp[].posz z
						sub z 8192
						sub zdist z
						ifge zdist 0 ifl zdist 32768
						{	
							ldist xydist THISACTOR spriteid
							ifl xydist 25600
							{
								geta[spriteid].x x2
								geta[spriteid].y y2
								geta[].x x
								geta[].y y
								sub x2 x
								sub y2 y

								getangle angvar x2 y2
								getp[].ang tempb
								getincangle tempd angvar tempb
								
								mul tempd -1
								getp[].ang angvar
								getincangle tempd angvar 1024
								
								rotatepoint 0 0 x2 y2 tempd newy newx
								
								mul newx -1
												
								set xydist2 51200
								sub xydist2 xydist
								shiftr xydist2 8
								mul newx xydist2
								mul newy xydist2
								div newx 2
								div newy 2

								add newx 19005440 // 290
								add newy 4500000 // 11534336
								
								setarray radup[radcount] 0
								setarray raddist[radcount] xydist
								setarray radarx[radcount] newx // x2
								setarray radary[radcount] newy // y2
								
								setarray radarpal[radcount] 54
								add radcount 1
								
							}
						}
					}
				}
				nextspritestat spriteid spriteid
				ife radcount 63 set spriteid -1
			}
		}

		headspritestat spriteid 1
		whilevarn spriteid -1
		{
			ifn actorvar[spriteid].monstatus 0
			ifg sprite[spriteid].extra 0
			// ifn actorvar[spriteid].monstatus 2
			{
				set B YES
				
				geta[spriteid].sectnum temp
				ife sector[temp].lotag 2
				ifn sector[player[].cursectnum].lotag 2
				set B NO
				
				ife sector[player[].cursectnum].lotag 2
				ifn sector[temp].lotag 2
				set B NO
				
				ifvarand sprite[spriteid].cstat 32768 set B NO
				ifvarand sprite[spriteid].cstat 514 set B NO
				
				ife B YES
				{
					ldist xydist THISACTOR spriteid
					ifg xydist 25500
					ifg actorvar[spriteid].monstatus 1024
						set xydist 25500
					ifl xydist 25600 // 12800
					{
						geta[spriteid].x x2
						geta[spriteid].y y2
						// if flag is out of range, put it on edge of radar
						ife xydist 25500 ifg actorvar[spriteid].monstatus 1024
						{
							geta[].x x
							geta[].y y
							sub x2 x
							sub y2 y
							getangle angvar x2 y2
							
							set temp player[].posx
							add temp 25500
							rotatepoint player[].posx player[].posy temp player[].posy angvar x2 y2
							
						}
						geta[].x x
						geta[].y y
						sub x2 x
						sub y2 y

						getangle angvar x2 y2
						
						getp[].ang tempb
						getincangle tempd angvar tempb
						
						mul tempd -1
						getp[].ang angvar
						getincangle tempd angvar 1024
						
						rotatepoint 0 0 x2 y2 tempd newy newx
		
						mul newx -1
						
						set xydist2 51200
						sub xydist2 xydist
						shiftr xydist2 8
						mul newx xydist2
						mul newy xydist2
						div newx 2
						div newy 2
									
						add newx 19005440 // 290
						add newy 4500000 // 11534336
						geta[spriteid].z zdist
						getp[].posz z
						sub z 8192
						sub zdist z
						// if zdist is 8192 > z, then heights are equal
						ifl zdist 0 setarray radup[radcount] -1 else
						ifg zdist 32768 setarray radup[radcount] 1 else
						setarray radup[radcount] 0
						setarray raddist[radcount] xydist
						setarray radarx[radcount] newx // x2
						setarray radary[radcount] newy // y2
						
						
						ifg actorvar[spriteid].monstatus 1024 set pal actorvar[spriteid].monstatus
						else
						ife actorvar[spriteid].team 3 set pal 14 // noncombatant
						else
						ife actorvar[spriteid].team 1 
						{
							set pal 8 // ALLY
							ife actorvar[spriteid].monstatus 2 set pal 121
						}
						else
						ife actorvar[spriteid].monstatus 100 set pal 1 // items
						else ife actorvar[spriteid].monstatus 1 set pal 21 // enemy
						else set pal 13
						
						setarray radarpal[radcount] pal
						add radcount 1
						
					}
				}
			}
			nextspritestat spriteid spriteid
			ife radcount 95 set spriteid -1
		}
	}

	set temp 0
	whilevarvarn temp radcount
	{
		set xydist 25600
		sub xydist raddist[temp]
		div xydist 3
		set pal radarpal[temp]
		
		ifg radarpal[temp] 1024
		{
			set picnum radarpal[temp]
			ifl xydist 4096 set xydist 4096
			setarray radup[temp] 0
			
			ife picnum REDFLAG set pal 10 
			else ife picnum BLUEFLAG set pal 0
			else ife picnum CONTROL_A_HUD 
			{ ife actorvar[A_ID].team 1 set pal 0 else ife actorvar[A_ID].team -1 set pal 10 else set pal 13 div xydist 2 }
			else ife picnum CONTROL_B_HUD 
			{ ife actorvar[B_ID].team 1 set pal 0 else ife actorvar[B_ID].team -1 set pal 10 else set pal 13 div xydist 2 }
			else ife picnum CONTROL_C_HUD 
			{ ife actorvar[C_ID].team 1 set pal 0 else ife actorvar[C_ID].team -1 set pal 10 else set pal 13 div xydist 2 }
			
		}
		else ife radarpal[temp] 121 // fallen ally
		{ 
			add xydist 12288 set picnum RADAR_POINT 
			setarray radup[temp] 0
			ifvarand player[].player_par 1 set pal 8
			else set pal 33
		}
		else ife radarpal[temp] 1 { add xydist 2048 set picnum RADAR_ITEM }
		else ife radarpal[temp] 54 { add xydist 6144 set picnum RADAR_POINT }
		else ife radarpal[temp] 14 { add xydist 6144 set picnum RADAR_POINT }
		else 
		{ 
			add xydist 8192 
			set picnum RADAR_POINT 
		}
		
		ife radup[temp] 0
		rotatesprite16 radarx[temp] radary[temp] xydist 0 picnum -100 pal 512 0 0 xdim ydim
		else 
		{
		add xydist 1024
		ife radup[temp] -1
		rotatesprite16 radarx[temp] radary[temp] xydist 1024 RADARROW -100 radarpal[temp] 512 0 0 xdim ydim
		else ife radup[temp] 1
		rotatesprite16 radarx[temp] radary[temp] xydist 0 RADARROW -100 radarpal[temp] 512 0 0 xdim ydim
		}
		add temp 1
	}
}

ifn emp_overlay 0
{
	// braccus or other NPC talking frame
	// rotatesprite 10 70 24576 0 emp_overlay_tile 0 0 2 0 0 xdim ydim
	rotatesprite 35 70 24576 0 emp_overlay_tile 0 0 256 0 0 xdim ydim
}

// ifn debugaa NO
	// {
		// ifhitspace set pal 1 else set pal 2
		// digitalnumber DIGITALNUM 80 170 hudnumber 0 pal orientation 0 0 xdim ydim
		// digitalnumber DIGITALNUM 80 180 hudnumber2 0 pal orientation 0 0 xdim ydim
	// }

ifn userdef[].overhead_on 2
{
	ifn monid -1 ife MONHUD YES state monhud
	ifn attmode NO 
	state xpbardisplay
}

ifg gametype 0
{
	ifn gametype SURVIVAL
	{
		rotatesprite 35 27 28672 0 REDSCORE 0 0 256 0 0 xdim ydim
		rotatesprite 295 30 28672 0 BLUESCORE 0 0 512 0 0 xdim ydim
		digitalnumber DIGITALNUM 39 26 redscore 0 0 272 0 0 xdim ydim // 256
		digitalnumber DIGITALNUM 302 26 bluescore 0 1 528 0 0 xdim ydim // 512
	}
	ife gametype DM
	{
		ifp palive nullop else
		{
			set orientation 0
			ife wesreplace 1
			gametextz NEWFONTSTART 60 80 1215 0 1 orientation 0 0 xdim ydim 20480 // "WES WOLF"
			else
			gametextz NEWFONTSTART 60 80 281 0 1 orientation 0 0 xdim ydim 20480 // "DUKE NUKEM"
			ifn LEVEL 25
			{
				ife wesreplace 2
				gametextz NEWFONTSTART 60 95 1215 0 1 orientation 0 0 xdim ydim 20480 // "WES WOLF"
				else
				gametextz NEWFONTSTART 60 95 282 0 1 orientation 0 0 xdim ydim 20480 // "BOMBSHELL"
			
			}
			
			ife LEVEL 25
				gametextz NEWFONTSTART 60 125 717 0 2 orientation 0 0 xdim ydim 20480 // "MANDO-PHETT"
			else
			{
				gametextz NEWFONTSTART 60 110 284 0 2 orientation 0 0 xdim ydim 20480 // "XARKOS"
				gametextz NEWFONTSTART 60 125 283 0 2 orientation 0 0 xdim ydim 20480 // "SKANAARJ"
			}
			gametextz NEWFONTSTART 220 65 278 0 12 orientation 0 0 xdim ydim 20480 // "KILLS"
			gametextz NEWFONTSTART 340 65 279 0 12 orientation 0 0 xdim ydim 20480 // "DEATHS"
			gametextz NEWFONTSTART 460 65 280 0 12 orientation 0 0 xdim ydim 20480 // "TOTAL"
			
			ife wesreplace 1 set TMP_A wes_kills else set TMP_A duke_kills
			ife wesreplace 2 set TMP_B wes_kills else set TMP_B shelly_kills
			ife wesreplace 1 set tempd wes_deaths else set tempd duke_deaths
			ife wesreplace 2 set tempe wes_deaths else set tempe shelly_deaths
			digitalnumberz 12821 113 80 TMP_A 0 1 orientation 0 0 xdim ydim 20480
			ifn LEVEL 25
			digitalnumberz 12821 113 95 TMP_B 0 1 orientation 0 0 xdim ydim 20480
			
			ife LEVEL 11
			digitalnumberz 12821 113 110 enemy2_kills 0 2 orientation 0 0 xdim ydim 20480
			digitalnumberz 12821 113 125 enemy1_kills 0 2 orientation 0 0 xdim ydim 20480
			
			digitalnumberz 12821 174 80 tempd 0 1 orientation 0 0 xdim ydim 20480
			ifn LEVEL 25
			digitalnumberz 12821 174 95 tempe 0 1 orientation 0 0 xdim ydim 20480
			ife LEVEL 11
			digitalnumberz 12821 174 110 enemy2_deaths 0 2 orientation 0 0 xdim ydim 20480
			digitalnumberz 12821 174 125 enemy1_deaths 0 2 orientation 0 0 xdim ydim 20480
			
			set temp TMP_A
			sub temp tempd
			digitalnumberz 12821 234 80 temp 0 1 orientation 0 0 xdim ydim 20480
			set temp TMP_B
			sub temp tempe
			ifn LEVEL 25
			digitalnumberz 12821 234 95 temp 0 1 orientation 0 0 xdim ydim 20480
			set temp enemy2_kills
			sub temp enemy2_deaths
			digitalnumberz 12821 234 110 temp 0 2 orientation 0 0 xdim ydim 20480
			set temp enemy1_kills
			sub temp enemy1_deaths
			digitalnumberz 12821 234 125 temp 0 2 orientation 0 0 xdim ydim 20480
		}
	}
	ife gametype CONTROL // control
	{
		ife redbasestat LOCKDOWN set pal 0 else ife redbasestat REDLOCKDOWN set pal 10 else 
		{	
			ifn actorvar[A_ID].direction 0
			{
				ifvarand player[].player_par 1 set pal 33
				else ifg redbasestat 0 set pal 0 else set pal 10
			}
			else 
			{
				ife actorvar[A_ID].team 1 set pal 0 else
				ife actorvar[A_ID].team -1 set pal 10 else
				set pal 13	
			}
		}
		rotatesprite 290 112 8192 0 CONTROL_A_HUD 0 pal 512 0 0 xdim ydim
		ife bluebasestat LOCKDOWN set pal 0 else ife bluebasestat REDLOCKDOWN set pal 10 else 
		{
			ifn actorvar[B_ID].direction 0
			{
				ifvarand player[].player_par 1 set pal 33
				else ifg redbasestat 0 set pal 0 else set pal 10
			}
			else 
			{
				ife actorvar[B_ID].team 1 set pal 0 else
				ife actorvar[B_ID].team -1 set pal 10 else
				set pal 13	
			}
		}
		rotatesprite 290 129 8192 0 CONTROL_B_HUD 0 pal 512 0 0 xdim ydim
		ife thirdbasestat LOCKDOWN set pal 0 else ife thirdbasestat REDLOCKDOWN set pal 10 else 
		{
			ifn actorvar[C_ID].direction 0
			{
				ifvarand player[].player_par 1 set pal 33
				else ifg redbasestat 0 set pal 0 else set pal 10
			}
			else 
			{
				ife actorvar[C_ID].team 1 set pal 0 else
				ife actorvar[C_ID].team -1 set pal 10 else
				set pal 13	
			}
		}
		rotatesprite 290 146 8192 0 CONTROL_C_HUD 0 pal 512 0 0 xdim ydim
	}
	// ife gametype SURVIVAL // display wave information
	// {
		// set temp monleft
		// ifl temp 0 set temp 0
		// digitalnumber DIGITALNUM 280 110 temp 0 0 528 0 0 xdim ydim
		// digitalnumber DIGITALNUM 280 120 spawnsleft 0 0 528 0 0 xdim ydim
	// }
	ifg gametime 0
	ifn gametype SURVIVAL
	{
		set temp gametime
		div temp 1800
		digitalnumber DIGITALNUM 280 90 temp 0 0 528 0 0 xdim ydim
		rotatesprite 286 92 131072 0 3020 0 124 528 0 0 xdim ydim
		set tempb gametime
		mul temp 1800
		sub tempb temp // remainder
		div tempb 30
		ifl tempb 10
		{
			rotatesprite 290 90 65536 0 2472 0 0 528 0 0 xdim ydim
			digitalnumber DIGITALNUM 302 90 tempb 0 0 528 0 0 xdim ydim
		}
		else
		digitalnumber DIGITALNUM 298 90 tempb 0 0 528 0 0 xdim ydim
	}
	ifn blueflagid -1
	{
		rotatesprite 275 100 16384 0 BLUEFLAG 0 0 528 0 0 xdim ydim
		ifn bluecarrier -1 
		{
			set z 1376256
			div z tiledata[sprite[bluecarrier].picnum].ysize
			rotatesprite 275 105 z 0 sprite[bluecarrier].picnum 0 sprite[bluecarrier].pal 528 0 0 xdim ydim
		}
	}
	ifn redflagid -1
	{
		rotatesprite 300 100 16384 0 REDFLAG 0 10 528 0 0 xdim ydim
		
		ifn redcarrier -1 
		{
			set z 1376256
			set picnum sprite[redcarrier].picnum
			ife picnum APLAYER ife pchar 1 set picnum SHELLY
			div z tiledata[picnum].ysize

			rotatesprite 300 105 z 0 picnum 0 sprite[redcarrier].pal 528 0 0 xdim ydim
		}
	}
	
}
else
ifn secretsfound 0
{
	set pal 0
	set orientation 1040
	gametextz STARTALPHANUM 320 80 225 0 pal orientation 0 0 xdim ydim 65536
	digitalnumberz 2837 140 100 player[].secret_rooms 0 pal orientation 0 0 xdim ydim 98304
	digitalnumberz 2836 160 102 0 0 0 orientation 0 0 xdim ydim 65536
	digitalnumberz 2837 180 100 player[].max_secret_rooms 0 0 orientation 0 0 xdim ydim 98304
}

// SUPPORT CHARACTER PORTRAIT DISPLAY
ife subtitle_time 0
ifn myshelly -1
ife userdef[].overhead_on 0
// ifn userdef[].screen_size 0
{
	set x 5 set y 142
	ife userdef[].levelstats YES sub y 15
	
	ife sprite[myshelly].picnum SHELLY set picnum 7916 else
	ife sprite[myshelly].picnum SHELLYCROUCH set picnum 7916 else
	ife sprite[myshelly].picnum DUKEBOT set picnum 7915 else
	ife sprite[myshelly].picnum DUKEBOTCROUCH set picnum 7915
	ife sprite[myshelly].picnum WESBOT set picnum 19475 else
	ife sprite[myshelly].picnum WESBOTCROUCH set picnum 19475
	set orientation 282
	
	ifg userdef[].screen_size 4 { add x 10 sub y 3 set orientation 26 }
	
	ifn myshelly -1
	ifn actorvar[myshelly].monstatus 2
	{
		set temp FULLBOTCHARGE
		
		ifn pchar 1 ifge shellycharge temp
			set B player[].player_par 
		else
		ifn pchar 0 ifge dukecharge temp
			set B player[].player_par
		else
		ifn pchar 2 ifge wescharge temp
			set B player[].player_par
		else set B 7
		
		ife B player[].player_par
		ifvarand gametips 1024
		ifp palive
		ife pdown NO
		{
			set y2 y
			sub y2 41
			set x2 x
			add x2 20
			rotatesprite x y2 20480 0 15352 0 0 orientation 0 0 xdim ydim
		}
		
		// modvar B 15
		// ife B 0 set pal 121 else set pal 0

		ife B player[].player_par // other character ready
		{
			// draw it bigger but pal 33
			set x2 x, sub x2 1
			set y2 y, sub y2 1
			state shadepulse
			rotatesprite x2 y2 16896 0 picnum shade 33 orientation 0 0 xdim ydim
		}
	}
	else set pal 0
	
	rotatesprite x y 16384 0 picnum 0 0 orientation 0 0 xdim ydim
	ife picnum 7915 add x 2
	add x 30
	add y 4
	
	
	
	rotatesprite x y 6144 0 2448 0 0 orientation 0 0 xdim ydim
	
	// HEALTH DISPLAY
	add x 15
	ifg userdef[].screen_size 4 add x 8
	set temp sprite[myshelly].extra
	digitalnumberz 2837 x y temp 0 2 orientation 0 0 xdim ydim 40960
	
	// STATUS DISPLAY
	getav[myshelly].monstatus temp
	ifn temp 60
	{
		set pal 0
		ife temp 2 { set tempb 151 set pal 2 } else
		ife temp 70 { set tempb 153 set pal 23 } else
		ife temp 30
		{
			getav[myshelly].bottarget tempc
			ifn tempc -1 
			{
				set tempb 150 
				set pal 96
			}
			else
			{
				getav[myshelly].shotpitch tempc
				ifg tempc 120 set tempb 152 else
				{
					ifl gametype 1
					set tempb 149
					else ife gametype CTF set tempb 209
					else set tempb 234
					set pal 1
				}
			}
		}
		else
		{
			set tempb 195
			geta[myshelly].picnum picnum
			al picnum
			al temp
		}
		add y 8
		add x 13
		
		gametextz STARTALPHANUM x y tempb 0 pal orientation 0 0 xdim ydim 36864
	}
	// KEY DISPLAY
	// qsprintf <target quote> <first quote> <second quote to append to first>
	// qsprintf 156 154 155
	add y 8
	sub x 1
	ife pchar 0 ifge shellycharge FULLBOTCHARGE set B 171 else
	ife pchar 1 ifge dukecharge FULLBOTCHARGE set B 171 else
	ife pchar 2 ifge wescharge FULLBOTCHARGE set B 171 else
	set B 154
	gametextz STARTALPHANUM x y B 0 12 orientation 0 0 xdim ydim 32768
	add y 5
	gametextz STARTALPHANUM x y 155 0 12 orientation 0 0 xdim ydim 32768
	
	ife pdown YES
	{
		set tempb deathcounter
		add tempb 30
		div tempb 30
		digitalnumber NEWNUMSTART 160 100 tempb 0 12 1024 0 0 xdim ydim
	}
	
}

state displayweapchange

ifg drinkcola 0
ife player[].over_shoulder_on NO
{
	set y2 200
	set temp drinkcola
	mul temp 10
	ifg temp 100 set temp 100
	sub y2 temp
	ife snackpic 0 set picnum COLACANSTAND else 
	set picnum snackpic 
	set z 49052
	rotatesprite 160 y2 z 0 picnum 0 snackpal 0 0 0 xdim ydim
}

ifg eatsnack 0
ife player[].over_shoulder_on NO
{
	set y2 200
	set temp eatsnack
	mul temp 10
	ifg temp 100 set temp 100
	sub y2 temp
	ife snackpic 0 set picnum SNACKSPRITE else set picnum snackpic
	rotatesprite 160 y2 65536 0 picnum 0 snackpal 0 0 0 xdim ydim
}

// AIRLEFT DISPLAY
getp[].airleft tempb
ifn lastbubble 0 set tempb 389
ifl tempb 390 ifg tempb 0 ife player[].scuba_on 0
{
	ifn lastbubble 0
		ifvarand player[].player_par 1 set pal 6
	else set pal 1
	set x 30
	div tempb 4
	set tempc x
	add tempc tempb
	set temp 0
	whilevarn temp 1
	{
		  ifg x tempc set temp 1
		  rotatesprite x 20 16384 0 199 0 pal 256 0 0 xdim ydim
		  add x 1
	}
    rotatesprite 20 20 32768 0 2868 0 0 256 0 0 xdim ydim
    rotatesprite 24 20 20480 0 2839 0 0 256 0 0 xdim ydim
}

/*
ife userdef[].screen_size 4
{
	ife userdef[].althud YES // the eduke exclusive HUD with no bars but shows stuff
	{
		set temp NO
		ife WEAPON PISTOL_WEAPON
		ife LASERMODE YES set temp YES
		else
		ife player[].curr_weapon PISTOL_WEAPON
		ife LASERMODE YES set temp YES
		ife temp YES
		{
			set z 32768
			mul z userdef[].statusbarscale
			div z 100
			set orientation 528
			set x 16000000
			set y 11600000
			set temp 32768
			sub temp z
			// shiftl temp 7
			mul temp 152
			add x temp
			
			set temp 32768
			sub temp z
			mul temp 42
			add y temp
			
			mul z 3
			shiftr z 1
			rotatesprite16 x y z 0 LASERPISTOL 0 0 orientation 0 0 xdim ydim
		}
		else
		{
			set temp NO
			ife WEAPON KNEE_WEAPON
			{
				ife gotsaw YES ife WEAPON0_SHOOTS SAWPROJ
				set temp YES
				ifg gotsaber 0 set temp YES
			}
			else
			ife player[].curr_weapon KNEE_WEAPON
			{
				ife gotsaw YES ife WEAPON0_SHOOTS SAWPROJ
				set temp YES
				ifg gotsaber 0 set temp YES
			}
			
			ife temp YES
			{
				
				set z 32768
				mul z userdef[].statusbarscale
				div z 100
				set orientation 528
				set x 16800000
				set y 11862864
				set temp 32768
				sub temp z
				shiftl temp 7
				add x temp
				
				set temp 32768
				sub temp z
				mul temp 36
				add y temp
				
				ifg gotsaber 0 
				{
					set picnum SABERSPRITE 
					set B z
					mul B 2 div B 3
					rotatesprite16 x y B 0 picnum 0 0 orientation 0 0 xdim ydim
				}
				else
				{
					ife pchar 0 set picnum 7641 else set picnum SAWSPRITE
					rotatesprite16 x y z 0 picnum 0 0 orientation 0 0 xdim ydim
				}
				
				orvar orientation 2048
				
				ifg gotsaber 0 set tempb gotsaber else
				{
					set tempb sawammo
					div tempb 5
				}
				
				orvar orientation 33
				shiftl z 1
				set temp z
				// shiftl temp 1
				// add y temp
				mul temp 48
				add x temp
				digitalnumberz 2930 x y tempb 0 4 orientation 0 0 xdim ydim z
				xorvar orientation 33
				sub x 65536 sub y 65536
				digitalnumberz 2930 x y tempb 0 0 orientation 0 0 xdim ydim z
			}
			ife WEAPON SHOTGUN_WEAPON
			{
				set temp NO
				ife pchar 0 ife shotexpduke YES set temp YES
				ife pchar 1 ife shotexpshelly YES set temp YES
				ife temp YES
				{
					set z 32768
					mul z userdef[].statusbarscale
					div z 100
					set orientation 528
					set x 15930000
					set y 11400000
					set temp 32768
					sub temp z
					mul temp 155 // shiftl temp 7
					add x temp
					
					set temp 32768
					sub temp z
					mul temp 52 // 36
					add y temp
					
					rotatesprite16 x y z 0 10393 0 0 orientation 0 0 xdim ydim
				}
				else
				ifvarand gametips 1
				{
					// explosive shotgun reminder display
					set temp NO
					ife pchar 0
					ifvarand dukeupgrades[SHOTGUN_WEAPON] 1
					set temp YES
					ife pchar 1
					ifvarand shellyupgrades[SHOTGUN_WEAPON] 1
					set temp YES
					ife temp YES
					{
						gametextz NEWFONTSTART 310 180 217 0 2 528 0 0 xdim ydim 32768
						gametextz NEWFONTSTART 310 186 218 0 2 528 0 0 xdim ydim 32768
						
					}
				}
			}
		}
		ife WEAPON DEVISTATOR_WEAPON
		// ife currentweapon DEVISTATOR_WEAPON
		ifvarand gotrailgun 2
		{
			set z 32768
			mul z userdef[].statusbarscale
			div z 100
			set orientation 528
			set x 16537856 // 16800000
			set y 11767328 // 11862864
			set temp 32768
			sub temp z
			mul temp 136
			add x temp
			
			set temp 32768
			sub temp z
			mul temp 40
			add y temp
			
			rotatesprite16 x y z 0 DEVISTATORAMMO 0 47 orientation 0 0 xdim ydim
		}
		ife WEAPON FREEZE_WEAPON
		ife pchar 1
		{
			set z 40960
			mul z userdef[].statusbarscale
			div z 100
			set orientation 528
			set x 18000000 // 16800000
			set y 11860000 // 11862864
			set temp 40960
			sub temp z
			mul temp 72
			add x temp
			
			set temp 40960
			sub temp z
			mul temp 30
			add y temp
			
			rotatesprite16 x y z 512 7676 0 0 orientation 0 0 xdim ydim
		}
	}
	else
	{
		// set temp NO
		// ife WEAPON PISTOL_WEAPON
		// ife LASERMODE YES set temp YES
		// else
		// ife player[].curr_weapon PISTOL_WEAPON
		// ife LASERMODE YES set temp YES
		// ife temp YES
		// {
			// rotatesprite 53 188 98304 0 2821 0 4 256 0 0 xdim ydim
			
			// digitalnumber DIGITALNUM 52 183 LASERAMMO 2 0 272 0 0 xdim ydim
		// }
		
		set temp NO
		ife WEAPON KNEE_WEAPON
		ife gotsaw YES set temp YES
		else
		ife player[].curr_weapon KNEE_WEAPON
		ife gotsaw YES set temp YES
		ife temp YES
		{
			set z 65536
			mul z userdef[].statusbarscale
			div z 100
			set orientation 272
			set x 3223408
			set y 11980768
			set temp 65536
			sub temp z
			mul temp 50
			sub x temp
			
			set temp 65536
			sub temp z
			mul temp 17
			add y temp
			
			set tempb sawammo
			div tempb 5
			
			rotatesprite16 x y z 0 2821 0 4 orientation 0 0 xdim ydim
			
			orvar orientation 2048
			
			set temp z
			
			mul temp 3
			add x temp
			
			digitalnumberz DIGITALNUM x y tempb 2 0 orientation 0 0 xdim ydim z
		}
		
		ife WEAPON SHOTGUN_WEAPON
		{
			set temp NO
			ife pchar 0 ife shotexpduke YES set temp YES
			ife pchar 1 ife shotexpshelly YES set temp YES
			ife temp YES
			{
				set z 32768
				mul z userdef[].statusbarscale
				div z 100
				set orientation 528
				set x 15450000
				set y 10980000
				set temp 32768
				sub temp z
				mul temp 166 // shiftl temp 7
				add x temp
				
				set temp 32768
				sub temp z
				mul temp 64 // 36
				add y temp
				
				rotatesprite16 x y z 0 10393 0 0 orientation 0 0 xdim ydim
			}
		}
	}
}
*/

ifn subtitle_time 0
{
	set y 160 // 178
	set orientation 0
	set temp subtitle_numlines
	whilevarn temp 0
	{
		rotatesprite 160 y 65536 0 BLACKBAR 0 0 0 0 0 xdim ydim
		sub y 7
		sub temp 1
	}
	set temp subtitle_numlines
	set y 160
	set B subtitle_start
	add B subtitle_numlines
	sub B 1
	set temp subtitle_numlines
	whilevarn temp 0
	{
		gametextz NEWFONTSTART 320 y B 0 fontpal orientation 0 0 xdim ydim 16384
		sub y 7
		sub B 1
		sub temp 1
	}
}

ife vendorupgrade YES

ifge credits 10000
ife vendorupgrade YES
{
	set temp NO
	ife vendor_used NO set temp YES
	else ife vendor_used 1 ifge credits 20000 set temp YES
	ife temp YES
	{
		state shadepulse
		gametextz NEWFONTSTART 320 160 1102 shade 12 1024 0 0 xdim ydim 24576
	}
}

ifn damagefade 0
{
	ife damagesprite 18531 // left side
	{
		set orientation 256
		set x 10
		set y 100
	}
	else
	ife damagesprite 18532 // right side
	{
		set orientation 512
		set x 310
		set y 100
	}
	else ife damagesprite 18533 // behind
	{
		set orientation 1024
		set x 160
		set y 190
	}
	else // in front 18530
	{
		set orientation 1024
		set x 160
		set y 10
	}
	ife rendmode 0 { orvar orientation 1 ifg damagefade 128 orvar orientation 32 }
	rotatespritea x y 16384 0 damagesprite 0 0 orientation damagefade 0 0 xdim ydim
}

ifg pshocked 0 state draw_shockframe


endevent

onevent EVENT_DISPLAYMENU

	ife epselect -1
	{
		ife rendmode 0
		{
			rotatesprite 160 100 65536 0 14840 0 4 1024 0 0 xdim ydim
			break
		}
		ife rendmode 4
		{
			rotatesprite 160 100 65536 0 14841 0 4 1024 0 0 xdim ydim
			break
		}
	}
	else
	ife VOLUME 6 ifge LEVEL 38
	{
		ife music_menupos -1
		{
			getmusicposition music_position
			set music_menupos YES
		}
	}
	
	ife current_menu 110 // difficulty selection
	{
		ifl player[].player_par 1
		ife SKILL 5
		{
			ifsound DAY2DIE nullop else screensound DAY2DIE
		}
		ife SKILL 6
		{
			ifsound WESBS nullop else screensound WESBS
		}
		
	}
	
endevent
