// MECHBRAIN CODE

action AMECHSTAND  0  1  5  1  10
action AMECHFROZEN 0  1  5  1  10
action AMECHWALK   5  4  5  1  12
action AMECHSHOOT 25  2  5  1  6
action AMECHDIE  35  6  1  1  20
action AMECHSTUN 9281  1  5  1  10 // 37
action AMECHDEAD 40  1  1  1  10

move MECHSHRUNKVEL 32
move MECHSEEKVEL 172

ai AIMECHDYING AMECHDIE STOPPED geth
ai AIMECHSHRUNK AMECHWALK MECHSHRUNKVEL furthestdir
ai AIMECHFROZEN AMECHFROZEN STOPPED geth
ai AIMECHWAIT AMECHSTAND STOPPED geth
ai AIMECHSEEK AMECHWALK MECHSEEKVEL seekplayer
ai AIMECHSHOOT AMECHSTAND STOPPED geth
ai AIMECHGROW AMECHSTAND STOPPED geth

state mechshrunkstate

  ifcount SHRUNKDONECOUNT
    ai AIMECHWAIT
  else
    ifcount SHRUNKCOUNT
      sizeto 52 46
  else
    state genericshrunkcode

ends

state mechstunstate

	ifactioncount 2
	ife stun 0 ai AIMECHSEEK

ends

state mechfrozenstate

    ifcount THAWTIME
    {
      ai AIMECHWAIT
      getlastpal
    }
    else
      ifcount FROZENDRIPTIME
    {
      ifactioncount 26
      {
        spawn WATERDRIP
        resetactioncount
      }
    }
    ifhitweapon
    {
      ifwasweapon FREEZEBLAST
      {
	    resetcount resetactioncount
        strength 0
        break
      }
	  ife gametype 0
      addkills 1 
	  state enemy_death

      ifrnd 84
        spawn BLOODPOOL
	  lotsofglass 30
	  state standard_jibs
      sound GLASS_BREAKING
      killit
    }
    ifp pfacing
      ifpdistl FROZENQUICKKICKDIST
	  ifn team actorvar[player[].i].team
        state pkick_check
  
ends

state mechstartwander

	resetcount
	set B 0
	set xydist 2048
	whilevarn B 32
	{
		add B 1
		geta[].z z
		sub z 4096
		rand angvar 2047
		cos mycos angvar
		sin mysin angvar
		hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz clipmask
		
		set startx sprite[].x
		sub startx hitx
		mul startx startx
		set y2 sprite[].y
		sub y2 hity
		mul y2 y2
		add startx y2
		sqrt startx startx
		
		ifg startx xydist set B 32
	}
	seta[].ang angvar
	set dodgetime 10

ends

state mechseekstate

	ifrnd 1
	{
		ifrnd 128 soundonce MECHBRAIN_ROAM1 else
		soundonce MECHBRAIN_ROAM2
	}
	ifactioncount 2
	{
		ife targetalive YES
			ifl targetdist 2560
				ife seemytarget YES
					ife shootmytarget YES
		{
			ai AIMECHSHOOT
			break
		}
		
		set temp NO
		ifge SKILL 4 { ifcount 35 set temp YES }
		else ifcount 70 set temp YES
		
		ife temp YES
		ife targetalive YES
			ifl targetdist MAXRANGE
				ife seemytarget YES
					ife shootmytarget YES
		{
			ai AIMECHSHOOT
			break
		}
		else
		ifnotmoving
		{
			ifrnd 32 operate
			ifactornotstayput
			state mechstartwander
		}
		else
		{
			ife gametype 0 ifcount 150 ifrnd 8 ai AIMECHWAIT
		}
		
		ifai AIMECHSEEK
		ifn sprite[].htactorstayput -1 // stayput actor
		{
			ifawayfromwall nullop else
			{
				ife bottarget -1
				{
					state facestartpos
					set dodgetime 30
					break
				}
			}
		}
	}

ends

state mechwaitstate

	ifcount 12
	{
		ife targetalive YES
			ifl targetdist MAXRANGE
				ife seemytarget YES
					ife shootmytarget YES
		{
			ifg targetdist 10240 ifrnd 128 ai AIMECHSEEK else
			ifg targetdist 6144 ifrnd 96 ai AIMECHSEEK else
			ifrnd 64 ai AIMECHSEEK else
			ai AIMECHSHOOT
			break
		}
		else
			ai AIMECHSEEK
	}

ends

state mechshootbullet
	
	state hitscan_targetprep
	zshoot zdist CHAINGUN
	sound SHELLYFIRE
	setactorsoundpitch THISACTOR SHELLYFIRE -312

ends

state mechshootfreezebolt
	
	set xvel 844
	state rpg_targetprep
	
	// ife mtype 0 firing from right side, move to right
	// ife mtype 1 firing from left side, move to left
	set x2 sprite[].x
	set angvar sprite[].ang
	ife mtype 0 { add angvar 480 set mtype 1 add x2 256 } else
	ife mtype 1 { sub angvar 480 set mtype 0 add x2 416 }
	
	
	geta[].x savx geta[].y savy
	rotatepoint sprite[].x sprite[].y x2 sprite[].y angvar x y
	seta[].x x seta[].y y
	
	zshoot zdist FREEZEBOLT
	sound FREEZEBOLT_FIRE
	
	seta[].x savx
	seta[].y savy

ends

state mechshootlaser

	set x2 sprite[].x
	set angvar sprite[].ang
	ife mtype 0 { add angvar 480 set mtype 1 add x2 256 } else
	ife mtype 1 { sub angvar 480 set mtype 0 add x2 416 }
	
	
	geta[].x savx geta[].y savy
	rotatepoint sprite[].x sprite[].y x2 sprite[].y angvar x y
	seta[].x x seta[].y y
	
	sound TERMLASER
	eshoot GREENLASER
	seta[RETURN].extra 8
	
	seta[].x savx
	seta[].y savy
	
ends

state mechshootstate

	ifaction AMECHSHOOT
	{
		add countvar 1
		ifg countvar 2 
		{ 
			ifspritepal 14
			state mechshootlaser
			else
			ifspritepal 3
			state mechshootfreezebolt
			else
			state mechshootbullet 
			set countvar 0 
		}
		ifn bottarget -1
		{
			state turntotarget
			ifg temp 128 { ai AIMECHWAIT break }
		}
		else ifcount 30 ai AIMECHWAIT
		ifcount 60 { ifrnd 16 ai AIMECHWAIT  }
	}
	else
	{
		ife bottarget -1 
		{
			ife gametype 0
			ai AIMECHWAIT 
			else ai AIMECHSEEK
			break 
		}
		state turntotarget
		ifle temp 48
		{
			// start shooting
			action AMECHSHOOT
			resetcount
		}
		else
		{
			ifaction AMECHSTAND action AMECHWALK
		}
	}

ends

useractor enemy MECHBRAIN MECHBRAINSTRENGTH

ifai 0
{
	ifl sprite[].xrepeat 4 spawn GLARESTAR
	ai AIMECHWAIT
	sizeat 40 38
	cstator 257
	geta[].x startx
	geta[].y starty
	ifspritepal 0 spritepal 12
	ifspritepal 14 addstrength 100
	ifspritepal 21 addstrength 100
}
fall

ifai AIMECHFROZEN { state mechfrozenstate break }
ifai AIMECHGROW { state genericgrowcode break }
ifai AIMECHDYING
{
	ifaction AMECHDIE
	{
		ifactioncount 5
		{
			cstat 0
			action AMECHDEAD
			strength 0
			seta[].htextra -1
		}
	}
	ifaction AMECHDEAD
	{
		ifhitweapon
		{
			state standard_jibs
			debris SCRAP1 2
			debris SCRAP2 2
			debris SCRAP5 2
		
			set countvarb 0
			whilevarn countvarb 2
			{
			   rand z 3072
			   add z 2048
			   mul z -1
			   ezshoot z CARXPLODE
			   randvar temp  2047
			   setactor[RETURN].ang temp 
			   randvar temp  192 add temp 128
			   setactor[RETURN].xvel temp 
			   add countvarb 1
			}
			state tech_debris
			killit
		}
	}
	break
}
state monsterai

ifai AIMECHSHRUNK state mechshrunkstate else
ifaction AMECHSTUN state mechstunstate else
ifai AIMECHSEEK state mechseekstate else
ifai AIMECHWAIT state mechwaitstate else
ifai AIMECHSHOOT state mechshootstate

ifaction AMECHWALK
{
	ifactioncount 2
	{
		ife countvarb 0
		{
			sound SERVOSND
			ifai AIMECHSHRUNK setactorsoundpitch THISACTOR SERVOSND 312
			else
			setactorsoundpitch THISACTOR SERVOSND -312
			set countvarb 1
		}
		else
		{
			sound TERMSTEP1
			ifai AIMECHSHRUNK setactorsoundpitch THISACTOR TERMSTEP1 312
			else
			setactorsoundpitch THISACTOR TERMSTEP1 -256
			set countvarb 0
			
			ifai AIMECHSHRUNK nullop else
			state squish_bot
		}
		resetactioncount
	}
}
ifsquished
{
	ifn team 1 ifn team 3
		addkills 1
	state enemy_death
    sound SQUISHED
    state standard_jibs
    state random_ooz
	debris SCRAP1 2
	debris SCRAP2 2
	debris SCRAP5 2

	set countvarb 0
	whilevarn countvarb 2
	{
	   rand z 3072
	   add z 2048
	   mul z -1
	   ezshoot z CARXPLODE
	   randvar temp  2047
	   setactor[RETURN].ang temp 
	   randvar temp  192 add temp 128
	   setactor[RETURN].xvel temp 
	   add countvarb 1
	}
	state tech_debris
    killit
}
else
ifhitweapon 
{
	ifwasweapon SHRINKSPARK
	{	
	  sound ACTOR_SHRINKING
	  ai AIMECHSHRUNK
	  set shrunken 1
	  break
	}
	ifwasweapon GROWSPARK sound SPARKLESOUND
	else
	ifn sprite[].htpicnum FREEZEBLAST
	{
		ifrnd 128 debris SCRAP1 1
		else
		guts JIBS6 1
	}
	ifdead 
	{
		ifwasweapon FREEZEBLAST
		{
		  sound NEWFREEZE
		  spritepal 1
		  ai AIMECHFROZEN
		  strength 0
		  state freezeme
		  break
		}
		ifwasweapon GROWSPARK
		{
		  cstat 0
		  sound ACTOR_GROWING
		  ai AIMECHGROW
		  break
		}
		state enemy_death
		state drop_chaingun
		ife padang 1337 { state spawnoutline killit }
		ai AIMECHDYING
		set bottarget -1
		guts JIBS6 5
		sound MECHBRAIN_DEATH
		
		break
	}
	else 
	{
		ifrnd 128 soundonce MECHBRAIN_PAIN1 else soundonce MECHBRAIN_PAIN2
		ifg stun 0 { action AMECHSTUN move STOPPED }
	}
}
else ifg stun 0 { ai AIMECHWAIT action AMECHSTUN }

enda

useractor enemystayput MECHBRAINSTAYPUT MECHBRAINSTRENGTH cactor MECHBRAIN enda
