// EDFTROOP CODE

action EDFSTAND			0  1  5  1  10
action EDFSHOOT1		5  1  5  1  5
action EDFSHOOT2		10 1  5  1  5
action EDFWALK			15 4  5  1  12
action EDFRUN			15 4  5  1  8
action EDFJUMP			35 1  5  1  12
action EDFCROUCH		0 1  5  1  5 // 40
action EDFCROUCHFIRE	5 1  5  1  5 // 45
action EDFHIT			50 1  5  1  20
action EDFFROZEN		50 1  5  1  20
action EDFGROW			50 1  5  1  20
action EDFTHROW1		55 1  5  1  50
action EDFTHROW2		60 1  5  1  50
action EDFHEAL			25 1  5  1  20 // 65
action EDFDIE			70 6  1  1  16
action EDFRECOVER		71 1  1  1  20
action EDFDEAD			75 1  1  1  10
action EDFDIE2			2126  5  1  1  16
action EDFDEAD2         2130  1  1  1  10

move EDFSHRUNKVEL 32
move EDFWALKVEL 128
move EDFSPRINTVEL 180
move EDFJUMPVEL 256 -96 // 160

ai AIEDFJUMP EDFJUMP EDFJUMPVEL geth getv
ai AIEDFWANDER EDFWALK EDFWALKVEL geth
ai AIEDFSPRINT EDFRUN EDFSPRINTVEL geth
ai AIEDFSHOOT EDFSHOOT1 STOPPED geth
ai AIEDFTHROW EDFTHROW1 STOPPED geth
ai AIEDFMEDIC EDFRUN EDFSPRINTVEL geth
ai AIEDFHEAL EDFHEAL STOPPED geth
ai AIEDFCROUCH EDFCROUCH STOPPED geth
ai AIEDFFROZEN EDFFROZEN STOPPED geth
ai AIEDFGROW EDFGROW STOPPED geth
ai AIEDFWAIT EDFSTAND STOPPED geth
ai AIEDFDYING EDFDIE STOPPED geth
ai AIEDFSHRUNK EDFWALK EDFSHRUNKVEL fleeenemy
ai AIEDFHIT EDFHIT STOPPED geth

// navigation notes
// navmode 0 = wander around more or less randomly
// navmode 1 = stay close to squad leader, this could be the player or a designated other EDFTROOP
// navmode 2 = follow a path in the map to your next goal
// a pal 0 EDFTROOP will by default look for a leader if he doesn't have one
// the leader can itself be in any of the modes 0-2

// SQUAD LEADER SOUNDS
// define EDFL_ADVANCE 1284
// define EDFL_SEARCH 1285
// define EDFL_REPORTIN 1286
// define EDFL_AREACLEAR 1287
// define EDFL_DEATH1 1288
// define EDFL_DEATH2 1289
// define EDFL_ENGAGE 1290
// define EDFL_FORMUP 1291
// define EDFL_HOLDPOSITION 1292
// define EDFL_PAIN1 1293
// define EDFL_PAIN2 1294
// define EDFL_PAIN3 1295
// define EDFL_SEARCHDESTROY 1296

eventloadactor EDFTROOP sizeat 25 22 enda

state leadersounds

	ifsound EDFL_SEARCHDESTROY break
	ifsound EDFL_ADVANCE break
	ifsound EDFL_SEARCH break
	ifsound EDFL_REPORTIN break
	ifsound EDFL_AREACLEAR break
	ifsound EDFL_ENGAGE break
	ifsound EDFL_FORMUP break
	ifsound EDFL_HOLDPOSITION break
	
	ife bottarget -1 
	{
		ifrnd 1 sound EDFL_SEARCHDESTROY else
		ifrnd 1 sound EDFL_SEARCH
	}
	else
	{
		ifrnd 1 sound EDFL_HOLDPOSITION else
		ifrnd 1 sound EDFL_FORMUP else
		ifrnd 1 sound EDFL_ADVANCE
	}

ends

state edfpainsounds

ifl sprite[].pal 10
{
	ifactorsound THISACTOR EDFG_PAIN1 nullop else
	ifactorsound THISACTOR EDFG_PAIN2 nullop else
	ifactorsound THISACTOR EDFG_MEDIC nullop else
	ifstrength 30 ifrnd 64 sound EDFG_MEDIC else
	ifrnd 128 sound EDFG_PAIN1 else
	sound EDFG_PAIN2
	break
}
	ifactorsound THISACTOR EDFL_PAIN1 nullop else
	ifactorsound THISACTOR EDFL_PAIN2 nullop else
	ifactorsound THISACTOR EDFL_PAIN3 nullop else
	{
		rand temp 2
		ife temp 0 sound EDFL_PAIN1
		ife temp 1 sound EDFL_PAIN2
		ife temp 2 sound EDFL_PAIN3
	}

ends

state edfdeathsounds

	ifactorsound THISACTOR EDFL_PAIN1 stopactorsound THISACTOR EDFL_PAIN1
	ifactorsound THISACTOR EDFL_PAIN2 stopactorsound THISACTOR EDFL_PAIN2
	ifactorsound THISACTOR EDFL_PAIN3 stopactorsound THISACTOR EDFL_PAIN3
	
	ifwasweapon RPG break
	ifwasweapon RADIUSEXPLOSION break

	ifrnd 128 sound EDFL_DEATH1 else
	sound EDFL_DEATH2

ends

defstate edfstartjump

	cactor EDFTROOP 
	ai AIEDFJUMP 
	geta[].ang mtype
	
ends

defstate edfjumpcheck

	set D NO
	ifceilingdistl 96 break
	geta[].z z
	sub z 4096
	
	cos mycos sprite[].ang
	sin mysin sprite[].ang
	hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz 16777281
	ifn hitsprite -1 ifvarand sprite[hitsprite].cstat 16 set hitsprite -1
	
	ife hitsprite -1
	{
		set startx sprite[].x
		sub startx hitx
		mul startx startx
		set y2 sprite[].y
		sub y2 hity
		mul y2 y2
		add startx y2
		sqrt startx startx
		ifl startx 384
		{
			sub z 8192
			hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz 16777281
			
			set startx sprite[].x
			sub startx hitx
			mul startx startx
			set y2 sprite[].y
			sub y2 hity
			mul y2 y2
			add startx y2
			sqrt startx startx
			
			ifg startx 1560  
			{
				set D YES
				geta[].ang mtype
			    ifactor EDFTROOP state edfstartjump else
				ifactor EDFTROOPCROUCH state edfstartjump
			}
		}
	}


ends

state edftroopjumpstate

	seta[].ang mtype
	ifmove EDFJUMPVEL
	{
		ifcount 8 move EDFWALKVEL geth
	}
	ifmove EDFWALKVEL
	{
		iffloordistl 8
			ai AIEDFWANDER
		
	}

ends

state edfcombatcheck
	ife targetalive YES
	ife seemytarget YES
	ife shootmytarget YES
	{
		ifg targetdist 3500
		ifg countvarb 300
		ifn sprite[].pal 22
		{
			ifn bottarget -1 set target bottarget else
			ifn team 1 set target player[].i
			ife sprite[target].zvel 0
			{
				state friendlyfirecheck
				ifn target -1
				{
					cactor EDFTROOP
					ai AIEDFTHROW
				}
				break
			}
		}
		
		
		ifrnd 96 { cactor EDFTROOPCROUCH ai AIEDFCROUCH break }
		cactor EDFTROOP
		ai AIEDFSHOOT
		break
	}
ends

state edfgrenadecheck

	ifspritepal 22 break
	
	ife targetalive YES
	ifg targetdist 3500
	ifg countvarb 300
	{
		ifn bottarget -1 set target bottarget else
		ifn team actorvar[player[].i].team set target player[].i
		
		ifn target -1
		ife sprite[target].zvel 0
		{
			state friendlyfirecheck
			ifn target -1
			{
				cactor EDFTROOP
				ai AIEDFTHROW
			}
		}
	}

ends

state edfclipcheck

	ifspritepal 19
	{
		ifg botclip 30
		{
			resetactioncount
			ife botclip 75 
			{
				sound SHELLYCLIPOUT
				espawn SHELL
				setav[RETURN].mtype CLIPFALL
				espawn BIGSMOKE
				geta[RETURN].z z
				sub z 8192
				seta[RETURN].z z
			}
			ife botclip 45 sound SWITCHTOLASER
			sub botclip 1
		}
		break
	}
	ifg botclip 30
	{
		resetactioncount
		ife botclip 75 
		{
			sound SHELLYCLIPOUT
			espawn SHELL
			setav[RETURN].mtype CLIPFALL
		}
		ife botclip 45 sound SHELLYCLIPIN
		sub botclip 1
	}
ends

state edftroopstartwander
	
	cactor EDFTROOP
	ai AIEDFWANDER
	
	set B 0
	set xydist 2048
	whilevarn B 32
	{
		add B 1
		geta[].z z
		sub z 4096
		rand angvar 2047
		cos mycos angvar
		sin mysin angvar
		hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz clipmask
		
		set startx sprite[].x
		sub startx hitx
		mul startx startx
		set y2 sprite[].y
		sub y2 hity
		mul y2 y2
		add startx y2
		sqrt startx startx
		
		ifg startx xydist set B 32
		// set crumbwait 6
	}
	seta[].ang angvar

ends

state edftroopsprintstate
	
	state edfclipcheck
	ifl dodgetime 2 set dodgetime 2
	ifnotmoving ai AIEDFWAIT
	ifcount 30 ai AIEDFWAIT

ends

state edfmedicstate 

	ifn team actorvar[ikicked].team { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	ifn actorvar[ikicked].monstatus 2 { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	ife sprite[ikicked].statnum 1024 { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	ifnotmoving ifcount 20 { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	
	ifcount 300 { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	set crumbwait 8
	set spriteid ikicked
	state facesprite
	
	dist xydist THISACTOR ikicked
	ifl xydist 844 { cactor EDFTROOPCROUCH ai AIEDFHEAL }
	else
	ifnotmoving { ai AIEDFJUMP set ikicked -1 }

ends

state edfhealstate 

	ife ikicked -1 { cactor EDFTROOP ai AIEDFWAIT break }
	ifn team actorvar[ikicked].team { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	ifn actorvar[ikicked].monstatus 2 { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	ife sprite[ikicked].statnum 1024 { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	
	set crumbwait 8
	set spriteid ikicked
	state facesprite
	
	ifcount 40 { set ikicked -1 cactor EDFTROOP ai AIEDFWAIT break }
	ifcount 11 nullop else
	ifcount 10
	{
		sound AIRBURST
		setav[ikicked].ikicked -2
		set countvarc 0
	}

ends

state edfstartdodge

	set B 0
	set xydist 2048
	whilevarn B 16
	{
		add B 1
		geta[].z z
		sub z 4096
		
		geta[].ang angvar
		rand temp 1024
		add temp 512
		add angvar temp
		
		cos mycos angvar
		sin mysin angvar
		hitscan sprite[].x sprite[].y z sprite[].sectnum mycos mysin 0 hitsector hitwall hitsprite hitx hity hitz clipmask
		
		set startx sprite[].x
		sub startx hitx
		mul startx startx
		set y2 sprite[].y
		sub y2 hity
		mul y2 y2
		add startx y2
		sqrt startx startx
		
		ifg startx xydist 
		{
			set dodgetime 10
			cactor EDFTROOP
			ai AIEDFSPRINT
			set B 16
			seta[].ang angvar
		}
	}	
	
ends

state edftroopthrowstate

ifaction EDFTHROW1
{
	ifactioncount 1
	{
		action EDFTHROW2
		set xvel 1280 // real vel is 644, but use diff val to compensate for drop
		state rpg_targetprep
		getprojectile[GRENADEPROJ].offset savz
		setprojectile[GRENADEPROJ].extra 100
		setprojectile[GRENADEPROJ].offset 160
		setprojectile[GRENADEPROJ].bounces 2
		sub zdist 1024
		ifl zdist -8192 set zdist -8192
		ezshoot zdist GRENADEPROJ 
		setprojectile[GRENADEPROJ].offset savz
		setprojectile[GRENADEPROJ].bounces 3
		setprojectile[GRENADEPROJ].extra GRENADE_WEAPON_STRENGTH
		set countvarb 0
	}
}
else ifactioncount 1
{
	ai AIEDFWAIT
}

ends

state edftroopwanderstate

	ifn navpoint -1 ifcount 100 resetcount
	ifcount 150 { state edftroopstartwander break }
	
	state edfjumpcheck
	ifai AIEDFJUMP break
	
	ifnotmoving 
	{
		geta[].htmovflag temp
		ifn temp 0
		{
			// hit something
			add temp 16384
			ifl temp 16384 ifg temp -1 
			{
				ife actorvar[temp].team team
				{
					ifn navpoint -1
					{
						geta[].ang angvar
						add angvar 512
						state moveatangvar
					}
				}
			}
		}
				
		ifl navpoint 0 ifrnd 32 operate
		ifrnd 64 { cactor EDFTROOP ai AIEDFJUMP geta[].ang mtype } else
		ai AIEDFWAIT
	}
	state edfcombatcheck
	
	
	
	

ends

state edftroopwaitstate

	ife gametype SURVIVAL ifl player[].player_par 150 break
	ifn thiscam -1 break
	state edfclipcheck
	ifl botclip 31
	ifcount 10
	{
		state edfcombatcheck
		ifai AIEDFWAIT nullop else break // exit if status has changed
		
	
		state edftroopstartwander
		
	}

ends

state edfshootbullet

	spawn SHELL		
	sound SHELLYFIRE
	state hitscan_targetprep
	zshoot zdist SHOTSPARK1
	sub botclip 1
	ife botclip 0 
		set botclip 90
ends

state edfshootplasma

	geta[].z savz
	sub savz 2048
	seta[].z savz
	state rpg_targetprep
	sound LASERSHOOT
	ezshoot zdist EDFLASER
	add savz 2048
	seta[].z savz
	sub botclip 1
	ife botclip 0 
		set botclip 90

ends

state edfshootgun

	ifspritepal 19 { set xvel 844 state edfshootplasma }
	else state edfshootbullet

ends

state edfshootstate

ifg sprite[].htextra 0
{
	cactor EDFTROOPCROUCH
	ai AIEDFCROUCH
	set countvar YES
	break
}

ifaction EDFSHOOT1
{
	state edfclipcheck
	ife botclip 30 state edfgrenadecheck
	ifai AIEDFSHOOT nullop else break
	
	ifg botclip 60
	ife targetalive YES
		ifl targetdist 6144 
	{
		state edfstartdodge
		ifai AIEDFSPRINT break
	}
	ifactioncount 1
	{
		ifspritepal 19
		{
			ifn bottarget -1 set target bottarget else
			ifn team 1 set target player[].i
			state friendlyfirecheck
			ife target -1 set shootmytarget NO
		}
		ife shootmytarget NO
		{
			cactor EDFTROOP
			ai AIEDFWAIT
			set countvar NO
			break
		}
	}
	ife countvar NO // hasn't fired yet since starting to aim
	{
		ifactioncount 4
		{
			action EDFSHOOT2
			state edfshootgun
			set countvar YES
		}
	}
	else
	{
		ifactioncount 1
		{
			action EDFSHOOT2
			state edfshootgun
			set countvar YES
		}
	}
}
else
ifaction EDFSHOOT2
{
	ifactioncount 1
		action EDFSHOOT1
}

ends

state edfcrouchstate

ifaction EDFCROUCH
{
	state edfclipcheck
	ife botclip 30 state edfgrenadecheck
	ifai AIEDFCROUCH nullop else break
	ifg botclip 60
	ife targetalive YES
		ifl targetdist 4096
		{
			state edfstartdodge
			ifai AIEDFSPRINT break
		}
	ifactioncount 1
	{
		ife shootmytarget NO
		{
			cactor EDFTROOP
			ai AIEDFWAIT
			set countvar NO
			break
		}
	}
	ife countvar NO // hasn't fired yet since starting to aim
	{
		ifactioncount 4
		{
			action EDFCROUCHFIRE
			state edfshootgun
			set countvar YES
		}
	}
	else
	{
		ifactioncount 1
		{
			action EDFCROUCHFIRE
			state edfshootgun
			set countvar YES
		}
	}
}
else
ifaction EDFCROUCHFIRE
{
	ifactioncount 1
		action EDFCROUCH
}

ends

state edftroopgrowstate state genericgrowcode ends

state edftroophitstate

	ifcount 10 ai AIEDFWAIT
	
ends

state edftroopfrozenstate

    ifcount THAWTIME
    {
      ai AIEDFWAIT
      getlastpal
    }
    else
      ifcount FROZENDRIPTIME
    {
      ifactioncount 26
      {
        spawn WATERDRIP
        resetactioncount
      }
    }
    ifhitweapon
    {
      ifwasweapon FREEZEBLAST
      {
	    resetcount resetactioncount
        strength 0
        break
      }
      
	  state enemy_death

      ifrnd 84
        spawn BLOODPOOL
	  lotsofglass 30
	  state lite_jibs
      sound GLASS_BREAKING
      killit
    }
	ifn team 1
    ifp pfacing
      ifpdistl FROZENQUICKKICKDIST
        state pkick_check
  
ends

state edftroopshrunkstate

  ifcount SHRUNKDONECOUNT
    ai AIEDFWAIT
  else
    ifcount SHRUNKCOUNT
      sizeto 25 22
  else
    state genericshrunkcode

ends

state edftroopdyingstate

	// ifaction EDFDECAP
	// {
		// ifhitweapon state random_wall_jibs
		// ifactioncount 5
		// {
			// cstat 0
			// action EDFDECAPDEAD
			// iffloordistl 8 sound THUD
			// ifrnd 128 spawn BLOODPOOL
			// break
		// }
	// }
	// ifaction EDFDECAPDEAD
	// {
		// ifhitweapon
		// {
			// ifwasweapon RPG
			// {
				// sound SQUISHED
				// spawn BLOODPOOL
				// state standard_jibs
				// killit
			// }
			// ifwasweapon RADIUSEXPLOSION
			// {
				// sound SQUISHED
				// spawn BLOODPOOL
				// state standard_jibs
				// killit
			// }
		// }
		// ifcount RESPAWNACTORTIME
		// ifrespawn
		// {
		  // spawn TRANSPORTERSTAR
		  // cstat 257
		  // strength EDFTROOPSTRENGTH
		  // ai AIEDFWAIT
		// }
	// }
	
	ifaction EDFRECOVER
	{
		ifhitweapon 
		{
			state random_wall_jibs
			ifdead
			{
				sound SQUISHED
				spawn BLOODPOOL
				state standard_jibs	
				killit
			}
		}
		ifactioncount 5
		{
			strength EDFTROOPSTRENGTH
			seta[].extra inithp
			addstrength -20
			set ikicked 0
			set monstatus 1
			ifspritepal 22 set ikicked -1
			ai AIEDFWAIT
			seta[].htextra -1
		}
		break
	}
	state deadsquished
	strength 0
	ifaction EDFDIE
	{
		ifhitweapon state random_wall_jibs
		ifactioncount 5
		{
			cstat 0
			action EDFDEAD
			iffloordistl 8 sound THUD
			ifrnd 128 spawn BLOODPOOL
			break
		}
	}
	ifaction EDFDIE2
	{
		ifhitweapon state random_wall_jibs
		ifactioncount 4
		{
			cstat 0
			action EDFDEAD2
			iffloordistl 8 sound THUD
			ifrnd 128 spawn BLOODPOOL
			break
		}
	}
	set temp NO
	ifaction EDFDEAD set temp YES
	ifaction EDFDEAD2 set temp YES
	ife temp YES
	{
		ifhitweapon
		{
			ifwasweapon RPG
			{
				sound SQUISHED
				spawn BLOODPOOL
				state standard_jibs	
				killit
			}
			ifwasweapon RADIUSEXPLOSION
			{
				sound SQUISHED
				spawn BLOODPOOL
				state standard_jibs
				killit
			}
		}
		ife ikicked -2
		{
			action EDFRECOVER
			strength 20
			cstat 257
			seta[].htextra -1
			break
		}
		// ifcount RESPAWNACTORTIME
		// ifrespawn
		// {
		  // spawn TRANSPORTERSTAR
		  // cstat 257
		  // strength EDFTROOPSTRENGTH
		  // ai AIEDFWAIT
		// }
	}
	
ends

state medicsearch

	ife team 1
	ife pdown YES
	ife seeplayer YES ifpdistl 10240
	{
		set ikicked player[].i
		cactor EDFTROOP, ai AIEDFMEDIC
		break
	}
	
	getp[].player_par tempc
	sub tempc 1000 // earliest expiration date for body
	headspritestat spriteid 1
	whilevarn spriteid -1
	{
		ife actorvar[spriteid].team team
		ife actorvar[spriteid].monstatus 2
		{
			getav[spriteid].ikicked temp
			ifge temp tempc
			{
				geta[].z savz sub savz 4096 seta[].z savz
				geta[spriteid].z z2 sub z2 4096 seta[spriteid].z z2
				canseespr THISACTOR spriteid tempb
				add savz 4096 seta[].z savz
				add z2 4096 seta[spriteid].z z2
				ife tempb YES
				{
					ldist xydist THISACTOR spriteid
					ifl xydist 8192 set ikicked spriteid
				}
			}
		}
		nextspritestat spriteid spriteid
		ifn ikicked -1 set spriteid -1
	}
	ifn ikicked -1 { cactor EDFTROOP ai AIEDFMEDIC }
	
ends

state edftroopcode

fall
ifai 0
{
	ifspritepal 19 addstrength 40 // squad leader
	ifspritepal 22 { set countvarc 400 set ikicked -1 } // medic
	cactor EDFTROOP
	// getp[].max_actors_killed temp
	// sub temp 1
	// setp[].max_actors_killed temp
	ai AIEDFWAIT
	sizeat 25 22
	cstator 257
	set team 1
	set navmode 3
	ifspritepal 42 { addstrength 50 set team 0 }
	ife gametype SURVIVAL addstrength EDFTROOPSTRENGTH
	set botclip 30
	randvar countvarb 300
	set initflags 300
	clipdist 36
	seta[].mdflags 16
	geta[].htflags temp
	orvar temp 8192
	seta[].htflags temp
}

ifai AIEDFGROW { state edftroopgrowstate break }
ifai AIEDFFROZEN { state edftroopfrozenstate break }
ifai AIEDFDYING { state edftroopdyingstate break }
state avoidcliffs
state monsterai
ife team 1 
{
	state summondespawn
	// state botblocking
}

ife bottarget -1 add FEMFALLDMG 1 else
set FEMFALLDMG 0
ifg FEMFALLDMG 300
ifp palive
ifg FEMKILLCOUNT 0
{
	set FEMFALLDMG 0
	sound TELEPORTER
	spawn GLARESTAR
	state spawnoutline
	setsprite THISACTOR player[].posx player[].posy player[].posz
	sound TELEPORTER
	spawn GLARESTAR
	state spawnoutline
}

ifai AIEDFHIT nullop else
ifai AIEDFSHRUNK nullop else
ifai AIEDFMEDIC nullop else
ifspritepal 22 // medic
	ife ikicked -1 // no healing target
		ifg countvarc 400
			state medicsearch
add countvarb 1
ifspritepal 22 add countvarc 1
ifspritepal 19
{
	ifn bottarget -1 
	{
		ifg initflags 299 soundonce EDFL_ENGAGE
		set initflags 0
		
		ifg targetdist 10240 ifrnd 2 soundonce EDFL_ADVANCE
		ifl targetdist 8192 ifrnd 2 soundonce EDFL_HOLDPOSITION
	}
	else add initflags 1
	ife initflags 90 
	{
		set target -1
		headspritestat spriteid 990
		whilevarn spriteid -1
		{
			ifn team actorvar[spriteid].team
			{
				dist xydist THISACTOR spriteid
				ifl xydist MAXRANGE set target spriteid
			}
			nextspritestat spriteid spriteid
		}
		ifn target -1 soundonce EDFL_AREACLEAR
	}
	ife initflags 180 soundonce EDFL_REPORTIN
}
ifn monstatus 2 ifpdistl 10240 set shellyinmap 10

ifai AIEDFHIT state edftroophitstate else
ifai AIEDFSHRUNK state edftroopshrunkstate else
ifai AIEDFWAIT state edftroopwaitstate else
ifai AIEDFWANDER state edftroopwanderstate else
ifai AIEDFSPRINT state edftroopsprintstate else
ifai AIEDFJUMP state edftroopjumpstate else
ifai AIEDFMEDIC state edfmedicstate else
ifai AIEDFHEAL state edfhealstate else
ifai AIEDFSHOOT state edfshootstate else
ifai AIEDFCROUCH state edfcrouchstate else
ifai AIEDFTHROW state edftroopthrowstate

ifhitweapon
{
	ifwasweapon SHRINKSPARK
	{	
	  cactor EDFTROOP
	  sound ACTOR_SHRINKING
	  ai AIEDFSHRUNK
	  set countvar NO
	  //set shrunken 1
	  break
	}
	else
		ifwasweapon GROWSPARK
		  sound SPARKLESOUND
	state random_wall_jibs
	// ifwasweapon HEADJIB1
	// {
		// ifn team 1 ifn team 3 addkills 1
		// state enemy_death
		// cactor EDFTROOP
		// ai AIEDFDIE
		// action EDFDECAP
		// strength 0
		// cstat 0
		// guts JIBS6 4
		// rand zdist 1024
		// sub zdist 3500
		// ezshoot zdist RANGERHEADPROJ
		// rand angvar 512
		// sub angvar 256
		// add angvar sprite[].htang
		// seta[RETURN].ang angvar
		// seta[RETURN].pal sprite[].pal
		// sound SQUISHED
		// break
	// }
	ifdead
	{
		set countvar NO
		ifwasweapon FREEZEBLAST
		{
		  sound NEWFREEZE
		  spritepal 1
		  cactor EDFTROOP
		  ai AIEDFFROZEN
		  strength 0
		  state freezeme
		  break
		}
		ifwasweapon GROWSPARK
		{
		  cstat 0
		  sound ACTOR_GROWING
		  cactor EDFTROOP
		  ai AIEDFGROW
		  break
		}
		// ifn team 1 ifn team 3 addkills 1
		getp[].player_par ikicked
		state enemy_death
		cactor EDFTROOP
		ifrnd 128 cstator 4
		ai AIEDFDYING
		ifrnd 128
		action EDFDIE2
		ifg shrunken 10 ifl shrunken SHRUNKCOUNT
			setp[].sound_pitch SHRUNKPITCH
		state edfdeathsounds
		ifg shrunken 10 ifl shrunken SHRUNKCOUNT
			setp[].sound_pitch 0
		guts JIBS6 4
		
		ifwasweapon RPG
		{
			cactor EDFTROOP
			sound SQUISHED
			spawn BLOODPOOL
			state standard_jibs
			killit
		}
		ifwasweapon RADIUSEXPLOSION
		{
			cactor EDFTROOP
			sound SQUISHED
			spawn BLOODPOOL
			state standard_jibs
			killit
		}
		break
	}
	ifrnd 2
		spawn BLOODPOOL
	ifai AIEDFHIT nullop else
	ifai AIEDFSHRUNK nullop else
	{
		ifg stun 0 { cactor EDFTROOP ai AIEDFHIT break }
		ifg shrunken 10 ifl shrunken SHRUNKCOUNT
			setp[].sound_pitch SHRUNKPITCH
		state edfpainsounds
		ifg shrunken 10 ifl shrunken SHRUNKCOUNT
			setp[].sound_pitch 0
		ifrnd 32 
		ifn sprite[].htpicnum BURNING
	    ifn sprite[].htpicnum RADWOUND
		{
			cactor EDFTROOP
			ai AIEDFHIT
			ifspritepal 22 set ikicked -1
			break 
		}
	}
}
else state checksquished

ifn myvictim -1
ifn myvictim -2
{
	set temp NO
	ife actorvar[myvictim].monstatus 2 set temp YES
	ife sprite[myvictim].statnum 1024 set temp YES
	ife temp YES
	ifn sprite[].pal 19
	{
		ifactorsound THISACTOR EDFG_HOLYSHIT break
		ifactorsound THISACTOR EDFG_TARGETDESTROYED break
		ifactorsound THISACTOR EDFG_FYEAH break
		
		stopactorsound THISACTOR EDFG_PAIN1
		stopactorsound THISACTOR EDFG_PAIN2
		stopactorsound THISACTOR EDFG_MEDIC
		stopactorsound THISACTOR EDFL_PAIN1
		stopactorsound THISACTOR EDFL_PAIN2
		stopactorsound THISACTOR EDFL_PAIN3

		ife sprite[myvictim].statnum 1024
		{
			ifrnd 128
			sound EDFG_HOLYSHIT
		}
		else
		ifrnd 128 sound EDFG_TARGETDESTROYED
		else sound EDFG_FYEAH
	}
	set myvictim -1
}

ends

useractor enemy EDFTROOP EDFTROOPSTRENGTH state edftroopcode enda

useractor enemy EDFTROOPCROUCH EDFTROOPSTRENGTH state edftroopcode enda

action AFALLDIE 0  3  1  1  16
action AFALLDEAD 2  1  1  1  1

spriteshadow EDFFALLDIE
useractor notenemy EDFFALLDIE 80

ifmove 0
{
	move STOPPEDFORPLAYER
	sizeat 25 22
	cstat 256
	ifrnd 128 cstator 4
}
fall
ifaction 0
iffloordistl 4
{
	sound THUD
	action AFALLDIE
}

ifaction AFALLDIE ifactioncount 2 action AFALLDEAD

ifaction AFALLDEAD
{	
	ifhitweapon
		ifdead { state lite_jibs sound SQUISHED killit }
}

enda

useractor notenemy EDFNPC 0 EDFSTAND
	fall
	ifmove 0
	{
		move STOPPEDFORPLAYER faceplayerslow
		cstator 257
	}
enda


